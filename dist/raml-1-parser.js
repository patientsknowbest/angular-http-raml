!function (e, t) { "object" == typeof exports && "object" == typeof module ? module.exports = t(require("typescript"), function () { try {
    return require("RAML.XmlValidation");
}
catch (e) { } }(), function () { try {
    return require("RAML.JsonValidation");
}
catch (e) { } }()) : "function" == typeof define && define.amd ? define(["typescript", "RAML.XmlValidation", "RAML.JsonValidation"], t) : "object" == typeof exports ? exports.Parser = t(require("typescript"), function () { try {
    return require("RAML.XmlValidation");
}
catch (e) { } }(), function () { try {
    return require("RAML.JsonValidation");
}
catch (e) { } }()) : (e.RAML = e.RAML || {}, e.RAML.Parser = t(e.typescript, e["RAML.XmlValidation"], e["RAML.JsonValidation"])); }(this, function (__WEBPACK_EXTERNAL_MODULE_154__, __WEBPACK_EXTERNAL_MODULE_161__, __WEBPACK_EXTERNAL_MODULE_162__) {
    return function (e) { function t(r) { if (n[r])
        return n[r].exports; var i = n[r] = { exports: {}, id: r, loaded: !1 }; return e[r].call(i.exports, i, i.exports, t), i.loaded = !0, i.exports; } var n = {}; return t.m = e, t.c = n, t.p = "", t(0); }([function (e, t, n) {
            "use strict";
            function r(e, t) { return d.load(e, t); }
            function i(e, t) { return d.loadSync(e, t); }
            function a(e, t, n) { return d.loadApi(e, t, n).getOrElse(null); }
            function o(e, t, n) { return d.loadApi(e, t, n).getOrElse(null); }
            function s(e, t, n) { return { fsResolver: { content: function (r) { return r === (n || y.resolve("/", "#local.raml")).replace(/\\/, "/") ? e : t && t.fsResolver ? t.fsResolver.content(r) : void 0; }, contentAsync: function (r) { return r === (n || y.resolve("/", "#local.raml")).replace(/\\/, "/") ? Promise.resolve(e) : t && t.fsResolver ? t.fsResolver.contentAsync(r) : void 0; } }, httpResolver: t ? t.httpResolver : null, rejectOnErrors: t ? t.rejectOnErrors : !1, attributeDefaults: t ? t.attributeDefaults : !0 }; }
            function u(e, t) { var n = null; return t && t.filePath && (n = t.filePath), d.loadApi(n || "/#local.raml", [], s(e, t, n)).getOrElse(null); }
            function l(e, t) { var n = null; return t && t.filePath && (n = t.filePath), d.loadApiAsync(n || "/#local.raml", [], s(e, t, n)); }
            function p(e, t, n) { return d.loadApiAsync(e, t, n); }
            function c(e, t, n) { return d.loadRAMLAsync(e, t, n); }
            function f(e) { return d.getLanguageElementByRuntimeType(e); }
            function m(e) { return t.api10.isFragment(e); }
            function h(e) { return t.api10.asFragment(e); }
            var d = n(8), y = n(15), v = n(21);
            t.api10 = n(11), t.api08 = n(12), t.load = r, t.loadSync = i, t.loadApiSync = a, t.loadRAMLSync = o, t.parseRAMLSync = u, t.parseRAML = l, t.loadApi = p, t.loadRAML = c, t.getLanguageElementByRuntimeType = f, t.isFragment = m, t.asFragment = h, t.hl = n(9), t.ll = n(10), t.search = n(13), t.stubs = n(1), t.utils = n(2), t.project = n(3), t.universeHelpers = n(14), t.ds = n(39), t.schema = n(4), t.universes = t.ds.universesInfo, t.parser = n(5), t.expander = n(6), t.wrapperHelper = n(7), "undefined" == typeof Promise && "undefined" != typeof window && (window.Promise = v);
        }, function (e, t, n) {
            "use strict";
            function r(e, t, n, r) { return void 0 === n && (n = null), S.createStubNode(e, t, n, r); }
            function i(e, t, n) { return S.createStub(e, t, n); }
            function a(e, t, n) { return S.createStub0(e, t, n); }
            function o(e, t) { return S.createResourceStub(e, t); }
            function s(e, t) { return S.createMethodStub(e, t); }
            function u(e, t) { return S.createResponseStub(e, t); }
            function l(e, t) { return S.createBodyStub(e, t); }
            function p(e, t) { return S.createUriParameterStub(e, t); }
            function c(e, t) { return S.createQueryParameterStub(e, t); }
            function f(e, t, n, r, i) { return void 0 === i && (i = !1), new T.ASTPropImpl(e, t, n, r, i); }
            function m(e, t, n, r) { return new T.ASTNodeImpl(e, t, n, r); }
            function h(e, t, n, r) { return new N(e, t, n, r); }
            function d(e, t, n, r) { return new _(e, t, n, r); }
            function y(e, t) { return E.createMapping(e, t); }
            function v() { return E.createMap([]); }
            function g(e, t) { return S.createAttr(e, t); }
            var A = this && this.__extends || function (e, t) { function n() { this.constructor = e; } for (var r in t)
                t.hasOwnProperty(r) && (e[r] = t[r]); e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype, new n); }, T = n(16), E = n(25), S = n(18);
            t.createStubNode = r, t.createStub = i, t.createStubNoParentPatch = a, t.createResourceStub = o, t.createMethodStub = s, t.createResponseStub = u, t.createBodyStub = l, t.createUriParameterStub = p, t.createQueryParameterStub = c, t.createASTPropImpl = f, t.createASTNodeImpl = m, t.createVirtualASTPropImpl = h, t.createVirtualNodeImpl = d;
            var N = function (e) { function t() { e.apply(this, arguments); } return A(t, e), t.prototype.value = function () { return ""; }, t; }(T.ASTPropImpl), _ = function (e) { function t() { e.apply(this, arguments); } return A(t, e), t.prototype.value = function () { return ""; }, t; }(T.ASTNodeImpl);
            t.createMapping = y, t.createMap = v, t.createAttr = g;
        }, function (e, t, n) {
            "use strict";
            function r() { return l.hasAsyncRequests(); }
            function i(e) { l.addLoadCallback(e); }
            function a() { return m.getTransformNames(); }
            function o(e) { return p.getFragmentDefenitionName(e); }
            function s(e, t, n) { if (c.ReferenceType.isInstance(n.range())) {
                var r = (n.range(), f.createNode(e));
                return new p.StructuredValue(r, t, n);
            } return e; }
            function u(e) { return (new h.UrlParameterNameValidator).parseUrl(e); }
            var l = n(24), p = n(16), c = n(39), f = n(25), m = n(27), h = n(28), d = n(29), y = n(17);
            t.hasAsyncRequests = r, t.addLoadCallback = i, t.getTransformerNames = a, t.updateType = function (e) { var t = d.doDescrimination(e); null == t && e.property() && (t = e.property().range()), t && e.patchType(t); }, t.getFragmentDefenitionName = o, t.genStructuredValue = s, t.parseUrl = u;
            var v = function () { function e(e, t) { this.node = e, this.targetUnitRoot = t; } return e; }();
            t.UnitLink = v;
            var g = function () { function e(e, t) { this.errors = e, this.primaryUnitRoot = t; } return e.prototype.accept = function (e) { this.transformIssue(e), this.errors.push(e); }, e.prototype.transformIssue = function (e) { var t = this, n = null, r = this.findIssueTail(e); r.node && (n = r.node.lowLevel().unit()); var i = this.primaryUnitRoot.lowLevel().unit(); if (n && i && n != i) {
                var a = this.findPathToNodeUnit(this.primaryUnitRoot, r.node);
                if (a && a.length > 0) {
                    var o = a.map(function (n) { return t.convertConnectingNodeToError(n, e); });
                    if (o && o.length > 0)
                        for (var s = r, u = o.length - 1; u >= 0; u--) {
                            var l = o[u];
                            s.extras = [], s.extras.push(l), s = l;
                        }
                }
            } }, e.prototype.begin = function () { }, e.prototype.end = function () { }, e.prototype.acceptUnique = function (e) { for (var t = 0, n = this.errors; t < n.length; t++) {
                var r = n[t];
                if (r.start == e.start && r.message == e.message)
                    return;
            } this.accept(e); }, e.prototype.findPathToNodeUnit = function (e, t) { return t.lowLevel() && t.lowLevel().unit() ? this.findPathToNodeUnitRecursively(e, t.lowLevel().unit()) : []; }, e.prototype.findPathToNodeUnitRecursively = function (e, t) { for (var n = this.findUnitLinks(e), r = 0; r < n.length; r++) {
                var i = n[r];
                if (i.targetUnitRoot && i.targetUnitRoot.lowLevel() && i.targetUnitRoot.lowLevel().unit() == t)
                    return [i.node];
                var a = this.findPathToNodeUnitRecursively(i.targetUnitRoot, t);
                if (a)
                    return a.unshift(i.node), a;
            } return null; }, e.prototype.findUnitLinks = function (e) { var t = []; return t = t.concat(this.findMasterLinks(e)); }, e.prototype.findMasterLinks = function (e) { if (!e.getMaster)
                return []; var t = e.getMaster(); if (!t)
                return []; var n = e.asElement().attr(y.Universe10.Extension.properties["extends"].name); return n && n.value() ? [new v(n, t)] : []; }, e.prototype.convertConnectingNodeToError = function (e, t) { if (!e)
                return null; var n = e.lowLevel(), r = n.start(), i = n.end(), a = this.generateLinkMessageByNode(e, t); return { code: t.code, isWarning: t.isWarning, message: a, node: e, start: r, end: i, path: n.unit() ? n.unit().path() : "", extras: [], unit: n.unit() }; }, e.prototype.generateLinkMessageByNode = function (e, t) { return e.property().nameId() == y.Universe10.Extension.properties["extends"].name ? "Error in the master file: " + t.message : t.message; }, e.prototype.findIssueTail = function (e) { return e.extras && 0 != e.extras.length ? this.findIssueTail(e.extras[0]) : e; }, e; }();
            t.PointOfViewValidationAcceptorImpl = g;
        }, function (e, t, n) {
            "use strict";
            function r(e, t, n) { return new i.Project(e, t, n); }
            var i = n(25);
            t.createProject = r;
        }, function (e, t, n) {
            "use strict";
            function r(e, t) { var n = n.createProject(d.dirname(e)), r = { $ref: t }, i = JSON.stringify(r), a = n.setCachedUnitContent(d.basename(e), i), s = o(i, a); return s.jsonSchema.$ref; }
            function i(e, t) { return v.createSchema(e, new y.ContentProvider(t)); }
            function a(e) { return v.getXMLSchema(e); }
            function o(e, t) { return v.getJSONSchema(e, new y.ContentProvider(t)); }
            function s(e, t, n) { return m.completeReference(e, t, n); }
            function u(e) { return m.getIncludePath(e); }
            function l(e) { return m.getIncludeReference(e); }
            function p() { return new h.SchemaToModelGenerator; }
            function c() { return new h.ModelToSchemaGenerator; }
            var f = n(39), m = n(26), h = n(19), d = n(15), y = n(33), v = f.getSchemaUtils();
            t.dereference = r, t.createSchema = i, t.getXMLSchema = a, t.getJSONSchema = o, t.completeReference = s, t.getIncludePath = u, t.getIncludeReference = l, t.createSchemaModelGenerator = p, t.createModelToSchemaGenerator = c;
        }, function (e, t, n) {
            "use strict";
            t.modify = n(20);
        }, function (e, t, n) {
            "use strict";
            function r(e) { return i.expandTraitsAndResourceTypes(e); }
            var i = n(27);
            t.expandTraitsAndResourceTypes = r;
        }, function (e, t, n) {
            "use strict";
            function r(e) { return i.completeRelativeUri(e); }
            var i = n(36);
            t.completeRelativeUri = r;
        }, function (e, t, n) {
            "use strict";
            function r(e, t) { return t = t || {}, c(e).then(function (e) { var n; return n = !t.hasOwnProperty("expandLibraries") || t.expandLibraries ? R.expandLibrariesHL(e) : R.expandTraitsAndResourceTypesHL(e), C.dump(n, { rootNodeDetails: !0, attributeDefaults: !0, serializeMetadata: !0, unfoldTypes: t.unfoldTypes }); }); }
            function i(e, t) { t = t || {}; var n, r = u(e); return n = !t.hasOwnProperty("expandLibraries") || t.expandLibraries ? L.isLibraryType(r.definition()) ? R.expandLibraryHL(r) || r : R.expandLibrariesHL(r) || r : R.expandTraitsAndResourceTypesHL(r) || r, C.dump(n, { rootNodeDetails: !0, attributeDefaults: !0, serializeMetadata: !0, unfoldTypes: t.unfoldTypes }); }
            function a(e, t, n) { var r = u(e, t, n); if (!r)
                return S.empty(); var i = r.wrapperNode(), a = Array.isArray(t) ? n : t; return A(i, a), new S(i); }
            function o(e, t, n) { var r = u(e, t, n); if (!r)
                return S.empty(); var i = r.wrapperNode(), a = Array.isArray(t) ? n : t; return A(i, a), new S(i); }
            function s(e, t, n) { var r = u(e, t, n); return r ? new S(r) : S.empty(); }
            function u(e, t, n) { var r = Array.isArray(t), i = r ? t : null, a = r ? n : t; a = a || {}; var o = h(e, a), s = e.indexOf("://"), u = -1 != s && 6 > s ? e : E.basename(e), l = o.unit(u); n && !i && (i = null); var p; if (l)
                if (i && i.length > 0) {
                    var c = [];
                    i.forEach(function (e) { if (!e || 0 == e.trim().length)
                        throw new Error(D.EXTENSIONS_AND_OVERLAYS_LEGAL_FILE_PATHS.message); }), i.forEach(function (e) { c.push(o.unit(e, E.isAbsolute(e))); }), c.forEach(function (e) { return d(e, a); }), p = d(I.mergeAPIs(l, c, _.OverlayMergeMode.MERGE), a);
                }
                else
                    p = d(l, a), p.setMergeMode(_.OverlayMergeMode.MERGE); if (!l)
                throw new Error(O.applyTemplate(D.CAN_NOT_RESOLVE, { path: e })); if (a.rejectOnErrors && p && p.errors().filter(function (e) { return !e.isWarning; }).length)
                throw y(p); return p; }
            function l(e, t, n) { var r = p(e, t, n); return r.then(function (e) { return e; }); }
            function p(e, t, n) { return c(e, t, n).then(function (e) { if (!e)
                return null; for (var r = Array.isArray(t), i = r ? n : t, a = e; null != a;) {
                var o = a.wrapperNode();
                A(o, i);
                var s = a.getMaster();
                a = s ? s.asElement() : null;
            } return e.wrapperNode(); }); }
            function c(e, t, n) { var r = Array.isArray(t), i = r ? t : null, a = r ? n : t; a = a || {}; var o = h(e, a), s = e.indexOf("://"), u = -1 != s && 6 > s ? e : E.basename(e); return n && !i && (i = null), i && 0 != i.length ? (i.forEach(function (e) { if (!e || 0 == e.trim().length)
                throw new Error(D.EXTENSIONS_AND_OVERLAYS_LEGAL_FILE_PATHS.message); }), m(o, u, a).then(function (e) { var t = []; return i.forEach(function (e) { t.push(m(o, e, a)); }), Promise.all(t).then(function (t) { var n = []; t.forEach(function (e) { return n.push(e.lowLevel().unit()); }); var r = I.mergeAPIs(e.lowLevel().unit(), n, _.OverlayMergeMode.MERGE); return r; }).then(function (e) { return d(e, a); }); })) : m(o, u, a).then(function (e) { return e.setMergeMode(_.OverlayMergeMode.MERGE), e; }); }
            function f(e) { if (null == e)
                return null; var t = e.getAdapter(w.RAMLService).getDeclaringNode(); return null == t ? null : t.wrapperNode(); }
            function m(e, t, n) { return b.fetchIncludesAndMasterAsync(e, t).then(function (e) { try {
                var t = d(e, n);
                return n.rejectOnErrors && t && t.errors().filter(function (e) { return !e.isWarning; }).length ? Promise.reject(y(t)) : t;
            }
            catch (r) {
                return Promise.reject(r);
            } }); }
            function h(e, t) { t = t || {}; var n, r = t.fsResolver, i = t.httpResolver, a = t.reusedNode; if (a)
                n = a.lowLevel().unit().project(), n.deleteUnit(E.basename(e)), r && n.setFSResolver(r), i && n.setHTTPResolver(i);
            else {
                var o = E.dirname(e);
                n = new N.Project(o, r, i);
            } return n; }
            function d(e, t, n) { if (void 0 === n && (n = !1), t = t || {}, !e)
                return null; var r = null, i = null; e.isRAMLUnit ? r = e : (i = e, r = i.lowLevel().unit()); var a = r.contents(), o = _.ramlFirstLine(a); if (!o)
                throw new Error(D.INVALID_FIRST_LINE.message); var s, u, l = o[1]; o[2]; if ("0.8" == l ? u = "RAML08" : "1.0" == l && (u = "RAML10"), !u)
                throw new Error(D.UNKNOWN_RAML_VERSION.message); if ("RAML08" == u && n)
                throw new Error(D.EXTENSIONS_AND_OVERLAYS_NOT_SUPPORTED_0_8.message); var p = U(u); p.type(s); return i || (i = _.fromUnit(r), t.reusedNode && t.reusedNode.lowLevel().unit().absolutePath() == r.absolutePath() && g(i, t.reusedNode) && i.setReusedNode(t.reusedNode)), i; }
            function y(e) { var t = new Error(D.API_CONTAINS_ERROR.message); return t.parserErrors = _.toParserErrors(e.errors(), e), t; }
            function v(e, t, n) { void 0 === t && (t = !1), void 0 === n && (n = !0); var r = U("RAML10"), i = r.type(M.Universe10.Api.name), a = new N.Project(e), o = []; return a.units().forEach(function (e) { var r = e.ast(); t && (r = b.toChildCachingNode(r)); var a = new T.ApiImpl(new _.ASTNodeImpl(r, null, i, null)); n && (a = I.expandTraitsAndResourceTypes(a)), o.push(a); }), o; }
            function g(e, t) { if (!t)
                return !1; for (var n = e.lowLevel().unit().contents(), r = t.lowLevel().unit().contents(), i = Math.min(n.length, r.length), a = -1, o = 0; i > o; o++)
                if (n.charAt(o) != r.charAt(o)) {
                    a = o;
                    break;
                } for (; a > 0 && "" == n.charAt(a).replace(/\s/, "");)
                a--; 0 > a && n.length != r.length && (a = i); var s = P.deepFindNode(t, a, a + 1); if (!s)
                return !0; if (s.lowLevel().unit().absolutePath() != e.lowLevel().unit().absolutePath())
                return !0; var u = s.isElement() ? s.asElement() : s.parent(); if (!u)
                return !0; var l = u.property(); if (!l)
                return !0; if (L.isAnnotationsProperty(l) && (u = u.parent()), !u)
                return !0; for (var p = u; p;) {
                var c = p.definition();
                if (L.isResourceTypeType(c) || L.isTraitType(c))
                    return !1;
                var f = p.property();
                if (!f)
                    return !0;
                if (L.isTypeDeclarationDescendant(c) && (L.isTypesProperty(f) || L.isAnnotationTypesProperty(f)))
                    return !1;
                var m = f.range();
                if (L.isResourceTypeRefType(m) || L.isTraitRefType(m))
                    return !1;
                p = p.parent();
            } return !0; }
            function A(e, t) { t = t || {}, null != t.attributeDefaults && e ? e.setAttributeDefaults(t.attributeDefaults) : e && e.setAttributeDefaults(!0); }
            var T = n(22), E = n(15), S = n(23), N = n(25), _ = n(16), b = n(25), I = n(27), R = n(30), M = n(17), w = n(37), C = n(34), L = n(14), P = n(13), O = n(28), D = n(60), U = n(38);
            t.load = r, t.loadSync = i, t.loadApi = a, t.loadRAML = o, t.loadRAMLHL = s, t.loadApiAsync = l, t.loadRAMLAsync = p, t.loadRAMLAsyncHL = c, t.getLanguageElementByRuntimeType = f, t.toError = y, t.loadApis1 = v;
        }, function (e, t, n) { (function (e) {
            "use strict";
            function n(e) { return e.asElement && e.getKind && e.asAttr && e.lowLevel; }
            function r() { var t = e.ramlValidation; if (t) {
                var n = t.nodeValidators;
                if (Array.isArray(n))
                    return n;
            } return []; }
            function i() { var t = e.ramlValidation; if (t) {
                var n = t.astAnnotationValidators;
                if (Array.isArray(n))
                    return n;
            } return []; }
            !function (e) { e[e.BASIC = 0] = "BASIC", e[e.NODE = 1] = "NODE", e[e.ATTRIBUTE = 2] = "ATTRIBUTE"; }(t.NodeKind || (t.NodeKind = {}));
            t.NodeKind;
            !function (e) { e[e.RAML10 = 0] = "RAML10", e[e.RAML08 = 1] = "RAML08"; }(t.RAMLVersion || (t.RAMLVersion = {}));
            t.RAMLVersion;
            t.isParseResult = n, function (e) { e[e.UNRESOLVED_REFERENCE = 0] = "UNRESOLVED_REFERENCE", e[e.YAML_ERROR = 1] = "YAML_ERROR", e[e.UNKNOWN_NODE = 2] = "UNKNOWN_NODE", e[e.MISSING_REQUIRED_PROPERTY = 3] = "MISSING_REQUIRED_PROPERTY", e[e.PROPERTY_EXPECT_TO_HAVE_SINGLE_VALUE = 4] = "PROPERTY_EXPECT_TO_HAVE_SINGLE_VALUE", e[e.KEY_SHOULD_BE_UNIQUE_INTHISCONTEXT = 5] = "KEY_SHOULD_BE_UNIQUE_INTHISCONTEXT", e[e.UNABLE_TO_RESOLVE_INCLUDE_FILE = 6] = "UNABLE_TO_RESOLVE_INCLUDE_FILE", e[e.INVALID_VALUE_SCHEMA = 7] = "INVALID_VALUE_SCHEMA", e[e.MISSED_CONTEXT_REQUIREMENT = 8] = "MISSED_CONTEXT_REQUIREMENT", e[e.NODE_HAS_VALUE = 9] = "NODE_HAS_VALUE", e[e.ONLY_OVERRIDE_ALLOWED = 10] = "ONLY_OVERRIDE_ALLOWED", e[e.ILLEGAL_PROPERTY_VALUE = 11] = "ILLEGAL_PROPERTY_VALUE", e[e.ILLEGAL_PROPERTY = 12] = "ILLEGAL_PROPERTY", e[e.INVALID_PROPERTY = 13] = "INVALID_PROPERTY"; }(t.IssueCode || (t.IssueCode = {}));
            t.IssueCode;
            t.getNodeValidationPlugins = r, t.getNodeAnnotationValidationPlugins = i;
        }).call(t, function () { return this; }()); }, function (e, t, n) {
            "use strict";
            function r(e, t) { return new S(A.CHANGE_VALUE, e, t, -1); }
            function i(e, t) { return new S(A.CHANGE_VALUE, e, t.lowLevel(), -1); }
            function a(e, t) { return new S(A.CHANGE_KEY, e, t, -1); }
            function o(e, t) { return new S(A.REMOVE_CHILD, e, t, -1); }
            function s(e, t, n, r) { void 0 === n && (n = null), void 0 === r && (r = !1); var i = new S(A.ADD_CHILD, e, t, -1); return i.insertionPoint = n, i.toSeq = r, i; }
            function u(e, t) { return new S(A.INIT_RAML_FILE, e, t, -1); }
            function l(e, t, n) { if (m.isAbsolute(e)) {
                var r = m.extname(t);
                ".xsd" != r && (e = e.substr(1), t = p(n, m.basename(t)));
            } return c(e) || m.isAbsolute(e) ? e : c(t) || m.isAbsolute(t) ? p(m.dirname(t), e) : p(m.dirname(p(n, t)), e); }
            function p(e, t) { if (c(t))
                return t; var n; if (c(e)) {
                var r = d.stringEndsWith(e, "/") ? e : e + "/";
                n = h.resolve(r, t).replace(/\\/g, "/");
            }
            else
                n = m.resolve(e, t).replace(/\\/g, "/"); return n; }
            function c(e) { return null == e ? !1 : d.stringStartsWith(e, "http://") || d.stringStartsWith(e, "https://"); }
            function f(e) { return e.start && e.end && e.unit && e.key && e.value && e.children && e.includePath; }
            var m = n(15), h = n(40), d = n(35), y = n(28), v = n(60), g = function () { function e() { } return e; }();
            t.ASTDelta = g, function (e) { e[e.ADD_CHILD = 0] = "ADD_CHILD", e[e.REMOVE_CHILD = 1] = "REMOVE_CHILD", e[e.MOVE_CHILD = 2] = "MOVE_CHILD", e[e.CHANGE_KEY = 3] = "CHANGE_KEY", e[e.CHANGE_VALUE = 4] = "CHANGE_VALUE", e[e.INIT_RAML_FILE = 5] = "INIT_RAML_FILE"; }(t.CommandKind || (t.CommandKind = {}));
            var A = t.CommandKind, T = function () { function e(e, t, n, r, i) { void 0 === i && (i = null), this.offset = e, this.replacementLength = t, this.text = n, this.unit = r, this.target = i; } return e; }();
            t.TextChangeCommand = T;
            var E = function () { function e() { this.commands = []; } return e; }();
            t.CompositeCommand = E, function (e) { e[e.NONE = 0] = "NONE", e[e.START = 1] = "START", e[e.END = 2] = "END", e[e.POINT = 3] = "POINT"; }(t.InsertionPointType || (t.InsertionPointType = {}));
            var S = (t.InsertionPointType, function () { function e(e, t, n, r) { this.toSeq = !1, this.kind = e, this.target = t, this.value = n, this.position = r; } return e; }());
            t.ASTChangeCommand = S, t.setAttr = r, t.setAttrStructured = i, t.setKey = a, t.removeNode = o, t.insertNode = s, t.initRamlFile = u;
            var N = function () { function e(e, t) { this.content = e, this.absPath = t; } return e.prototype.position = function (e) { var t = e; this.initMapping(); for (var n = 0; n < this.mapping.length; n++) {
                var r = this.mapping[n];
                if (r > t)
                    return { line: n, column: t, position: e };
                t -= r;
            } if (0 == t)
                return { line: this.mapping.length - 1, column: this.mapping[this.mapping.length - 1], position: this.content.length }; if (1 == t)
                return { line: this.mapping.length - 1, column: this.mapping[this.mapping.length - 1] - 1, position: e - 1 }; throw new Error(y.applyTemplate(v.POSITION_EXCEEDS_TEXT_LENGTH, { pos: e, length: this.content.length, absPath: this.absPath })); }, e.prototype.initMapping = function () { if (null == this.mapping) {
                if (null == this.content)
                    throw new Error(y.applyTemplate(v.LINE_MAPPER_HAS_NULL_CONTENT, { path: null != this.absPath ? ". Path: " + this.absPath : " and null path." }));
                this.mapping = [];
                for (var e = 0, t = this.content.length, n = 0; t > n; n++)
                    "\r" == this.content.charAt(n) ? t - 1 > n && "\n" == this.content.charAt(n + 1) ? (this.mapping.push(n - e + 2), e = n + 2, n++) : (this.mapping.push(n - e + 1), e = n + 1) : "\n" == this.content.charAt(n) && (this.mapping.push(n - e + 1), e = n + 1);
                this.mapping.push(t - e);
            } }, e.prototype.toPosition = function (e, t) { var n = t; this.initMapping(); for (var r = e; r < this.mapping.length; r++) {
                var i = this.mapping[r];
                if (i > n) {
                    for (var a = n, o = 0; r > o; o++)
                        a += this.mapping[o];
                    return { line: r, column: n, position: a };
                }
                n -= i;
            } return { line: r, column: n, position: this.content.length }; }, e; }();
            t.LineMapperImpl = N, t.buildPath = l, t.toAbsolutePath = p, t.isWebPath = c, t.isLowLevelNode = f;
        }, function (e, t, n) {
            "use strict";
            function r(e) { return "Api" == e.kind() && "RAML10" == e.RAMLVersion(); }
            function i(e) { return "LibraryBase" == e.kind() && "RAML10" == e.RAMLVersion(); }
            function a(e) { return "Annotable" == e.kind() && "RAML10" == e.RAMLVersion(); }
            function o(e) { return "AnnotationRef" == e.kind() && "RAML10" == e.RAMLVersion(); }
            function s(e) { return "Reference" == e.kind() && "RAML10" == e.RAMLVersion(); }
            function u(e) { return "ValueType" == e.kind() && "RAML10" == e.RAMLVersion(); }
            function l(e) { return "StringType" == e.kind() && "RAML10" == e.RAMLVersion(); }
            function p(e) { return "UriTemplate" == e.kind() && "RAML10" == e.RAMLVersion(); }
            function c(e) { return "RelativeUriString" == e.kind() && "RAML10" == e.RAMLVersion(); }
            function f(e) { return "FullUriTemplateString" == e.kind() && "RAML10" == e.RAMLVersion(); }
            function m(e) { return "StatusCodeString" == e.kind() && "RAML10" == e.RAMLVersion(); }
            function h(e) { return "FixedUriString" == e.kind() && "RAML10" == e.RAMLVersion(); }
            function d(e) { return "ContentType" == e.kind() && "RAML10" == e.RAMLVersion(); }
            function y(e) { return "MarkdownString" == e.kind() && "RAML10" == e.RAMLVersion(); }
            function v(e) { return "SchemaString" == e.kind() && "RAML10" == e.RAMLVersion(); }
            function g(e) { return "MimeType" == e.kind() && "RAML10" == e.RAMLVersion(); }
            function A(e) { return "AnyType" == e.kind() && "RAML10" == e.RAMLVersion(); }
            function T(e) { return "NumberType" == e.kind() && "RAML10" == e.RAMLVersion(); }
            function E(e) { return "IntegerType" == e.kind() && "RAML10" == e.RAMLVersion(); }
            function S(e) { return "NullType" == e.kind() && "RAML10" == e.RAMLVersion(); }
            function N(e) { return "TimeOnlyType" == e.kind() && "RAML10" == e.RAMLVersion(); }
            function _(e) { return "DateOnlyType" == e.kind() && "RAML10" == e.RAMLVersion(); }
            function b(e) { return "DateTimeOnlyType" == e.kind() && "RAML10" == e.RAMLVersion(); }
            function I(e) { return "DateTimeType" == e.kind() && "RAML10" == e.RAMLVersion(); }
            function R(e) { return "FileType" == e.kind() && "RAML10" == e.RAMLVersion(); }
            function M(e) { return "BooleanType" == e.kind() && "RAML10" == e.RAMLVersion(); }
            function w(e) { return "AnnotationTarget" == e.kind() && "RAML10" == e.RAMLVersion(); }
            function C(e) { return "TraitRef" == e.kind() && "RAML10" == e.RAMLVersion(); }
            function L(e) { return "Trait" == e.kind() && "RAML10" == e.RAMLVersion(); }
            function P(e) { return "MethodBase" == e.kind() && "RAML10" == e.RAMLVersion(); }
            function O(e) { return "Operation" == e.kind() && "RAML10" == e.RAMLVersion(); }
            function D(e) { return "TypeDeclaration" == e.kind() && "RAML10" == e.RAMLVersion(); }
            function U(e) { return "ModelLocation" == e.kind() && "RAML10" == e.RAMLVersion(); }
            function x(e) { return "LocationKind" == e.kind() && "RAML10" == e.RAMLVersion(); }
            function k(e) { return "ExampleSpec" == e.kind() && "RAML10" == e.RAMLVersion(); }
            function F(e) { return "UsesDeclaration" == e.kind() && "RAML10" == e.RAMLVersion(); }
            function B(e) { return "XMLFacetInfo" == e.kind() && "RAML10" == e.RAMLVersion(); }
            function K(e) { return "ArrayTypeDeclaration" == e.kind() && "RAML10" == e.RAMLVersion(); }
            function V(e) { return "UnionTypeDeclaration" == e.kind() && "RAML10" == e.RAMLVersion(); }
            function j(e) { return "ObjectTypeDeclaration" == e.kind() && "RAML10" == e.RAMLVersion(); }
            function W(e) { return "StringTypeDeclaration" == e.kind() && "RAML10" == e.RAMLVersion(); }
            function q(e) { return "BooleanTypeDeclaration" == e.kind() && "RAML10" == e.RAMLVersion(); }
            function H(e) { return "NumberTypeDeclaration" == e.kind() && "RAML10" == e.RAMLVersion(); }
            function Y(e) { return "IntegerTypeDeclaration" == e.kind() && "RAML10" == e.RAMLVersion(); }
            function G(e) { return "DateOnlyTypeDeclaration" == e.kind() && "RAML10" == e.RAMLVersion(); }
            function X(e) { return "TimeOnlyTypeDeclaration" == e.kind() && "RAML10" == e.RAMLVersion(); }
            function z(e) { return "DateTimeOnlyTypeDeclaration" == e.kind() && "RAML10" == e.RAMLVersion(); }
            function $(e) { return "DateTimeTypeDeclaration" == e.kind() && "RAML10" == e.RAMLVersion(); }
            function J(e) { return "FileTypeDeclaration" == e.kind() && "RAML10" == e.RAMLVersion(); }
            function Q(e) { return "Response" == e.kind() && "RAML10" == e.RAMLVersion(); }
            function Z(e) { return "SecuritySchemePart" == e.kind() && "RAML10" == e.RAMLVersion(); }
            function ee(e) { return "SecuritySchemeRef" == e.kind() && "RAML10" == e.RAMLVersion(); }
            function te(e) { return "AbstractSecurityScheme" == e.kind() && "RAML10" == e.RAMLVersion(); }
            function ne(e) { return "SecuritySchemeSettings" == e.kind() && "RAML10" == e.RAMLVersion(); }
            function re(e) { return "OAuth1SecuritySchemeSettings" == e.kind() && "RAML10" == e.RAMLVersion(); }
            function ie(e) { return "OAuth2SecuritySchemeSettings" == e.kind() && "RAML10" == e.RAMLVersion(); }
            function ae(e) { return "OAuth2SecurityScheme" == e.kind() && "RAML10" == e.RAMLVersion(); }
            function oe(e) { return "OAuth1SecurityScheme" == e.kind() && "RAML10" == e.RAMLVersion(); }
            function se(e) { return "PassThroughSecurityScheme" == e.kind() && "RAML10" == e.RAMLVersion(); }
            function ue(e) { return "BasicSecurityScheme" == e.kind() && "RAML10" == e.RAMLVersion(); }
            function le(e) { return "DigestSecurityScheme" == e.kind() && "RAML10" == e.RAMLVersion(); }
            function pe(e) { return "CustomSecurityScheme" == e.kind() && "RAML10" == e.RAMLVersion(); }
            function ce(e) { return "Method" == e.kind() && "RAML10" == e.RAMLVersion(); }
            function fe(e) { return "ResourceTypeRef" == e.kind() && "RAML10" == e.RAMLVersion(); }
            function me(e) { return "ResourceType" == e.kind() && "RAML10" == e.RAMLVersion(); }
            function he(e) { return "ResourceBase" == e.kind() && "RAML10" == e.RAMLVersion(); }
            function de(e) { return "Resource" == e.kind() && "RAML10" == e.RAMLVersion(); }
            function ye(e) { return "DocumentationItem" == e.kind() && "RAML10" == e.RAMLVersion(); }
            function ve(e) { return "Library" == e.kind() && "RAML10" == e.RAMLVersion(); }
            function ge(e) { return "Overlay" == e.kind() && "RAML10" == e.RAMLVersion(); }
            function Ae(e) { return "Extension" == e.kind() && "RAML10" == e.RAMLVersion(); }
            function Te(e) { return null == e.highLevel().parent(); }
            function Ee(e) { return Te(e) ? e : null; }
            t.isApi = r, t.isLibraryBase = i, t.isAnnotable = a, t.isAnnotationRef = o, t.isReference = s, t.isValueType = u, t.isStringType = l, t.isUriTemplate = p, t.isRelativeUriString = c, t.isFullUriTemplateString = f, t.isStatusCodeString = m, t.isFixedUriString = h, t.isContentType = d, t.isMarkdownString = y, t.isSchemaString = v, t.isMimeType = g, t.isAnyType = A, t.isNumberType = T, t.isIntegerType = E, t.isNullType = S, t.isTimeOnlyType = N, t.isDateOnlyType = _, t.isDateTimeOnlyType = b, t.isDateTimeType = I, t.isFileType = R, t.isBooleanType = M, t.isAnnotationTarget = w, t.isTraitRef = C, t.isTrait = L, t.isMethodBase = P, t.isOperation = O, t.isTypeDeclaration = D, t.isModelLocation = U, t.isLocationKind = x, t.isExampleSpec = k, t.isUsesDeclaration = F, t.isXMLFacetInfo = B, t.isArrayTypeDeclaration = K, t.isUnionTypeDeclaration = V, t.isObjectTypeDeclaration = j, t.isStringTypeDeclaration = W, t.isBooleanTypeDeclaration = q, t.isNumberTypeDeclaration = H, t.isIntegerTypeDeclaration = Y, t.isDateOnlyTypeDeclaration = G, t.isTimeOnlyTypeDeclaration = X, t.isDateTimeOnlyTypeDeclaration = z, t.isDateTimeTypeDeclaration = $, t.isFileTypeDeclaration = J, t.isResponse = Q, t.isSecuritySchemePart = Z, t.isSecuritySchemeRef = ee, t.isAbstractSecurityScheme = te, t.isSecuritySchemeSettings = ne, t.isOAuth1SecuritySchemeSettings = re, t.isOAuth2SecuritySchemeSettings = ie, t.isOAuth2SecurityScheme = ae, t.isOAuth1SecurityScheme = oe, t.isPassThroughSecurityScheme = se, t.isBasicSecurityScheme = ue, t.isDigestSecurityScheme = le, t.isCustomSecurityScheme = pe, t.isMethod = ce, t.isResourceTypeRef = fe, t.isResourceType = me, t.isResourceBase = he, t.isResource = de, t.isDocumentationItem = ye, t.isLibrary = ve, t.isOverlay = ge, t.isExtension = Ae, t.isFragment = Te, t.asFragment = Ee;
        }, function (e, t, n) {
            "use strict";
            function r(e) { return "Api" == e.kind() && "RAML08" == e.RAMLVersion(); }
            function i(e) { return "FullUriTemplateString" == e.kind() && "RAML08" == e.RAMLVersion(); }
            function a(e) { return "UriTemplate" == e.kind() && "RAML08" == e.RAMLVersion(); }
            function o(e) { return "StringType" == e.kind() && "RAML08" == e.RAMLVersion(); }
            function s(e) { return "ValueType" == e.kind() && "RAML08" == e.RAMLVersion(); }
            function u(e) { return "AnyType" == e.kind() && "RAML08" == e.RAMLVersion(); }
            function l(e) { return "NumberType" == e.kind() && "RAML08" == e.RAMLVersion(); }
            function p(e) { return "BooleanType" == e.kind() && "RAML08" == e.RAMLVersion(); }
            function c(e) { return "Reference" == e.kind() && "RAML08" == e.RAMLVersion(); }
            function f(e) { return "ResourceTypeRef" == e.kind() && "RAML08" == e.RAMLVersion(); }
            function m(e) { return "ResourceType" == e.kind() && "RAML08" == e.RAMLVersion(); }
            function h(e) { return "Method" == e.kind() && "RAML08" == e.RAMLVersion(); }
            function d(e) { return "MethodBase" == e.kind() && "RAML08" == e.RAMLVersion(); }
            function y(e) { return "Response" == e.kind() && "RAML08" == e.RAMLVersion(); }
            function v(e) { return "StatusCodeString" == e.kind() && "RAML08" == e.RAMLVersion(); }
            function g(e) { return "Parameter" == e.kind() && "RAML08" == e.RAMLVersion(); }
            function A(e) { return "ParameterLocation" == e.kind() && "RAML08" == e.RAMLVersion(); }
            function T(e) { return "MarkdownString" == e.kind() && "RAML08" == e.RAMLVersion(); }
            function E(e) { return "StringTypeDeclaration" == e.kind() && "RAML08" == e.RAMLVersion(); }
            function S(e) { return "BooleanTypeDeclaration" == e.kind() && "RAML08" == e.RAMLVersion(); }
            function N(e) { return "NumberTypeDeclaration" == e.kind() && "RAML08" == e.RAMLVersion(); }
            function _(e) { return "IntegerTypeDeclaration" == e.kind() && "RAML08" == e.RAMLVersion(); }
            function b(e) { return "DateTypeDeclaration" == e.kind() && "RAML08" == e.RAMLVersion(); }
            function I(e) { return "FileTypeDeclaration" == e.kind() && "RAML08" == e.RAMLVersion(); }
            function R(e) { return "BodyLike" == e.kind() && "RAML08" == e.RAMLVersion(); }
            function M(e) { return "SchemaString" == e.kind() && "RAML08" == e.RAMLVersion(); }
            function w(e) { return "JSonSchemaString" == e.kind() && "RAML08" == e.RAMLVersion(); }
            function C(e) { return "XMLSchemaString" == e.kind() && "RAML08" == e.RAMLVersion(); }
            function L(e) { return "ExampleString" == e.kind() && "RAML08" == e.RAMLVersion(); }
            function P(e) { return "JSONExample" == e.kind() && "RAML08" == e.RAMLVersion(); }
            function O(e) { return "XMLExample" == e.kind() && "RAML08" == e.RAMLVersion(); }
            function D(e) { return "XMLBody" == e.kind() && "RAML08" == e.RAMLVersion(); }
            function U(e) { return "JSONBody" == e.kind() && "RAML08" == e.RAMLVersion(); }
            function x(e) { return "SecuritySchemeRef" == e.kind() && "RAML08" == e.RAMLVersion(); }
            function k(e) { return "AbstractSecurityScheme" == e.kind() && "RAML08" == e.RAMLVersion(); }
            function F(e) { return "SecuritySchemePart" == e.kind() && "RAML08" == e.RAMLVersion(); }
            function B(e) { return "TraitRef" == e.kind() && "RAML08" == e.RAMLVersion(); }
            function K(e) { return "Trait" == e.kind() && "RAML08" == e.RAMLVersion(); }
            function V(e) { return "SecuritySchemeSettings" == e.kind() && "RAML08" == e.RAMLVersion(); }
            function j(e) { return "OAuth1SecuritySchemeSettings" == e.kind() && "RAML08" == e.RAMLVersion(); }
            function W(e) { return "FixedUri" == e.kind() && "RAML08" == e.RAMLVersion(); }
            function q(e) { return "OAuth2SecuritySchemeSettings" == e.kind() && "RAML08" == e.RAMLVersion(); }
            function H(e) { return "OAuth2SecurityScheme" == e.kind() && "RAML08" == e.RAMLVersion(); }
            function Y(e) { return "OAuth1SecurityScheme" == e.kind() && "RAML08" == e.RAMLVersion(); }
            function G(e) { return "BasicSecurityScheme" == e.kind() && "RAML08" == e.RAMLVersion(); }
            function X(e) { return "DigestSecurityScheme" == e.kind() && "RAML08" == e.RAMLVersion(); }
            function z(e) { return "CustomSecurityScheme" == e.kind() && "RAML08" == e.RAMLVersion(); }
            function $(e) { return "MimeType" == e.kind() && "RAML08" == e.RAMLVersion(); }
            function J(e) { return "RelativeUriString" == e.kind() && "RAML08" == e.RAMLVersion(); }
            function Q(e) { return "GlobalSchema" == e.kind() && "RAML08" == e.RAMLVersion(); }
            function Z(e) { return "RAMLSimpleElement" == e.kind() && "RAML08" == e.RAMLVersion(); }
            function ee(e) { return "DocumentationItem" == e.kind() && "RAML08" == e.RAMLVersion(); }
            function te(e) { return "Resource" == e.kind() && "RAML08" == e.RAMLVersion(); }
            t.isApi = r, t.isFullUriTemplateString = i, t.isUriTemplate = a, t.isStringType = o, t.isValueType = s, t.isAnyType = u, t.isNumberType = l, t.isBooleanType = p, t.isReference = c, t.isResourceTypeRef = f, t.isResourceType = m, t.isMethod = h, t.isMethodBase = d, t.isResponse = y, t.isStatusCodeString = v, t.isParameter = g, t.isParameterLocation = A, t.isMarkdownString = T, t.isStringTypeDeclaration = E, t.isBooleanTypeDeclaration = S, t.isNumberTypeDeclaration = N, t.isIntegerTypeDeclaration = _, t.isDateTypeDeclaration = b, t.isFileTypeDeclaration = I, t.isBodyLike = R, t.isSchemaString = M, t.isJSonSchemaString = w, t.isXMLSchemaString = C, t.isExampleString = L, t.isJSONExample = P, t.isXMLExample = O, t.isXMLBody = D, t.isJSONBody = U, t.isSecuritySchemeRef = x, t.isAbstractSecurityScheme = k, t.isSecuritySchemePart = F, t.isTraitRef = B, t.isTrait = K, t.isSecuritySchemeSettings = V, t.isOAuth1SecuritySchemeSettings = j, t.isFixedUri = W, t.isOAuth2SecuritySchemeSettings = q, t.isOAuth2SecurityScheme = H, t.isOAuth1SecurityScheme = Y, t.isBasicSecurityScheme = G, t.isDigestSecurityScheme = X, t.isCustomSecurityScheme = z, t.isMimeType = $, t.isRelativeUriString = J, t.isGlobalSchema = Q, t.isRAMLSimpleElement = Z, t.isDocumentationItem = ee, t.isResource = te;
        }, function (e, t, n) {
            "use strict";
            function r(e, t, n) { return _.findDeclaration(e, t, n); }
            function i(e, t) { return _.findUsages(e, t); }
            function a(e) { return _.globalDeclarations(e); }
            function o(e, t, n) { _.refFinder(e, t, n); }
            function s(e, t) { return _.findDeclarationByNode(e, t); }
            function u(e, t) { return _.determineCompletionKind(e, t); }
            function l(e, t) { return _.enumValues(e, t); }
            function p(e, t) { return b.qName(e, t); }
            function c(e, t) { return _.subTypesWithLocals(e, t); }
            function f(e, t) { return _.nodesDeclaringType(e, t); }
            function m(e) { return _.isExampleNodeContent(e); }
            function h(e) { return _.findExampleContentType(e); }
            function d(e, t) { return _.parseDocumentationContent(e, t); }
            function y(e, t) { return _.parseStructuredExample(e, t); }
            function v(e) { return _.isExampleNode(e); }
            function g(e, t) { return _.referenceTargets(e, t); }
            function A(e) { return I.getNominalTypeSource(e); }
            function T(e, t) { return _.findAllSubTypes(e, t); }
            function E(e) { return _.declRoot(e); }
            function S(e, t, n, r, i) {
                return void 0 === r && (r = !0), void 0 === i && (i = !0), _.deepFindNode(e, t, n, r, i);
            }
            function N(e) { return _.allChildren(e); }
            var _ = n(31), b = n(16), I = n(32);
            t.findDeclaration = r, t.findUsages = i, t.globalDeclarations = a, t.refFinder = o, t.findDeclarationByNode = s, function (e) { e[e.VALUE_COMPLETION = 0] = "VALUE_COMPLETION", e[e.KEY_COMPLETION = 1] = "KEY_COMPLETION", e[e.PATH_COMPLETION = 2] = "PATH_COMPLETION", e[e.DIRECTIVE_COMPLETION = 3] = "DIRECTIVE_COMPLETION", e[e.VERSION_COMPLETION = 4] = "VERSION_COMPLETION", e[e.ANNOTATION_COMPLETION = 5] = "ANNOTATION_COMPLETION", e[e.SEQUENCE_KEY_COPLETION = 6] = "SEQUENCE_KEY_COPLETION", e[e.INCOMMENT = 7] = "INCOMMENT"; }(t.LocationKind || (t.LocationKind = {}));
            t.LocationKind;
            t.determineCompletionKind = u, t.enumValues = l, t.qName = p, t.subTypesWithLocals = c, t.nodesDeclaringType = f, t.isExampleNodeContent = m, t.findExampleContentType = h, t.parseDocumentationContent = d, t.parseStructuredExample = y, t.isExampleNode = v, t.referenceTargets = g, t.getNominalTypeSource = A, t.findAllSubTypes = T, t.declRoot = E, t.deepFindNode = S, t.allChildren = N;
        }, function (e, t, n) {
            "use strict";
            function r(e) { return e ? e.nameId() === ze.Universe10.Api.properties.documentation.name || e.nameId() === ze.Universe08.Api.properties.documentation.name : !1; }
            function i(e) { return e === ze.Universe10.Trait.properties.usage.name || e === ze.Universe08.Trait.properties.usage.name || e === ze.Universe10.ResourceType.properties.usage.name || e === ze.Universe08.ResourceType.properties.usage.name || e === ze.Universe10.Library.properties.usage.name || e === ze.Universe10.Overlay.properties.usage.name || e === ze.Universe10.Extension.properties.usage.name; }
            function a(e) { return e ? i(e.nameId()) : !1; }
            function o(e) { return e ? e.nameId() == ze.Universe10.Overlay.properties["extends"].name || e.nameId() == ze.Universe10.Extension.properties["extends"].name : !1; }
            function s(e) { return e === ze.Universe10.TypeDeclaration.properties.description.name || "description" === e; }
            function u(e) { return e ? s(e.nameId()) : !1; }
            function l(e) { return e === ze.Universe10.TypeDeclaration.properties.required.name || e === ze.Universe08.Parameter.properties.required.name || "required" === e; }
            function p(e) { return e === ze.Universe10.TypeDeclaration.properties.displayName.name || "displayName" === e; }
            function c(e) { return e ? p(e.nameId()) : !1; }
            function f(e) { return e ? l(e.nameId()) : !1; }
            function m(e) { return e === ze.Universe10.Api.properties.title.name || e === ze.Universe08.Api.properties.title.name || e === ze.Universe10.DocumentationItem.properties.title.name || e === ze.Universe08.DocumentationItem.properties.title.name || e === ze.Universe10.Overlay.properties.title.name || e === ze.Universe10.Extension.properties.title.name; }
            function h(e) { return e ? m(e.nameId()) : !1; }
            function d(e) { return e ? y(e.nameId()) : !1; }
            function y(e) { return e === ze.Universe08.MethodBase.properties.headers.name || e === ze.Universe08.Response.properties.headers.name || e === ze.Universe08.SecuritySchemePart.properties.headers.name || e === ze.Universe10.MethodBase.properties.headers.name || e === ze.Universe10.Response.properties.headers.name; }
            function v(e) { return e ? g(e.nameId()) : !1; }
            function g(e) { return e === ze.Universe08.BodyLike.properties.formParameters.name; }
            function A(e) { return e ? T(e.nameId()) : !1; }
            function T(e) { return e === ze.Universe08.MethodBase.properties.queryParameters.name || e === ze.Universe08.SecuritySchemePart.properties.queryParameters.name || e === ze.Universe10.MethodBase.properties.queryParameters.name; }
            function E(e) { return e ? e.nameId() === ze.Universe10.Api.properties.annotations.name || e.nameId() === ze.Universe10.TypeDeclaration.properties.annotations.name || e.nameId() === ze.Universe10.Response.properties.annotations.name : !1; }
            function S(e) { return e ? e.nameId() === ze.Universe10.AnnotationRef.properties.annotation.name : !1; }
            function N(e) { return e ? e.nameId() === ze.Universe10.MethodBase.properties.is.name || e.nameId() === ze.Universe08.Method.properties.is.name || e.nameId() === ze.Universe10.ResourceBase.properties.is.name || e.nameId() === ze.Universe08.ResourceType.properties.is.name || e.nameId() === ze.Universe08.Resource.properties.is.name : !1; }
            function _(e) { return e ? e.nameId() === ze.Universe10.Api.properties.securedBy.name || e.nameId() === ze.Universe08.Api.properties.securedBy.name || e.nameId() === ze.Universe10.MethodBase.properties.securedBy.name || e.nameId() === ze.Universe08.MethodBase.properties.securedBy.name || e.nameId() === ze.Universe08.ResourceType.properties.securedBy.name || e.nameId() === ze.Universe08.Resource.properties.securedBy.name || e.nameId() === ze.Universe10.ResourceBase.properties.securedBy.name : !1; }
            function b(e) { return e ? e.nameId() === ze.Universe10.LibraryBase.properties.securitySchemes.name || e.nameId() === ze.Universe08.Api.properties.securitySchemes.name : !1; }
            function I(e) { return e ? e.nameId() === ze.Universe10.SecuritySchemeRef.properties.securityScheme.name || e.nameId() === ze.Universe08.SecuritySchemeRef.properties.securityScheme.name : !1; }
            function R(e) { return M(e) || k(e); }
            function M(e) { return e ? e.nameId() === ze.Universe10.AbstractSecurityScheme.properties.type.name || e.nameId() === ze.Universe08.AbstractSecurityScheme.properties.type.name || e.nameId() === ze.Universe08.ResourceType.properties.type.name || e.nameId() === ze.Universe08.Resource.properties.type.name || e.nameId() === ze.Universe08.Parameter.properties.type.name || e.nameId() === ze.Universe10.ResourceBase.properties.type.name || e.nameId() === ze.Universe10.TypeDeclaration.properties.type.name : !1; }
            function w(e) { return e ? e.nameId() === ze.Universe10.ArrayTypeDeclaration.properties.items.name : !1; }
            function C(e) { return e ? e.nameId() === ze.Universe10.ArrayTypeDeclaration.properties.structuredItems.name : !1; }
            function L(e) { return e ? e.nameId() === ze.Universe10.ObjectTypeDeclaration.properties.properties.name : !1; }
            function P(e) { return e ? e.nameId() === ze.Universe10.MethodBase.properties.responses.name || e.nameId() === ze.Universe08.MethodBase.properties.responses.name : !1; }
            function O(e) { return e ? e.nameId() === ze.Universe10.Api.properties.protocols.name || e.nameId() === ze.Universe08.Api.properties.protocols.name || e.nameId() === ze.Universe10.MethodBase.properties.protocols.name : !1; }
            function D(e) { return e ? e.nameId() === ze.Universe10.TypeDeclaration.properties.name.name || e.nameId() === ze.Universe10.TypeDeclaration.properties.name.name || e.nameId() === ze.Universe08.AbstractSecurityScheme.properties.name.name || e.nameId() === ze.Universe10.AbstractSecurityScheme.properties.name.name || e.nameId() === ze.Universe08.Trait.properties.name.name || e.nameId() === ze.Universe10.Trait.properties.name.name || "name" === e.nameId() : !1; }
            function U(e) { return e ? e.nameId() === ze.Universe10.MethodBase.properties.body.name || e.nameId() === ze.Universe08.MethodBase.properties.body.name || e.nameId() === ze.Universe10.Response.properties.body.name || e.nameId() === ze.Universe08.Response.properties.body.name : !1; }
            function x(e) { return e ? e.nameId() === ze.Universe10.TypeDeclaration.properties["default"].name || e.nameId() === ze.Universe08.Parameter.properties["default"].name : !1; }
            function k(e) { return e ? e.nameId() === ze.Universe08.BodyLike.properties.schema.name || e.nameId() === ze.Universe08.XMLBody.properties.schema.name || e.nameId() === ze.Universe08.JSONBody.properties.schema.name || e.nameId() === ze.Universe10.TypeDeclaration.properties.schema.name : !1; }
            function F(e) { return e ? e.nameId() === ze.Universe08.Api.properties.traits.name || e.nameId() === ze.Universe10.LibraryBase.properties.traits.name : !1; }
            function B(e) { return e ? e.nameId() === ze.Universe08.TraitRef.properties.trait.name || e.nameId() === ze.Universe10.TraitRef.properties.trait.name : !1; }
            function K(e) { return e ? e.nameId() === ze.Universe08.Api.properties.resourceTypes.name || e.nameId() === ze.Universe10.LibraryBase.properties.resourceTypes.name : !1; }
            function V(e) { return e ? e.nameId() === ze.Universe08.ResourceTypeRef.properties.resourceType.name || e.nameId() === ze.Universe10.ResourceTypeRef.properties.resourceType.name : !1; }
            function j(e) { return e ? e.nameId() === ze.Universe10.TypeDeclaration.properties.facets.name : !1; }
            function W(e) { return e ? e.nameId() === ze.Universe08.Api.properties.schemas.name || e.nameId() === ze.Universe10.LibraryBase.properties.schemas.name : !1; }
            function q(e) { return e ? e.nameId() === ze.Universe10.Api.properties.resources.name || e.nameId() === ze.Universe08.Api.properties.resources.name || e.nameId() === ze.Universe10.Resource.properties.resources.name || e.nameId() === ze.Universe08.Resource.properties.resources.name : !1; }
            function H(e) { return e ? e.nameId() === ze.Universe10.ResourceBase.properties.methods.name || e.nameId() === ze.Universe08.Resource.properties.methods.name || e.nameId() === ze.Universe08.ResourceType.properties.methods.name : !1; }
            function Y(e) { return e && e.nameId() === ze.Universe10.LibraryBase.properties.types.name; }
            function G(e) { return e ? e.nameId() === ze.Universe10.TypeDeclaration.properties.example.name || "example" === e.nameId() : !1; }
            function X(e) { return e ? e.nameId() === ze.Universe10.StringTypeDeclaration.properties["enum"].name || e.nameId() === ze.Universe10.NumberTypeDeclaration.properties["enum"].name || e.nameId() === ze.Universe08.StringTypeDeclaration.properties["enum"].name : !1; }
            function z(e) { return e ? e.nameId() === ze.Universe10.TypeDeclaration.properties.example.name || e.nameId() === ze.Universe10.TypeDeclaration.properties.examples.name : !1; }
            function $(e) { return e ? e.nameId() === ze.Universe08.GlobalSchema.properties.value.name : !1; }
            function J(e) { return e ? e.nameId() === ze.Universe08.Api.properties.uriParameters.name || e.nameId() === ze.Universe08.ResourceType.properties.uriParameters.name || e.nameId() === ze.Universe08.Resource.properties.uriParameters.name || e.nameId() === ze.Universe10.ResourceBase.properties.uriParameters.name : !1; }
            function Q(e) { return e ? e.nameId() === ze.Universe08.Resource.properties.baseUriParameters.name || e.nameId() === ze.Universe08.Api.properties.baseUriParameters.name || e.nameId() === ze.Universe10.Api.properties.baseUriParameters.name : !1; }
            function Z(e) { return e ? e.nameId() === ze.Universe08.Api.properties.RAMLVersion.name || e.nameId() === ze.Universe10.Api.properties.RAMLVersion.name : !1; }
            function ee(e) { return e ? e.nameId() === ze.Universe10.FragmentDeclaration.properties.uses.name : !1; }
            function te(e) { return e ? e.nameId() === ze.Universe10.LibraryBase.properties.annotationTypes.name : !1; }
            function ne(e) { return e.key() == ze.Universe10.Method || e.key() == ze.Universe08.Method; }
            function re(e) { return e.key() == ze.Universe10.Api || e.key() == ze.Universe08.Api; }
            function ie(e) { return e.key() == ze.Universe10.BooleanType || e.key() == ze.Universe08.BooleanType; }
            function ae(e) { return e.key() == ze.Universe10.MarkdownString || e.key() == ze.Universe08.MarkdownString; }
            function oe(e) { return e.key() == ze.Universe10.Resource || e.key() == ze.Universe08.Resource; }
            function se(e) { return e.key() == ze.Universe10.Trait || e.key() == ze.Universe08.Trait; }
            function ue(e) { return e.key() == ze.Universe10.TraitRef || e.key() == ze.Universe08.TraitRef; }
            function le(e) { return e.key() == ze.Universe10.ResourceTypeRef || e.key() == ze.Universe08.ResourceTypeRef; }
            function pe(e) { return e.key() == ze.Universe08.GlobalSchema; }
            function ce(e) { return e.key() == ze.Universe10.AbstractSecurityScheme || e.key() == ze.Universe08.AbstractSecurityScheme; }
            function fe(e) { return e.isAssignableFrom(ze.Universe10.AbstractSecurityScheme.name); }
            function me(e) { return e.key() == ze.Universe10.SecuritySchemeRef || e.key() == ze.Universe08.SecuritySchemeRef; }
            function he(e) { return e.key() == ze.Universe10.TypeDeclaration; }
            function de(e) { return e.key() == ze.Universe10.Response || e.key() == ze.Universe08.Response; }
            function ye(e) { return e.key() == ze.Universe08.BodyLike; }
            function ve(e) { return e.key() == ze.Universe10.Overlay; }
            function ge(e) { return !1; }
            function Ae(e) { return e.key() == ze.Universe10.ResourceType || e.key() == ze.Universe08.ResourceType; }
            function Te(e) { return e.key() == ze.Universe10.SchemaString || e.key() == ze.Universe08.SchemaString; }
            function Ee(e) { return e.key() == ze.Universe10.MethodBase || e.key() == ze.Universe08.MethodBase; }
            function Se(e) { return e.key() == ze.Universe10.Library; }
            function Ne(e) { return e.key() == ze.Universe10.StringType || e.key() == ze.Universe08.StringType; }
            function _e(e) { return e.key() == ze.Universe10.AnyType || e.key() == ze.Universe08.AnyType; }
            function be(e) { return e.key() == ze.Universe10.ExampleSpec; }
            function Ie(e) { return e.key() == ze.Universe10.Extension; }
            function Re(e) { return e.isAssignableFrom(ze.Universe10.TypeDeclaration.name); }
            function Me(e) { return e.key() == ze.Universe10.DocumentationItem || e.key() == ze.Universe08.DocumentationItem; }
            function we(e) { return e.isAssignableFrom(ze.Universe10.AnnotationRef.name); }
            function Ce(e) { return e.isAssignableFrom(ze.Universe10.Api.name) || e.isAssignableFrom(ze.Universe08.Api.name); }
            function Le(e) { return e.isAssignableFrom(ze.Universe10.LibraryBase.name); }
            function Pe(e) { return e.isAssignableFrom(ze.Universe10.ResourceBase.name) || e.isAssignableFrom(ze.Universe08.Resource.name); }
            function Oe(e) { return e.isAssignableFrom(ze.Universe10.ObjectTypeDeclaration.name); }
            function De(e) { return e.isAssignableFrom(ze.Universe10.ArrayTypeDeclaration.name); }
            function Ue(e) { return e.isAssignableFrom(ze.Universe10.TypeDeclaration.name); }
            function xe(e) { return e.isAssignableFrom(ze.Universe08.Parameter.name); }
            function ke(e) { return e.isAssignableFrom(ze.Universe10.StringTypeDeclaration.name); }
            function Fe(e) { return e.isAssignableFrom(ze.Universe10.StringType.name); }
            function Be(e) { return e.isAssignableFrom(ze.Universe10.TypeDeclaration.name); }
            function Ke(e) { return e.isAssignableFrom(ze.Universe10.MethodBase.name) || e.isAssignableFrom(ze.Universe08.MethodBase.name); }
            function Ve(e) { return e.key() == ze.Universe10.SecuritySchemePart || e.key() == ze.Universe08.SecuritySchemePart; }
            function je(e) { return e.nameId() === ze.Universe08.Api.properties.mediaType.name || e.nameId() === ze.Universe10.Api.properties.mediaType.name; }
            function We(e) { return "RAML08" == e.universe().version(); }
            function qe(e) { return "RAML10" == e.universe().version(); }
            function He(e) { return We(e.definition()); }
            function Ye(e) { return We(e.definition()); }
            function Ge(e) { return qe(e.definition()); }
            function Xe(e) { return qe(e.definition()); }
            var ze = n(17);
            t.isDocumentationProperty = r, t.isUsagePropertyName = i, t.isUsageProperty = a, t.isMasterRefProperty = o, t.isDescriptionPropertyName = s, t.isDescriptionProperty = u, t.isRequiredPropertyName = l, t.isDisplayNamePropertyName = p, t.isDisplayNameProperty = c, t.isRequiredProperty = f, t.isTitlePropertyName = m, t.isTitleProperty = h, t.isHeadersProperty = d, t.isHeadersPropertyName = y, t.isFormParametersProperty = v, t.isFormParametersPropertyName = g, t.isQueryParametersProperty = A, t.isQueryParametersPropertyName = T, t.isAnnotationsProperty = E, t.isAnnotationProperty = S, t.isIsProperty = N, t.isSecuredByProperty = _, t.isSecuritySchemesProperty = b, t.isSecuritySchemeProperty = I, t.isTypeOrSchemaProperty = R, t.isTypeProperty = M, t.isItemsProperty = w, t.isStructuredItemsProperty = C, t.isPropertiesProperty = L, t.isResponsesProperty = P, t.isProtocolsProperty = O, t.isNameProperty = D, t.isBodyProperty = U, t.isDefaultValue = x, t.isSchemaProperty = k, t.isTraitsProperty = F, t.isTraitProperty = B, t.isResourceTypesProperty = K, t.isResourceTypeProperty = V, t.isFacetsProperty = j, t.isSchemasProperty = W, t.isResourcesProperty = q, t.isMethodsProperty = H, t.isTypesProperty = Y, t.isExampleProperty = G, t.isEnumProperty = X, t.isExamplesProperty = z, t.isValueProperty = $, t.isUriParametersProperty = J, t.isBaseUriParametersProperty = Q, t.isRAMLVersionProperty = Z, t.isUsesProperty = ee, t.isAnnotationTypesProperty = te, t.isMethodType = ne, t.isApiType = re, t.isBooleanTypeType = ie, t.isMarkdownStringType = ae, t.isResourceType = oe, t.isTraitType = se, t.isTraitRefType = ue, t.isResourceTypeRefType = le, t.isGlobalSchemaType = pe, t.isSecuritySchemaType = ce, t.isSecuritySchemaTypeDescendant = fe, t.isSecuritySchemeRefType = me, t.isTypeDeclarationType = he, t.isResponseType = de, t.isBodyLikeType = ye, t.isOverlayType = ve, t.isAnnotationTypeType = ge, t.isResourceTypeType = Ae, t.isSchemaStringType = Te, t.isMethodBaseType = Ee, t.isLibraryType = Se, t.isStringTypeType = Ne, t.isAnyTypeType = _e, t.isExampleSpecType = be, t.isExtensionType = Ie, t.isTypeDeclarationTypeOrDescendant = Re, t.isDocumentationType = Me, t.isAnnotationRefTypeOrDescendant = we, t.isApiSibling = Ce, t.isLibraryBaseSibling = Le, t.isResourceBaseSibling = Pe, t.isObjectTypeDeclarationSibling = Oe, t.isArrayTypeDeclarationSibling = De, t.isTypeDeclarationDescendant = Ue, t.isParameterDescendant = xe, t.isStringTypeDeclarationDescendant = ke, t.isStringTypeDescendant = Fe, t.isTypeDeclarationSibling = Be, t.isMethodBaseSibling = Ke, t.isSecuritySchemePartType = Ve, t.isMediaTypeProperty = je, t.isRAML08Type = We, t.isRAML10Type = qe, t.isRAML08Node = He, t.isRAML08Attribute = Ye, t.isRAML10Node = Ge, t.isRAML10Attribute = Xe;
        }, function (e, t, n) { (function (e) { function n(e, t) { for (var n = 0, r = e.length - 1; r >= 0; r--) {
            var i = e[r];
            "." === i ? e.splice(r, 1) : ".." === i ? (e.splice(r, 1), n++) : n && (e.splice(r, 1), n--);
        } if (t)
            for (; n--; n)
                e.unshift(".."); return e; } function r(e, t) { if (e.filter)
            return e.filter(t); for (var n = [], r = 0; r < e.length; r++)
            t(e[r], r, e) && n.push(e[r]); return n; } var i = /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/, a = function (e) { return i.exec(e).slice(1); }; t.resolve = function () { for (var t = "", i = !1, a = arguments.length - 1; a >= -1 && !i; a--) {
            var o = a >= 0 ? arguments[a] : e.cwd();
            if ("string" != typeof o)
                throw new TypeError("Arguments to path.resolve must be strings");
            o && (t = o + "/" + t, i = "/" === o.charAt(0));
        } return t = n(r(t.split("/"), function (e) { return !!e; }), !i).join("/"), (i ? "/" : "") + t || "."; }, t.normalize = function (e) { var i = t.isAbsolute(e), a = "/" === o(e, -1); return e = n(r(e.split("/"), function (e) { return !!e; }), !i).join("/"), e || i || (e = "."), e && a && (e += "/"), (i ? "/" : "") + e; }, t.isAbsolute = function (e) { return "/" === e.charAt(0); }, t.join = function () { var e = Array.prototype.slice.call(arguments, 0); return t.normalize(r(e, function (e, t) { if ("string" != typeof e)
            throw new TypeError("Arguments to path.join must be strings"); return e; }).join("/")); }, t.relative = function (e, n) { function r(e) { for (var t = 0; t < e.length && "" === e[t]; t++)
            ; for (var n = e.length - 1; n >= 0 && "" === e[n]; n--)
            ; return t > n ? [] : e.slice(t, n - t + 1); } e = t.resolve(e).substr(1), n = t.resolve(n).substr(1); for (var i = r(e.split("/")), a = r(n.split("/")), o = Math.min(i.length, a.length), s = o, u = 0; o > u; u++)
            if (i[u] !== a[u]) {
                s = u;
                break;
            } for (var l = [], u = s; u < i.length; u++)
            l.push(".."); return l = l.concat(a.slice(s)), l.join("/"); }, t.sep = "/", t.delimiter = ":", t.dirname = function (e) { var t = a(e), n = t[0], r = t[1]; return n || r ? (r && (r = r.substr(0, r.length - 1)), n + r) : "."; }, t.basename = function (e, t) { var n = a(e)[2]; return t && n.substr(-1 * t.length) === t && (n = n.substr(0, n.length - t.length)), n; }, t.extname = function (e) { return a(e)[3]; }; var o = "b" === "ab".substr(-1) ? function (e, t, n) { return e.substr(t, n); } : function (e, t, n) { return 0 > t && (t = e.length + t), e.substr(t, n); }; }).call(t, n(64)); }, function (e, t, n) {
            "use strict";
            function r(e, t) { var n = e.name(); if (S.LowLevelProxyNode.isInstance(t.lowLevel())) {
                if (S.LowLevelProxyNode.isInstance(e.lowLevel()))
                    return n;
                var r = t.root().lowLevel().unit(), i = r.project().namespaceResolver(), a = e.lowLevel().unit(), o = i.resolveNamespace(t.lowLevel().unit(), a);
                if (null != o) {
                    var s = o.namespace();
                    if (null != s)
                        return s + "." + n;
                }
            } if (e.lowLevel().unit() != t.lowLevel().unit())
                for (var u = t;;) {
                    if (u.lowLevel().includePath() || null == u.parent()) {
                        u.unitMap || (u.unitMap = {}, u.asElement().elements().forEach(function (e) { if (e.definition().key() == C.Universe10.UsesDeclaration) {
                            var t = e.attr("value");
                            if (t) {
                                var n = e.root().lowLevel().unit().resolve(t.value());
                                if (null != n) {
                                    var r = e.attr("key");
                                    r && (u.unitMap[n.absolutePath()] = r.value());
                                }
                            }
                        } }));
                        var l = u.unitMap[e.lowLevel().unit().absolutePath()];
                        if (l)
                            return l + "." + n;
                    }
                    if (!u.parent())
                        break;
                    u = u.parent();
                } return n; }
            function i(e) { var t = e; return t && t.valueName && t.toHighLevel && t.toHighLevel2; }
            function a(e) { var t = e; return t && t.isString && t.isFromKey && t.isEmbedded; }
            function o(e) { var t = D.newMap([D.newMapping(D.newScalar("example"), e.lowLevel().actual())]), n = D.newMapping(D.newScalar("types"), D.newMap([D.newMapping(D.newScalar("__AUX_TYPE__"), t)])), r = D.newMap([n]), i = new L.ASTNode(r, e.lowLevel().unit(), null, null, null), a = K.parseFromAST(new z(i, e)), o = K.toNominal(a.types()[0], function (e) { return null; }); return o; }
            function s(e) { return e.match(/^\s*#%RAML\s+(\d\.\d)\s*(\w*)\s*$/m); }
            function u(e) { var t = e.lowLevel() && e.lowLevel().unit() && e.lowLevel().unit().contents(); return null == t ? null : Q(t, e.lowLevel()).ptype; }
            function l(e) { if (null == e)
                return null; var t = e.contents(), n = e.ast(), r = Q(t, n), i = r.ptype, a = r.localUniverse, o = a.type(i); o || (o = a.type("Api")); var s = new J(n, null, o, null); s.setUniverse(a); var u = o && o.universe(); return u && "RAML10" == u.version() ? o.isAssignableFrom(N.universesInfo.Universe10.LibraryBase.name) || s.children() : s.children(), s; }
            function p(e, t) { if (t) {
                var n = t.root().lowLevel().unit();
                return n ? new j.PointOfViewValidationAcceptorImpl(e, t.root()) : { accept: function (t) { e.push(t); }, begin: function () { }, end: function () { }, acceptUnique: function (t) { for (var n = 0, r = e; n < r.length; n++) {
                        var i = r[n];
                        if (i.start == t.start && i.message == t.message)
                            return;
                    } this.accept(t); } };
            } }
            function c(e) { if (null != e.parent())
                return !1; var t = e.lowLevel().unit(); if (null == t)
                return !1; var n = t.contents(), r = s(n); return r.length < 3 ? !1 : "AnnotationTypeDeclaration" == r[2]; }
            function f(e, t, n) { var r = e.validationIssue; if (!r) {
                var i = e.issueCode || t, a = e.node || n, o = e.message || R.createIssue1(W.PLUGIN_REPORTS_AN_ERROR, { pluginId: t }, a, !1).message, s = e.isWarning;
                r = R.createIssue(i, o, a, s);
            } return r; }
            function m(e) { for (var t = [], n = T.getNodeValidationPlugins(), r = 0, i = n; r < i.length; r++) {
                var a = i[r], o = a.process(e);
                o && o.forEach(function (n) { var r = f(n, a.id(), e); t.push(r); });
            } return t; }
            function h(e) { for (var t = new Z(e), n = [], r = T.getNodeAnnotationValidationPlugins(), i = 0, a = r; i < a.length; i++) {
                var o = a[i], s = o.process(t);
                s && s.forEach(function (t) { var r = f(t, o.id(), e); n.push(r); });
            } return n; }
            function d(e, t) { var n = e.map(function (e) { return v(e, t); }), r = y(n); return r; }
            function y(e) { var t = [], n = {}; e.map(function (e) { n[JSON.stringify(e)] = e; }); for (var r = Object.keys(n), i = 0; i < r.length; i++)
                t.push(n[r[i]]); return t; }
            function v(e, t) { var n = e.node && e.node.lowLevel() && e.node.lowLevel().unit().lineMapper() || t.lowLevel().unit().lineMapper(), r = null; try {
                r = n.position(e.start);
            }
            catch (i) {
                console.warn(i);
            } var a = null; try {
                a = n.position(e.end);
            }
            catch (i) {
                console.warn(i);
            } var o; o = e.path ? e.path : e.node ? e.node.lowLevel().unit().path() : b.declRoot(t).lowLevel().unit().path(); var s = { code: e.code, message: e.message, path: o, range: { start: r, end: a }, isWarning: e.isWarning }; return e.extras && e.extras.length > 0 && (s.trace = e.extras.map(function (e) { return v(e, t); })), s; }
            var g = this && this.__extends || function (e, t) { function n() { this.constructor = e; } for (var r in t)
                t.hasOwnProperty(r) && (e[r] = t[r]); e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype, new n); }, A = n(39), T = n(9), E = n(70), S = n(41), N = A, _ = n(29), b = n(13), I = n(42), R = n(28), M = n(27), w = n(43), C = n(17), L = n(25), P = n(44), O = N, D = n(83), U = n(36), x = n(45), k = n(46), F = n(14), B = n(24), K = A.rt, V = n(33), j = n(2), W = n(60);
            t.qName = r;
            var q = function () { function e(e, t) { this._node = e, this._parent = t, this._implicit = !1, this.values = {}, e && e.setHighLevelParseResult(this); } return e.isInstance = function (t) { return null != t && t.getClassIdentifier && "function" == typeof t.getClassIdentifier && E.contains(t.getClassIdentifier(), e.CLASS_IDENTIFIER); }, e.prototype.getClassIdentifier = function () { var t = []; return t.concat(e.CLASS_IDENTIFIER); }, e.prototype.getKind = function () { return T.NodeKind.BASIC; }, e.prototype.asAttr = function () { return null; }, e.prototype.asElement = function () { return null; }, e.prototype.hashkey = function () { return this._hashkey || (this._hashkey = this.parent() ? this.parent().hashkey() + "/" + this.name() : this.name()), this._hashkey; }, e.prototype.root = function () { return this.parent() ? this.parent().root() : this; }, e.prototype.version = function () { return ""; }, e.prototype.getLowLevelStart = function () { return this.lowLevel().kind() === L.Kind.SCALAR ? this.lowLevel().start() : this.lowLevel().keyStart(); }, e.prototype.getLowLevelEnd = function () { return this.lowLevel().kind() === L.Kind.SCALAR ? this.lowLevel().end() : this.lowLevel().keyEnd(); }, e.prototype.isSameNode = function (e) { return e && e.lowLevel().actual() == this.lowLevel().actual() ? !0 : !1; }, e.prototype.checkContextValue = function (e, t, n) { var r = this.computedValue(e); return r && -1 != r.indexOf(t) ? !0 : t == r || "false" == t; }, e.prototype.printDetails = function (e) { return (e ? e : "") + "Unkown\n"; }, e.prototype.testSerialize = function (e) { return (e ? e : "") + "Unkown\n"; }, e.prototype.errors = function () { var e = [], t = p(e, this); return this.validate(t), e; }, e.prototype.markCh = function () { for (var e = this.lowLevel(); S.LowLevelProxyNode.isInstance(e);)
                e = e.originalNode(); return e = e._node ? e._node : e, e.markCh ? !0 : void (e.markCh = 1); }, e.prototype.unmarkCh = function () { for (var e = this.lowLevel(); S.LowLevelProxyNode.isInstance(e);)
                e = e.originalNode(); e = e._node ? e._node : e, delete e.markCh; }, e.prototype.validate = function (e) { R.validate(this, e); for (var t = 0, n = m(this); t < n.length; t++) {
                var r = n[t];
                e.accept(r);
            } for (var i = 0, a = h(this); i < a.length; i++) {
                var r = a[i];
                e.accept(r);
            } }, e.prototype.allowRecursive = function () { return !1; }, e.prototype.setComputed = function (e, t) { this.values[e] = t; }, e.prototype.computedValue = function (e) { var t = this.values[e]; if (!t) {
                if (this.parent())
                    return this.parent().computedValue(e);
                if (this.isElement()) {
                    var n = this.asElement().getMaster();
                    if (n)
                        return n.computedValue(e);
                }
            } return t; }, e.prototype.lowLevel = function () { return this._node; }, e.prototype.name = function () { var e = this.lowLevel().key(); return e ? e : ""; }, e.prototype.optional = function () { var e = this.lowLevel(), t = e.optional(); if (null != e.key())
                return t; var n = this.property(); if (!n || !n.isMultiValue())
                return t; for (var r = e.parent(); r && null == r.highLevelNode();) {
                if (r.kind() == D.Kind.MAPPING)
                    return r.optional();
                r = r.parent();
            } return t; }, e.prototype.parent = function () { return this._parent; }, e.prototype.setParent = function (e) { this._parent = e; }, e.prototype.isElement = function () { return !1; }, e.prototype.directChildren = function () { return this.children(); }, e.prototype.children = function () { return []; }, e.prototype.isAttached = function () { return null != this.parent(); }, e.prototype.isImplicit = function () { return this._implicit; }, e.prototype.isAttr = function () { return !1; }, e.prototype.isUnknown = function () { return !0; }, e.prototype.id = function () { var e = this; if (this.cachedId)
                return this.cachedId; if (this._parent) {
                var t = this.parent().id();
                t += "." + this.name();
                var n = this.parent().directChildren().filter(function (t) { return t.name() == e.name(); });
                if (n.length > 1) {
                    var r = n.indexOf(this);
                    t += "[" + r + "]";
                }
                return this.cachedId = t, t;
            } return this.cachedId = "", this.cachedId; }, e.prototype.localId = function () { return this.name(); }, e.prototype.resetIDs = function () { this.cachedId = null, this.cachedFullId = null; }, e.prototype.fullLocalId = function () { var e = this; if (this.cachedFullId)
                return this.cachedFullId; if (this._parent) {
                var t = ".";
                t += null != this.property() && F.isAnnotationsProperty(this.property()) ? this.lowLevel().key() : this.name();
                var n = this.parent().directChildren().filter(function (t) { return t.name() == e.name(); });
                if (n.length > 1) {
                    var r = n.indexOf(this);
                    t += "[" + r + "]";
                }
                return this.cachedFullId = t, t;
            } return this.cachedFullId = this.localId(), this.cachedFullId; }, e.prototype.property = function () { return null; }, e.prototype.reuseMode = function () { return this._reuseMode; }, e.prototype.setReuseMode = function (e) { this._reuseMode = e; }, e.prototype.isReused = function () { return this._isReused; }, e.prototype.setReused = function (e) { this._isReused = e, this.children().forEach(function (t) { return t.setReused(e); }); }, e.prototype.setJSON = function (e) { this._jsonCache = e; }, e.prototype.getJSON = function () { return this._jsonCache; }, e.CLASS_IDENTIFIER = "highLevelImpl.BasicASTNode", e; }();
            t.BasicASTNode = q;
            var H = function () { function e(e, t, n, r) { void 0 === r && (r = null), this.node = e, this._parent = t, this.kv = r, this._pr = n; } return e.isInstance = function (t) { return null != t && t.getClassIdentifier && "function" == typeof t.getClassIdentifier && E.contains(t.getClassIdentifier(), e.CLASS_IDENTIFIER); }, e.prototype.getClassIdentifier = function () { var t = []; return t.concat(e.CLASS_IDENTIFIER); }, e.prototype.valueName = function () { var e = null; return this.kv && (e = this.kv), e = this.node.key(), this._pr && this._pr.isAnnotation() && e && "(" == e.charAt(0) && (e = e.substring(1, e.length - 1)), e; }, e.prototype.children = function () { return this.node.children().map(function (t) { return new e(t, null, null); }); }, e.prototype.lowLevel = function () { return this.node; }, e.prototype.toHighLevel = function (e) { if (!e && this._parent && (e = this._parent), this._hl)
                return this._hl; var t = this.valueName(), n = e; if (S.LowLevelProxyNode.isInstance(this.node)) {
                var i = this.node.definingUnitSequence(), a = i && i[0] && i[0].highLevel().asElement(), o = a && a.lowLevel().unit().absolutePath();
                o == e.lowLevel().unit().absolutePath() ? a = e : o == e.root().lowLevel().unit().absolutePath() && (a = e.root()), n = a || n;
            } var s = b.referenceTargets(this._pr, n).filter(function (e) { return r(e, n) == t; }); if (s && s[0]) {
                var u = s[0].localType(), l = new J(this.node, e, u, this._pr);
                return this._pr && this._pr.childRestrictions().forEach(function (e) { l.setComputed(e.name, e.value); }), this._hl = l, l;
            } return null; }, e.prototype.toHighLevel2 = function (e) { !e && this._parent && (e = this._parent); var t = this.valueName(), n = b.referenceTargets(this._pr, e).filter(function (n) { return r(n, e) == t; }); if (n && n[0]) {
                var i = n[0].localType(), a = new J(this.node, e, i, this._pr);
                return this._pr && this._pr.childRestrictions().forEach(function (e) { a.setComputed(e.name, e.value); }), a;
            } if (this._pr.range()) {
                var a = new J(this.node.parent(), e, this._pr.range(), this._pr);
                return this._pr && this._pr.childRestrictions().forEach(function (e) { a.setComputed(e.name, e.value); }), a;
            } return null; }, e.prototype.resetHighLevelNode = function () { this._hl = null; }, e.CLASS_IDENTIFIER = "highLevelImpl.StructuredValue", e; }();
            t.StructuredValue = H, t.isStructuredValue = i;
            var Y = function (e) {
                function t(t, n, r, i, a) { void 0 === a && (a = !1), e.call(this, t, n), this._def = r, this._prop = i, this.fromKey = a; }
                return g(t, e), t.isInstance = function (e) { return null != e && e.getClassIdentifier && "function" == typeof e.getClassIdentifier && E.contains(e.getClassIdentifier(), t.CLASS_IDENTIFIER_ASTPropImpl); }, t.prototype.getClassIdentifier = function () { var n = e.prototype.getClassIdentifier.call(this); return n.concat(t.CLASS_IDENTIFIER_ASTPropImpl); }, t.prototype.definition = function () { return this._def; }, t.prototype.asAttr = function () { return this; }, t.prototype.errors = function () { var e = [], t = p(e, this); return this.parent().validate(t), e; }, t.prototype.isString = function () { return !this._def || this._def.key() !== C.Universe08.StringType && this._def.key() != C.Universe10.StringType ? !1 : !0; }, t.prototype.isAnnotatedScalar = function () { return this.property().isAnnotation() || this.property().isKey() ? !1 : this.lowLevel().isAnnotatedScalar(); }, t.prototype.annotations = function () { var e = this.lowLevel().children(), n = [], r = this.definition().universe().type(C.Universe10.Annotable.name); if (!r)
                    return n; for (var i = r.property("annotations"), a = 0; a < e.length; a++) {
                    var o = e[a], s = o.key();
                    if (null != s && "(" == s[0] && ")" == s[s.length - 1]) {
                        var u = new t(o, this.parent(), i.range(), i);
                        n.push(u);
                    }
                } return n; }, t.prototype.getKind = function () { return T.NodeKind.ATTRIBUTE; }, t.prototype.owningWrapper = function () { return { node: this.parent().wrapperNode(), property: this.name() }; }, t.prototype.patchType = function (e) { this._def = e; }, t.prototype.findReferenceDeclaration = function () { var e = this, t = b.referenceTargets(this.property(), this.parent()), n = this.value(); if (H.isInstance(n))
                    var i = n, a = i.valueName();
                else
                    var a = "" + n; var o = E.find(t, function (t) { return r(t, e.parent()) == a; }); return o; }, t.prototype.findReferencedValue = function () { var e = this.findReferenceDeclaration(); if (e) {
                    var t = e.attr("value"), n = e.definition().key();
                    if (n === C.Universe08.GlobalSchema) {
                        if (t) {
                            var r = t.value();
                            if (r) {
                                var i = R.isValid(this._def, this.parent(), r, t.property(), t);
                                return i;
                            }
                        }
                        return null;
                    }
                } return e; }, t.prototype.isElement = function () { return !1; }, t.prototype.property = function () { return this._prop; }, t.prototype.convertMultivalueToString = function (e) { for (var t = 0, n = 2; " " == e[n];)
                    t++, n++; var r = P.splitOnLines(e); return r = r.map(function (e) { return e.substring(t, e.length); }), r.join(""); }, t.prototype.overrideValue = function (e) { this._value = e; }, t.prototype.value = function () { return this._value ? this._value : (this._value = this.calcValue(), this._value); }, t.prototype.calcValue = function () {
                    if (this._computed)
                        return this.computedValue(this.property().nameId());
                    if (this.fromKey) {
                        var e = this.parent(), t = e.definition();
                        if ("RAML08" == t.universe().version())
                            return this._node.key();
                        if (F.isNameProperty(this.property()) && t.isAssignableFrom(C.Universe10.TypeDeclaration.name)) {
                            var n = e.attr("required");
                            if (n && null != n.value())
                                return this._node.optional() ? this._node.key() + "?" : this._node.key();
                        }
                        return this._node.key();
                    }
                    if (this.property().isAnnotation() && this._node.key() && "annotations" != this._node.key())
                        return new H(this._node, this.parent(), this._prop);
                    var r = null != this.property() && !(null == this.parent() || null == this.parent().definition() || F.isTypeOrSchemaProperty(this.property()) && F.isTypeDeclarationDescendant(this.parent().definition())) && F.isStringTypeType(this.property().range()), i = this._node.value(r);
                    if (this.property().isSelfNode() && (!i || L.ASTNode.isInstance(i)) && (i = this._node, 0 == i.children().length && (i = null)), L.ASTNode.isInstance(i) || S.LowLevelProxyNode.isInstance(i)) {
                        var a = !1;
                        if (this.property().range().hasStructure() || this._node.isAnnotatedScalar() && this._node.children().forEach(function (e) { "value" === e.key() && (i = e.value(r), a = !0); }), !a)
                            return this._sval ? this._sval : (this._sval = new H(i, this.parent(), this._prop), this._sval);
                    }
                    if ("string" == typeof i && P.isMultiLineValue(i)) {
                        var o = this.convertMultivalueToString(i);
                        return o;
                    }
                    return null == i && this._node.children().length > 0 && this.property() && (F.isTypeOrSchemaProperty(this.property()) || F.isItemsProperty(this.property())) && this.parent() && F.isTypeDeclarationDescendant(this.parent().definition()) ? new H(this._node, this.parent(), this._prop) : i;
                }, t.prototype.name = function () { return this._prop.nameId(); }, t.prototype.printDetails = function (e) { var t = this.definition().nameId(), n = this.property().range().nameId(), r = (e ? e : "") + (this.name() + " : " + t + "[" + n + "]  =  " + this.value()) + (this.property().isKey() && this.optional() ? "?" : "") + "\n"; if (H.isInstance(this.value())) {
                    var i = this.value().toHighLevel();
                    i && i.printDetails && (r += i.printDetails(e + "	"));
                } return r; }, t.prototype.testSerialize = function (e) { var t = this.definition().nameId(), n = (e ? e : "") + (this.name() + " : " + t + "  =  " + this.value()) + "\n"; if (H.isInstance(this.value())) {
                    var r = this.value().toHighLevel();
                    if (r && r.testSerialize)
                        n += r.testSerialize((e ? e : "") + "  ");
                    else {
                        var i = this.value().lowLevel(), a = i.dumpToObject(), o = JSON.stringify(a), s = "", u = o.split("\n");
                        u.forEach(function (t) { return s += (e ? e : "") + "  " + t + "\n"; }), n += s + "\n";
                    }
                } return n; }, t.prototype.isAttr = function () { return !0; }, t.prototype.isUnknown = function () { return !1; }, t.prototype.setValue = function (e) { I.setValue(this, e), this._value = null; }, t.prototype.setKey = function (e) { I.setKey(this, e), this._value = null; }, t.prototype.children = function () { return []; }, t.prototype.addStringValue = function (e) { I.addStringValue(this, e), this._value = null; }, t.prototype.addStructuredValue = function (e) { I.addStructuredValue(this, e), this._value = null; }, t.prototype.addValue = function (e) { if (!this.property().isMultiValue())
                    throw new Error(W.SETVALUE_ONLY_MULTI_VALUES_PROPERTIES.message); "string" == typeof e ? this.addStringValue(e) : this.addStructuredValue(e), this._value = null; }, t.prototype.isEmbedded = function () { var e = this.lowLevel().asMapping().key.value; return this.property().canBeValue() && e != this.property().nameId(); }, t.prototype.remove = function () { I.removeAttr(this); }, t.prototype.setValues = function (e) { I.setValues(this, e), this._value = null; }, t.prototype.isEmpty = function () { if (!this.property().isMultiValue())
                    throw new Error(W.ISEMPTY_ONLY_MULTI_VALUES_ATTRIBUTES.message); var e = this.parent(), t = (e.lowLevel(), e.attributes(this.name())); if (0 == t.length)
                    return !0; if (1 == t.length) {
                    var n = t[0].lowLevel();
                    return n.isMapping() && null == n.value() ? !0 : !1;
                } return !1; }, t.prototype.isFromKey = function () { return this.fromKey; }, t.CLASS_IDENTIFIER_ASTPropImpl = "highLevelImpl.ASTPropImpl", t;
            }(q);
            t.ASTPropImpl = Y, t.isASTPropImpl = a;
            var G = new _.BasicNodeBuilder;
            !function (e) { e[e.MERGE = 0] = "MERGE", e[e.AGGREGATE = 1] = "AGGREGATE"; }(t.OverlayMergeMode || (t.OverlayMergeMode = {}));
            var X = t.OverlayMergeMode, z = function (e) { function t(n, r) { e.call(this), this._node = n, this._highLevelRoot = r; var i = r.root(), a = i.getMaster(); if (a && this._node === r.lowLevel()) {
                var o = r.getMasterCounterPart();
                o && (this._toMerge = new t(o.lowLevel(), o));
            } } return g(t, e), t.isInstance = function (e) { return null != e && e.getClassIdentifier && "function" == typeof e.getClassIdentifier && E.contains(e.getClassIdentifier(), t.CLASS_IDENTIFIER_LowLevelWrapperForTypeSystem); }, t.prototype.getClassIdentifier = function () { var n = e.prototype.getClassIdentifier.call(this); return n.concat(t.CLASS_IDENTIFIER_LowLevelWrapperForTypeSystem); }, t.prototype.contentProvider = function () { var e = this._node && this._node.includeBaseUnit() && (this._node.includePath && this._node.includePath() ? this._node.includeBaseUnit().resolve(this._node.includePath()) : this._node.includeBaseUnit()); return new V.ContentProvider(e); }, t.prototype.key = function () { var e = this._node.key(); return this._node.optional() && (e += "?"), e; }, t.prototype.value = function () { var e = this._node.resolvedValueKind(); if (e === D.Kind.SEQ)
                return this.children().map(function (e) { return e.value(); }); if (e === D.Kind.MAP) {
                var t = this._node.dumpToObject(!1);
                return t[this.key()];
            } if (this._node.kind() == D.Kind.MAP) {
                var t = this._node.dumpToObject(!1);
                return t;
            } var n = this._node.value(); return n; }, t.prototype.children = function () { var e = this; if (this._children)
                return this._children; "uses" != this.key() || this._node.parent().parent() ? this._children = this._node.children().map(function (n) { return new t(n, e._highLevelRoot); }) : this._children = this._node.children().map(function (t) { return new $(t, e._highLevelRoot); }), this.childByKey = {}; for (var n = 0; n < this._children.length; n++) {
                var r = this._children[n];
                this.childByKey[r.key()] = r;
            } if (this._toMerge)
                for (var i = this._toMerge.children(), n = 0; n < i.length; n++) {
                    var r = i[n], a = this.childByKey[r.key()];
                    a ? a._toMerge = r : (this._children.push(r), this.childByKey[r.key()] = r);
                } return this._children; }, t.prototype.childWithKey = function (e) { return this._children || this.children(), this.childByKey[e]; }, t.prototype.kind = function () { var e = this._node.valueKind(); if (e == D.Kind.MAPPING || null === e)
                return K.NodeKind.MAP; if (e == D.Kind.MAP)
                return K.NodeKind.MAP; var t = this._node.kind(); return t == D.Kind.MAP ? K.NodeKind.MAP : e == D.Kind.SEQ ? K.NodeKind.ARRAY : (e == D.Kind.INCLUDE_REF || e == D.Kind.ANCHOR_REF) && this._node.children().length > 0 ? K.NodeKind.MAP : K.NodeKind.SCALAR; }, t.prototype.getSource = function () { if (!this._node)
                return null; var e = this._node.highLevelNode(); if (!e) {
                var t = this._node.start(), n = b.deepFindNode(this._highLevelRoot, t, t, !0, !1);
                return n && (this._node.setHighLevelParseResult(n), J.isInstance(n) && this._node.setHighLevelNode(n)), n;
            } return e; }, t.prototype.node = function () { return this._node; }, t.CLASS_IDENTIFIER_LowLevelWrapperForTypeSystem = "highLevelImpl.LowLevelWrapperForTypeSystem", t; }(A.SourceProvider);
            t.LowLevelWrapperForTypeSystem = z;
            var $ = function (e) { function t() { e.apply(this, arguments); } return g(t, e), t.prototype.children = function () { var e = this._node.unit().resolve(this.value()); return e && e.isRAMLUnit() && e.contents().trim().length > 0 ? new z(e.ast(), this._highLevelRoot).children() : []; }, t.prototype.anchor = function () { return this._node.actual(); }, t.prototype.childWithKey = function (e) { for (var t = this.children(), n = 0; n < t.length; n++)
                if (t[n].key() == e)
                    return t[n]; return null; }, t; }(z);
            t.UsesNodeWrapperFoTypeSystem = $, t.auxiliaryTypeForExample = o;
            var J = function (e) { function t(t, n, r, i) { e.call(this, t, n), this._def = r, this._prop = i, this._expanded = !1, this._allowQuestion = !1, this._subTypesCache = null, this._auxChecked = !1, this.overlayMergeMode = X.MERGE, t && t.setHighLevelNode(this), S.LowLevelProxyNode.isInstance(t) && (this._expanded = !0); } return g(t, e), t.isInstance = function (e) { return null != e && e.getClassIdentifier && "function" == typeof e.getClassIdentifier && E.contains(e.getClassIdentifier(), t.CLASS_IDENTIFIER_ASTNodeImpl); }, t.prototype.getClassIdentifier = function () { var n = e.prototype.getClassIdentifier.call(this); return n.concat(t.CLASS_IDENTIFIER_ASTNodeImpl); }, t.prototype.createIssue = function (e) { return R.toIssue(e, this); }, t.prototype.validate = function (t) { var n = this.definition().key(); if ((n == C.Universe10.Api || n == C.Universe08.Api || n == C.Universe10.Extension) && !this.isExpanded()) {
                var r = M.expandTraitsAndResourceTypes(this.wrapperNode()), i = r.highLevel();
                return i.resetChildren(), i.children(), i._expanded = !0, i.clearTypesCache(), void i.validate(t);
            } (n == C.Universe10.Overlay || n == C.Universe10.Extension) && this.clearTypesCache(), e.prototype.validate.call(this, t); }, t.prototype.clearTypesCache = function () { if (this._types = null, this.lowLevel()) {
                var e = this.lowLevel().actual();
                e.types = null;
            } }, t.prototype.types = function () { var e = this; if (!this._types) {
                if (this.parent() && this.definition().key() !== C.Universe10.Library)
                    return this.parent().types();
                var t = this.lowLevel().actual();
                if (t.types)
                    return t.types;
                var n = this.lowLevel().unit();
                if (n) {
                    var r = n.project();
                    if (n.absolutePath() != r.getMainUnitPath()) {
                        var i = r.getMainUnit();
                        if (i) {
                            var a = r.namespaceResolver(), o = a.unitModel(i).extensionSet();
                            if (!o[n.absolutePath()]) {
                                var s = i.highLevel().types();
                                if (s) {
                                    var u = a.resolveNamespace(i, n);
                                    if (u) {
                                        for (var l = u.namespaceSegments, p = s, c = 0; c < l.length;) {
                                            for (var f = void 0, m = c; m < l.length; m++) {
                                                var h = l.slice(c, m + 1).join(".");
                                                f = p.library(h), f && (c = m + 1, p = f);
                                            }
                                            if (null == f) {
                                                p = null;
                                                break;
                                            }
                                        }
                                        p && (this._types = p);
                                    }
                                }
                            }
                        }
                    }
                }
                this._types || (this._types = K.parseFromAST(new z(this.lowLevel(), this)), this._types.types().forEach(function (t) { var n = w.convertType(e, t); n.putExtra(A.USER_DEFINED_EXTRA, !0); })), t.types = this._types;
            } return this._types; }, t.prototype.setTypes = function (e) { this._types = e; }, t.prototype.parsedType = function () { if (!this._ptype) {
                if (this.property() && this.property().nameId() == C.Universe10.MethodBase.properties.body.name) {
                    var e = this.isParametrizedType();
                    this._ptype = K.parseTypeFromAST(this.name(), new z(this.lowLevel(), this), this.types(), !0, !1, !1, e);
                }
                else {
                    var t = this.property() && this.property().nameId() == C.Universe10.LibraryBase.properties.annotationTypes.name, n = !this.property() || this.property().nameId() == C.Universe10.LibraryBase.properties.types.name || this.property().nameId() == C.Universe10.LibraryBase.properties.schemas.name;
                    if (!t && null == this.parent()) {
                        var r = this.universe();
                        r && r.getOriginalTopLevelText() && "AnnotationTypeDeclaration" == r.getOriginalTopLevelText() && (t = !0);
                    }
                    this._ptype = K.parseTypeFromAST(this.name(), new z(this.lowLevel(), this), this.types(), !1, t, n);
                }
                this.property() && F.isTypesProperty(this.property()) && this.parent() && F.isApiType(this.parent().definition()) && this._ptype.putExtra && this._ptype.putExtra(A.DEFINED_IN_TYPES_EXTRA, !0);
                var i = this._ptype;
                i.putExtra(A.USER_DEFINED_EXTRA, !0), this._ptype.putExtra(A.SOURCE_EXTRA, this);
            } return this._ptype; }, t.prototype.isParametrizedType = function () { var e = !1, t = this.attr(C.Universe10.TypeDeclaration.properties.type.name); if (t) {
                var n = t.value();
                if ("string" == typeof n && n.indexOf("<<") >= 0)
                    for (var r = this.parent(); null != r;) {
                        if (F.isResourceTypeType(r.definition()) || F.isTraitType(r.definition())) {
                            e = !0;
                            break;
                        }
                        r = r.parent();
                    }
            } return e; }, t.prototype.localType = function () { return w.typeFromNode(this); }, t.prototype.patchProp = function (e) { this._prop = e; }, t.prototype.getKind = function () { return T.NodeKind.NODE; }, t.prototype.wrapperNode = function () { if (!this._wrapperNode) {
                if (F.isExampleSpecType(this.definition())) {
                    var e = o(this), t = U.examplesFromNominal(e, this, !0, !1);
                    return t[0];
                }
                var n = this.definition() && this.definition().universe();
                n && "RAML10" == n.version() ? this.definition() && this.definition().isAssignableFrom(N.universesInfo.Universe10.LibraryBase.name) || this.children() : this.children(), this._wrapperNode = this.buildWrapperNode();
            } return this._wrapperNode; }, t.prototype.asElement = function () { return this; }, t.prototype.buildWrapperNode = function () { var e = this.definition().universe().version(); return "RAML10" == e ? x.buildWrapperNode(this) : "RAML08" == e ? k.buildWrapperNode(this) : null; }, t.prototype.propertiesAllowedToUse = function () { var e = this; return this.definition().allProperties().filter(function (t) { return e.isAllowedToUse(t); }); }, t.prototype.isAllowedToUse = function (e) { var t = this, n = !0; return e.getAdapter(O.RAMLPropertyService).isSystem() ? !1 : (e.getContextRequirements().forEach(function (e) { if (-1 != e.name.indexOf("("))
                return !0; var r = t.computedValue(e.name); r ? n = n && r == e.value : e.value && (n = !1); }), n); }, t.prototype.allowRecursive = function () { return this.definition().getAdapter(O.RAMLService).isUserDefined() ? !0 : !1; }, t.prototype.setWrapperNode = function (e) { this._wrapperNode = e; }, t.prototype.setAssociatedType = function (e) { this._associatedDef = e; }, t.prototype.associatedType = function () { return this._associatedDef; }, t.prototype.knownIds = function () { return this.isAuxilary(), this._knownIds ? this._knownIds : {}; }, t.prototype.findById = function (e) { var t = this, n = this.root(); if (n != this)
                return n.findById(e); if (!this._knownIds) {
                this._knownIds = {};
                var r = b.allChildren(this);
                r.forEach(function (e) { return t._knownIds[e.id()] = e; });
            } if (this.isAuxilary()) {
                if (!this._slaveIds) {
                    this._slaveIds = {}, this._slaveIds[this.id()] = this;
                    var r = b.allChildren(this);
                    r.forEach(function (e) { return t._slaveIds[e.id()] = e; });
                }
                var i = this._slaveIds[e];
                if (i)
                    return i;
            } return this._knownIds[e]; }, t.prototype.isAuxilary = function () { if (this._isAux)
                return !0; if (this._auxChecked)
                return !1; this._auxChecked = !0; var e = this.getMaster(); return e ? (this._isAux = !0, this.initilizeKnownIDs(e), !0) : !1; }, t.prototype.initilizeKnownIDs = function (e) { var t = this; this._knownIds = {}; var n = b.allChildren(e); n.forEach(function (e) { return t._knownIds[e.id()] = e; }), this._knownIds[""] = e; }, t.prototype.getMaster = function () { if (this.masterApi)
                return this.masterApi; var e = this.calculateMasterByRef(); return e && e.setSlave(this), e; }, t.prototype.overrideMaster = function (e) { this.masterApi = e, this.resetAuxilaryState(), e && e.setSlave(this); }, t.prototype.setSlave = function (e) { this.slave = e; }, t.prototype.setMergeMode = function (e) { this.overlayMergeMode = e, this.resetAuxilaryState(); }, t.prototype.getMergeMode = function () { return this.overlayMergeMode; }, t.prototype.calculateMasterByRef = function () { var e = this.lowLevel().unit(); if (!e)
                return null; var t = e.getMasterReferenceNode(); if (!t || !t.value())
                return null; var n = this.lowLevel(); if (n.master)
                return n.master; var r = t.value(), i = this.lowLevel().unit().project().resolve(this.lowLevel().unit().path(), r); if (!i)
                return null; var a = i.expandedHighLevel(); return a.setMergeMode(this.overlayMergeMode), n.master = a, a; }, t.prototype.resetAuxilaryState = function () { this._isAux = !1, this._auxChecked = !1, this._knownIds = null, this.clearChildrenCache(); }, t.prototype.printDetails = function (e) { var t = ""; e || (e = ""); var n = this.definition().nameId(), r = this.property() ? this.property().range().nameId() : "", i = this.property() ? this.property().nameId() : ""; return t += e + n + "[" + r + "] <--- " + i + "\n", this.children().forEach(function (n) { t += n.printDetails(e + "	"); }), t; }, t.prototype.testSerialize = function (e) { var t = ""; e || (e = ""); var n = this.definition().nameId(), r = this.property() ? this.property().nameId() : ""; return t += e + n + " <-- " + r + "\n", this.children().forEach(function (n) { n.testSerialize && (t += n.testSerialize(e + "  ")); }), t; }, t.prototype.getExtractedChildren = function () { var e = this.root(); if (e.isAuxilary()) {
                if (e._knownIds) {
                    var t = e._knownIds[this.id()];
                    if (t) {
                        var n = t.children();
                        return n;
                    }
                }
                return [];
            } return []; }, t.prototype.getMasterCounterPart = function () { var e = this.root(); if (e.isAuxilary()) {
                if (e._knownIds) {
                    var t = e._knownIds[this.id()];
                    return t;
                }
                return null;
            } return null; }, t.prototype.getSlaveCounterPart = function () { var e = this.root(); return e.slave ? e.slave.findById(this.id()) : null; }, t.prototype.getLastSlaveCounterPart = function () { var e = this.root(), t = e.slave; if (null == t)
                return null; for (; null != t.slave;)
                t = t.slave; return "" == this.id() ? t : t.findById(this.id()); }, t.prototype.getExtractedLowLevelChildren = function (e) { var t = this.root(); if (t.isAuxilary()) {
                if (t._knownLowLevelIds) {
                    var n = t._knownLowLevelIds[this.id()];
                    if (n)
                        return n.children();
                }
                return [];
            } return []; }, t.prototype.allowsQuestion = function () { return this._allowQuestion || this.definition().getAdapter(O.RAMLService).getAllowQuestion(); }, t.prototype.findReferences = function () { var e = this, t = []; b.refFinder(this.root(), this, t), t.length > 1 && (t = t.filter(function (t) { return t != e && t.parent() != e; })); var n = []; return t.forEach(function (e) { E.find(n, function (t) { return t == e; }) || n.push(e); }), n; }, t.prototype.setNamePatch = function (e) { this._patchedName = e; }, t.prototype.isNamePatch = function () { return this._patchedName; }, t.prototype.name = function () { if (this._patchedName)
                return this._patchedName; var t = E.find(this.directChildren(), function (e) { return e.property() && e.property().getAdapter(O.RAMLPropertyService).isKey(); }); if (t && Y.isInstance(t)) {
                var n = null, r = this.definition(), i = r.universe().version();
                if (r && "RAML10" == i && t.isFromKey()) {
                    var a = this._node.key();
                    n = this._node.optional() ? a + "?" : a;
                }
                else
                    n = t.value();
                return n;
            } return e.prototype.name.call(this); }, t.prototype.findElementAtOffset = function (e) { return this._findNode(this, e, e); }, t.prototype.isElement = function () { return !0; }, t.prototype.universe = function () { return this._universe ? this._universe : this.definition().universe(); }, t.prototype.setUniverse = function (e) { this._universe = e; }, t.prototype._findNode = function (e, t, n) { var r = this; if (null == e)
                return null; if (e.lowLevel() && e.lowLevel().start() <= t && e.lowLevel().end() >= n) {
                var i = e;
                return e.elements().forEach(function (a) { if (a.lowLevel().unit() == e.lowLevel().unit()) {
                    var o = r._findNode(a, t, n);
                    o && (i = o);
                } }), i;
            } return null; }, t.prototype.isStub = function () { return !this.lowLevel().unit() || this.lowLevel().unit().isStubUnit(); }, t.prototype.add = function (e) { I.addToNode(this, e); }, t.prototype.remove = function (e) { I.removeNodeFrom(this, e); }, t.prototype.dump = function (e) { return this._node.dump(); }, t.prototype.patchType = function (e) { this._def = e; this._associatedDef; this._associatedDef = null, this._children = null, this._mergedChildren = null; }, t.prototype.children = function () { var e = this.lowLevel(); return e && e.isValueInclude && e.isValueInclude() && B.isWaitingFor(e.includePath()) ? (this._children = null, []) : this._children ? this._mergedChildren ? this._mergedChildren : (this._mergedChildren = this.mergeChildren(this._children, this.getExtractedChildren()), this._mergedChildren) : this._node ? (this._children = G.process(this, this._node.children()), this._children = this._children.filter(function (e) { return null != e; }), this.mergeChildren(this._children, this.getExtractedChildren())) : []; }, t.prototype.mergeChildren = function (e, t) { var n = this, r = this.root(); if (r.overlayMergeMode == X.AGGREGATE)
                return e.concat(t); if (r.overlayMergeMode == X.MERGE) {
                var i = [];
                return e.forEach(function (e) { var r = E.find(t, function (t) { return t.fullLocalId() == e.fullLocalId(); }); r ? n.mergeChild(i, e, r) : i.push(e); }), t.forEach(function (t) { var n = E.find(e, function (e) { return t.fullLocalId() == e.fullLocalId(); }); n || i.push(t); }), i;
            } return null; }, t.prototype.mergeLowLevelChildren = function (e, t) { var n = this, r = this.root(); if (r.overlayMergeMode == X.AGGREGATE)
                return e.concat(t); if (r.overlayMergeMode == X.MERGE) {
                var i = [];
                return e.forEach(function (e) { var r = E.find(t, function (t) { return t.key() == e.key(); }); r ? n.mergeLowLevelChild(i, e, r) : i.push(e); }), t.forEach(function (t) { var n = E.find(e, function (e) { return t.key() == e.key(); }); n || i.push(t); }), i;
            } return null; }, t.prototype.mergeLowLevelChild = function (e, t, n) { return t.kind() != n.kind() ? (e.push(t), void e.push(n)) : void e.push(t); }, t.prototype.mergeChild = function (e, t, n) { return t.getKind() != n.getKind() ? (e.push(t), void e.push(n)) : t.getKind() == T.NodeKind.NODE ? void e.push(t) : t.getKind() == T.NodeKind.ATTRIBUTE ? void e.push(t) : t.getKind() == T.NodeKind.BASIC ? (e.push(t), void e.push(n)) : void 0; }, t.prototype.directChildren = function () { return this._children ? this._children : this._node ? (this._children = G.process(this, this._node.children()), this._mergedChildren = null, this._children) : []; }, t.prototype.resetChildren = function () { this._children = null, this._mergedChildren = null; }, t.prototype.isEmptyRamlFile = function () { var e = this.lowLevel().root(); return e.isScalar(); }, t.prototype.initRamlFile = function () { I.initEmptyRAMLFile(this); }, t.prototype.createAttr = function (e, t) { I.createAttr(this, e, t); }, t.prototype.isAttr = function () { return !1; }, t.prototype.isUnknown = function () { return !1; }, t.prototype.value = function () { return this._node.value(); }, t.prototype.valuesOf = function (e) { var t = this._def.property(e); return null != t ? this.elements().filter(function (e) { return e.property() == t; }) : []; }, t.prototype.attr = function (e) { return E.find(this.attrs(), function (t) { return t.name() == e; }); }, t.prototype.attrOrCreate = function (e) { var t = this.attr(e); return t || this.createAttr(e, ""), this.attr(e); }, t.prototype.attrValue = function (e) { var t = this.attr(e); return t ? t.value() : null; }, t.prototype.attributes = function (e) { return E.filter(this.attrs(), function (t) { return t.name() == e; }); }, t.prototype.attrs = function () { var e = this.children().filter(function (e) { return e.isAttr(); }); if (this._patchedName) {
                var t = E.find(this.definition().allProperties(), function (e) { return e.getAdapter(O.RAMLPropertyService).isKey(); });
                if (t) {
                    var n = new Y(this.lowLevel(), this, t.range(), t, !0);
                    return n._value = this._patchedName, [n].concat(e);
                }
            } return e; }, t.prototype.elements = function () { return this.children().filter(function (e) { return !e.isAttr() && !e.isUnknown(); }); }, t.prototype.element = function (e) { var t = this.elementsOfKind(e); return t.length > 0 ? t[0] : null; }, t.prototype.elementsOfKind = function (e) { var t = this.elements().filter(function (t) { return t.property().nameId() == e; }); return t; }, t.prototype.definition = function () { return this._def; }, t.prototype.property = function () { return this._prop; }, t.prototype.isExpanded = function () { return this._expanded; }, t.prototype.copy = function () { return new t(this.lowLevel().copy(), this.parent(), this.definition(), this.property()); }, t.prototype.clearChildrenCache = function () { this._children = null, this._mergedChildren = null; }, t.prototype.optionalProperties = function () { var e = this.definition(); if (null == e)
                return []; var t = [], n = {}, r = this.lowLevel().children(); r.forEach(function (e) { e.optional() && (n[e.key()] = !0); }); var i = e.allProperties(); return i.forEach(function (e) { var r = e; n[r.nameId()] && t.push(r.nameId()); }), t; }, t.prototype.setReuseMode = function (e) { this._reuseMode = e, this._children && this.lowLevel().valueKind() != D.Kind.SEQ && this._children.forEach(function (t) { return t.setReuseMode(e); }); }, t.prototype.reusedNode = function () { return this._reusedNode; }, t.prototype.setReusedNode = function (e) { this._reusedNode = e; }, t.prototype.resetRuntimeTypes = function () { delete this._associatedDef, this.elements().forEach(function (e) { return e.resetRuntimeTypes(); }); }, t.CLASS_IDENTIFIER_ASTNodeImpl = "highLevelImpl.ASTNodeImpl", t; }(q);
            t.ASTNodeImpl = J, t.universeProvider = n(38);
            var Q = function (e, n) { var r = s(e), i = r && r[1] || "", a = r && r.length > 2 && r[2] || "Api", o = r && r.length > 2 && r[2], u = "1.0" == i ? new N.Universe(null, "RAML10", t.universeProvider("RAML10"), "RAML10") : new N.Universe(null, "RAML08", t.universeProvider("RAML08")); return "API" == a ? a = "Api" : "NamedExample" == a ? a = "ExampleSpec" : "DataType" == a ? a = "TypeDeclaration" : "SecurityScheme" == a ? a = "AbstractSecurityScheme" : "AnnotationTypeDeclaration" == a && (a = "TypeDeclaration"), u.setOriginalTopLevelText(o), u.setTopLevel(a), u.setTypedVersion(i), { ptype: a, localUniverse: u }; };
            t.ramlFirstLine = s, t.getFragmentDefenitionName = u, t.fromUnit = l, t.createBasicValidationAcceptor = p, t.isAnnotationTypeFragment = c;
            var Z = function () { function e(e) { this._node = e; } return e.prototype.kind = function () { return "AnnotatedNode"; }, e.prototype.annotationsMap = function () { var e = this; return this._annotationsMap || (this._annotationsMap = {}, this.annotations().forEach(function (t) { var n = t.name(), r = n.lastIndexOf("."); r >= 0 && (n = n.substring(r + 1)), e._annotationsMap[n] = t; })), this._annotationsMap; }, e.prototype.annotations = function () { if (!this._annotations) {
                var e = [];
                this._node.isElement() ? e = this._node.asElement().attributes(N.universesInfo.Universe10.Annotable.properties.annotations.name) : this._node.isAttr() && (e = this._node.asAttr().annotations()), this._annotations = e.map(function (e) { return new ee(e); });
            } return this._annotations; }, e.prototype.value = function () { if (this._node.isElement())
                return this._node.asElement().wrapperNode().toJSON(); if (this._node.isAttr()) {
                var e = this._node.asAttr().value();
                return H.isInstance(e) ? e.lowLevel().dump() : e;
            } return this._node.lowLevel().dump(); }, e.prototype.name = function () { return this._node.name(); }, e.prototype.entry = function () { return this._node; }, e; }();
            t.AnnotatedNode = Z;
            var ee = function () { function e(e) { this.attr = e; } return e.prototype.name = function () { return this.attr.value().valueName(); }, e.prototype.value = function () { var e = this.attr.value(); if (H.isInstance(e)) {
                var t = e.lowLevel().dumpToObject(), n = Object.keys(t)[0];
                return t[n];
            } return e; }, e.prototype.definition = function () { var e = this.attr.parent(), t = this.name(), n = b.referenceTargets(this.attr.property(), e).filter(function (n) { return r(n, e) == t; }); return 0 == n.length ? null : n[0].parsedType(); }, e; }();
            t.AnnotationInstance = ee, t.applyNodeValidationPlugins = m, t.applyNodeAnnotationValidationPlugins = h, t.toParserErrors = d;
        }, function (e, t, n) {
            "use strict";
            var r = n(39);
            e.exports = r.universesInfo;
        }, function (e, t, n) {
            "use strict";
            function r(e, t, n) { var r = e.definition().property(t); if (!r)
                return null; var i = r.range(), a = m(i, r, n); return a; }
            function i(e, t, n, r) { var i = y.newMap(n.map(function (e) { return y.newMapping(y.newScalar(e.key), y.newScalar(e.value)); })), a = new h.ASTNode(i, r ? r.lowLevel().unit() : null, r ? r.lowLevel() : null, null, null); return new d.StructuredValue(a, r, r ? r.definition().property(e) : null, t); }
            function a(e, t, n) { var r = e.definition().property(t); if (!r)
                return null; var i = r.range(), a = e.lowLevel().unit().stub(), o = m(i, r, n, a); return o.isInEdit = !0, o.lowLevel()._unit = a, o._parent = e.copy(), o._parent.lowLevel()._unit = a, o; }
            function o(e, t) { return a(e, "resources", t); }
            function s(e, t) { return a(e, "methods", t); }
            function u(e, t) { return a(e, "responses", t); }
            function l(e, t) { return a(e, "body", t); }
            function p(e, t) { return a(e, "uriParameters", t); }
            function c(e, t) { return a(e, "queryParameters", t); }
            function f(e, t) { var n = h.createMapping(e.nameId(), t), r = new d.ASTPropImpl(n, null, e.range(), e); return r; }
            function m(e, t, n, r) { void 0 === n && (n = null); var i = h.createNode(n ? n : "key", null, r), a = new d.ASTNodeImpl(i, null, e, t); return i.unit() || (i._unit = r), a.children(), a; }
            var h = n(25), d = n(16), y = n(83);
            t.createStub0 = r, t.genStructuredValue = i, t.createStub = a, t.createResourceStub = o, t.createMethodStub = s, t.createResponseStub = u, t.createBodyStub = l, t.createUriParameterStub = p, t.createQueryParameterStub = c, t.createAttr = f, t.createStubNode = m;
        }, function (e, t, n) {
            "use strict";
            var r = n(70), i = n(44), a = n(22), o = n(60), s = function () { function e() { } return e.prototype.generateText = function (e) { var t = this, n = JSON.parse(e), r = n.items; if (!r)
                return ""; var i = "", a = r instanceof Array ? r : [r]; return i += "types:\n", a.forEach(function (e) { i += "  - " + e.title + ":\n", i += t.generateObj(e, 3); }), i; }, e.prototype.generateObj = function (e, t) { var n = ""; if (n += i.indent(t, "type: " + e.type) + "\n", e.properties) {
                n += i.indent(t, "properties:\n");
                for (var r in e.properties) {
                    var a = e.properties[r];
                    n += i.indent(t + 1, r + ":\n"), n += "object" == a.type ? this.generateObj(a, t + 2) : i.indent(t + 2, "type: " + a.type) + "\n";
                }
                return n;
            } }, e.prototype.generateTo = function (e, t, n) { var r = this, i = JSON.parse(t), o = i.items; if (o) {
                var s = o instanceof Array ? o : [o], u = [];
                return s.forEach(function (t) { var n = new a.ObjectTypeDeclarationImpl(t.title); r.generateObjTo(n, t), new a.BasicSecuritySchemeImpl(e).addToProp(n, "types"), u.push(t.title); }), u;
            } i.title && (n = i.title); var l = new a.ObjectTypeDeclarationImpl(n); return this.generateObjTo(l, i), new a.BasicSecuritySchemeImpl(e).addToProp(l, "types"), [n]; }, e.prototype.generateObjTo = function (e, t) { if (e.setType(t.type), t.properties)
                for (var n in t.properties) {
                    var r = t.properties[n], i = this.makeTypeField(n, r);
                    "array" == r.type, e.addToProp(i, "properties");
                } }, e.prototype.makeTypeField = function (e, t) { var n = this.makeType(e, t.type); if (t.type && n.setType(t.type), "number" == t.type) {
                var r = n;
                void 0 != t.minimum && r.setMinimum(t.minimum), void 0 != t.maximum && r.setMaximum(t.maximum);
            } if ("array" == t.type) {
                var i = t.items.type;
                n.setType(i + "[]");
                var a = n;
                void 0 != t.minItems && a.setMinItems(t.minItems), void 0 != t.maxItems && a.setMaxItems(t.maxItems), void 0 != t.uniqueItems && a.setUniqueItems(t.uniqueItems);
            } return "object" == t.type && this.generateObjTo(n, t), n; }, e.prototype.makeType = function (e, t) { return "number" == t ? new a.NumberTypeDeclarationImpl(e) : "string" == t ? new a.StringTypeDeclarationImpl(e) : "array" == t ? new a.ArrayTypeDeclarationImpl(e) : new a.ObjectTypeDeclarationImpl(e); }, e.prototype.generateItemsTo = function (e, t) { var n = t.items; if (n) {
                var r = n instanceof Array ? n : [n];
                r.forEach(function (e) { });
            } }, e; }();
            t.SchemaToModelGenerator = s;
            var u = function () { function e() { } return e.prototype.generateSchema = function (e) { var t = this.generateType(e); return t.$schema = "http://json-schema.org/draft-04/schema#", t; }, e.prototype.isSimpleType = function (e) { return "string" == e || "number" == e || "boolean" == e || "object" == e; }, e.prototype.generateType = function (e) { var t = this.allTypes(e), n = {}; n.title = e.attrValue("name"); if (e.attrValue("type")) {
                var i = e.attributes("type"), a = !1, s = !1;
                for (var u in i) {
                    var l = i[u].value(), p = i[u].lowLevel();
                    if (n.type = "", p.isValueInclude()) {
                        var c = JSON.parse(l);
                        n.type = "object", n.properties = c.properties;
                    }
                    else if (this.isSimpleType(l)) {
                        if (n.type = l, s = !0, a)
                            throw new Error(o.COULD_NOT_MIX_TYPES_INHERITANCE.message);
                    }
                    else {
                        var f = this.resolveType(e, l);
                        if (f) {
                            var m = this.generateTypeExp(l, t);
                            if (n.properties ? r.extend(n.properties, m.properties) : n.properties = m.properties, n.type = "object", a = !0, s)
                                throw new Error(o.COULD_NOT_MIX_TYPES_INHERITANCE.message);
                        }
                        else {
                            var m = this.generateTypeExp(l, t);
                            n.type = "object", a = !0, m.anyOf && (n.anyOf = m.anyOf);
                        }
                    }
                }
            }
            else
                n.type = "object"; var h = this.generateProperties(e); return n.properties ? r.extend(n.properties, h) : n.properties = h, n; }, e.prototype.makeUnion = function (e, t) { var n = this, r = []; return e.forEach(function (e) { e = e.trim(), t[e] ? r.push({ type: "object", properties: n.generateType(t[e]).properties }) : r.push({ type: e }); }), r; }, e.prototype.generateTypeExp = function (e, t) { var n = {}; if (i.endsWith(e, "[]"))
                n.type = "array", n.items = { type: e.substring(0, e.length - 2) };
            else if (e.indexOf("|") > 0) {
                var r = e.split("|");
                n.anyOf = this.makeUnion(r, t);
            }
            else if (t[e]) {
                var a = this.generateType(t[e]);
                n.type = "object", n.properties = a.properties;
            }
            else
                n.type = e; return n; }, e.prototype.allTypes = function (e) { var t = e.root(), n = t.elementsOfKind("types"), r = {}; return n.forEach(function (e) { r[e.name()] = e; }), r; }, e.prototype.resolveType = function (e, t) { var n = this.allTypes(e); return n[t]; }, e.prototype.generateProperty = function (e, t) { var n = this, i = this.allTypes(e), a = {}, o = e.definition().allProperties(); o.forEach(function (t) { if ("name" != t.nameId()) {
                var o = e.attrValue(t.nameId());
                if (null != o && void 0 != o && "undefined" != o)
                    if ("type" == t.nameId()) {
                        var s = n.generateTypeExp(o, i);
                        r.extend(a, s);
                    }
                    else if ("enum" == t.nameId()) {
                        var u = e.attributes("enum"), l = u.map(function (e) { return e.value(); });
                        a["enum"] = l;
                    }
                    else
                        a[t.nameId()] = o;
            } }), t && (a.required = !1); var s = (e.elements(), this.generateProperties(e)); return Object.getOwnPropertyNames(s).length > 0 && (a.properties = s), a; }, e.prototype.generateProperties = function (e) { var t = this, n = {}, r = e.elements(), i = !0; return r.forEach(function (e) { var r = e.attrValue("name"); if ("string" == typeof r) {
                r = r.trim();
                var a = e.optional();
                n[r] = t.generateProperty(e, a), i = !1;
            } }), n; }, e; }();
            t.ModelToSchemaGenerator = u;
        }, function (e, t, n) {
            "use strict";
            function r(e) { return new u.TypeDeclarationImpl(e); }
            function i(e) { return new u.ObjectTypeDeclarationImpl(e); }
            function a(e, t) { e.setSchema(t); }
            function o(e, t) { var n = (l.getUniverse("RAML10").type(l.universesInfo.Universe10.ExampleSpec.name), l.universesInfo.Universe10.TypeDeclaration.properties.example.name), r = e.highLevel(), i = r.lowLevel(), a = r.children().filter(function (e) { return e.lowLevel().key() == n; }), o = p.createNode(n); c.setAttr(o, t), a.length > 0 && (c.removeNode(i, a[0].lowLevel()), a[0]._node = o, c.insertNode(i, o)), r.createAttr && r.createAttr(n, t); }
            function s(e, t) { e.add(t); }
            var u = n(22), l = n(39), p = n(25), c = n(10);
            t.createTypeDeclaration = r, t.createObjectTypeDeclaration = i, t.setTypeDeclarationSchema = a, t.setTypeDeclarationExample = o, t.addChild = s;
        }, function (e, t, n) {
            !function (t) {
                function n() { }
                function r(e, t) { return function () { e.apply(t, arguments); }; }
                function i(e) { if ("object" != typeof this)
                    throw new TypeError("Promises must be constructed via new"); if ("function" != typeof e)
                    throw new TypeError("not a function"); this._state = 0, this._handled = !1, this._value = void 0, this._deferreds = [], p(e, this); }
                function a(e, t) { for (; 3 === e._state;)
                    e = e._value; return 0 === e._state ? void e._deferreds.push(t) : (e._handled = !0, void f(function () { var n = 1 === e._state ? t.onFulfilled : t.onRejected; if (null === n)
                    return void (1 === e._state ? o : s)(t.promise, e._value); var r; try {
                    r = n(e._value);
                }
                catch (i) {
                    return void s(t.promise, i);
                } o(t.promise, r); })); }
                function o(e, t) { try {
                    if (t === e)
                        throw new TypeError("A promise cannot be resolved with itself.");
                    if (t && ("object" == typeof t || "function" == typeof t)) {
                        var n = t.then;
                        if (t instanceof i)
                            return e._state = 3, e._value = t, void u(e);
                        if ("function" == typeof n)
                            return void p(r(n, t), e);
                    }
                    e._state = 1, e._value = t, u(e);
                }
                catch (a) {
                    s(e, a);
                } }
                function s(e, t) { e._state = 2, e._value = t, u(e); }
                function u(e) { 2 === e._state && 0 === e._deferreds.length && f(function () { e._handled || m(e._value); }); for (var t = 0, n = e._deferreds.length; n > t; t++)
                    a(e, e._deferreds[t]); e._deferreds = null; }
                function l(e, t, n) { this.onFulfilled = "function" == typeof e ? e : null, this.onRejected = "function" == typeof t ? t : null, this.promise = n; }
                function p(e, t) { var n = !1; try {
                    e(function (e) { n || (n = !0, o(t, e)); }, function (e) { n || (n = !0, s(t, e)); });
                }
                catch (r) {
                    if (n)
                        return;
                    n = !0, s(t, r);
                } }
                var c = setTimeout, f = "function" == typeof setImmediate && setImmediate || function (e) {
                    c(e, 0);
                }, m = function (e) { "undefined" != typeof console && console && console.warn("Possible Unhandled Promise Rejection:", e); };
                i.prototype["catch"] = function (e) { return this.then(null, e); }, i.prototype.then = function (e, t) { var r = new this.constructor(n); return a(this, new l(e, t, r)), r; }, i.all = function (e) { var t = Array.prototype.slice.call(e); return new i(function (e, n) { function r(a, o) { try {
                    if (o && ("object" == typeof o || "function" == typeof o)) {
                        var s = o.then;
                        if ("function" == typeof s)
                            return void s.call(o, function (e) { r(a, e); }, n);
                    }
                    t[a] = o, 0 === --i && e(t);
                }
                catch (u) {
                    n(u);
                } } if (0 === t.length)
                    return e([]); for (var i = t.length, a = 0; a < t.length; a++)
                    r(a, t[a]); }); }, i.resolve = function (e) { return e && "object" == typeof e && e.constructor === i ? e : new i(function (t) { t(e); }); }, i.reject = function (e) { return new i(function (t, n) { n(e); }); }, i.race = function (e) { return new i(function (t, n) { for (var r = 0, i = e.length; i > r; r++)
                    e[r].then(t, n); }); }, i._setImmediateFn = function (e) { f = e; }, i._setUnhandledRejectionFn = function (e) { m = e; }, "undefined" != typeof e && e.exports ? e.exports = i : t.Promise || (t.Promise = i);
            }(this);
        }, function (e, t, n) {
            "use strict";
            function r(e) { var t = J.getUniverse("RAML10"), n = t.type("Api"), r = $.createStubNode(n, null, e); return r; }
            function i(e) { var t = J.getUniverse("RAML10"), n = t.type("LibraryBase"), r = $.createStubNode(n, null, e); return r; }
            function a(e) { var t = J.getUniverse("RAML10"), n = t.type("FragmentDeclaration"), r = $.createStubNode(n, null, e); return r; }
            function o(e) { var t = J.getUniverse("RAML10"), n = t.type("Trait"), r = $.createStubNode(n, null, e); return r; }
            function s(e) { var t = J.getUniverse("RAML10"), n = t.type("MethodBase"), r = $.createStubNode(n, null, e); return r; }
            function u(e) { var t = J.getUniverse("RAML10"), n = t.type("Operation"), r = $.createStubNode(n, null, e); return r; }
            function l(e) { var t = J.getUniverse("RAML10"), n = t.type("TypeDeclaration"), r = $.createStubNode(n, null, e); return r; }
            function p(e) { var t = J.getUniverse("RAML10"), n = t.type("UsesDeclaration"), r = $.createStubNode(n, null, e); return r; }
            function c(e) { var t = J.getUniverse("RAML10"), n = t.type("XMLFacetInfo"), r = $.createStubNode(n, null, e); return r; }
            function f(e) { var t = J.getUniverse("RAML10"), n = t.type("ArrayTypeDeclaration"), r = $.createStubNode(n, null, e); return r; }
            function m(e) { var t = J.getUniverse("RAML10"), n = t.type("UnionTypeDeclaration"), r = $.createStubNode(n, null, e); return r; }
            function h(e) { var t = J.getUniverse("RAML10"), n = t.type("ObjectTypeDeclaration"), r = $.createStubNode(n, null, e); return r; }
            function d(e) { var t = J.getUniverse("RAML10"), n = t.type("StringTypeDeclaration"), r = $.createStubNode(n, null, e); return r; }
            function y(e) { var t = J.getUniverse("RAML10"), n = t.type("BooleanTypeDeclaration"), r = $.createStubNode(n, null, e); return r; }
            function v(e) { var t = J.getUniverse("RAML10"), n = t.type("NumberTypeDeclaration"), r = $.createStubNode(n, null, e); return r; }
            function g(e) { var t = J.getUniverse("RAML10"), n = t.type("IntegerTypeDeclaration"), r = $.createStubNode(n, null, e); return r; }
            function A(e) { var t = J.getUniverse("RAML10"), n = t.type("DateOnlyTypeDeclaration"), r = $.createStubNode(n, null, e); return r; }
            function T(e) { var t = J.getUniverse("RAML10"), n = t.type("TimeOnlyTypeDeclaration"), r = $.createStubNode(n, null, e); return r; }
            function E(e) { var t = J.getUniverse("RAML10"), n = t.type("DateTimeOnlyTypeDeclaration"), r = $.createStubNode(n, null, e); return r; }
            function S(e) { var t = J.getUniverse("RAML10"), n = t.type("DateTimeTypeDeclaration"), r = $.createStubNode(n, null, e); return r; }
            function N(e) { var t = J.getUniverse("RAML10"), n = t.type("FileTypeDeclaration"), r = $.createStubNode(n, null, e); return r; }
            function _(e) { var t = J.getUniverse("RAML10"), n = t.type("Response"), r = $.createStubNode(n, null, e); return r; }
            function b(e) { var t = J.getUniverse("RAML10"), n = t.type("SecuritySchemePart"), r = $.createStubNode(n, null, e); return r; }
            function I(e) { var t = J.getUniverse("RAML10"), n = t.type("AbstractSecurityScheme"), r = $.createStubNode(n, null, e); return r; }
            function R(e) { var t = J.getUniverse("RAML10"), n = t.type("SecuritySchemeSettings"), r = $.createStubNode(n, null, e); return r; }
            function M(e) { var t = J.getUniverse("RAML10"), n = t.type("OAuth1SecuritySchemeSettings"), r = $.createStubNode(n, null, e); return r; }
            function w(e) { var t = J.getUniverse("RAML10"), n = t.type("OAuth2SecuritySchemeSettings"), r = $.createStubNode(n, null, e); return r; }
            function C(e) { var t = J.getUniverse("RAML10"), n = t.type("OAuth2SecurityScheme"), r = $.createStubNode(n, null, e); return r; }
            function L(e) { var t = J.getUniverse("RAML10"), n = t.type("OAuth1SecurityScheme"), r = $.createStubNode(n, null, e); return r; }
            function P(e) { var t = J.getUniverse("RAML10"), n = t.type("PassThroughSecurityScheme"), r = $.createStubNode(n, null, e); return r; }
            function O(e) { var t = J.getUniverse("RAML10"), n = t.type("BasicSecurityScheme"), r = $.createStubNode(n, null, e); return r; }
            function D(e) { var t = J.getUniverse("RAML10"), n = t.type("DigestSecurityScheme"), r = $.createStubNode(n, null, e); return r; }
            function U(e) { var t = J.getUniverse("RAML10"), n = t.type("CustomSecurityScheme"), r = $.createStubNode(n, null, e); return r; }
            function x(e) { var t = J.getUniverse("RAML10"), n = t.type("Method"), r = $.createStubNode(n, null, e); return r; }
            function k(e) { var t = J.getUniverse("RAML10"), n = t.type("ResourceType"), r = $.createStubNode(n, null, e); return r; }
            function F(e) { var t = J.getUniverse("RAML10"), n = t.type("ResourceBase"), r = $.createStubNode(n, null, e); return r; }
            function B(e) { var t = J.getUniverse("RAML10"), n = t.type("Resource"), r = $.createStubNode(n, null, e); return r; }
            function K(e) { var t = J.getUniverse("RAML10"), n = t.type("DocumentationItem"), r = $.createStubNode(n, null, e); return r; }
            function V(e) { var t = J.getUniverse("RAML10"), n = t.type("Library"), r = $.createStubNode(n, null, e); return r; }
            function j(e) { var t = J.getUniverse("RAML10"), n = t.type("Overlay"), r = $.createStubNode(n, null, e); return r; }
            function W(e) { var t = J.getUniverse("RAML10"), n = t.type("Extension"), r = $.createStubNode(n, null, e); return r; }
            function q(e, t, n) { return Z.loadApi(e, t, n).getOrElse(null); }
            function H(e, t, n) { return Z.loadApi(e, t, n).getOrElse(null); }
            function Y(e, t, n) { return Z.loadApiAsync(e, t, n); }
            function G(e, t, n) { return Z.loadRAMLAsync(e, t, n); }
            function X(e) { return Z.getLanguageElementByRuntimeType(e); }
            var z = this && this.__extends || function (e, t) { function n() { this.constructor = e; } for (var r in t)
                t.hasOwnProperty(r) && (e[r] = t[r]); e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype, new n); }, $ = n(18), J = n(39), Q = n(48), Z = n(8), ee = n(36), te = function (e) { function t() { e.apply(this, arguments); } return z(t, e), t.prototype.annotations = function () { return e.prototype.attributes.call(this, "annotations", function (e) { return new Lt(e); }); }, t.prototype.wrapperClassName = function () { return "AnnotableImpl"; }, t.prototype.kind = function () { return "Annotable"; }, t.prototype.allKinds = function () { return e.prototype.allKinds.call(this).concat("Annotable"); }, t.prototype.allWrapperClassNames = function () { return e.prototype.allWrapperClassNames.call(this).concat("RAML10.AnnotableImpl"); }, t.isInstance = function (e) { if (null != e && e.allWrapperClassNames && "function" == typeof e.allWrapperClassNames)
                for (var t = 0, n = e.allWrapperClassNames(); t < n.length; t++) {
                    var r = n[t];
                    if ("RAML10.AnnotableImpl" == r)
                        return !0;
                } return !1; }, t.prototype.RAMLVersion = function () { return "RAML10"; }, t; }(Q.BasicNodeImpl);
            t.AnnotableImpl = te;
            var ne = function (e) { function t() { e.apply(this, arguments); } return z(t, e), t.prototype.wrapperClassName = function () { return "ValueTypeImpl"; }, t.prototype.kind = function () { return "ValueType"; }, t.prototype.allKinds = function () { return e.prototype.allKinds.call(this).concat("ValueType"); }, t.prototype.allWrapperClassNames = function () { return e.prototype.allWrapperClassNames.call(this).concat("undefined.ValueTypeImpl"); }, t.isInstance = function (e) { if (null != e && e.allWrapperClassNames && "function" == typeof e.allWrapperClassNames)
                for (var t = 0, n = e.allWrapperClassNames(); t < n.length; t++) {
                    var r = n[t];
                    if ("undefined.ValueTypeImpl" == r)
                        return !0;
                } return !1; }, t.prototype.RAMLVersion = function () { return "undefined"; }, t.prototype.value = function () { return this.attr.value(); }, t; }(Q.AttributeNodeImpl);
            t.ValueTypeImpl = ne;
            var re = function (e) { function t() { e.apply(this, arguments); } return z(t, e), t.prototype.wrapperClassName = function () { return "StringTypeImpl"; }, t.prototype.kind = function () { return "StringType"; }, t.prototype.allKinds = function () { return e.prototype.allKinds.call(this).concat("StringType"); }, t.prototype.allWrapperClassNames = function () { return e.prototype.allWrapperClassNames.call(this).concat("RAML10.StringTypeImpl"); }, t.isInstance = function (e) { if (null != e && e.allWrapperClassNames && "function" == typeof e.allWrapperClassNames)
                for (var t = 0, n = e.allWrapperClassNames(); t < n.length; t++) {
                    var r = n[t];
                    if ("RAML10.StringTypeImpl" == r)
                        return !0;
                } return !1; }, t.prototype.RAMLVersion = function () { return "RAML10"; }, t.prototype.value = function () { return this.attr.value(); }, t; }(ne);
            t.StringTypeImpl = re;
            var ie = function (e) { function t() { e.apply(this, arguments); } return z(t, e), t.prototype.wrapperClassName = function () { return "UriTemplateImpl"; }, t.prototype.kind = function () { return "UriTemplate"; }, t.prototype.allKinds = function () { return e.prototype.allKinds.call(this).concat("UriTemplate"); }, t.prototype.allWrapperClassNames = function () { return e.prototype.allWrapperClassNames.call(this).concat("RAML10.UriTemplateImpl"); }, t.isInstance = function (e) { if (null != e && e.allWrapperClassNames && "function" == typeof e.allWrapperClassNames)
                for (var t = 0, n = e.allWrapperClassNames(); t < n.length; t++) {
                    var r = n[t];
                    if ("RAML10.UriTemplateImpl" == r)
                        return !0;
                } return !1; }, t.prototype.RAMLVersion = function () { return "RAML10"; }, t; }(re);
            t.UriTemplateImpl = ie;
            var ae = function (e) { function t() { e.apply(this, arguments); } return z(t, e), t.prototype.wrapperClassName = function () { return "RelativeUriStringImpl"; }, t.prototype.kind = function () { return "RelativeUriString"; }, t.prototype.allKinds = function () { return e.prototype.allKinds.call(this).concat("RelativeUriString"); }, t.prototype.allWrapperClassNames = function () { return e.prototype.allWrapperClassNames.call(this).concat("RAML10.RelativeUriStringImpl"); }, t.isInstance = function (e) { if (null != e && e.allWrapperClassNames && "function" == typeof e.allWrapperClassNames)
                for (var t = 0, n = e.allWrapperClassNames(); t < n.length; t++) {
                    var r = n[t];
                    if ("RAML10.RelativeUriStringImpl" == r)
                        return !0;
                } return !1; }, t.prototype.RAMLVersion = function () { return "RAML10"; }, t; }(ie);
            t.RelativeUriStringImpl = ae;
            var oe = function (e) { function t() { e.apply(this, arguments); } return z(t, e), t.prototype.wrapperClassName = function () { return "FullUriTemplateStringImpl"; }, t.prototype.kind = function () { return "FullUriTemplateString"; }, t.prototype.allKinds = function () { return e.prototype.allKinds.call(this).concat("FullUriTemplateString"); }, t.prototype.allWrapperClassNames = function () { return e.prototype.allWrapperClassNames.call(this).concat("RAML10.FullUriTemplateStringImpl"); }, t.isInstance = function (e) { if (null != e && e.allWrapperClassNames && "function" == typeof e.allWrapperClassNames)
                for (var t = 0, n = e.allWrapperClassNames(); t < n.length; t++) {
                    var r = n[t];
                    if ("RAML10.FullUriTemplateStringImpl" == r)
                        return !0;
                } return !1; }, t.prototype.RAMLVersion = function () { return "RAML10"; }, t; }(ie);
            t.FullUriTemplateStringImpl = oe;
            var se = function (e) { function t() { e.apply(this, arguments); } return z(t, e), t.prototype.wrapperClassName = function () { return "StatusCodeStringImpl"; }, t.prototype.kind = function () { return "StatusCodeString"; }, t.prototype.allKinds = function () { return e.prototype.allKinds.call(this).concat("StatusCodeString"); }, t.prototype.allWrapperClassNames = function () { return e.prototype.allWrapperClassNames.call(this).concat("RAML10.StatusCodeStringImpl"); }, t.isInstance = function (e) { if (null != e && e.allWrapperClassNames && "function" == typeof e.allWrapperClassNames)
                for (var t = 0, n = e.allWrapperClassNames(); t < n.length; t++) {
                    var r = n[t];
                    if ("RAML10.StatusCodeStringImpl" == r)
                        return !0;
                } return !1; }, t.prototype.RAMLVersion = function () { return "RAML10"; }, t; }(re);
            t.StatusCodeStringImpl = se;
            var ue = function (e) { function t() { e.apply(this, arguments); } return z(t, e), t.prototype.wrapperClassName = function () { return "FixedUriStringImpl"; }, t.prototype.kind = function () { return "FixedUriString"; }, t.prototype.allKinds = function () { return e.prototype.allKinds.call(this).concat("FixedUriString"); }, t.prototype.allWrapperClassNames = function () { return e.prototype.allWrapperClassNames.call(this).concat("RAML10.FixedUriStringImpl"); }, t.isInstance = function (e) { if (null != e && e.allWrapperClassNames && "function" == typeof e.allWrapperClassNames)
                for (var t = 0, n = e.allWrapperClassNames(); t < n.length; t++) {
                    var r = n[t];
                    if ("RAML10.FixedUriStringImpl" == r)
                        return !0;
                } return !1; }, t.prototype.RAMLVersion = function () { return "RAML10"; }, t; }(re);
            t.FixedUriStringImpl = ue;
            var le = function (e) { function t() { e.apply(this, arguments); } return z(t, e), t.prototype.wrapperClassName = function () { return "ContentTypeImpl"; }, t.prototype.kind = function () { return "ContentType"; }, t.prototype.allKinds = function () { return e.prototype.allKinds.call(this).concat("ContentType"); }, t.prototype.allWrapperClassNames = function () { return e.prototype.allWrapperClassNames.call(this).concat("RAML10.ContentTypeImpl"); }, t.isInstance = function (e) { if (null != e && e.allWrapperClassNames && "function" == typeof e.allWrapperClassNames)
                for (var t = 0, n = e.allWrapperClassNames(); t < n.length; t++) {
                    var r = n[t];
                    if ("RAML10.ContentTypeImpl" == r)
                        return !0;
                } return !1; }, t.prototype.RAMLVersion = function () { return "RAML10"; }, t; }(re);
            t.ContentTypeImpl = le;
            var pe = function (e) { function t() { e.apply(this, arguments); } return z(t, e), t.prototype.wrapperClassName = function () { return "MarkdownStringImpl"; }, t.prototype.kind = function () { return "MarkdownString"; }, t.prototype.allKinds = function () { return e.prototype.allKinds.call(this).concat("MarkdownString"); }, t.prototype.allWrapperClassNames = function () { return e.prototype.allWrapperClassNames.call(this).concat("RAML10.MarkdownStringImpl"); }, t.isInstance = function (e) { if (null != e && e.allWrapperClassNames && "function" == typeof e.allWrapperClassNames)
                for (var t = 0, n = e.allWrapperClassNames(); t < n.length; t++) {
                    var r = n[t];
                    if ("RAML10.MarkdownStringImpl" == r)
                        return !0;
                } return !1; }, t.prototype.RAMLVersion = function () { return "RAML10"; }, t; }(re);
            t.MarkdownStringImpl = pe;
            var ce = function (e) { function t() { e.apply(this, arguments); } return z(t, e), t.prototype.wrapperClassName = function () { return "SchemaStringImpl"; }, t.prototype.kind = function () { return "SchemaString"; }, t.prototype.allKinds = function () { return e.prototype.allKinds.call(this).concat("SchemaString"); }, t.prototype.allWrapperClassNames = function () { return e.prototype.allWrapperClassNames.call(this).concat("RAML10.SchemaStringImpl"); }, t.isInstance = function (e) { if (null != e && e.allWrapperClassNames && "function" == typeof e.allWrapperClassNames)
                for (var t = 0, n = e.allWrapperClassNames(); t < n.length; t++) {
                    var r = n[t];
                    if ("RAML10.SchemaStringImpl" == r)
                        return !0;
                } return !1; }, t.prototype.RAMLVersion = function () { return "RAML10"; }, t; }(re);
            t.SchemaStringImpl = ce;
            var fe = function (e) { function t() { e.apply(this, arguments); } return z(t, e), t.prototype.wrapperClassName = function () { return "MimeTypeImpl"; }, t.prototype.kind = function () { return "MimeType"; }, t.prototype.allKinds = function () { return e.prototype.allKinds.call(this).concat("MimeType"); }, t.prototype.allWrapperClassNames = function () { return e.prototype.allWrapperClassNames.call(this).concat("RAML10.MimeTypeImpl"); }, t.isInstance = function (e) { if (null != e && e.allWrapperClassNames && "function" == typeof e.allWrapperClassNames)
                for (var t = 0, n = e.allWrapperClassNames(); t < n.length; t++) {
                    var r = n[t];
                    if ("RAML10.MimeTypeImpl" == r)
                        return !0;
                } return !1; }, t.prototype.RAMLVersion = function () { return "RAML10"; }, t; }(re);
            t.MimeTypeImpl = fe;
            var me = function (e) { function t() { e.apply(this, arguments); } return z(t, e), t.prototype.wrapperClassName = function () { return "AnyTypeImpl"; }, t.prototype.kind = function () { return "AnyType"; }, t.prototype.allKinds = function () { return e.prototype.allKinds.call(this).concat("AnyType"); }, t.prototype.allWrapperClassNames = function () { return e.prototype.allWrapperClassNames.call(this).concat("RAML10.AnyTypeImpl"); }, t.isInstance = function (e) { if (null != e && e.allWrapperClassNames && "function" == typeof e.allWrapperClassNames)
                for (var t = 0, n = e.allWrapperClassNames(); t < n.length; t++) {
                    var r = n[t];
                    if ("RAML10.AnyTypeImpl" == r)
                        return !0;
                } return !1; }, t.prototype.RAMLVersion = function () { return "RAML10"; }, t; }(ne);
            t.AnyTypeImpl = me;
            var he = function (e) { function t() { e.apply(this, arguments); } return z(t, e), t.prototype.wrapperClassName = function () { return "NumberTypeImpl"; }, t.prototype.kind = function () { return "NumberType"; }, t.prototype.allKinds = function () { return e.prototype.allKinds.call(this).concat("NumberType"); }, t.prototype.allWrapperClassNames = function () { return e.prototype.allWrapperClassNames.call(this).concat("RAML10.NumberTypeImpl"); }, t.isInstance = function (e) { if (null != e && e.allWrapperClassNames && "function" == typeof e.allWrapperClassNames)
                for (var t = 0, n = e.allWrapperClassNames(); t < n.length; t++) {
                    var r = n[t];
                    if ("RAML10.NumberTypeImpl" == r)
                        return !0;
                } return !1; }, t.prototype.RAMLVersion = function () { return "RAML10"; }, t.prototype.value = function () { return this.attr.value(); }, t; }(ne);
            t.NumberTypeImpl = he;
            var de = function (e) { function t() { e.apply(this, arguments); } return z(t, e), t.prototype.wrapperClassName = function () { return "IntegerTypeImpl"; }, t.prototype.kind = function () { return "IntegerType"; }, t.prototype.allKinds = function () { return e.prototype.allKinds.call(this).concat("IntegerType"); }, t.prototype.allWrapperClassNames = function () { return e.prototype.allWrapperClassNames.call(this).concat("RAML10.IntegerTypeImpl"); }, t.isInstance = function (e) { if (null != e && e.allWrapperClassNames && "function" == typeof e.allWrapperClassNames)
                for (var t = 0, n = e.allWrapperClassNames(); t < n.length; t++) {
                    var r = n[t];
                    if ("RAML10.IntegerTypeImpl" == r)
                        return !0;
                } return !1; }, t.prototype.RAMLVersion = function () { return "RAML10"; }, t; }(ne);
            t.IntegerTypeImpl = de;
            var ye = function (e) { function t() { e.apply(this, arguments); } return z(t, e), t.prototype.wrapperClassName = function () { return "NullTypeImpl"; }, t.prototype.kind = function () { return "NullType"; }, t.prototype.allKinds = function () { return e.prototype.allKinds.call(this).concat("NullType"); }, t.prototype.allWrapperClassNames = function () { return e.prototype.allWrapperClassNames.call(this).concat("RAML10.NullTypeImpl"); }, t.isInstance = function (e) { if (null != e && e.allWrapperClassNames && "function" == typeof e.allWrapperClassNames)
                for (var t = 0, n = e.allWrapperClassNames(); t < n.length; t++) {
                    var r = n[t];
                    if ("RAML10.NullTypeImpl" == r)
                        return !0;
                } return !1; }, t.prototype.RAMLVersion = function () { return "RAML10"; }, t; }(ne);
            t.NullTypeImpl = ye;
            var ve = function (e) { function t() { e.apply(this, arguments); } return z(t, e), t.prototype.wrapperClassName = function () { return "TimeOnlyTypeImpl"; }, t.prototype.kind = function () { return "TimeOnlyType"; }, t.prototype.allKinds = function () { return e.prototype.allKinds.call(this).concat("TimeOnlyType"); }, t.prototype.allWrapperClassNames = function () { return e.prototype.allWrapperClassNames.call(this).concat("RAML10.TimeOnlyTypeImpl"); }, t.isInstance = function (e) { if (null != e && e.allWrapperClassNames && "function" == typeof e.allWrapperClassNames)
                for (var t = 0, n = e.allWrapperClassNames(); t < n.length; t++) {
                    var r = n[t];
                    if ("RAML10.TimeOnlyTypeImpl" == r)
                        return !0;
                } return !1; }, t.prototype.RAMLVersion = function () { return "RAML10"; }, t; }(ne);
            t.TimeOnlyTypeImpl = ve;
            var ge = function (e) { function t() { e.apply(this, arguments); } return z(t, e), t.prototype.wrapperClassName = function () { return "DateOnlyTypeImpl"; }, t.prototype.kind = function () { return "DateOnlyType"; }, t.prototype.allKinds = function () { return e.prototype.allKinds.call(this).concat("DateOnlyType"); }, t.prototype.allWrapperClassNames = function () { return e.prototype.allWrapperClassNames.call(this).concat("RAML10.DateOnlyTypeImpl"); }, t.isInstance = function (e) { if (null != e && e.allWrapperClassNames && "function" == typeof e.allWrapperClassNames)
                for (var t = 0, n = e.allWrapperClassNames(); t < n.length; t++) {
                    var r = n[t];
                    if ("RAML10.DateOnlyTypeImpl" == r)
                        return !0;
                } return !1; }, t.prototype.RAMLVersion = function () { return "RAML10"; }, t; }(ne);
            t.DateOnlyTypeImpl = ge;
            var Ae = function (e) { function t() { e.apply(this, arguments); } return z(t, e), t.prototype.wrapperClassName = function () { return "DateTimeOnlyTypeImpl"; }, t.prototype.kind = function () { return "DateTimeOnlyType"; }, t.prototype.allKinds = function () { return e.prototype.allKinds.call(this).concat("DateTimeOnlyType"); }, t.prototype.allWrapperClassNames = function () { return e.prototype.allWrapperClassNames.call(this).concat("RAML10.DateTimeOnlyTypeImpl"); }, t.isInstance = function (e) { if (null != e && e.allWrapperClassNames && "function" == typeof e.allWrapperClassNames)
                for (var t = 0, n = e.allWrapperClassNames(); t < n.length; t++) {
                    var r = n[t];
                    if ("RAML10.DateTimeOnlyTypeImpl" == r)
                        return !0;
                } return !1; }, t.prototype.RAMLVersion = function () { return "RAML10"; }, t; }(ne);
            t.DateTimeOnlyTypeImpl = Ae;
            var Te = function (e) { function t() { e.apply(this, arguments); } return z(t, e), t.prototype.wrapperClassName = function () { return "DateTimeTypeImpl"; }, t.prototype.kind = function () { return "DateTimeType"; }, t.prototype.allKinds = function () { return e.prototype.allKinds.call(this).concat("DateTimeType"); }, t.prototype.allWrapperClassNames = function () { return e.prototype.allWrapperClassNames.call(this).concat("RAML10.DateTimeTypeImpl"); }, t.isInstance = function (e) { if (null != e && e.allWrapperClassNames && "function" == typeof e.allWrapperClassNames)
                for (var t = 0, n = e.allWrapperClassNames(); t < n.length; t++) {
                    var r = n[t];
                    if ("RAML10.DateTimeTypeImpl" == r)
                        return !0;
                } return !1; }, t.prototype.RAMLVersion = function () { return "RAML10"; }, t; }(ne);
            t.DateTimeTypeImpl = Te;
            var Ee = function (e) { function t() { e.apply(this, arguments); } return z(t, e), t.prototype.wrapperClassName = function () { return "FileTypeImpl"; }, t.prototype.kind = function () { return "FileType"; }, t.prototype.allKinds = function () { return e.prototype.allKinds.call(this).concat("FileType"); }, t.prototype.allWrapperClassNames = function () { return e.prototype.allWrapperClassNames.call(this).concat("RAML10.FileTypeImpl"); }, t.isInstance = function (e) { if (null != e && e.allWrapperClassNames && "function" == typeof e.allWrapperClassNames)
                for (var t = 0, n = e.allWrapperClassNames(); t < n.length; t++) {
                    var r = n[t];
                    if ("RAML10.FileTypeImpl" == r)
                        return !0;
                } return !1; }, t.prototype.RAMLVersion = function () { return "RAML10"; }, t; }(ne);
            t.FileTypeImpl = Ee;
            var Se = function (e) { function t() { e.apply(this, arguments); } return z(t, e), t.prototype.wrapperClassName = function () { return "BooleanTypeImpl"; }, t.prototype.kind = function () { return "BooleanType"; }, t.prototype.allKinds = function () { return e.prototype.allKinds.call(this).concat("BooleanType"); }, t.prototype.allWrapperClassNames = function () { return e.prototype.allWrapperClassNames.call(this).concat("RAML10.BooleanTypeImpl"); }, t.isInstance = function (e) { if (null != e && e.allWrapperClassNames && "function" == typeof e.allWrapperClassNames)
                for (var t = 0, n = e.allWrapperClassNames(); t < n.length; t++) {
                    var r = n[t];
                    if ("RAML10.BooleanTypeImpl" == r)
                        return !0;
                } return !1; }, t.prototype.RAMLVersion = function () { return "RAML10"; }, t.prototype.value = function () { return this.attr.value(); }, t; }(ne);
            t.BooleanTypeImpl = Se;
            var Ne = function (e) { function t() { e.apply(this, arguments); } return z(t, e), t.prototype.wrapperClassName = function () { return "AnnotationTargetImpl"; }, t.prototype.kind = function () { return "AnnotationTarget"; }, t.prototype.allKinds = function () { return e.prototype.allKinds.call(this).concat("AnnotationTarget"); }, t.prototype.allWrapperClassNames = function () { return e.prototype.allWrapperClassNames.call(this).concat("RAML10.AnnotationTargetImpl"); }, t.isInstance = function (e) { if (null != e && e.allWrapperClassNames && "function" == typeof e.allWrapperClassNames)
                for (var t = 0, n = e.allWrapperClassNames(); t < n.length; t++) {
                    var r = n[t];
                    if ("RAML10.AnnotationTargetImpl" == r)
                        return !0;
                } return !1; }, t.prototype.RAMLVersion = function () { return "RAML10"; }, t; }(ne);
            t.AnnotationTargetImpl = Ne;
            var _e = function (e) { function t() { e.apply(this, arguments); } return z(t, e), t.prototype.wrapperClassName = function () { return "ReferenceImpl"; }, t.prototype.kind = function () { return "Reference"; }, t.prototype.allKinds = function () { return e.prototype.allKinds.call(this).concat("Reference"); }, t.prototype.allWrapperClassNames = function () { return e.prototype.allWrapperClassNames.call(this).concat("RAML10.ReferenceImpl"); }, t.isInstance = function (e) { if (null != e && e.allWrapperClassNames && "function" == typeof e.allWrapperClassNames)
                for (var t = 0, n = e.allWrapperClassNames(); t < n.length; t++) {
                    var r = n[t];
                    if ("RAML10.ReferenceImpl" == r)
                        return !0;
                } return !1; }, t.prototype.RAMLVersion = function () { return "RAML10"; }, t.prototype.value = function () { return Q.toStructuredValue(this.attr); }, t.prototype.structuredValue = function () { return ee.structuredValue(this); }, t.prototype.name = function () { return ee.referenceName(this); }, t; }(Q.AttributeNodeImpl);
            t.ReferenceImpl = _e;
            var be = function (e) { function t() { e.apply(this, arguments); } return z(t, e), t.prototype.wrapperClassName = function () { return "TraitRefImpl"; }, t.prototype.kind = function () { return "TraitRef"; }, t.prototype.allKinds = function () { return e.prototype.allKinds.call(this).concat("TraitRef"); }, t.prototype.allWrapperClassNames = function () { return e.prototype.allWrapperClassNames.call(this).concat("RAML10.TraitRefImpl"); }, t.isInstance = function (e) { if (null != e && e.allWrapperClassNames && "function" == typeof e.allWrapperClassNames)
                for (var t = 0, n = e.allWrapperClassNames(); t < n.length; t++) {
                    var r = n[t];
                    if ("RAML10.TraitRefImpl" == r)
                        return !0;
                } return !1; }, t.prototype.RAMLVersion = function () { return "RAML10"; }, t.prototype.trait = function () { return ee.referencedTrait(this); }, t; }(_e);
            t.TraitRefImpl = be;
            var Ie = function (e) { function t(t, n) { void 0 === n && (n = !0), e.call(this, "string" == typeof t ? u(t) : t, n), this.nodeOrKey = t, this.setAsTopLevel = n; } return z(t, e), t.prototype.queryParameters = function () { return e.prototype.elements.call(this, "queryParameters"); }, t.prototype.headers = function () { return e.prototype.elements.call(this, "headers"); }, t.prototype.queryString = function () { return e.prototype.element.call(this, "queryString"); }, t.prototype.responses = function () { return e.prototype.elements.call(this, "responses"); }, t.prototype.wrapperClassName = function () { return "OperationImpl"; }, t.prototype.kind = function () { return "Operation"; }, t.prototype.allKinds = function () { return e.prototype.allKinds.call(this).concat("Operation"); }, t.prototype.allWrapperClassNames = function () { return e.prototype.allWrapperClassNames.call(this).concat("RAML10.OperationImpl"); }, t.isInstance = function (e) { if (null != e && e.allWrapperClassNames && "function" == typeof e.allWrapperClassNames)
                for (var t = 0, n = e.allWrapperClassNames(); t < n.length; t++) {
                    var r = n[t];
                    if ("RAML10.OperationImpl" == r)
                        return !0;
                } return !1; }, t.prototype.RAMLVersion = function () { return "RAML10"; }, t; }(te);
            t.OperationImpl = Ie;
            var Re = function (e) { function t(t, n) { void 0 === n && (n = !0), e.call(this, "string" == typeof t ? l(t) : t, n), this.nodeOrKey = t, this.setAsTopLevel = n; } return z(t, e), t.prototype.name = function () { return e.prototype.attribute.call(this, "name", this.toString); }, t.prototype.setName = function (e) { return this.highLevel().attrOrCreate("name").setValue("" + e), this; }, t.prototype.displayName = function () { return e.prototype.attribute.call(this, "displayName", this.toString); }, t.prototype.setDisplayName = function (e) { return this.highLevel().attrOrCreate("displayName").setValue("" + e), this; }, t.prototype.facets = function () { return e.prototype.elements.call(this, "facets"); }, t.prototype.schema_original = function () { return e.prototype.attributes.call(this, "schema", this.toString); }, t.prototype.setSchema = function (e) { return this.highLevel().attrOrCreate("schema").setValue("" + e), this; }, t.prototype.type_original = function () { return e.prototype.attributes.call(this, "type", this.toString); }, t.prototype.setType = function (e) { return this.highLevel().attrOrCreate("type").setValue("" + e), this; }, t.prototype.location = function () { return e.prototype.attribute.call(this, "location", function (e) { return new Me(e); }); }, t.prototype.locationKind = function () { return e.prototype.attribute.call(this, "locationKind", function (e) { return new we(e); }); }, t.prototype["default"] = function () { return e.prototype.attribute.call(this, "default", this.toAny); }, t.prototype.setDefault = function (e) { return this.highLevel().attrOrCreate("default").setValue("" + e), this; }, t.prototype.example_original = function () { return e.prototype.element.call(this, "example"); }, t.prototype.examples_original = function () { return e.prototype.elements.call(this, "examples"); }, t.prototype.required = function () { return e.prototype.attribute.call(this, "required", this.toBoolean); }, t.prototype.setRequired = function (e) { return this.highLevel().attrOrCreate("required").setValue("" + e), this; }, t.prototype.description = function () { return e.prototype.attribute.call(this, "description", function (e) { return new pe(e); }); }, t.prototype.xml = function () { return e.prototype.element.call(this, "xml"); }, t.prototype.allowedTargets = function () { return e.prototype.attributes.call(this, "allowedTargets", function (e) { return new Ne(e); }); }, t.prototype.isAnnotation = function () { return e.prototype.attribute.call(this, "isAnnotation", this.toBoolean); }, t.prototype.setIsAnnotation = function (e) { return this.highLevel().attrOrCreate("isAnnotation").setValue("" + e), this; }, t.prototype.annotations = function () { return e.prototype.attributes.call(this, "annotations", function (e) { return new Lt(e); }); }, t.prototype.uses = function () { return e.prototype.elements.call(this, "uses"); }, t.prototype.wrapperClassName = function () { return "TypeDeclarationImpl"; }, t.prototype.kind = function () { return "TypeDeclaration"; }, t.prototype.allKinds = function () { return e.prototype.allKinds.call(this).concat("TypeDeclaration"); }, t.prototype.allWrapperClassNames = function () { return e.prototype.allWrapperClassNames.call(this).concat("RAML10.TypeDeclarationImpl"); }, t.isInstance = function (e) { if (null != e && e.allWrapperClassNames && "function" == typeof e.allWrapperClassNames)
                for (var t = 0, n = e.allWrapperClassNames(); t < n.length; t++) {
                    var r = n[t];
                    if ("RAML10.TypeDeclarationImpl" == r)
                        return !0;
                } return !1; }, t.prototype.RAMLVersion = function () { return "RAML10"; }, t.prototype.runtimeType = function () { return ee.runtimeType(this); }, t.prototype.validateInstance = function (e) { return ee.validateInstance(this, e); }, t.prototype.validateInstanceWithDetailedStatuses = function (e) { return ee.validateInstanceWithDetailedStatuses(this, e); }, t.prototype.example = function () { return ee.getTypeExample(this); }, t.prototype.examples = function () { return ee.getTypeExamples(this); }, t.prototype.fixedFacets = function () { return ee.typeFixedFacets(this); }, t.prototype.type = function () { return ee.typeValue(this); }, t.prototype.schema = function () { return ee.schemaValue(this); }, t.prototype.structuredType = function () { return ee.typeStructuredValue(this); }, t.prototype.parametrizedProperties = function () { return ee.getTemplateParametrizedProperties(this); }, t.prototype.scalarsAnnotations = function () { return new Ue(this.highLevel()); }, t; }(te);
            t.TypeDeclarationImpl = Re;
            var Me = function () { function e(e) { this.attr = e; } return e.prototype.wrapperClassName = function () { return "ModelLocationImpl"; }, e.prototype.kind = function () { return "ModelLocation"; }, e.prototype.allKinds = function () { return ["ModelLocation"]; }, e.prototype.allWrapperClassNames = function () { return ["RAML10.ModelLocationImpl"]; }, e.isInstance = function (e) { if (null != e && e.allWrapperClassNames && "function" == typeof e.allWrapperClassNames)
                for (var t = 0, n = e.allWrapperClassNames(); t < n.length; t++) {
                    var r = n[t];
                    if ("RAML10.ModelLocationImpl" == r)
                        return !0;
                } return !1; }, e.prototype.RAMLVersion = function () { return "RAML10"; }, e; }();
            t.ModelLocationImpl = Me;
            var we = function () { function e(e) { this.attr = e; } return e.prototype.wrapperClassName = function () { return "LocationKindImpl"; }, e.prototype.kind = function () { return "LocationKind"; }, e.prototype.allKinds = function () { return ["LocationKind"]; }, e.prototype.allWrapperClassNames = function () { return ["RAML10.LocationKindImpl"]; }, e.isInstance = function (e) { if (null != e && e.allWrapperClassNames && "function" == typeof e.allWrapperClassNames)
                for (var t = 0, n = e.allWrapperClassNames(); t < n.length; t++) {
                    var r = n[t];
                    if ("RAML10.LocationKindImpl" == r)
                        return !0;
                } return !1; }, e.prototype.RAMLVersion = function () { return "RAML10"; }, e; }();
            t.LocationKindImpl = we;
            var Ce = function (e) {
                function t(t, n) { void 0 === n && (n = !0), e.call(this, "string" == typeof t ? p(t) : t, n), this.nodeOrKey = t, this.setAsTopLevel = n; }
                return z(t, e), t.prototype.key = function () { return e.prototype.attribute.call(this, "key", this.toString); }, t.prototype.setKey = function (e) { return this.highLevel().attrOrCreate("key").setValue("" + e), this; }, t.prototype.value = function () { return e.prototype.attribute.call(this, "value", this.toString); }, t.prototype.setValue = function (e) { return this.highLevel().attrOrCreate("value").setValue("" + e), this; }, t.prototype.wrapperClassName = function () { return "UsesDeclarationImpl"; }, t.prototype.kind = function () { return "UsesDeclaration"; }, t.prototype.allKinds = function () { return e.prototype.allKinds.call(this).concat("UsesDeclaration"); }, t.prototype.allWrapperClassNames = function () { return e.prototype.allWrapperClassNames.call(this).concat("RAML10.UsesDeclarationImpl"); }, t.isInstance = function (e) {
                    if (null != e && e.allWrapperClassNames && "function" == typeof e.allWrapperClassNames)
                        for (var t = 0, n = e.allWrapperClassNames(); t < n.length; t++) {
                            var r = n[t];
                            if ("RAML10.UsesDeclarationImpl" == r)
                                return !0;
                        }
                    return !1;
                }, t.prototype.RAMLVersion = function () { return "RAML10"; }, t.prototype.ast = function () { return ee.referencedNode(this); }, t.prototype.scalarsAnnotations = function () { return new Le(this.highLevel()); }, t;
            }(te);
            t.UsesDeclarationImpl = Ce;
            var Le = function () { function e(e) { this.node = e; } return e.prototype.value = function () { var e = this.node.attr("value"); if (null == e)
                return []; var t = e.annotations(), n = Q.attributesToValues(t, function (e) { return new Lt(e); }); return n; }, e; }();
            t.UsesDeclarationScalarsAnnotationsImpl = Le;
            var Pe = function (e) { function t(t, n) { void 0 === n && (n = !0), e.call(this, "string" == typeof t ? c(t) : t, n), this.nodeOrKey = t, this.setAsTopLevel = n; } return z(t, e), t.prototype.attribute = function () { return e.prototype.attribute.call(this, "attribute", this.toBoolean); }, t.prototype.setAttribute = function (e) { return this.highLevel().attrOrCreate("attribute").setValue("" + e), this; }, t.prototype.wrapped = function () { return e.prototype.attribute.call(this, "wrapped", this.toBoolean); }, t.prototype.setWrapped = function (e) { return this.highLevel().attrOrCreate("wrapped").setValue("" + e), this; }, t.prototype.name = function () { return e.prototype.attribute.call(this, "name", this.toString); }, t.prototype.setName = function (e) { return this.highLevel().attrOrCreate("name").setValue("" + e), this; }, t.prototype.namespace = function () { return e.prototype.attribute.call(this, "namespace", this.toString); }, t.prototype.setNamespace = function (e) { return this.highLevel().attrOrCreate("namespace").setValue("" + e), this; }, t.prototype.prefix = function () { return e.prototype.attribute.call(this, "prefix", this.toString); }, t.prototype.setPrefix = function (e) { return this.highLevel().attrOrCreate("prefix").setValue("" + e), this; }, t.prototype.wrapperClassName = function () { return "XMLFacetInfoImpl"; }, t.prototype.kind = function () { return "XMLFacetInfo"; }, t.prototype.allKinds = function () { return e.prototype.allKinds.call(this).concat("XMLFacetInfo"); }, t.prototype.allWrapperClassNames = function () { return e.prototype.allWrapperClassNames.call(this).concat("RAML10.XMLFacetInfoImpl"); }, t.isInstance = function (e) { if (null != e && e.allWrapperClassNames && "function" == typeof e.allWrapperClassNames)
                for (var t = 0, n = e.allWrapperClassNames(); t < n.length; t++) {
                    var r = n[t];
                    if ("RAML10.XMLFacetInfoImpl" == r)
                        return !0;
                } return !1; }, t.prototype.RAMLVersion = function () { return "RAML10"; }, t.prototype.scalarsAnnotations = function () { return new Oe(this.highLevel()); }, t; }(te);
            t.XMLFacetInfoImpl = Pe;
            var Oe = function () { function e(e) { this.node = e; } return e.prototype.attribute = function () { var e = this.node.attr("attribute"); if (null == e)
                return []; var t = e.annotations(), n = Q.attributesToValues(t, function (e) { return new Lt(e); }); return n; }, e.prototype.wrapped = function () { var e = this.node.attr("wrapped"); if (null == e)
                return []; var t = e.annotations(), n = Q.attributesToValues(t, function (e) { return new Lt(e); }); return n; }, e.prototype.name = function () { var e = this.node.attr("name"); if (null == e)
                return []; var t = e.annotations(), n = Q.attributesToValues(t, function (e) { return new Lt(e); }); return n; }, e.prototype.namespace = function () { var e = this.node.attr("namespace"); if (null == e)
                return []; var t = e.annotations(), n = Q.attributesToValues(t, function (e) { return new Lt(e); }); return n; }, e.prototype.prefix = function () { var e = this.node.attr("prefix"); if (null == e)
                return []; var t = e.annotations(), n = Q.attributesToValues(t, function (e) { return new Lt(e); }); return n; }, e; }();
            t.XMLFacetInfoScalarsAnnotationsImpl = Oe;
            var De = function (e) { function t(t, n) { void 0 === n && (n = !0), e.call(this, "string" == typeof t ? f(t) : t, n), this.nodeOrKey = t, this.setAsTopLevel = n; } return z(t, e), t.prototype.uniqueItems = function () { return e.prototype.attribute.call(this, "uniqueItems", this.toBoolean); }, t.prototype.setUniqueItems = function (e) { return this.highLevel().attrOrCreate("uniqueItems").setValue("" + e), this; }, t.prototype.items_original = function () { return e.prototype.attributes.call(this, "items", this.toString); }, t.prototype.setItems = function (e) { return this.highLevel().attrOrCreate("items").setValue("" + e), this; }, t.prototype.minItems = function () { return e.prototype.attribute.call(this, "minItems", this.toNumber); }, t.prototype.setMinItems = function (e) { return this.highLevel().attrOrCreate("minItems").setValue("" + e), this; }, t.prototype.maxItems = function () { return e.prototype.attribute.call(this, "maxItems", this.toNumber); }, t.prototype.setMaxItems = function (e) { return this.highLevel().attrOrCreate("maxItems").setValue("" + e), this; }, t.prototype.wrapperClassName = function () { return "ArrayTypeDeclarationImpl"; }, t.prototype.kind = function () { return "ArrayTypeDeclaration"; }, t.prototype.allKinds = function () { return e.prototype.allKinds.call(this).concat("ArrayTypeDeclaration"); }, t.prototype.allWrapperClassNames = function () { return e.prototype.allWrapperClassNames.call(this).concat("RAML10.ArrayTypeDeclarationImpl"); }, t.isInstance = function (e) { if (null != e && e.allWrapperClassNames && "function" == typeof e.allWrapperClassNames)
                for (var t = 0, n = e.allWrapperClassNames(); t < n.length; t++) {
                    var r = n[t];
                    if ("RAML10.ArrayTypeDeclarationImpl" == r)
                        return !0;
                } return !1; }, t.prototype.RAMLVersion = function () { return "RAML10"; }, t.prototype.structuredItems = function () { return ee.itemsStructuredValue(this); }, t.prototype.items = function () { return ee.getItems(this); }, t.prototype.findComponentTypeDeclaration = function () { return ee.findComponentTypeDeclaration(this); }, t.prototype.scalarsAnnotations = function () { return new xe(this.highLevel()); }, t; }(Re);
            t.ArrayTypeDeclarationImpl = De;
            var Ue = function () { function e(e) { this.node = e; } return e.prototype.displayName = function () { var e = this.node.attr("displayName"); if (null == e)
                return []; var t = e.annotations(), n = Q.attributesToValues(t, function (e) { return new Lt(e); }); return n; }, e.prototype.schema = function () { var e = this.node.attributes("schema"); return e.map(function (e) { var t = e.annotations(), n = Q.attributesToValues(t, function (e) { return new Lt(e); }); return n; }); }, e.prototype.type = function () { var e = this.node.attributes("type"); return e.map(function (e) { var t = e.annotations(), n = Q.attributesToValues(t, function (e) { return new Lt(e); }); return n; }); }, e.prototype.location = function () { var e = this.node.attr("location"); if (null == e)
                return []; var t = e.annotations(), n = Q.attributesToValues(t, function (e) { return new Lt(e); }); return n; }, e.prototype.locationKind = function () { var e = this.node.attr("locationKind"); if (null == e)
                return []; var t = e.annotations(), n = Q.attributesToValues(t, function (e) { return new Lt(e); }); return n; }, e.prototype["default"] = function () { var e = this.node.attr("default"); if (null == e)
                return []; var t = e.annotations(), n = Q.attributesToValues(t, function (e) { return new Lt(e); }); return n; }, e.prototype.required = function () { var e = this.node.attr("required"); if (null == e)
                return []; var t = e.annotations(), n = Q.attributesToValues(t, function (e) { return new Lt(e); }); return n; }, e.prototype.description = function () { var e = this.node.attr("description"); if (null == e)
                return []; var t = e.annotations(), n = Q.attributesToValues(t, function (e) { return new Lt(e); }); return n; }, e.prototype.allowedTargets = function () { var e = this.node.attributes("allowedTargets"); return e.map(function (e) { var t = e.annotations(), n = Q.attributesToValues(t, function (e) { return new Lt(e); }); return n; }); }, e.prototype.isAnnotation = function () { var e = this.node.attr("isAnnotation"); if (null == e)
                return []; var t = e.annotations(), n = Q.attributesToValues(t, function (e) { return new Lt(e); }); return n; }, e; }();
            t.TypeDeclarationScalarsAnnotationsImpl = Ue;
            var xe = function (e) { function t() { e.apply(this, arguments); } return z(t, e), t.prototype.uniqueItems = function () { var e = this.node.attr("uniqueItems"); if (null == e)
                return []; var t = e.annotations(), n = Q.attributesToValues(t, function (e) { return new Lt(e); }); return n; }, t.prototype.items = function () { var e = this.node.attributes("items"); return e.map(function (e) { var t = e.annotations(), n = Q.attributesToValues(t, function (e) { return new Lt(e); }); return n; }); }, t.prototype.minItems = function () { var e = this.node.attr("minItems"); if (null == e)
                return []; var t = e.annotations(), n = Q.attributesToValues(t, function (e) { return new Lt(e); }); return n; }, t.prototype.maxItems = function () { var e = this.node.attr("maxItems"); if (null == e)
                return []; var t = e.annotations(), n = Q.attributesToValues(t, function (e) { return new Lt(e); }); return n; }, t; }(Ue);
            t.ArrayTypeDeclarationScalarsAnnotationsImpl = xe;
            var ke = function (e) { function t(t, n) { void 0 === n && (n = !0), e.call(this, "string" == typeof t ? m(t) : t, n), this.nodeOrKey = t, this.setAsTopLevel = n; } return z(t, e), t.prototype.wrapperClassName = function () { return "UnionTypeDeclarationImpl"; }, t.prototype.kind = function () { return "UnionTypeDeclaration"; }, t.prototype.allKinds = function () { return e.prototype.allKinds.call(this).concat("UnionTypeDeclaration"); }, t.prototype.allWrapperClassNames = function () { return e.prototype.allWrapperClassNames.call(this).concat("RAML10.UnionTypeDeclarationImpl"); }, t.isInstance = function (e) { if (null != e && e.allWrapperClassNames && "function" == typeof e.allWrapperClassNames)
                for (var t = 0, n = e.allWrapperClassNames(); t < n.length; t++) {
                    var r = n[t];
                    if ("RAML10.UnionTypeDeclarationImpl" == r)
                        return !0;
                } return !1; }, t.prototype.RAMLVersion = function () { return "RAML10"; }, t; }(Re);
            t.UnionTypeDeclarationImpl = ke;
            var Fe = function (e) { function t(t, n) { void 0 === n && (n = !0), e.call(this, "string" == typeof t ? h(t) : t, n), this.nodeOrKey = t, this.setAsTopLevel = n; } return z(t, e), t.prototype.properties = function () { return e.prototype.elements.call(this, "properties"); }, t.prototype.minProperties = function () { return e.prototype.attribute.call(this, "minProperties", this.toNumber); }, t.prototype.setMinProperties = function (e) { return this.highLevel().attrOrCreate("minProperties").setValue("" + e), this; }, t.prototype.maxProperties = function () { return e.prototype.attribute.call(this, "maxProperties", this.toNumber); }, t.prototype.setMaxProperties = function (e) { return this.highLevel().attrOrCreate("maxProperties").setValue("" + e), this; }, t.prototype.additionalProperties = function () { return e.prototype.attribute.call(this, "additionalProperties", this.toBoolean); }, t.prototype.setAdditionalProperties = function (e) { return this.highLevel().attrOrCreate("additionalProperties").setValue("" + e), this; }, t.prototype.discriminator = function () { return e.prototype.attribute.call(this, "discriminator", this.toString); }, t.prototype.setDiscriminator = function (e) { return this.highLevel().attrOrCreate("discriminator").setValue("" + e), this; }, t.prototype.discriminatorValue = function () { return e.prototype.attribute.call(this, "discriminatorValue", this.toString); }, t.prototype.setDiscriminatorValue = function (e) { return this.highLevel().attrOrCreate("discriminatorValue").setValue("" + e), this; }, t.prototype["enum"] = function () { return e.prototype.attributes.call(this, "enum", this.toAny); }, t.prototype.setEnum = function (e) { return this.highLevel().attrOrCreate("enum").setValue("" + e), this; }, t.prototype.wrapperClassName = function () { return "ObjectTypeDeclarationImpl"; }, t.prototype.kind = function () { return "ObjectTypeDeclaration"; }, t.prototype.allKinds = function () { return e.prototype.allKinds.call(this).concat("ObjectTypeDeclaration"); }, t.prototype.allWrapperClassNames = function () { return e.prototype.allWrapperClassNames.call(this).concat("RAML10.ObjectTypeDeclarationImpl"); }, t.isInstance = function (e) { if (null != e && e.allWrapperClassNames && "function" == typeof e.allWrapperClassNames)
                for (var t = 0, n = e.allWrapperClassNames(); t < n.length; t++) {
                    var r = n[t];
                    if ("RAML10.ObjectTypeDeclarationImpl" == r)
                        return !0;
                } return !1; }, t.prototype.RAMLVersion = function () { return "RAML10"; }, t.prototype.scalarsAnnotations = function () { return new Be(this.highLevel()); }, t; }(Re);
            t.ObjectTypeDeclarationImpl = Fe;
            var Be = function (e) { function t() { e.apply(this, arguments); } return z(t, e), t.prototype.minProperties = function () { var e = this.node.attr("minProperties"); if (null == e)
                return []; var t = e.annotations(), n = Q.attributesToValues(t, function (e) { return new Lt(e); }); return n; }, t.prototype.maxProperties = function () { var e = this.node.attr("maxProperties"); if (null == e)
                return []; var t = e.annotations(), n = Q.attributesToValues(t, function (e) { return new Lt(e); }); return n; }, t.prototype.additionalProperties = function () { var e = this.node.attr("additionalProperties"); if (null == e)
                return []; var t = e.annotations(), n = Q.attributesToValues(t, function (e) { return new Lt(e); }); return n; }, t.prototype.discriminator = function () { var e = this.node.attr("discriminator"); if (null == e)
                return []; var t = e.annotations(), n = Q.attributesToValues(t, function (e) { return new Lt(e); }); return n; }, t.prototype.discriminatorValue = function () { var e = this.node.attr("discriminatorValue"); if (null == e)
                return []; var t = e.annotations(), n = Q.attributesToValues(t, function (e) { return new Lt(e); }); return n; }, t.prototype["enum"] = function () { var e = this.node.attributes("enum"); return e.map(function (e) { var t = e.annotations(), n = Q.attributesToValues(t, function (e) { return new Lt(e); }); return n; }); }, t; }(Ue);
            t.ObjectTypeDeclarationScalarsAnnotationsImpl = Be;
            var Ke = function (e) { function t(t, n) { void 0 === n && (n = !0), e.call(this, "string" == typeof t ? d(t) : t, n), this.nodeOrKey = t, this.setAsTopLevel = n; } return z(t, e), t.prototype.pattern = function () { return e.prototype.attribute.call(this, "pattern", this.toString); }, t.prototype.setPattern = function (e) { return this.highLevel().attrOrCreate("pattern").setValue("" + e), this; }, t.prototype.minLength = function () { return e.prototype.attribute.call(this, "minLength", this.toNumber); }, t.prototype.setMinLength = function (e) { return this.highLevel().attrOrCreate("minLength").setValue("" + e), this; }, t.prototype.maxLength = function () { return e.prototype.attribute.call(this, "maxLength", this.toNumber); }, t.prototype.setMaxLength = function (e) { return this.highLevel().attrOrCreate("maxLength").setValue("" + e), this; }, t.prototype["enum"] = function () { return e.prototype.attributes.call(this, "enum", this.toString); }, t.prototype.setEnum = function (e) { return this.highLevel().attrOrCreate("enum").setValue("" + e), this; }, t.prototype.wrapperClassName = function () { return "StringTypeDeclarationImpl"; }, t.prototype.kind = function () { return "StringTypeDeclaration"; }, t.prototype.allKinds = function () { return e.prototype.allKinds.call(this).concat("StringTypeDeclaration"); }, t.prototype.allWrapperClassNames = function () { return e.prototype.allWrapperClassNames.call(this).concat("RAML10.StringTypeDeclarationImpl"); }, t.isInstance = function (e) { if (null != e && e.allWrapperClassNames && "function" == typeof e.allWrapperClassNames)
                for (var t = 0, n = e.allWrapperClassNames(); t < n.length; t++) {
                    var r = n[t];
                    if ("RAML10.StringTypeDeclarationImpl" == r)
                        return !0;
                } return !1; }, t.prototype.RAMLVersion = function () { return "RAML10"; }, t.prototype.scalarsAnnotations = function () { return new Ve(this.highLevel()); }, t; }(Re);
            t.StringTypeDeclarationImpl = Ke;
            var Ve = function (e) { function t() { e.apply(this, arguments); } return z(t, e), t.prototype.pattern = function () { var e = this.node.attr("pattern"); if (null == e)
                return []; var t = e.annotations(), n = Q.attributesToValues(t, function (e) { return new Lt(e); }); return n; }, t.prototype.minLength = function () { var e = this.node.attr("minLength"); if (null == e)
                return []; var t = e.annotations(), n = Q.attributesToValues(t, function (e) { return new Lt(e); }); return n; }, t.prototype.maxLength = function () { var e = this.node.attr("maxLength"); if (null == e)
                return []; var t = e.annotations(), n = Q.attributesToValues(t, function (e) { return new Lt(e); }); return n; }, t.prototype["enum"] = function () { var e = this.node.attributes("enum"); return e.map(function (e) { var t = e.annotations(), n = Q.attributesToValues(t, function (e) { return new Lt(e); }); return n; }); }, t; }(Ue);
            t.StringTypeDeclarationScalarsAnnotationsImpl = Ve;
            var je = function (e) { function t(t, n) { void 0 === n && (n = !0), e.call(this, "string" == typeof t ? y(t) : t, n), this.nodeOrKey = t, this.setAsTopLevel = n; } return z(t, e), t.prototype["enum"] = function () { return e.prototype.attributes.call(this, "enum", this.toBoolean); }, t.prototype.setEnum = function (e) { return this.highLevel().attrOrCreate("enum").setValue("" + e), this; }, t.prototype.wrapperClassName = function () { return "BooleanTypeDeclarationImpl"; }, t.prototype.kind = function () { return "BooleanTypeDeclaration"; }, t.prototype.allKinds = function () { return e.prototype.allKinds.call(this).concat("BooleanTypeDeclaration"); }, t.prototype.allWrapperClassNames = function () { return e.prototype.allWrapperClassNames.call(this).concat("RAML10.BooleanTypeDeclarationImpl"); }, t.isInstance = function (e) { if (null != e && e.allWrapperClassNames && "function" == typeof e.allWrapperClassNames)
                for (var t = 0, n = e.allWrapperClassNames(); t < n.length; t++) {
                    var r = n[t];
                    if ("RAML10.BooleanTypeDeclarationImpl" == r)
                        return !0;
                } return !1; }, t.prototype.RAMLVersion = function () { return "RAML10"; }, t.prototype.scalarsAnnotations = function () { return new We(this.highLevel()); }, t; }(Re);
            t.BooleanTypeDeclarationImpl = je;
            var We = function (e) { function t() { e.apply(this, arguments); } return z(t, e), t.prototype["enum"] = function () { var e = this.node.attributes("enum"); return e.map(function (e) { var t = e.annotations(), n = Q.attributesToValues(t, function (e) { return new Lt(e); }); return n; }); }, t; }(Ue);
            t.BooleanTypeDeclarationScalarsAnnotationsImpl = We;
            var qe = function (e) { function t(t, n) { void 0 === n && (n = !0), e.call(this, "string" == typeof t ? v(t) : t, n), this.nodeOrKey = t, this.setAsTopLevel = n; } return z(t, e), t.prototype.minimum = function () { return e.prototype.attribute.call(this, "minimum", this.toNumber); }, t.prototype.setMinimum = function (e) { return this.highLevel().attrOrCreate("minimum").setValue("" + e), this; }, t.prototype.maximum = function () { return e.prototype.attribute.call(this, "maximum", this.toNumber); }, t.prototype.setMaximum = function (e) { return this.highLevel().attrOrCreate("maximum").setValue("" + e), this; }, t.prototype["enum"] = function () { return e.prototype.attributes.call(this, "enum", this.toNumber); }, t.prototype.setEnum = function (e) { return this.highLevel().attrOrCreate("enum").setValue("" + e), this; }, t.prototype.format = function () { return e.prototype.attribute.call(this, "format", this.toString); }, t.prototype.setFormat = function (e) { return this.highLevel().attrOrCreate("format").setValue("" + e), this; }, t.prototype.multipleOf = function () { return e.prototype.attribute.call(this, "multipleOf", this.toNumber); }, t.prototype.setMultipleOf = function (e) { return this.highLevel().attrOrCreate("multipleOf").setValue("" + e), this; }, t.prototype.wrapperClassName = function () { return "NumberTypeDeclarationImpl"; }, t.prototype.kind = function () { return "NumberTypeDeclaration"; }, t.prototype.allKinds = function () { return e.prototype.allKinds.call(this).concat("NumberTypeDeclaration"); }, t.prototype.allWrapperClassNames = function () { return e.prototype.allWrapperClassNames.call(this).concat("RAML10.NumberTypeDeclarationImpl"); }, t.isInstance = function (e) { if (null != e && e.allWrapperClassNames && "function" == typeof e.allWrapperClassNames)
                for (var t = 0, n = e.allWrapperClassNames(); t < n.length; t++) {
                    var r = n[t];
                    if ("RAML10.NumberTypeDeclarationImpl" == r)
                        return !0;
                } return !1; }, t.prototype.RAMLVersion = function () { return "RAML10"; }, t.prototype.scalarsAnnotations = function () { return new Ye(this.highLevel()); }, t; }(Re);
            t.NumberTypeDeclarationImpl = qe;
            var He = function (e) { function t(t, n) { void 0 === n && (n = !0), e.call(this, "string" == typeof t ? g(t) : t, n), this.nodeOrKey = t, this.setAsTopLevel = n; } return z(t, e), t.prototype.format = function () { return e.prototype.attribute.call(this, "format", this.toString); }, t.prototype.setFormat = function (e) { return this.highLevel().attrOrCreate("format").setValue("" + e), this; }, t.prototype.wrapperClassName = function () { return "IntegerTypeDeclarationImpl"; }, t.prototype.kind = function () { return "IntegerTypeDeclaration"; }, t.prototype.allKinds = function () { return e.prototype.allKinds.call(this).concat("IntegerTypeDeclaration"); }, t.prototype.allWrapperClassNames = function () { return e.prototype.allWrapperClassNames.call(this).concat("RAML10.IntegerTypeDeclarationImpl"); }, t.isInstance = function (e) { if (null != e && e.allWrapperClassNames && "function" == typeof e.allWrapperClassNames)
                for (var t = 0, n = e.allWrapperClassNames(); t < n.length; t++) {
                    var r = n[t];
                    if ("RAML10.IntegerTypeDeclarationImpl" == r)
                        return !0;
                } return !1; }, t.prototype.RAMLVersion = function () { return "RAML10"; }, t.prototype.scalarsAnnotations = function () { return new Ge(this.highLevel()); }, t; }(qe);
            t.IntegerTypeDeclarationImpl = He;
            var Ye = function (e) { function t() { e.apply(this, arguments); } return z(t, e), t.prototype.minimum = function () { var e = this.node.attr("minimum"); if (null == e)
                return []; var t = e.annotations(), n = Q.attributesToValues(t, function (e) { return new Lt(e); }); return n; }, t.prototype.maximum = function () { var e = this.node.attr("maximum"); if (null == e)
                return []; var t = e.annotations(), n = Q.attributesToValues(t, function (e) { return new Lt(e); }); return n; }, t.prototype["enum"] = function () { var e = this.node.attributes("enum"); return e.map(function (e) { var t = e.annotations(), n = Q.attributesToValues(t, function (e) { return new Lt(e); }); return n; }); }, t.prototype.format = function () { var e = this.node.attr("format"); if (null == e)
                return []; var t = e.annotations(), n = Q.attributesToValues(t, function (e) { return new Lt(e); }); return n; }, t.prototype.multipleOf = function () { var e = this.node.attr("multipleOf"); if (null == e)
                return []; var t = e.annotations(), n = Q.attributesToValues(t, function (e) { return new Lt(e); }); return n; }, t; }(Ue);
            t.NumberTypeDeclarationScalarsAnnotationsImpl = Ye;
            var Ge = function (e) { function t() { e.apply(this, arguments); } return z(t, e), t.prototype.format = function () { var e = this.node.attr("format"); if (null == e)
                return []; var t = e.annotations(), n = Q.attributesToValues(t, function (e) { return new Lt(e); }); return n; }, t; }(Ye);
            t.IntegerTypeDeclarationScalarsAnnotationsImpl = Ge;
            var Xe = function (e) { function t(t, n) { void 0 === n && (n = !0), e.call(this, "string" == typeof t ? A(t) : t, n), this.nodeOrKey = t, this.setAsTopLevel = n; } return z(t, e), t.prototype.wrapperClassName = function () { return "DateOnlyTypeDeclarationImpl"; }, t.prototype.kind = function () { return "DateOnlyTypeDeclaration"; }, t.prototype.allKinds = function () { return e.prototype.allKinds.call(this).concat("DateOnlyTypeDeclaration"); }, t.prototype.allWrapperClassNames = function () { return e.prototype.allWrapperClassNames.call(this).concat("RAML10.DateOnlyTypeDeclarationImpl"); }, t.isInstance = function (e) { if (null != e && e.allWrapperClassNames && "function" == typeof e.allWrapperClassNames)
                for (var t = 0, n = e.allWrapperClassNames(); t < n.length; t++) {
                    var r = n[t];
                    if ("RAML10.DateOnlyTypeDeclarationImpl" == r)
                        return !0;
                } return !1; }, t.prototype.RAMLVersion = function () { return "RAML10"; }, t; }(Re);
            t.DateOnlyTypeDeclarationImpl = Xe;
            var ze = function (e) { function t(t, n) { void 0 === n && (n = !0), e.call(this, "string" == typeof t ? T(t) : t, n), this.nodeOrKey = t, this.setAsTopLevel = n; } return z(t, e), t.prototype.wrapperClassName = function () { return "TimeOnlyTypeDeclarationImpl"; }, t.prototype.kind = function () { return "TimeOnlyTypeDeclaration"; }, t.prototype.allKinds = function () { return e.prototype.allKinds.call(this).concat("TimeOnlyTypeDeclaration"); }, t.prototype.allWrapperClassNames = function () { return e.prototype.allWrapperClassNames.call(this).concat("RAML10.TimeOnlyTypeDeclarationImpl"); }, t.isInstance = function (e) { if (null != e && e.allWrapperClassNames && "function" == typeof e.allWrapperClassNames)
                for (var t = 0, n = e.allWrapperClassNames(); t < n.length; t++) {
                    var r = n[t];
                    if ("RAML10.TimeOnlyTypeDeclarationImpl" == r)
                        return !0;
                } return !1; }, t.prototype.RAMLVersion = function () { return "RAML10"; }, t; }(Re);
            t.TimeOnlyTypeDeclarationImpl = ze;
            var $e = function (e) { function t(t, n) { void 0 === n && (n = !0), e.call(this, "string" == typeof t ? E(t) : t, n), this.nodeOrKey = t, this.setAsTopLevel = n; } return z(t, e), t.prototype.wrapperClassName = function () { return "DateTimeOnlyTypeDeclarationImpl"; }, t.prototype.kind = function () { return "DateTimeOnlyTypeDeclaration"; }, t.prototype.allKinds = function () { return e.prototype.allKinds.call(this).concat("DateTimeOnlyTypeDeclaration"); }, t.prototype.allWrapperClassNames = function () { return e.prototype.allWrapperClassNames.call(this).concat("RAML10.DateTimeOnlyTypeDeclarationImpl"); }, t.isInstance = function (e) { if (null != e && e.allWrapperClassNames && "function" == typeof e.allWrapperClassNames)
                for (var t = 0, n = e.allWrapperClassNames(); t < n.length; t++) {
                    var r = n[t];
                    if ("RAML10.DateTimeOnlyTypeDeclarationImpl" == r)
                        return !0;
                } return !1; }, t.prototype.RAMLVersion = function () { return "RAML10"; }, t; }(Re);
            t.DateTimeOnlyTypeDeclarationImpl = $e;
            var Je = function (e) { function t(t, n) { void 0 === n && (n = !0), e.call(this, "string" == typeof t ? S(t) : t, n), this.nodeOrKey = t, this.setAsTopLevel = n; } return z(t, e), t.prototype.format = function () { return e.prototype.attribute.call(this, "format", this.toString); }, t.prototype.setFormat = function (e) { return this.highLevel().attrOrCreate("format").setValue("" + e), this; }, t.prototype.wrapperClassName = function () { return "DateTimeTypeDeclarationImpl"; }, t.prototype.kind = function () { return "DateTimeTypeDeclaration"; }, t.prototype.allKinds = function () { return e.prototype.allKinds.call(this).concat("DateTimeTypeDeclaration"); }, t.prototype.allWrapperClassNames = function () { return e.prototype.allWrapperClassNames.call(this).concat("RAML10.DateTimeTypeDeclarationImpl"); }, t.isInstance = function (e) { if (null != e && e.allWrapperClassNames && "function" == typeof e.allWrapperClassNames)
                for (var t = 0, n = e.allWrapperClassNames(); t < n.length; t++) {
                    var r = n[t];
                    if ("RAML10.DateTimeTypeDeclarationImpl" == r)
                        return !0;
                } return !1; }, t.prototype.RAMLVersion = function () { return "RAML10"; }, t.prototype.scalarsAnnotations = function () { return new Qe(this.highLevel()); }, t; }(Re);
            t.DateTimeTypeDeclarationImpl = Je;
            var Qe = function (e) { function t() { e.apply(this, arguments); } return z(t, e), t.prototype.format = function () { var e = this.node.attr("format"); if (null == e)
                return []; var t = e.annotations(), n = Q.attributesToValues(t, function (e) { return new Lt(e); }); return n; }, t; }(Ue);
            t.DateTimeTypeDeclarationScalarsAnnotationsImpl = Qe;
            var Ze = function (e) { function t(t, n) { void 0 === n && (n = !0), e.call(this, "string" == typeof t ? N(t) : t, n), this.nodeOrKey = t, this.setAsTopLevel = n; } return z(t, e), t.prototype.fileTypes = function () { return e.prototype.attributes.call(this, "fileTypes", function (e) { return new le(e); }); }, t.prototype.minLength = function () { return e.prototype.attribute.call(this, "minLength", this.toNumber); }, t.prototype.setMinLength = function (e) { return this.highLevel().attrOrCreate("minLength").setValue("" + e), this; }, t.prototype.maxLength = function () { return e.prototype.attribute.call(this, "maxLength", this.toNumber); }, t.prototype.setMaxLength = function (e) { return this.highLevel().attrOrCreate("maxLength").setValue("" + e), this; }, t.prototype.wrapperClassName = function () { return "FileTypeDeclarationImpl"; }, t.prototype.kind = function () { return "FileTypeDeclaration"; }, t.prototype.allKinds = function () { return e.prototype.allKinds.call(this).concat("FileTypeDeclaration"); }, t.prototype.allWrapperClassNames = function () { return e.prototype.allWrapperClassNames.call(this).concat("RAML10.FileTypeDeclarationImpl"); }, t.isInstance = function (e) { if (null != e && e.allWrapperClassNames && "function" == typeof e.allWrapperClassNames)
                for (var t = 0, n = e.allWrapperClassNames(); t < n.length; t++) {
                    var r = n[t];
                    if ("RAML10.FileTypeDeclarationImpl" == r)
                        return !0;
                } return !1; }, t.prototype.RAMLVersion = function () { return "RAML10"; }, t.prototype.scalarsAnnotations = function () { return new et(this.highLevel()); }, t; }(Re);
            t.FileTypeDeclarationImpl = Ze;
            var et = function (e) { function t() { e.apply(this, arguments); } return z(t, e), t.prototype.fileTypes = function () { var e = this.node.attributes("fileTypes"); return e.map(function (e) { var t = e.annotations(), n = Q.attributesToValues(t, function (e) { return new Lt(e); }); return n; }); }, t.prototype.minLength = function () { var e = this.node.attr("minLength"); if (null == e)
                return []; var t = e.annotations(), n = Q.attributesToValues(t, function (e) { return new Lt(e); }); return n; }, t.prototype.maxLength = function () { var e = this.node.attr("maxLength"); if (null == e)
                return []; var t = e.annotations(), n = Q.attributesToValues(t, function (e) { return new Lt(e); }); return n; }, t; }(Ue);
            t.FileTypeDeclarationScalarsAnnotationsImpl = et;
            var tt = function (e) { function t(t, n) { void 0 === n && (n = !0), e.call(this, "string" == typeof t ? _(t) : t, n), this.nodeOrKey = t, this.setAsTopLevel = n; } return z(t, e), t.prototype.code = function () { return e.prototype.attribute.call(this, "code", function (e) { return new se(e); }); }, t.prototype.headers = function () { return e.prototype.elements.call(this, "headers"); }, t.prototype.body = function () { return e.prototype.elements.call(this, "body"); }, t.prototype.description = function () { return e.prototype.attribute.call(this, "description", function (e) { return new pe(e); }); }, t.prototype.annotations = function () { return e.prototype.attributes.call(this, "annotations", function (e) { return new Lt(e); }); }, t.prototype.wrapperClassName = function () { return "ResponseImpl"; }, t.prototype.kind = function () { return "Response"; }, t.prototype.allKinds = function () { return e.prototype.allKinds.call(this).concat("Response"); }, t.prototype.allWrapperClassNames = function () { return e.prototype.allWrapperClassNames.call(this).concat("RAML10.ResponseImpl"); }, t.isInstance = function (e) { if (null != e && e.allWrapperClassNames && "function" == typeof e.allWrapperClassNames)
                for (var t = 0, n = e.allWrapperClassNames(); t < n.length; t++) {
                    var r = n[t];
                    if ("RAML10.ResponseImpl" == r)
                        return !0;
                } return !1; }, t.prototype.RAMLVersion = function () { return "RAML10"; }, t.prototype.isOkRange = function () { return ee.isOkRange(this); }, t.prototype.parametrizedProperties = function () { return ee.getTemplateParametrizedProperties(this); }, t.prototype.scalarsAnnotations = function () { return new nt(this.highLevel()); }, t; }(te);
            t.ResponseImpl = tt;
            var nt = function () { function e(e) { this.node = e; } return e.prototype.description = function () { var e = this.node.attr("description"); if (null == e)
                return []; var t = e.annotations(), n = Q.attributesToValues(t, function (e) { return new Lt(e); }); return n; }, e; }();
            t.ResponseScalarsAnnotationsImpl = nt;
            var rt = function (e) { function t(t, n) { void 0 === n && (n = !0), e.call(this, "string" == typeof t ? b(t) : t, n), this.nodeOrKey = t, this.setAsTopLevel = n; } return z(t, e), t.prototype.annotations = function () { return e.prototype.attributes.call(this, "annotations", function (e) { return new Lt(e); }); }, t.prototype.wrapperClassName = function () { return "SecuritySchemePartImpl"; }, t.prototype.kind = function () { return "SecuritySchemePart"; }, t.prototype.allKinds = function () { return e.prototype.allKinds.call(this).concat("SecuritySchemePart"); }, t.prototype.allWrapperClassNames = function () { return e.prototype.allWrapperClassNames.call(this).concat("RAML10.SecuritySchemePartImpl"); }, t.isInstance = function (e) { if (null != e && e.allWrapperClassNames && "function" == typeof e.allWrapperClassNames)
                for (var t = 0, n = e.allWrapperClassNames(); t < n.length; t++) {
                    var r = n[t];
                    if ("RAML10.SecuritySchemePartImpl" == r)
                        return !0;
                } return !1; }, t.prototype.RAMLVersion = function () { return "RAML10"; }, t; }(Ie);
            t.SecuritySchemePartImpl = rt;
            var it = function (e) { function t(t, n) { void 0 === n && (n = !0), e.call(this, "string" == typeof t ? s(t) : t, n), this.nodeOrKey = t, this.setAsTopLevel = n; } return z(t, e), t.prototype.body = function () { return e.prototype.elements.call(this, "body"); }, t.prototype.protocols = function () { return e.prototype.attributes.call(this, "protocols", this.toString); }, t.prototype.setProtocols = function (e) { return this.highLevel().attrOrCreate("protocols").setValue("" + e), this; }, t.prototype.is = function () { return e.prototype.attributes.call(this, "is", function (e) { return new be(e); }); }, t.prototype.securedBy = function () { return e.prototype.attributes.call(this, "securedBy", function (e) { return new at(e); }); }, t.prototype.description = function () { return e.prototype.attribute.call(this, "description", function (e) { return new pe(e); }); }, t.prototype.displayName = function () { return e.prototype.attribute.call(this, "displayName", this.toString); }, t.prototype.setDisplayName = function (e) { return this.highLevel().attrOrCreate("displayName").setValue("" + e), this; }, t.prototype.wrapperClassName = function () { return "MethodBaseImpl"; }, t.prototype.kind = function () { return "MethodBase"; }, t.prototype.allKinds = function () { return e.prototype.allKinds.call(this).concat("MethodBase"); }, t.prototype.allWrapperClassNames = function () { return e.prototype.allWrapperClassNames.call(this).concat("RAML10.MethodBaseImpl"); }, t.isInstance = function (e) { if (null != e && e.allWrapperClassNames && "function" == typeof e.allWrapperClassNames)
                for (var t = 0, n = e.allWrapperClassNames(); t < n.length; t++) {
                    var r = n[t];
                    if ("RAML10.MethodBaseImpl" == r)
                        return !0;
                } return !1; }, t.prototype.RAMLVersion = function () { return "RAML10"; }, t.prototype.scalarsAnnotations = function () { return new Tt(this.highLevel()); }, t; }(Ie);
            t.MethodBaseImpl = it;
            var at = function (e) {
                function t() { e.apply(this, arguments); }
                return z(t, e), t.prototype.wrapperClassName = function () { return "SecuritySchemeRefImpl"; }, t.prototype.kind = function () { return "SecuritySchemeRef"; }, t.prototype.allKinds = function () { return e.prototype.allKinds.call(this).concat("SecuritySchemeRef"); }, t.prototype.allWrapperClassNames = function () { return e.prototype.allWrapperClassNames.call(this).concat("RAML10.SecuritySchemeRefImpl"); }, t.isInstance = function (e) { if (null != e && e.allWrapperClassNames && "function" == typeof e.allWrapperClassNames)
                    for (var t = 0, n = e.allWrapperClassNames(); t < n.length; t++) {
                        var r = n[t];
                        if ("RAML10.SecuritySchemeRefImpl" == r)
                            return !0;
                    } return !1; }, t.prototype.RAMLVersion = function () { return "RAML10"; }, t.prototype.securitySchemeName = function () {
                    return ee.securitySchemeName(this);
                }, t.prototype.securityScheme = function () { return ee.securityScheme(this); }, t;
            }(_e);
            t.SecuritySchemeRefImpl = at;
            var ot = function (e) { function t(t, n) { void 0 === n && (n = !0), e.call(this, "string" == typeof t ? I(t) : t, n), this.nodeOrKey = t, this.setAsTopLevel = n; } return z(t, e), t.prototype.name = function () { return e.prototype.attribute.call(this, "name", this.toString); }, t.prototype.setName = function (e) { return this.highLevel().attrOrCreate("name").setValue("" + e), this; }, t.prototype.type = function () { return e.prototype.attribute.call(this, "type", this.toString); }, t.prototype.setType = function (e) { return this.highLevel().attrOrCreate("type").setValue("" + e), this; }, t.prototype.description = function () { return e.prototype.attribute.call(this, "description", function (e) { return new pe(e); }); }, t.prototype.describedBy = function () { return e.prototype.element.call(this, "describedBy"); }, t.prototype.displayName = function () { return e.prototype.attribute.call(this, "displayName", this.toString); }, t.prototype.setDisplayName = function (e) { return this.highLevel().attrOrCreate("displayName").setValue("" + e), this; }, t.prototype.settings = function () { return e.prototype.element.call(this, "settings"); }, t.prototype.wrapperClassName = function () { return "AbstractSecuritySchemeImpl"; }, t.prototype.kind = function () { return "AbstractSecurityScheme"; }, t.prototype.allKinds = function () { return e.prototype.allKinds.call(this).concat("AbstractSecurityScheme"); }, t.prototype.allWrapperClassNames = function () { return e.prototype.allWrapperClassNames.call(this).concat("RAML10.AbstractSecuritySchemeImpl"); }, t.isInstance = function (e) { if (null != e && e.allWrapperClassNames && "function" == typeof e.allWrapperClassNames)
                for (var t = 0, n = e.allWrapperClassNames(); t < n.length; t++) {
                    var r = n[t];
                    if ("RAML10.AbstractSecuritySchemeImpl" == r)
                        return !0;
                } return !1; }, t.prototype.RAMLVersion = function () { return "RAML10"; }, t.prototype.scalarsAnnotations = function () { return new gt(this.highLevel()); }, t; }(te);
            t.AbstractSecuritySchemeImpl = ot;
            var st = function (e) { function t(t, n) { void 0 === n && (n = !0), e.call(this, "string" == typeof t ? R(t) : t, n), this.nodeOrKey = t, this.setAsTopLevel = n; } return z(t, e), t.prototype.wrapperClassName = function () { return "SecuritySchemeSettingsImpl"; }, t.prototype.kind = function () { return "SecuritySchemeSettings"; }, t.prototype.allKinds = function () { return e.prototype.allKinds.call(this).concat("SecuritySchemeSettings"); }, t.prototype.allWrapperClassNames = function () { return e.prototype.allWrapperClassNames.call(this).concat("RAML10.SecuritySchemeSettingsImpl"); }, t.isInstance = function (e) { if (null != e && e.allWrapperClassNames && "function" == typeof e.allWrapperClassNames)
                for (var t = 0, n = e.allWrapperClassNames(); t < n.length; t++) {
                    var r = n[t];
                    if ("RAML10.SecuritySchemeSettingsImpl" == r)
                        return !0;
                } return !1; }, t.prototype.RAMLVersion = function () { return "RAML10"; }, t; }(te);
            t.SecuritySchemeSettingsImpl = st;
            var ut = function (e) { function t(t, n) { void 0 === n && (n = !0), e.call(this, "string" == typeof t ? M(t) : t, n), this.nodeOrKey = t, this.setAsTopLevel = n; } return z(t, e), t.prototype.requestTokenUri = function () { return e.prototype.attribute.call(this, "requestTokenUri", function (e) { return new ue(e); }); }, t.prototype.authorizationUri = function () { return e.prototype.attribute.call(this, "authorizationUri", function (e) { return new ue(e); }); }, t.prototype.tokenCredentialsUri = function () { return e.prototype.attribute.call(this, "tokenCredentialsUri", function (e) { return new ue(e); }); }, t.prototype.signatures = function () { return e.prototype.attributes.call(this, "signatures", this.toString); }, t.prototype.setSignatures = function (e) { return this.highLevel().attrOrCreate("signatures").setValue("" + e), this; }, t.prototype.wrapperClassName = function () { return "OAuth1SecuritySchemeSettingsImpl"; }, t.prototype.kind = function () { return "OAuth1SecuritySchemeSettings"; }, t.prototype.allKinds = function () { return e.prototype.allKinds.call(this).concat("OAuth1SecuritySchemeSettings"); }, t.prototype.allWrapperClassNames = function () { return e.prototype.allWrapperClassNames.call(this).concat("RAML10.OAuth1SecuritySchemeSettingsImpl"); }, t.isInstance = function (e) { if (null != e && e.allWrapperClassNames && "function" == typeof e.allWrapperClassNames)
                for (var t = 0, n = e.allWrapperClassNames(); t < n.length; t++) {
                    var r = n[t];
                    if ("RAML10.OAuth1SecuritySchemeSettingsImpl" == r)
                        return !0;
                } return !1; }, t.prototype.RAMLVersion = function () { return "RAML10"; }, t.prototype.scalarsAnnotations = function () { return new lt(this.highLevel()); }, t; }(st);
            t.OAuth1SecuritySchemeSettingsImpl = ut;
            var lt = function () { function e(e) { this.node = e; } return e.prototype.requestTokenUri = function () { var e = this.node.attr("requestTokenUri"); if (null == e)
                return []; var t = e.annotations(), n = Q.attributesToValues(t, function (e) { return new Lt(e); }); return n; }, e.prototype.authorizationUri = function () { var e = this.node.attr("authorizationUri"); if (null == e)
                return []; var t = e.annotations(), n = Q.attributesToValues(t, function (e) { return new Lt(e); }); return n; }, e.prototype.tokenCredentialsUri = function () { var e = this.node.attr("tokenCredentialsUri"); if (null == e)
                return []; var t = e.annotations(), n = Q.attributesToValues(t, function (e) { return new Lt(e); }); return n; }, e.prototype.signatures = function () { var e = this.node.attributes("signatures"); return e.map(function (e) { var t = e.annotations(), n = Q.attributesToValues(t, function (e) { return new Lt(e); }); return n; }); }, e; }();
            t.OAuth1SecuritySchemeSettingsScalarsAnnotationsImpl = lt;
            var pt = function (e) { function t(t, n) { void 0 === n && (n = !0), e.call(this, "string" == typeof t ? w(t) : t, n), this.nodeOrKey = t, this.setAsTopLevel = n; } return z(t, e), t.prototype.accessTokenUri = function () { return e.prototype.attribute.call(this, "accessTokenUri", function (e) { return new ue(e); }); }, t.prototype.authorizationUri = function () { return e.prototype.attribute.call(this, "authorizationUri", function (e) { return new ue(e); }); }, t.prototype.authorizationGrants = function () { return e.prototype.attributes.call(this, "authorizationGrants", this.toString); }, t.prototype.setAuthorizationGrants = function (e) { return this.highLevel().attrOrCreate("authorizationGrants").setValue("" + e), this; }, t.prototype.scopes = function () { return e.prototype.attributes.call(this, "scopes", this.toString); }, t.prototype.setScopes = function (e) { return this.highLevel().attrOrCreate("scopes").setValue("" + e), this; }, t.prototype.wrapperClassName = function () { return "OAuth2SecuritySchemeSettingsImpl"; }, t.prototype.kind = function () { return "OAuth2SecuritySchemeSettings"; }, t.prototype.allKinds = function () { return e.prototype.allKinds.call(this).concat("OAuth2SecuritySchemeSettings"); }, t.prototype.allWrapperClassNames = function () { return e.prototype.allWrapperClassNames.call(this).concat("RAML10.OAuth2SecuritySchemeSettingsImpl"); }, t.isInstance = function (e) { if (null != e && e.allWrapperClassNames && "function" == typeof e.allWrapperClassNames)
                for (var t = 0, n = e.allWrapperClassNames(); t < n.length; t++) {
                    var r = n[t];
                    if ("RAML10.OAuth2SecuritySchemeSettingsImpl" == r)
                        return !0;
                } return !1; }, t.prototype.RAMLVersion = function () { return "RAML10"; }, t.prototype.scalarsAnnotations = function () { return new ct(this.highLevel()); }, t; }(st);
            t.OAuth2SecuritySchemeSettingsImpl = pt;
            var ct = function () { function e(e) { this.node = e; } return e.prototype.accessTokenUri = function () { var e = this.node.attr("accessTokenUri"); if (null == e)
                return []; var t = e.annotations(), n = Q.attributesToValues(t, function (e) { return new Lt(e); }); return n; }, e.prototype.authorizationUri = function () { var e = this.node.attr("authorizationUri"); if (null == e)
                return []; var t = e.annotations(), n = Q.attributesToValues(t, function (e) { return new Lt(e); }); return n; }, e.prototype.authorizationGrants = function () { var e = this.node.attributes("authorizationGrants"); return e.map(function (e) { var t = e.annotations(), n = Q.attributesToValues(t, function (e) { return new Lt(e); }); return n; }); }, e.prototype.scopes = function () { var e = this.node.attributes("scopes"); return e.map(function (e) { var t = e.annotations(), n = Q.attributesToValues(t, function (e) { return new Lt(e); }); return n; }); }, e; }();
            t.OAuth2SecuritySchemeSettingsScalarsAnnotationsImpl = ct;
            var ft = function (e) { function t(t, n) { void 0 === n && (n = !0), e.call(this, "string" == typeof t ? C(t) : t, n), this.nodeOrKey = t, this.setAsTopLevel = n; } return z(t, e), t.prototype.settings = function () { return e.prototype.element.call(this, "settings"); }, t.prototype.wrapperClassName = function () { return "OAuth2SecuritySchemeImpl"; }, t.prototype.kind = function () { return "OAuth2SecurityScheme"; }, t.prototype.allKinds = function () { return e.prototype.allKinds.call(this).concat("OAuth2SecurityScheme"); }, t.prototype.allWrapperClassNames = function () { return e.prototype.allWrapperClassNames.call(this).concat("RAML10.OAuth2SecuritySchemeImpl"); }, t.isInstance = function (e) { if (null != e && e.allWrapperClassNames && "function" == typeof e.allWrapperClassNames)
                for (var t = 0, n = e.allWrapperClassNames(); t < n.length; t++) {
                    var r = n[t];
                    if ("RAML10.OAuth2SecuritySchemeImpl" == r)
                        return !0;
                } return !1; }, t.prototype.RAMLVersion = function () { return "RAML10"; }, t; }(ot);
            t.OAuth2SecuritySchemeImpl = ft;
            var mt = function (e) { function t(t, n) { void 0 === n && (n = !0), e.call(this, "string" == typeof t ? L(t) : t, n), this.nodeOrKey = t, this.setAsTopLevel = n; } return z(t, e), t.prototype.settings = function () { return e.prototype.element.call(this, "settings"); }, t.prototype.wrapperClassName = function () { return "OAuth1SecuritySchemeImpl"; }, t.prototype.kind = function () { return "OAuth1SecurityScheme"; }, t.prototype.allKinds = function () { return e.prototype.allKinds.call(this).concat("OAuth1SecurityScheme"); }, t.prototype.allWrapperClassNames = function () { return e.prototype.allWrapperClassNames.call(this).concat("RAML10.OAuth1SecuritySchemeImpl"); }, t.isInstance = function (e) { if (null != e && e.allWrapperClassNames && "function" == typeof e.allWrapperClassNames)
                for (var t = 0, n = e.allWrapperClassNames(); t < n.length; t++) {
                    var r = n[t];
                    if ("RAML10.OAuth1SecuritySchemeImpl" == r)
                        return !0;
                } return !1; }, t.prototype.RAMLVersion = function () { return "RAML10"; }, t; }(ot);
            t.OAuth1SecuritySchemeImpl = mt;
            var ht = function (e) { function t(t, n) { void 0 === n && (n = !0), e.call(this, "string" == typeof t ? P(t) : t, n), this.nodeOrKey = t, this.setAsTopLevel = n; } return z(t, e), t.prototype.settings = function () { return e.prototype.element.call(this, "settings"); }, t.prototype.wrapperClassName = function () { return "PassThroughSecuritySchemeImpl"; }, t.prototype.kind = function () { return "PassThroughSecurityScheme"; }, t.prototype.allKinds = function () { return e.prototype.allKinds.call(this).concat("PassThroughSecurityScheme"); }, t.prototype.allWrapperClassNames = function () { return e.prototype.allWrapperClassNames.call(this).concat("RAML10.PassThroughSecuritySchemeImpl"); }, t.isInstance = function (e) { if (null != e && e.allWrapperClassNames && "function" == typeof e.allWrapperClassNames)
                for (var t = 0, n = e.allWrapperClassNames(); t < n.length; t++) {
                    var r = n[t];
                    if ("RAML10.PassThroughSecuritySchemeImpl" == r)
                        return !0;
                } return !1; }, t.prototype.RAMLVersion = function () { return "RAML10"; }, t; }(ot);
            t.PassThroughSecuritySchemeImpl = ht;
            var dt = function (e) { function t(t, n) { void 0 === n && (n = !0), e.call(this, "string" == typeof t ? O(t) : t, n), this.nodeOrKey = t, this.setAsTopLevel = n; } return z(t, e), t.prototype.wrapperClassName = function () { return "BasicSecuritySchemeImpl"; }, t.prototype.kind = function () { return "BasicSecurityScheme"; }, t.prototype.allKinds = function () { return e.prototype.allKinds.call(this).concat("BasicSecurityScheme"); }, t.prototype.allWrapperClassNames = function () { return e.prototype.allWrapperClassNames.call(this).concat("RAML10.BasicSecuritySchemeImpl"); }, t.isInstance = function (e) { if (null != e && e.allWrapperClassNames && "function" == typeof e.allWrapperClassNames)
                for (var t = 0, n = e.allWrapperClassNames(); t < n.length; t++) {
                    var r = n[t];
                    if ("RAML10.BasicSecuritySchemeImpl" == r)
                        return !0;
                } return !1; }, t.prototype.RAMLVersion = function () { return "RAML10"; }, t; }(ot);
            t.BasicSecuritySchemeImpl = dt;
            var yt = function (e) { function t(t, n) { void 0 === n && (n = !0), e.call(this, "string" == typeof t ? D(t) : t, n), this.nodeOrKey = t, this.setAsTopLevel = n; } return z(t, e), t.prototype.wrapperClassName = function () { return "DigestSecuritySchemeImpl"; }, t.prototype.kind = function () { return "DigestSecurityScheme"; }, t.prototype.allKinds = function () { return e.prototype.allKinds.call(this).concat("DigestSecurityScheme"); }, t.prototype.allWrapperClassNames = function () { return e.prototype.allWrapperClassNames.call(this).concat("RAML10.DigestSecuritySchemeImpl"); }, t.isInstance = function (e) { if (null != e && e.allWrapperClassNames && "function" == typeof e.allWrapperClassNames)
                for (var t = 0, n = e.allWrapperClassNames(); t < n.length; t++) {
                    var r = n[t];
                    if ("RAML10.DigestSecuritySchemeImpl" == r)
                        return !0;
                } return !1; }, t.prototype.RAMLVersion = function () { return "RAML10"; }, t; }(ot);
            t.DigestSecuritySchemeImpl = yt;
            var vt = function (e) { function t(t, n) { void 0 === n && (n = !0), e.call(this, "string" == typeof t ? U(t) : t, n), this.nodeOrKey = t, this.setAsTopLevel = n; } return z(t, e), t.prototype.wrapperClassName = function () { return "CustomSecuritySchemeImpl"; }, t.prototype.kind = function () { return "CustomSecurityScheme"; }, t.prototype.allKinds = function () { return e.prototype.allKinds.call(this).concat("CustomSecurityScheme"); }, t.prototype.allWrapperClassNames = function () { return e.prototype.allWrapperClassNames.call(this).concat("RAML10.CustomSecuritySchemeImpl"); }, t.isInstance = function (e) { if (null != e && e.allWrapperClassNames && "function" == typeof e.allWrapperClassNames)
                for (var t = 0, n = e.allWrapperClassNames(); t < n.length; t++) {
                    var r = n[t];
                    if ("RAML10.CustomSecuritySchemeImpl" == r)
                        return !0;
                } return !1; }, t.prototype.RAMLVersion = function () { return "RAML10"; }, t; }(ot);
            t.CustomSecuritySchemeImpl = vt;
            var gt = function () { function e(e) { this.node = e; } return e.prototype.type = function () { var e = this.node.attr("type"); if (null == e)
                return []; var t = e.annotations(), n = Q.attributesToValues(t, function (e) { return new Lt(e); }); return n; }, e.prototype.description = function () { var e = this.node.attr("description"); if (null == e)
                return []; var t = e.annotations(), n = Q.attributesToValues(t, function (e) { return new Lt(e); }); return n; }, e.prototype.displayName = function () { var e = this.node.attr("displayName"); if (null == e)
                return []; var t = e.annotations(), n = Q.attributesToValues(t, function (e) { return new Lt(e); }); return n; }, e; }();
            t.AbstractSecuritySchemeScalarsAnnotationsImpl = gt;
            var At = function (e) { function t(t, n) { void 0 === n && (n = !0), e.call(this, "string" == typeof t ? x(t) : t, n), this.nodeOrKey = t, this.setAsTopLevel = n; } return z(t, e), t.prototype.method = function () { return e.prototype.attribute.call(this, "method", this.toString); }, t.prototype.setMethod = function (e) { return this.highLevel().attrOrCreate("method").setValue("" + e), this; }, t.prototype.displayName = function () { return e.prototype.attribute.call(this, "displayName", this.toString); }, t.prototype.setDisplayName = function (e) { return this.highLevel().attrOrCreate("displayName").setValue("" + e), this; }, t.prototype.wrapperClassName = function () { return "MethodImpl"; }, t.prototype.kind = function () { return "Method"; }, t.prototype.allKinds = function () { return e.prototype.allKinds.call(this).concat("Method"); }, t.prototype.allWrapperClassNames = function () { return e.prototype.allWrapperClassNames.call(this).concat("RAML10.MethodImpl"); }, t.isInstance = function (e) { if (null != e && e.allWrapperClassNames && "function" == typeof e.allWrapperClassNames)
                for (var t = 0, n = e.allWrapperClassNames(); t < n.length; t++) {
                    var r = n[t];
                    if ("RAML10.MethodImpl" == r)
                        return !0;
                } return !1; }, t.prototype.RAMLVersion = function () { return "RAML10"; }, t.prototype.parentResource = function () { return ee.parentResource(this); }, t.prototype.ownerApi = function () { return ee.ownerApi(this); }, t.prototype.methodId = function () { return ee.methodId(this); }, t.prototype.allSecuredBy = function () { return ee.allSecuredBy(this); }, t.prototype.parametrizedProperties = function () { return ee.getTemplateParametrizedProperties(this); }, t.prototype.scalarsAnnotations = function () { return new Et(this.highLevel()); }, t; }(it);
            t.MethodImpl = At;
            var Tt = function () { function e(e) { this.node = e; } return e.prototype.protocols = function () { var e = this.node.attributes("protocols"); return e.map(function (e) { var t = e.annotations(), n = Q.attributesToValues(t, function (e) { return new Lt(e); }); return n; }); }, e.prototype.is = function () { var e = this.node.attributes("is"); return e.map(function (e) { var t = e.annotations(), n = Q.attributesToValues(t, function (e) { return new Lt(e); }); return n; }); }, e.prototype.securedBy = function () { var e = this.node.attributes("securedBy"); return e.map(function (e) { var t = e.annotations(), n = Q.attributesToValues(t, function (e) { return new Lt(e); }); return n; }); }, e.prototype.description = function () { var e = this.node.attr("description"); if (null == e)
                return []; var t = e.annotations(), n = Q.attributesToValues(t, function (e) { return new Lt(e); }); return n; }, e.prototype.displayName = function () { var e = this.node.attr("displayName"); if (null == e)
                return []; var t = e.annotations(), n = Q.attributesToValues(t, function (e) { return new Lt(e); }); return n; }, e; }();
            t.MethodBaseScalarsAnnotationsImpl = Tt;
            var Et = function (e) { function t() { e.apply(this, arguments); } return z(t, e), t.prototype.displayName = function () { var e = this.node.attr("displayName"); if (null == e)
                return []; var t = e.annotations(), n = Q.attributesToValues(t, function (e) { return new Lt(e); }); return n; }, t; }(Tt);
            t.MethodScalarsAnnotationsImpl = Et;
            var St = function (e) { function t(t, n) { void 0 === n && (n = !0), e.call(this, "string" == typeof t ? o(t) : t, n), this.nodeOrKey = t, this.setAsTopLevel = n; } return z(t, e), t.prototype.name = function () { return e.prototype.attribute.call(this, "name", this.toString); }, t.prototype.setName = function (e) { return this.highLevel().attrOrCreate("name").setValue("" + e), this; }, t.prototype.usage = function () { return e.prototype.attribute.call(this, "usage", this.toString); }, t.prototype.setUsage = function (e) { return this.highLevel().attrOrCreate("usage").setValue("" + e), this; }, t.prototype.displayName = function () { return e.prototype.attribute.call(this, "displayName", this.toString); }, t.prototype.setDisplayName = function (e) { return this.highLevel().attrOrCreate("displayName").setValue("" + e), this; }, t.prototype.uses = function () { return e.prototype.elements.call(this, "uses"); }, t.prototype.wrapperClassName = function () { return "TraitImpl"; }, t.prototype.kind = function () { return "Trait"; }, t.prototype.allKinds = function () { return e.prototype.allKinds.call(this).concat("Trait"); }, t.prototype.allWrapperClassNames = function () { return e.prototype.allWrapperClassNames.call(this).concat("RAML10.TraitImpl"); }, t.isInstance = function (e) { if (null != e && e.allWrapperClassNames && "function" == typeof e.allWrapperClassNames)
                for (var t = 0, n = e.allWrapperClassNames(); t < n.length; t++) {
                    var r = n[t];
                    if ("RAML10.TraitImpl" == r)
                        return !0;
                } return !1; }, t.prototype.RAMLVersion = function () { return "RAML10"; }, t.prototype.parametrizedProperties = function () { return ee.getTemplateParametrizedProperties(this); }, t.prototype.scalarsAnnotations = function () { return new Nt(this.highLevel()); }, t; }(it);
            t.TraitImpl = St;
            var Nt = function (e) { function t() { e.apply(this, arguments); } return z(t, e), t.prototype.usage = function () { var e = this.node.attr("usage"); if (null == e)
                return []; var t = e.annotations(), n = Q.attributesToValues(t, function (e) { return new Lt(e); }); return n; }, t.prototype.displayName = function () { var e = this.node.attr("displayName"); if (null == e)
                return []; var t = e.annotations(), n = Q.attributesToValues(t, function (e) { return new Lt(e); }); return n; }, t; }(Tt);
            t.TraitScalarsAnnotationsImpl = Nt;
            var _t = function (e) { function t() { e.apply(this, arguments); } return z(t, e), t.prototype.wrapperClassName = function () { return "ResourceTypeRefImpl"; }, t.prototype.kind = function () { return "ResourceTypeRef"; }, t.prototype.allKinds = function () { return e.prototype.allKinds.call(this).concat("ResourceTypeRef"); }, t.prototype.allWrapperClassNames = function () { return e.prototype.allWrapperClassNames.call(this).concat("RAML10.ResourceTypeRefImpl"); }, t.isInstance = function (e) { if (null != e && e.allWrapperClassNames && "function" == typeof e.allWrapperClassNames)
                for (var t = 0, n = e.allWrapperClassNames(); t < n.length; t++) {
                    var r = n[t];
                    if ("RAML10.ResourceTypeRefImpl" == r)
                        return !0;
                } return !1; }, t.prototype.RAMLVersion = function () { return "RAML10"; }, t.prototype.resourceType = function () { return ee.referencedResourceType(this); }, t; }(_e);
            t.ResourceTypeRefImpl = _t;
            var bt = function (e) { function t(t, n) { void 0 === n && (n = !0), e.call(this, "string" == typeof t ? F(t) : t, n), this.nodeOrKey = t, this.setAsTopLevel = n; } return z(t, e), t.prototype.methods = function () { return e.prototype.elements.call(this, "methods"); }, t.prototype.is = function () { return e.prototype.attributes.call(this, "is", function (e) { return new be(e); }); }, t.prototype.type = function () { return e.prototype.attribute.call(this, "type", function (e) { return new _t(e); }); }, t.prototype.description = function () { return e.prototype.attribute.call(this, "description", function (e) { return new pe(e); }); }, t.prototype.securedBy = function () { return e.prototype.attributes.call(this, "securedBy", function (e) { return new at(e); }); }, t.prototype.uriParameters_original = function () { return e.prototype.elements.call(this, "uriParameters"); }, t.prototype.wrapperClassName = function () { return "ResourceBaseImpl"; }, t.prototype.kind = function () { return "ResourceBase"; }, t.prototype.allKinds = function () { return e.prototype.allKinds.call(this).concat("ResourceBase"); }, t.prototype.allWrapperClassNames = function () { return e.prototype.allWrapperClassNames.call(this).concat("RAML10.ResourceBaseImpl"); }, t.isInstance = function (e) { if (null != e && e.allWrapperClassNames && "function" == typeof e.allWrapperClassNames)
                for (var t = 0, n = e.allWrapperClassNames(); t < n.length; t++) {
                    var r = n[t];
                    if ("RAML10.ResourceBaseImpl" == r)
                        return !0;
                } return !1; }, t.prototype.RAMLVersion = function () { return "RAML10"; }, t.prototype.uriParameters = function () { return ee.uriParametersPrimary(this); }, t.prototype.allUriParameters = function () { return ee.uriParameters(this); }, t.prototype.allSecuredBy = function () { return ee.allSecuredBy(this); }, t.prototype.scalarsAnnotations = function () { return new Rt(this.highLevel()); }, t; }(te);
            t.ResourceBaseImpl = bt;
            var It = function (e) { function t(t, n) { void 0 === n && (n = !0), e.call(this, "string" == typeof t ? B(t) : t, n), this.nodeOrKey = t, this.setAsTopLevel = n; } return z(t, e), t.prototype.relativeUri = function () { return e.prototype.attribute.call(this, "relativeUri", function (e) { return new ae(e); }); }, t.prototype.displayName = function () { return e.prototype.attribute.call(this, "displayName", this.toString); }, t.prototype.setDisplayName = function (e) { return this.highLevel().attrOrCreate("displayName").setValue("" + e), this; }, t.prototype.resources = function () { return e.prototype.elements.call(this, "resources"); }, t.prototype.description = function () { return e.prototype.attribute.call(this, "description", function (e) { return new pe(e); }); }, t.prototype.annotations = function () { return e.prototype.attributes.call(this, "annotations", function (e) { return new Lt(e); }); }, t.prototype.wrapperClassName = function () { return "ResourceImpl"; }, t.prototype.kind = function () { return "Resource"; }, t.prototype.allKinds = function () { return e.prototype.allKinds.call(this).concat("Resource"); }, t.prototype.allWrapperClassNames = function () { return e.prototype.allWrapperClassNames.call(this).concat("RAML10.ResourceImpl"); }, t.isInstance = function (e) { if (null != e && e.allWrapperClassNames && "function" == typeof e.allWrapperClassNames)
                for (var t = 0, n = e.allWrapperClassNames(); t < n.length; t++) {
                    var r = n[t];
                    if ("RAML10.ResourceImpl" == r)
                        return !0;
                } return !1; }, t.prototype.RAMLVersion = function () { return "RAML10"; }, t.prototype.completeRelativeUri = function () { return ee.completeRelativeUri(this); }, t.prototype.absoluteUri = function () { return ee.absoluteUri(this); }, t.prototype.parentResource = function () { return ee.parent(this); }, t.prototype.childResource = function (e) { return ee.childResource(this, e); }, t.prototype.childMethod = function (e) { return ee.childMethod(this, e); }, t.prototype.ownerApi = function () { return ee.ownerApi(this); }, t.prototype.absoluteUriParameters = function () { return ee.absoluteUriParameters(this); }, t.prototype.scalarsAnnotations = function () { return new Mt(this.highLevel()); }, t; }(bt);
            t.ResourceImpl = It;
            var Rt = function () { function e(e) { this.node = e; } return e.prototype.is = function () { var e = this.node.attributes("is"); return e.map(function (e) { var t = e.annotations(), n = Q.attributesToValues(t, function (e) { return new Lt(e); }); return n; }); }, e.prototype.type = function () { var e = this.node.attr("type"); if (null == e)
                return []; var t = e.annotations(), n = Q.attributesToValues(t, function (e) { return new Lt(e); }); return n; }, e.prototype.description = function () { var e = this.node.attr("description"); if (null == e)
                return []; var t = e.annotations(), n = Q.attributesToValues(t, function (e) { return new Lt(e); }); return n; }, e.prototype.securedBy = function () { var e = this.node.attributes("securedBy"); return e.map(function (e) { var t = e.annotations(), n = Q.attributesToValues(t, function (e) { return new Lt(e); }); return n; }); }, e; }();
            t.ResourceBaseScalarsAnnotationsImpl = Rt;
            var Mt = function (e) { function t() { e.apply(this, arguments); } return z(t, e), t.prototype.displayName = function () { var e = this.node.attr("displayName"); if (null == e)
                return []; var t = e.annotations(), n = Q.attributesToValues(t, function (e) { return new Lt(e); }); return n; }, t.prototype.description = function () { var e = this.node.attr("description"); if (null == e)
                return []; var t = e.annotations(), n = Q.attributesToValues(t, function (e) { return new Lt(e); }); return n; }, t; }(Rt);
            t.ResourceScalarsAnnotationsImpl = Mt;
            var wt = function (e) { function t(t, n) { void 0 === n && (n = !0), e.call(this, "string" == typeof t ? k(t) : t, n), this.nodeOrKey = t, this.setAsTopLevel = n; } return z(t, e), t.prototype.displayName = function () { return e.prototype.attribute.call(this, "displayName", this.toString); }, t.prototype.setDisplayName = function (e) { return this.highLevel().attrOrCreate("displayName").setValue("" + e), this; }, t.prototype.name = function () { return e.prototype.attribute.call(this, "name", this.toString); }, t.prototype.setName = function (e) { return this.highLevel().attrOrCreate("name").setValue("" + e), this; }, t.prototype.usage = function () { return e.prototype.attribute.call(this, "usage", this.toString); }, t.prototype.setUsage = function (e) { return this.highLevel().attrOrCreate("usage").setValue("" + e), this; }, t.prototype.uses = function () { return e.prototype.elements.call(this, "uses"); }, t.prototype.wrapperClassName = function () { return "ResourceTypeImpl"; }, t.prototype.kind = function () { return "ResourceType"; }, t.prototype.allKinds = function () { return e.prototype.allKinds.call(this).concat("ResourceType"); }, t.prototype.allWrapperClassNames = function () { return e.prototype.allWrapperClassNames.call(this).concat("RAML10.ResourceTypeImpl"); }, t.isInstance = function (e) { if (null != e && e.allWrapperClassNames && "function" == typeof e.allWrapperClassNames)
                for (var t = 0, n = e.allWrapperClassNames(); t < n.length; t++) {
                    var r = n[t];
                    if ("RAML10.ResourceTypeImpl" == r)
                        return !0;
                } return !1; }, t.prototype.RAMLVersion = function () { return "RAML10"; }, t.prototype.parametrizedProperties = function () { return ee.getTemplateParametrizedProperties(this); }, t.prototype.scalarsAnnotations = function () { return new Ct(this.highLevel()); }, t; }(bt);
            t.ResourceTypeImpl = wt;
            var Ct = function (e) { function t() { e.apply(this, arguments); } return z(t, e), t.prototype.displayName = function () { var e = this.node.attr("displayName"); if (null == e)
                return []; var t = e.annotations(), n = Q.attributesToValues(t, function (e) { return new Lt(e); }); return n; }, t.prototype.usage = function () { var e = this.node.attr("usage"); if (null == e)
                return []; var t = e.annotations(), n = Q.attributesToValues(t, function (e) { return new Lt(e); }); return n; }, t; }(Rt);
            t.ResourceTypeScalarsAnnotationsImpl = Ct;
            var Lt = function (e) { function t() { e.apply(this, arguments); } return z(t, e), t.prototype.wrapperClassName = function () { return "AnnotationRefImpl"; }, t.prototype.kind = function () { return "AnnotationRef"; }, t.prototype.allKinds = function () { return e.prototype.allKinds.call(this).concat("AnnotationRef"); }, t.prototype.allWrapperClassNames = function () { return e.prototype.allWrapperClassNames.call(this).concat("RAML10.AnnotationRefImpl"); }, t.isInstance = function (e) { if (null != e && e.allWrapperClassNames && "function" == typeof e.allWrapperClassNames)
                for (var t = 0, n = e.allWrapperClassNames(); t < n.length; t++) {
                    var r = n[t];
                    if ("RAML10.AnnotationRefImpl" == r)
                        return !0;
                } return !1; }, t.prototype.RAMLVersion = function () { return "RAML10"; }, t.prototype.annotation = function () { return ee.referencedAnnotation(this); }, t; }(_e);
            t.AnnotationRefImpl = Lt;
            var Pt = function (e) { function t(t, n) { void 0 === n && (n = !0), e.call(this, "string" == typeof t ? K(t) : t, n), this.nodeOrKey = t, this.setAsTopLevel = n; } return z(t, e), t.prototype.title = function () { return e.prototype.attribute.call(this, "title", this.toString); }, t.prototype.setTitle = function (e) { return this.highLevel().attrOrCreate("title").setValue("" + e), this; }, t.prototype.content = function () { return e.prototype.attribute.call(this, "content", function (e) { return new pe(e); }); }, t.prototype.uses = function () { return e.prototype.elements.call(this, "uses"); }, t.prototype.wrapperClassName = function () { return "DocumentationItemImpl"; }, t.prototype.kind = function () { return "DocumentationItem"; }, t.prototype.allKinds = function () { return e.prototype.allKinds.call(this).concat("DocumentationItem"); }, t.prototype.allWrapperClassNames = function () { return e.prototype.allWrapperClassNames.call(this).concat("RAML10.DocumentationItemImpl"); }, t.isInstance = function (e) { if (null != e && e.allWrapperClassNames && "function" == typeof e.allWrapperClassNames)
                for (var t = 0, n = e.allWrapperClassNames(); t < n.length; t++) {
                    var r = n[t];
                    if ("RAML10.DocumentationItemImpl" == r)
                        return !0;
                } return !1; }, t.prototype.RAMLVersion = function () { return "RAML10"; }, t.prototype.scalarsAnnotations = function () { return new Ot(this.highLevel()); }, t; }(te);
            t.DocumentationItemImpl = Pt;
            var Ot = function () { function e(e) { this.node = e; } return e.prototype.title = function () { var e = this.node.attr("title"); if (null == e)
                return []; var t = e.annotations(), n = Q.attributesToValues(t, function (e) { return new Lt(e); }); return n; }, e.prototype.content = function () { var e = this.node.attr("content"); if (null == e)
                return []; var t = e.annotations(), n = Q.attributesToValues(t, function (e) { return new Lt(e); }); return n; }, e; }();
            t.DocumentationItemScalarsAnnotationsImpl = Ot;
            var Dt = function (e) { function t(t, n) { void 0 === n && (n = !0), e.call(this, "string" == typeof t ? a(t) : t, n), this.nodeOrKey = t, this.setAsTopLevel = n; } return z(t, e), t.prototype.uses = function () { return e.prototype.elements.call(this, "uses"); }, t.prototype.wrapperClassName = function () { return "FragmentDeclarationImpl"; }, t.prototype.kind = function () { return "FragmentDeclaration"; }, t.prototype.allKinds = function () { return e.prototype.allKinds.call(this).concat("FragmentDeclaration"); }, t.prototype.allWrapperClassNames = function () { return e.prototype.allWrapperClassNames.call(this).concat("RAML10.FragmentDeclarationImpl"); }, t.isInstance = function (e) { if (null != e && e.allWrapperClassNames && "function" == typeof e.allWrapperClassNames)
                for (var t = 0, n = e.allWrapperClassNames(); t < n.length; t++) {
                    var r = n[t];
                    if ("RAML10.FragmentDeclarationImpl" == r)
                        return !0;
                } return !1; }, t.prototype.RAMLVersion = function () { return "RAML10"; }, t; }(te);
            t.FragmentDeclarationImpl = Dt;
            var Ut = function (e) { function t(t, n) { void 0 === n && (n = !0), e.call(this, "string" == typeof t ? i(t) : t, n), this.nodeOrKey = t, this.setAsTopLevel = n; } return z(t, e), t.prototype.schemas = function () { return e.prototype.elements.call(this, "schemas"); }, t.prototype.types = function () { return e.prototype.elements.call(this, "types"); }, t.prototype.traits_original = function () { return e.prototype.elements.call(this, "traits"); }, t.prototype.resourceTypes_original = function () { return e.prototype.elements.call(this, "resourceTypes"); }, t.prototype.annotationTypes = function () { return e.prototype.elements.call(this, "annotationTypes"); }, t.prototype.securitySchemes = function () { return e.prototype.elements.call(this, "securitySchemes"); }, t.prototype.wrapperClassName = function () { return "LibraryBaseImpl"; }, t.prototype.kind = function () { return "LibraryBase"; }, t.prototype.allKinds = function () { return e.prototype.allKinds.call(this).concat("LibraryBase"); }, t.prototype.allWrapperClassNames = function () { return e.prototype.allWrapperClassNames.call(this).concat("RAML10.LibraryBaseImpl"); }, t.isInstance = function (e) { if (null != e && e.allWrapperClassNames && "function" == typeof e.allWrapperClassNames)
                for (var t = 0, n = e.allWrapperClassNames(); t < n.length; t++) {
                    var r = n[t];
                    if ("RAML10.LibraryBaseImpl" == r)
                        return !0;
                } return !1; }, t.prototype.RAMLVersion = function () { return "RAML10"; }, t.prototype.traits = function () { return ee.traitsPrimary(this); }, t.prototype.allTraits = function () { return ee.allTraits(this); }, t.prototype.resourceTypes = function () { return ee.resourceTypesPrimary(this); }, t.prototype.allResourceTypes = function () { return ee.allResourceTypes(this); }, t; }(Dt);
            t.LibraryBaseImpl = Ut;
            var xt = function (e) {
                function t(t, n) { void 0 === n && (n = !0), e.call(this, "string" == typeof t ? V(t) : t, n), this.nodeOrKey = t, this.setAsTopLevel = n; }
                return z(t, e), t.prototype.usage = function () { return e.prototype.attribute.call(this, "usage", this.toString); }, t.prototype.setUsage = function (e) { return this.highLevel().attrOrCreate("usage").setValue("" + e), this; }, t.prototype.name = function () { return e.prototype.attribute.call(this, "name", this.toString); }, t.prototype.setName = function (e) { return this.highLevel().attrOrCreate("name").setValue("" + e), this; }, t.prototype.wrapperClassName = function () {
                    return "LibraryImpl";
                }, t.prototype.kind = function () { return "Library"; }, t.prototype.allKinds = function () { return e.prototype.allKinds.call(this).concat("Library"); }, t.prototype.allWrapperClassNames = function () { return e.prototype.allWrapperClassNames.call(this).concat("RAML10.LibraryImpl"); }, t.isInstance = function (e) { if (null != e && e.allWrapperClassNames && "function" == typeof e.allWrapperClassNames)
                    for (var t = 0, n = e.allWrapperClassNames(); t < n.length; t++) {
                        var r = n[t];
                        if ("RAML10.LibraryImpl" == r)
                            return !0;
                    } return !1; }, t.prototype.RAMLVersion = function () { return "RAML10"; }, t.prototype.expand = function () { return ee.expandLibrarySpec(this); }, t.prototype.scalarsAnnotations = function () { return new kt(this.highLevel()); }, t;
            }(Ut);
            t.LibraryImpl = xt;
            var kt = function () { function e(e) { this.node = e; } return e.prototype.usage = function () { var e = this.node.attr("usage"); if (null == e)
                return []; var t = e.annotations(), n = Q.attributesToValues(t, function (e) { return new Lt(e); }); return n; }, e; }();
            t.LibraryScalarsAnnotationsImpl = kt;
            var Ft = function (e) { function t(t, n) { void 0 === n && (n = !0), e.call(this, "string" == typeof t ? r(t) : t, n), this.nodeOrKey = t, this.setAsTopLevel = n; } return z(t, e), t.prototype.title = function () { return e.prototype.attribute.call(this, "title", this.toString); }, t.prototype.setTitle = function (e) { return this.highLevel().attrOrCreate("title").setValue("" + e), this; }, t.prototype.description = function () { return e.prototype.attribute.call(this, "description", function (e) { return new pe(e); }); }, t.prototype.version = function () { return e.prototype.attribute.call(this, "version", this.toString); }, t.prototype.setVersion = function (e) { return this.highLevel().attrOrCreate("version").setValue("" + e), this; }, t.prototype.baseUri = function () { return e.prototype.attribute.call(this, "baseUri", function (e) { return new oe(e); }); }, t.prototype.baseUriParameters_original = function () { return e.prototype.elements.call(this, "baseUriParameters"); }, t.prototype.protocols = function () { return e.prototype.attributes.call(this, "protocols", this.toString); }, t.prototype.setProtocols = function (e) { return this.highLevel().attrOrCreate("protocols").setValue("" + e), this; }, t.prototype.mediaType = function () { return e.prototype.attributes.call(this, "mediaType", function (e) { return new fe(e); }); }, t.prototype.securedBy = function () { return e.prototype.attributes.call(this, "securedBy", function (e) { return new at(e); }); }, t.prototype.resources = function () { return e.prototype.elements.call(this, "resources"); }, t.prototype.documentation = function () { return e.prototype.elements.call(this, "documentation"); }, t.prototype.annotations = function () { return e.prototype.attributes.call(this, "annotations", function (e) { return new Lt(e); }); }, t.prototype.wrapperClassName = function () { return "ApiImpl"; }, t.prototype.kind = function () { return "Api"; }, t.prototype.allKinds = function () { return e.prototype.allKinds.call(this).concat("Api"); }, t.prototype.allWrapperClassNames = function () { return e.prototype.allWrapperClassNames.call(this).concat("RAML10.ApiImpl"); }, t.isInstance = function (e) { if (null != e && e.allWrapperClassNames && "function" == typeof e.allWrapperClassNames)
                for (var t = 0, n = e.allWrapperClassNames(); t < n.length; t++) {
                    var r = n[t];
                    if ("RAML10.ApiImpl" == r)
                        return !0;
                } return !1; }, t.prototype.RAMLVersion_original = function () { return "RAML10"; }, t.prototype.expand = function (e) { return void 0 === e && (e = !1), ee.expandSpec(this, e); }, t.prototype.childResource = function (e) { return ee.childResource(this, e); }, t.prototype.allResources = function () { return ee.allResources(this); }, t.prototype.baseUriParameters = function () { return ee.baseUriParametersPrimary(this); }, t.prototype.allBaseUriParameters = function () { return ee.baseUriParameters(this); }, t.prototype.allProtocols = function () { return ee.allProtocols(this); }, t.prototype.RAMLVersion = function () { return ee.RAMLVersion(this); }, t.prototype.scalarsAnnotations = function () { return new Kt(this.highLevel()); }, t; }(Ut);
            t.ApiImpl = Ft;
            var Bt = function (e) { function t(t, n) { void 0 === n && (n = !0), e.call(this, "string" == typeof t ? j(t) : t, n), this.nodeOrKey = t, this.setAsTopLevel = n; } return z(t, e), t.prototype.usage = function () { return e.prototype.attribute.call(this, "usage", this.toString); }, t.prototype.setUsage = function (e) { return this.highLevel().attrOrCreate("usage").setValue("" + e), this; }, t.prototype["extends"] = function () { return e.prototype.attribute.call(this, "extends", this.toString); }, t.prototype.setExtends = function (e) { return this.highLevel().attrOrCreate("extends").setValue("" + e), this; }, t.prototype.title = function () { return e.prototype.attribute.call(this, "title", this.toString); }, t.prototype.setTitle = function (e) { return this.highLevel().attrOrCreate("title").setValue("" + e), this; }, t.prototype.wrapperClassName = function () { return "OverlayImpl"; }, t.prototype.kind = function () { return "Overlay"; }, t.prototype.allKinds = function () { return e.prototype.allKinds.call(this).concat("Overlay"); }, t.prototype.allWrapperClassNames = function () { return e.prototype.allWrapperClassNames.call(this).concat("RAML10.OverlayImpl"); }, t.isInstance = function (e) { if (null != e && e.allWrapperClassNames && "function" == typeof e.allWrapperClassNames)
                for (var t = 0, n = e.allWrapperClassNames(); t < n.length; t++) {
                    var r = n[t];
                    if ("RAML10.OverlayImpl" == r)
                        return !0;
                } return !1; }, t.prototype.RAMLVersion = function () { return "RAML10"; }, t.prototype.scalarsAnnotations = function () { return new Vt(this.highLevel()); }, t; }(Ft);
            t.OverlayImpl = Bt;
            var Kt = function () { function e(e) { this.node = e; } return e.prototype.title = function () { var e = this.node.attr("title"); if (null == e)
                return []; var t = e.annotations(), n = Q.attributesToValues(t, function (e) { return new Lt(e); }); return n; }, e.prototype.description = function () { var e = this.node.attr("description"); if (null == e)
                return []; var t = e.annotations(), n = Q.attributesToValues(t, function (e) { return new Lt(e); }); return n; }, e.prototype.version = function () { var e = this.node.attr("version"); if (null == e)
                return []; var t = e.annotations(), n = Q.attributesToValues(t, function (e) { return new Lt(e); }); return n; }, e.prototype.baseUri = function () { var e = this.node.attr("baseUri"); if (null == e)
                return []; var t = e.annotations(), n = Q.attributesToValues(t, function (e) { return new Lt(e); }); return n; }, e.prototype.protocols = function () { var e = this.node.attributes("protocols"); return e.map(function (e) { var t = e.annotations(), n = Q.attributesToValues(t, function (e) { return new Lt(e); }); return n; }); }, e.prototype.mediaType = function () { var e = this.node.attributes("mediaType"); return e.map(function (e) { var t = e.annotations(), n = Q.attributesToValues(t, function (e) { return new Lt(e); }); return n; }); }, e.prototype.securedBy = function () { var e = this.node.attributes("securedBy"); return e.map(function (e) { var t = e.annotations(), n = Q.attributesToValues(t, function (e) { return new Lt(e); }); return n; }); }, e; }();
            t.ApiScalarsAnnotationsImpl = Kt;
            var Vt = function (e) { function t() { e.apply(this, arguments); } return z(t, e), t.prototype.usage = function () { var e = this.node.attr("usage"); if (null == e)
                return []; var t = e.annotations(), n = Q.attributesToValues(t, function (e) { return new Lt(e); }); return n; }, t.prototype["extends"] = function () { var e = this.node.attr("extends"); if (null == e)
                return []; var t = e.annotations(), n = Q.attributesToValues(t, function (e) { return new Lt(e); }); return n; }, t.prototype.title = function () { var e = this.node.attr("title"); if (null == e)
                return []; var t = e.annotations(), n = Q.attributesToValues(t, function (e) { return new Lt(e); }); return n; }, t; }(Kt);
            t.OverlayScalarsAnnotationsImpl = Vt;
            var jt = function (e) { function t(t, n) { void 0 === n && (n = !0), e.call(this, "string" == typeof t ? W(t) : t, n), this.nodeOrKey = t, this.setAsTopLevel = n; } return z(t, e), t.prototype.usage = function () { return e.prototype.attribute.call(this, "usage", this.toString); }, t.prototype.setUsage = function (e) { return this.highLevel().attrOrCreate("usage").setValue("" + e), this; }, t.prototype["extends"] = function () { return e.prototype.attribute.call(this, "extends", this.toString); }, t.prototype.setExtends = function (e) { return this.highLevel().attrOrCreate("extends").setValue("" + e), this; }, t.prototype.title = function () { return e.prototype.attribute.call(this, "title", this.toString); }, t.prototype.setTitle = function (e) { return this.highLevel().attrOrCreate("title").setValue("" + e), this; }, t.prototype.wrapperClassName = function () { return "ExtensionImpl"; }, t.prototype.kind = function () { return "Extension"; }, t.prototype.allKinds = function () { return e.prototype.allKinds.call(this).concat("Extension"); }, t.prototype.allWrapperClassNames = function () { return e.prototype.allWrapperClassNames.call(this).concat("RAML10.ExtensionImpl"); }, t.isInstance = function (e) { if (null != e && e.allWrapperClassNames && "function" == typeof e.allWrapperClassNames)
                for (var t = 0, n = e.allWrapperClassNames(); t < n.length; t++) {
                    var r = n[t];
                    if ("RAML10.ExtensionImpl" == r)
                        return !0;
                } return !1; }, t.prototype.RAMLVersion = function () { return "RAML10"; }, t.prototype.scalarsAnnotations = function () { return new Wt(this.highLevel()); }, t; }(Ft);
            t.ExtensionImpl = jt;
            var Wt = function (e) { function t() { e.apply(this, arguments); } return z(t, e), t.prototype.usage = function () { var e = this.node.attr("usage"); if (null == e)
                return []; var t = e.annotations(), n = Q.attributesToValues(t, function (e) { return new Lt(e); }); return n; }, t.prototype["extends"] = function () { var e = this.node.attr("extends"); if (null == e)
                return []; var t = e.annotations(), n = Q.attributesToValues(t, function (e) { return new Lt(e); }); return n; }, t.prototype.title = function () { var e = this.node.attr("title"); if (null == e)
                return []; var t = e.annotations(), n = Q.attributesToValues(t, function (e) { return new Lt(e); }); return n; }, t; }(Kt);
            t.ExtensionScalarsAnnotationsImpl = Wt, t.loadApiSync = q, t.loadRAMLSync = H, t.loadApi = Y, t.loadRAML = G, t.getLanguageElementByRuntimeType = X;
        }, function (e, t, n) {
            "use strict";
            var r, i = n(71), a = function (e) { return null != e; }, o = function () { function e(t) { var n = this; this._value = t, this._isDefined = !1, this._isEmpty = !0, this._arr = void 0, this.getOrThrow = function () { return i(n._isDefined, "Opt is empty. Use `Opt#getOrElse` or check `Opt#isDefined`."), n._value; }, this.value = function () { return n._value; }, this.isDefined = function () { return n._isDefined; }, this.isEmpty = function () { return n._isEmpty; }, this.toArray = function () { return n._arr || (n._arr = n._isDefined ? [n._value] : []); }, this.getOrElse = function (e) { return n._isDefined ? n._value : e; }, this.getOrElseF = function (e) { return n._isDefined ? n._value : e(); }, this.map = function (t) { return n._isEmpty ? e.empty() : new e(t(n._value)); }, this.flatMap = function (t) { return n.map(t).getOrElse(e.empty()); }, this.equals = function (t) { return i(t instanceof e, "Expected other to be an `Opt`, but got `%s`", typeof t), n._isDefined === t.isDefined() && n._value === t.value(); }, a(this._value) && (this._isDefined = !0, this._isEmpty = !1); } return e.prototype.forEach = function (e) { this.isDefined() && e(this._value); }, e.empty = function () { return r || (r = new e); }, e; }();
            e.exports = o;
        }, function (e, t, n) {
            "use strict";
            function r() { return Object.keys(m).length > 0; }
            function i(e) { f.push(e); }
            function a(e) { m[e] = !0; }
            function o(e) { delete m[e], f.forEach(function (t) { return t(e); }); }
            function s(e) { return m[e] ? !0 : !1; }
            function u(e, t) { c.set(e, t); }
            function l(e) { return c.get(e); }
            n(66);
            n(67), n(74);
            var p = n(75), c = p(50);
            t.hasAsyncRequests = r, t.addLoadCallback = i;
            var f = [], m = {};
            t.addNotify = a, t.removeNotity = o, t.isWaitingFor = s, t.set = u, t.get = l;
        }, function (e, t, n) {
            "use strict";
            function r() { return new H; }
            function i(e) { if (null == e)
                return null; switch (e.kind) {
                case I.Kind.SCALAR: return { errors: [], startPosition: e.startPosition, endPosition: e.endPosition, value: e.value, kind: I.Kind.SCALAR, parent: e.parent };
                case I.Kind.MAPPING:
                    var t = e;
                    return { errors: [], key: i(t.key), value: i(t.value), startPosition: t.startPosition, endPosition: t.endPosition, kind: I.Kind.MAPPING, parent: t.parent };
                case I.Kind.MAP:
                    var n = e;
                    return { errors: [], startPosition: e.startPosition, endPosition: e.endPosition, mappings: n.mappings.map(function (e) { return i(e); }), kind: I.Kind.MAP, parent: n.parent };
            } return e; }
            function a(e) { var t = e.match(/^.*((\r\n|\n|\r)|$)/gm); return t; }
            function o(e, t) { for (var n = a(e), r = [], i = 0; i < n.length; i++)
                0 == i ? r.push(n[0]) : r.push(n[i].substring(t.length)); return r.join(""); }
            function s(e) { for (var t = "", n = 0; n < e.length; n++) {
                var r = e[n];
                if ("\r" != r && "\n" != r) {
                    if (" " != r && "	" != r)
                        break;
                    t += r;
                }
            } return t; }
            function u(e, t) { var n = e.substr(t.offset, t.replacementLength); return -1 != n.indexOf("\n") ? !0 : -1 != t.text.indexOf("\n") ? !0 : void 0; }
            function l(e) { if ("null" == e)
                e = null;
            else if ("~" == e)
                e = null;
            else if ("true" == e)
                e = !0;
            else if ("false" == e)
                e = !1;
            else {
                var t = parseFloat(e);
                isNaN(t) || ("" + e).match("^[-+]?[0-9]*\\.?[0-9]+$") && (e = t);
            } return e; }
            function p(e, t, n) { var r = I.newMapping(I.newScalar(e), I.newMap()); return new Q(r, n, t, null, null); }
            function c(e) { var t = I.newMap(e); return new Q(t, null, null, null, null); }
            function f(e) { var t = I.newScalar(e); return new Q(t, null, null, null, null); }
            function m(e, t, n) { return new Q(e, n, t, null, null); }
            function h(e) { var t = I.newMapping(I.newScalar(e), I.newItems()); return new Q(t, null, null, null, null); }
            function d(e) { var t = I.newMapping(I.newScalar(e), I.newMap()); return new Q(t, null, null, null, null); }
            function y(e, t) { var n = I.newMapping(I.newScalar(e), I.newScalar(t)); return new Q(n, null, null, null, null); }
            function v(e) { if (!Q.isInstance(e))
                return null; var t = e, n = new Q(t.yamlNode(), t.unit(), null, null, null, !0); return n._errors = t._errors, n; }
            function g(e) { if (!Q.isInstance(e))
                return null; var t = e, n = new Q(t.yamlNode(), t.unit(), null, null, null, !1); return n._errors = t._errors, n; }
            function A(e) { var t = e.highLevelNode(); if (t)
                return t.definition(); var n = e.parent(); if (!n)
                return null; var r = e.key(); if (!r)
                return null; var i = n.nodeDefinition(); if (!i)
                return null; if (!i.property)
                return null; var a = i.property(r); return a ? a.range() : null; }
            function T(e, t, n, r) { if (e.isOverlayOrExtension()) {
                var i = e.getMasterReferenceNode();
                if (i) {
                    var a = i.value();
                    if (a) {
                        var o = N.dirname(e.absolutePath()), s = S.toAbsolutePath(o, a);
                        if (!t[s]) {
                            if (n[s])
                                return void i.errors().push(new K(n[a]));
                            var u = r[s];
                            u || (u = [], r[s] = u), u.push(i);
                        }
                    }
                }
            } }
            function E(e, t) { var n = {}, r = {}, i = [], a = function (t) { for (var o = [], s = {}; t < i.length;) {
                var u = i[t], l = u.absolutePath();
                T(u, n, r, s);
                var p = u.getIncludeNodes();
                p.forEach(function (t) { var i = t.includePath(); if (i) {
                    var a = O.getIncludeReference(i);
                    if (a)
                        return void o.push(e.resolveAsync(u.absolutePath(), i));
                    if (i) {
                        var p = S.buildPath(i, l, e.getRootPath());
                        if (!n[p]) {
                            if (r[p] && t.errors)
                                return void t.errors().push(new K(r[i]));
                            var c = s[p];
                            c || (c = [], s[p] = c), c.push(t);
                        }
                    }
                } }), t++;
            } var c = Object.keys(s); if (0 == o.length && 0 == c.length)
                return Promise.resolve(); var f = o; return c.forEach(function (t) { f.push(e.unitAsync(t, !0).then(function (e) { n[e.absolutePath()] || (n[e.absolutePath()] = !0, i.push(e)); }, function (n) { var i = e.pathToUnit[t]; s[t].forEach(function (e) { i || e.errors && e.errors().push(new K(n)); }), r[t] = n, e.failedUnits[t] = n, i && (n.inner = !0); })); }), Promise.all(f).then(function (e) { return a(t); }); }; return e.unitAsync(t, N.isAbsolute(t)).then(function (e) { return i.push(e), n[e.absolutePath()] = !0, a(0); }).then(function (e) { return i.length > 0 ? i[0] : null; }); }
            var S = n(10), N = n(15), _ = n(40), b = n(47), I = n(83), R = n(70), M = n(44), w = n(16), C = n(37), L = n(24), P = n(35), O = n(26), D = n(52), U = n(17), x = n(27), k = n(53), F = n(28), B = n(60), K = I.YAMLException;
            t.Kind = { SCALAR: I.Kind.SCALAR };
            var V = function () { function e(e) { this.text = "", this.indent = e; } return e.prototype.isLastNL = function () { return this.text.length > 0 && "\n" == this.text[this.text.length - 1]; }, e.prototype.addWithIndent = function (e, t) { this.isLastNL() && (this.text += M.indent(e), this.text += this.indent), this.text += t; }, e.prototype.addChar = function (e) { this.isLastNL() && (this.text += this.indent), this.text += e; }, e.prototype.append = function (e) { for (var t = 0; t < e.length; t++)
                this.addChar(e[t]); }, e; }();
            t.MarkupIndentingBuffer = V;
            var j = function () { function e(e, t, n, r, i) { this._path = e, this._content = t, this._tl = n, this._project = r, this._apath = i, this._includedByPaths = [], this._path = null != this._path ? this._path.replace(/\\/g, "/") : null; } return e.isInstance = function (t) { return null != t && t.getClassIdentifier && "function" == typeof t.getClassIdentifier && R.contains(t.getClassIdentifier(), e.CLASS_IDENTIFIER); }, e.prototype.getClassIdentifier = function () { var t = []; return t.concat(e.CLASS_IDENTIFIER); }, e.prototype.highLevel = function () { return this._hl ? this._hl : (this._hl = w.fromUnit(this), this._hl); }, e.prototype.isStubUnit = function () { return this.stu; }, e.prototype.resolveAsync = function (e) { var t = this._project.resolveAsync(this._path, e); return t; }, e.prototype.getIncludeNodes = function () { var e = this.ast(), t = []; return null == e ? [] : (e.gatherIncludes(t), e.children().forEach(function (e) { "uses" == e.key() && e.children().forEach(function (e) { t.push({ includePath: function () { var t = e.value(); return "string" != typeof t ? null : t; } }); }); }), t); }, e.prototype.cloneToProject = function (t) { var n = new e(this._path, this._content, this._tl, t, this._apath); return n; }, e.prototype.clone = function () { var t = new e(this._path, this._content, this._tl, this.project(), this._apath); return t; }, e.prototype.stub = function () { var t = new e(this._path, this._content, this._tl, this.project(), this._apath); return t.stu = !0, t; }, e.prototype.isDirty = function () { return !1; }, e.prototype.expandedHighLevel = function () { if (this.expanded)
                return this.expanded; var e = this.highLevel().asElement(), t = x.expandTraitsAndResourceTypes(e.wrapperNode()), n = t.highLevel(); return n._expanded = !0, this.expanded = n, n; }, e.prototype.absolutePath = function () { return this._apath; }, e.prototype.isRAMLUnit = function () { var e = this.absolutePath(); if (S.isWebPath(e))
                try {
                    e = _.parse(e).pathname;
                }
                catch (t) {
                    e = this._path;
                } var n = N.extname(e); if (".raml" == n || ".yaml" == n || ".yml" == n)
                return !0; if (!n) {
                if (!this._content)
                    return !1;
                var r = this._content.trim();
                if (P.stringStartsWith(r, "#%RAML"))
                    return !0;
                for (var i = r.split("\n"), a = void 0, o = 0, s = i; o < s.length; o++) {
                    var u = s[o], l = u.trim();
                    if (l && !P.stringStartsWith(l, "#")) {
                        a = u;
                        break;
                    }
                }
                if (!a)
                    return !0;
                try {
                    var p = I.load(a, { ignoreDuplicateKeys: !0 });
                    return p.kind != I.Kind.SCALAR;
                }
                catch (t) {
                    return !1;
                }
            } return !1; }, e.prototype.contents = function () { return this._content; }, e.prototype.resolve = function (e) { if ("string" != typeof e)
                return null; var t = this._project.resolve(this._path, e); return t; }, e.prototype.path = function () { return this._path; }, e.prototype.lexerErrors = function () { return null == this.errors && this.ast(), this.errors; }, e.prototype.ast = function () { var e = this; if (this._node)
                return this._node; try {
                var t = I.load(this._content, { ignoreDuplicateKeys: !0 });
                return this.errors = t.errors, this.errors.forEach(function (t) { t.mark && (t.mark.filePath = e.absolutePath()); }), this._node = new Q(t, this, null, null, null), this._node._errors = this.errors, this._node;
            }
            catch (n) {
                return this.errors = [], this.errors.push(new K(n.message)), this._node = null, this._node;
            } }, e.prototype.isTopLevel = function () { return this._tl; }, e.prototype.updateContent = function (e) { this._content = e, this.errors = null, this._node = null, this._lineMapper = null; }, e.prototype.updateContentSafe = function (e) { this._content = e, this._lineMapper = null, this._hl = null; }, e.prototype.project = function () { return this._project; }, e.prototype.lineMapper = function () { return null == this._lineMapper && (this._lineMapper = new S.LineMapperImpl(this.contents(), this.absolutePath())), this._lineMapper; }, e.prototype.isOverlayOrExtension = function () { for (var e = this.contents(), t = "", n = null, r = 0, i = 0, a = 0; a < e.length; a++) {
                var o = e.charAt(a);
                if ("\r" == o || "\n" == o) {
                    t ? n = e.substring(i, a).trim() : t = e.substring(0, a).trim();
                    break;
                }
                " " == o && (r++, t || 2 != r || (t = e.substring(0, a), i = a));
            } return "Extension" == n || "Overlay" == n; }, e.prototype.getMasterReferenceNode = function () { return R.find(this.ast().children(), function (e) { return e.key() == U.Universe10.Overlay.properties["extends"].name; }); }, e.prototype.addIncludedBy = function (e) { this.includedByContains(e) || this._includedByPaths.push(e); }, e.prototype.includedByContains = function (e) { return null != R.find(this._includedByPaths, function (t) { return t == e; }); }, e.prototype.getIncludedByPaths = function () { return this._includedByPaths; }, e.CLASS_IDENTIFIER = "jsyaml2lowLevel.CompilationUnit", e; }();
            t.CompilationUnit = j;
            var W = n(65).XMLHttpRequest, q = n(65).XMLHttpRequest, H = function () { function e() { } return e.prototype.open = function (e, t, n) { this.xhr = n ? new q : new W, this.async = n, this.xhr.open(e, t, n); }, e.prototype.setRequestHeader = function (e, t) { this.xhr.setRequestHeader(e, t); }, e.prototype.getResponseHeader = function (e) { return this.xhr.getResponseHeader(e); }, e.prototype.getAllResponseHeaders = function () { return this.xhr.getAllResponseHeaders(); }, e.prototype.send = function (e) { var t = this; this.xhr.onload = function () { return t.onResponse(!1); }, this.xhr.onerror = function () { return t.onResponse(!0); }, this.xhr.send(e); }, e.prototype.onResponse = function (e) { return this.statusText = this.xhr.statusText, this.responseText = this.xhr.responseText, this.responseType = this.xhr.responseType, this.status = this.xhr.status, e && this.onerror ? void this.onerror() : void (this.onload && this.onload()); }, e; }();
            t.XMLHttpRequestWrapper = H, t.buildXHR = r;
            var Y = function () { function e() { } return e.prototype.execute = function (e, t) { void 0 === t && (t = !0); var n = r(), i = e.url; t && (i = this.appendParams(e, e.url)), n.open(e.method, i, !1), this.doRequest(e, n); var a = n.status; if (a > 300 && 400 > a) {
                var o = n.getResponseHeader("location");
                if (o)
                    return e.url = o, this.execute(e, !1);
            } var s = { status: a, statusText: n.statusText, headers: n.getAllResponseHeaders().split("\n").map(function (e) { var t = e.indexOf(":"); return { name: e.substring(0, t).trim(), value: e.substring(t + 1).trim() }; }), content: { text: n.responseText, mimeType: n.responseType } }; return s; }, e.prototype.appendParams = function (e, t) { var n = e.queryString && e.queryString.length > 0; if (n) {
                t += "?";
                var r = [];
                n && (r = r.concat(e.queryString.map(function (e) { return encodeURIComponent(e.name) + "=" + encodeURIComponent(e.value); }))), t += r.join("&");
            } return t; }, e.prototype.log = function (e, t) { }, e.prototype.executeAsync = function (e, t) { void 0 === t && (t = !0); var n = r(), i = e.url; t && (i = this.appendParams(e, e.url)); var a = this; return new Promise(function (t, r) { n.open(e.method, i, !0), n.onload = function () { var e = n.status, r = { status: e, statusText: n.statusText, headers: n.getAllResponseHeaders().split("\n").map(function (e) { var t = e.indexOf(":"); return { name: e.substring(0, t).trim(), value: e.substring(t + 1).trim() }; }), content: { text: n.responseText, mimeType: n.responseType } }; t(r); }, n.onerror = function () { r(new K(B.NETWORK_ERROR.message)); }, a.doRequest(e, n); }); }, e.prototype.doRequest = function (e, t) { if (e.headers && e.headers.forEach(function (e) { return t.setRequestHeader(e.name, e.value); }), e.postData)
                if (e.postData.params) {
                    var n = e.postData.params.map(function (e) { return encodeURIComponent(e.name) + "=" + encodeURIComponent(e.value); }).join("&");
                    t.send(n);
                }
                else
                    t.send(e.postData.text);
            else
                t.send(); }, e; }();
            t.SimpleExecutor = Y;
            var G = function () { function e() { this.executor = new Y; } return e.prototype.getResource = function (e) { if ("undefined" != typeof atom && null != atom) {
                var t = L.get(e);
                if (t)
                    return t;
                L.addNotify(e);
                try {
                    var n = { content: "" };
                    return this.getResourceAsync(e).then(function (t) { try {
                        t.errorMessage ? L.set(e, { content: null, errorMessage: null }) : (t.errorMessage = null, L.set(e, t));
                    }
                    finally {
                        n.callback && n.callback(L.get(e)), L.removeNotity(e);
                    } }, function (t) { L.set(e, { content: null, errorMessage: null }), n.callback && n.callback(L.get(e)), L.removeNotity(e); }), n;
                }
                catch (r) {
                    console.log("Error"), console.log(r);
                }
            } var i = this.executor.execute({ method: "get", url: e }); if (!i)
                throw new K(F.applyTemplate(B.UNABLE_TO_EXECUTE_GET, { url: e })); var a = this.toResponse(i, e); return a; }, e.prototype.getResourceAsync = function (e) { var t = this; return this.executor.executeAsync({ method: "get", url: e }).then(function (n) { if (!n)
                return Promise.reject(new K(F.applyTemplate(B.UNABLE_TO_EXECUTE_GET, { url: e }))); var r = t.toResponse(n, e); return r; }, function (t) { return Promise.reject(F.applyTemplate(B.UNABLE_TO_EXECUTE_GET, { url: e })); }); }, e.prototype.toResponse = function (e, t) { var n = null; e.status >= 400 && (n = "GET " + t + "\nreturned error: " + e.status, e.statusText && (n += " " + e.statusText)); var r = null; e.content && e.content.text && (r = e.content.text); var i = { content: r, errorMessage: n }; return i; }, e; }();
            t.HTTPResolverImpl = G;
            var X = function () { function e() { } return e.prototype.content = function (e) { if ("string" != typeof e && (e = "" + e), !b.existsSync(e))
                return null; try {
                return b.readFileSync(e).toString();
            }
            catch (t) {
                return null;
            } }, e.prototype.list = function (e) { return b.readdirSync(e); }, e.prototype.contentAsync = function (e) { return new Promise(function (t, n) { b.readFile(e, function (e, r) { if (null != e)
                return n(e); var i = r.toString(); t(i); }); }); }, e.prototype.listAsync = function (e) { return new Promise(function (t, n) { b.readdir(e, function (e, r) { return null != e ? t(e) : void n(r); }); }); }, e; }();
            t.FSResolverImpl = X;
            var z = function (e, t, n) { if (t && (t.startPosition >= e && (t.startPosition += n), t.endPosition > e && (t.endPosition += n), t.kind == I.Kind.MAPPING)) {
                var r = t;
                z(e, r.key, n), z(e, r.value, n);
            } }, $ = function (e, t) { for (var n = "", r = e.start() - 1; r > 0;) {
                var i = t[r];
                if (" " != i && "-" != i)
                    break;
                n = " " + n, r--;
            } return n; }, J = function () {
                function e(e, t, n) { this.rootPath = e, this.resolver = t, this._httpResolver = n, this.listeners = [], this.tlisteners = [], this.pathToUnit = {}, this.failedUnits = {}, this._fsEnabled = !0, this._namespaceResolver = new k.NamespaceResolver, null == this.resolver ? this.resolver = new X : this._fsEnabled = !1, null == this._httpResolver && (this._httpResolver = new G); }
                return e.prototype.getMainUnit = function () { return this.mainUnitPath ? this.unit(this.mainUnitPath, !0) : null; }, e.prototype.getRootPath = function () { return this.rootPath; }, e.prototype.getMainUnitPath = function () { return this.mainUnitPath; }, e.prototype.setMainUnitPath = function (e) { this.mainUnitPath = e; }, e.prototype.setFSResolver = function (e) { this.resolver = e; }, e.prototype.setHTTPResolver = function (e) { this._httpResolver = e; }, e.prototype.fsEnabled = function () { return this._fsEnabled; }, e.prototype.cloneWithResolver = function (t, n) { void 0 === n && (n = null); var r = new e(this.rootPath, t, n ? n : this._httpResolver); for (var i in this.pathToUnit)
                    r.pathToUnit[i] = this.pathToUnit[i].cloneToProject(r); return r; }, e.prototype.setCachedUnitContent = function (e, t, n) { void 0 === n && (n = !0); var r = e, i = S.toAbsolutePath(this.rootPath, e), a = new j(r, t, n, this, i); return this.pathToUnit[i] = a, a; }, e.prototype.resolveAsync = function (e, t) { var n = this; if (!t)
                    return Promise.reject(new K(B.UNIT_PATH_IS_NULL.message)); var r = O.getIncludeReference(t), i = t; r && (t = r.getIncludePath()); var a = S.buildPath(t, e, this.rootPath); if (r) {
                    var o, s = S.toAbsolutePath(N.dirname(S.toAbsolutePath(this.rootPath, e)), r.encodedName());
                    this.pathToUnit[a] ? Promise.resolve(o).then(function (e) { return n.pathToUnit[s] = new j(r.encodedName(), O.resolveContents(i, n.pathToUnit[a].contents()), !1, n, s), n.pathToUnit[s]; }) : this.unitAsync(a, !0).then(function (e) { return n.pathToUnit[a] = e, n.pathToUnit[s] = new j(r.encodedName(), O.resolveContents(i, n.pathToUnit[a].contents()), !1, n, s), n.pathToUnit[s]; });
                } return this.unitAsync(a, !0); }, e.prototype.resolve = function (e, t) { if (!t)
                    return null; t = t.replace(/\\/g, "/"); var n = O.getIncludeReference(t), r = t; n && (t = n.getIncludePath()); var i = S.buildPath(t, e, this.rootPath); if (n) {
                    this.pathToUnit[i] || (this.pathToUnit[i] = this.unit(i, !0));
                    var a = this.pathToUnit[i], o = S.toAbsolutePath(N.dirname(S.toAbsolutePath(this.rootPath, e)), n.encodedName());
                    return this.pathToUnit[o] ? this.pathToUnit[o] : (this.pathToUnit[o] = new j(n.encodedName(), O.resolveContents(r, a && a.contents()), !1, this, o), this.pathToUnit[o]);
                } return this.unit(i, !0); }, e.prototype.units = function () { var e = this; if (!this.resolver.list)
                    throw new K(B.FSRESOLVER_IS_UNABLE_USE_EXTENDEDFSRESOLVER.message); var t = this.resolver.list(this.rootPath).filter(function (e) { return ".raml" == N.extname(e); }); return t.map(function (t) { return e.unit(t); }).filter(function (e) { return e.isTopLevel(); }); }, e.prototype.unitsAsync = function () { var e = this; return this.resolver.listAsync ? this.resolver.listAsync(this.rootPath).then(function (t) { var n = t.filter(function (e) { return ".raml" == N.extname(e); }).map(function (t) { return e.unitAsync(t).then(function (e) { return e.isTopLevel() ? e : null; }, function (e) { return null; }); }); return Promise.all(n).then(function (e) { return e.filter(function (e) { return null != e; }); }); }) : Promise.reject(new K(B.FSRESOLVER_IS_UNABLE_USE_EXTENDEDFSRESOLVER.message)); }, e.prototype.lexerErrors = function () { var e = []; return this.units().forEach(function (t) { e = e.concat(t.lexerErrors()); }), e; }, e.prototype.deleteUnit = function (e, t) { void 0 === t && (t = !1); var n = null; n = S.isWebPath(e) ? e : t ? e : S.toAbsolutePath(this.rootPath, e), delete this.pathToUnit[n]; }, e.prototype.unit = function (e, t) { if (void 0 === t && (t = !1), t || S.isWebPath(e)) {
                    if (null != this.failedUnits[e] && !this.failedUnits[e].inner)
                        return null;
                }
                else {
                    var n = S.toAbsolutePath(this.rootPath, e);
                    if (this.failedUnits[n] && !this.failedUnits[e].inner)
                        return null;
                } var r, i = null, a = e; if (S.isWebPath(e)) {
                    if (this.pathToUnit[a])
                        return this.pathToUnit[a];
                    if (this._httpResolver) {
                        if (r = this._httpResolver.getResource(e), r && r.errorMessage)
                            throw new K(r.errorMessage);
                        i = r ? r.content : null;
                    }
                    else
                        r = (new G).getResource(a), i = r ? r.content : null;
                }
                else {
                    "/" != e.charAt(0) || t || (e = e.substr(1));
                    var a = S.toAbsolutePath(this.rootPath, e);
                    if (this.pathToUnit[a])
                        return this.pathToUnit[a];
                    if (S.isWebPath(a))
                        if (this._httpResolver) {
                            var o = this._httpResolver.getResource(a);
                            if (o && o.errorMessage)
                                throw new K(o.errorMessage);
                            i = o ? o.content : null;
                        }
                        else {
                            var s = (new G).getResource(a);
                            i = s ? s.content : null;
                        }
                    else
                        i = this.resolver.content(a);
                } if (null == i)
                    return null; var u = P.stringStartsWith(i, "#%RAML"), l = S.isWebPath(this.rootPath) == S.isWebPath(a) ? N.relative(this.rootPath, a) : a, p = new j(l, i, u, this, a); return this.pathToUnit[a] = p, r && (r.callback = function (e) { p.updateContent(e && e.content); }), p; }, e.prototype.unitAsync = function (e, t) { var n = this; void 0 === t && (t = !1); var r = null, i = e; if (S.isWebPath(e)) {
                    if (this.pathToUnit[i])
                        return Promise.resolve(this.pathToUnit[i]);
                    if (this._httpResolver) {
                        var a = this._httpResolver.getResourceAsync(i);
                        r = a.then(function (e) { return e.errorMessage ? Promise.reject(new K(e.errorMessage)) : e.content; });
                    }
                    else
                        r = (new G).getResourceAsync(i);
                }
                else {
                    if ("/" != e.charAt(0) || t || (e = e.substr(1)), i = t ? e : S.toAbsolutePath(this.rootPath, e), this.pathToUnit[i])
                        return Promise.resolve(this.pathToUnit[i]);
                    if (S.isWebPath(i))
                        if (this._httpResolver) {
                            var a = this._httpResolver.getResourceAsync(i);
                            r = a.then(function (e) { return e.errorMessage ? Promise.reject(new K(e.errorMessage)) : e.content; });
                        }
                        else
                            r = (new G).getResourceAsync(i);
                    else
                        r = this.resolver.contentAsync(i);
                } if (null == r)
                    return Promise.resolve(null); var o = S.isWebPath(this.rootPath) == S.isWebPath(i) ? N.relative(this.rootPath, i) : i; return r.then(function (e) { if (null == e)
                    return Promise.reject(new K(F.applyTemplate(B.CAN_NOT_RESOLVE, { path: i }))); var t = P.stringStartsWith(e, "#%RAML"), r = new j(o, e, t, n, i); return n.pathToUnit[i] = r, r; }, function (e) { return "object" == typeof e && e instanceof K ? Promise.reject(e) : Promise.reject(new K(e.toString())); }).then(function (e) { return e.isRAMLUnit() ? e : D.isScheme(e.contents()) ? D.startDownloadingReferencesAsync(e.contents(), e) : e; }); }, e.prototype.visualizeNewlines = function (e) { for (var t = "", n = 0; n < e.length; n++) {
                    var r = e[n];
                    "\r" == r && (r = "\\r"), "\n" == r && (r = "\\n"), t += r;
                } return t; }, e.prototype.indent = function (e) { var t = e.unit().contents(); if (e == e.root())
                    return ""; var n = $(e, t), r = a(e.dump()); if (r.length > 1 && r[1].trim().length > 0) {
                    var i = s(r[1]);
                    return n + i;
                } return n + "  "; }, e.prototype.startIndent = function (e) { e.unit().contents(); if (e == e.root())
                    return ""; var t = a(e.dump()); if (t.length > 0) {
                    console.log("FIRST: " + t[0]);
                    var n = s(t[0]);
                    return n + "  ";
                } return ""; }, e.prototype.canWriteInOneLine = function (e) { return !1; }, e.prototype.isOneLine = function (e) { return e.text().indexOf("\n") < 0; }, e.prototype.recalcPositionsUp = function (e) { for (var t = e; t;)
                    t.recalcEndPositionFromChilds(), t = t.parent(); }, e.prototype.add2 = function (e, t, n, r, i) {
                    void 0 === i && (i = !1);
                    var a = e.unit(), o = (e.root(), null);
                    if (r && (Q.isInstance(r) && (o = r), ee.isInstance(r) && (o = r.point)), e.isValueInclude()) {
                        var s = e.children();
                        if (0 == s.length)
                            throw new K(B.NOT_IMPLEMENTED_INSERT_INTO_EMPTY_REF.message);
                        var u = s[0].parent();
                        return void this.add2(u, t, n, o, i);
                    }
                    var l = (new M.TextRange(a.contents(), t.start(), t.end()), new M.TextRange(a.contents(), e.start(), e.end()), e.unit().contents());
                    e.valueKind() == I.Kind.SEQ && (e = m(e.valueAsSeq(), e, e.unit()));
                    var i = this.isJson(e), p = i ? "" : this.indent(e.isSeq() ? e.parent() : e), c = p, f = p.length, h = e.isSeq() || e.isMapping() && (e.isValueSeq() || e.isValueScalar() || !e.asMapping().value);
                    n = n, n && (i || h && (c += "  ", f += 2));
                    var d = new V(c);
                    t.markupNode(d, t._actualNode(), 0, i);
                    var y = d.text;
                    if (n) {
                        var v = M.trimEnd(y), g = y.length - v.length;
                        if (g > 0) {
                            var A = y.length;
                            y = y.substring(0, A - g), t.shiftNodes(A - g, -g);
                        }
                    }
                    n && !i ? (t.highLevelNode(), e.isMapping(), y = e.isSeq() || e.isMapping() && (e.isValueSeq() || e.isValueScalar() || !e.asMapping().value) ? p + "- " + y : p + y) : y = p + y;
                    var T = e.end();
                    if (o)
                        o != e ? T = o.end() : i && n || (T = e.keyEnd() + 1, T = new M.TextRange(l, T, T).extendAnyUntilNewLines().endpos());
                    else if (i && n) {
                        var E = e.asSeq();
                        E && (T = E.items.length > 0 ? E.items[E.items.length - 1].endPosition : E.endPosition - 1);
                    }
                    else if (r && ee.isInstance(r)) {
                        var S = r;
                        S.type == Z.START && (T = e.keyEnd() + 1, T = new M.TextRange(l, T, T).extendAnyUntilNewLines().endpos());
                    }
                    var N = new M.TextRange(l, 0, T);
                    if (T = N.extendToNewlines().reduceSpaces().endpos(), i && e.isSeq()) {
                        var E = e.asSeq();
                        E.items.length > 0 && (y = ", " + y, f += 2);
                    }
                    else
                        T > 0 && "\n" != l[T - 1] && (y = "\n" + y, f++);
                    var _ = 0;
                    n && !i && (y += "\n", _++);
                    var b = l.substring(0, T) + y + l.substring(T, l.length), R = a;
                    if (R.updateContentSafe(b), this.executeReplace(new M.TextRange(l, T, T), y, R), e.root().shiftNodes(T, f + (t.end() - t.start()) + _), o) {
                        for (var s = e.children(), w = -1, C = 0; C < s.length; C++) {
                            var L = s[C];
                            if (L.start() == o.start() && L.end() == o.end()) {
                                w = C;
                                break;
                            }
                        }
                        w >= 0 ? e.addChild(t, w + 1) : e.addChild(t);
                    }
                    else
                        e.addChild(t);
                    t.shiftNodes(0, T + f), this.recalcPositionsUp(e), t.setUnit(e.unit()), t.visit(function (t) { var n = t; return n.setUnit(e.unit()), !0; });
                }, e.prototype.isJsonMap = function (e) { if (!e.isMap())
                    return !1; var t = e.text().trim(); return t.length >= 2 && "{" == t[0] && "}" == t[t.length - 1]; }, e.prototype.isJsonSeq = function (e) { if (!e.isSeq())
                    return !1; var t = e.text().trim(); return t.length >= 2 && "[" == t[0] && "]" == t[t.length - 1]; }, e.prototype.isJson = function (e) { return this.isJsonMap(e) || this.isJsonSeq(e); }, e.prototype.remove = function (e, t, n) { var r = n.parent(); if (n._oldText = n.dump(), this.isOneLine(n) && n.isMapping() && n.parent().isMap()) {
                    var i = n.parent();
                    if (1 == i.asMap().mappings.length && null != i.parent())
                        return void this.remove(e, i.parent(), i);
                } if (this.isOneLine(n) && n.isScalar() && n.parent().isSeq()) {
                    var a = n.parent(), o = a.asSeq();
                    if (1 == o.items.length)
                        return void this.remove(e, a.parent(), a);
                } if (t.isMapping() && n.isSeq()) {
                    var s = t.parent();
                    return void this.remove(e, s, t);
                } var u = new M.TextRange(e.contents(), n.start(), n.end()), l = (new M.TextRange(e.contents(), t.start(), t.end()), new M.TextRange(e.contents(), r.start(), r.end()), u.startpos()); if (t.isSeq()) {
                    var p = n.isSeq() ? n : n.parentOfKind(I.Kind.SEQ);
                    u = p && this.isJson(p) ? u.extendSpaces().extendCharIfAny(",").extendSpaces() : u.extendToStartOfLine().extendAnyUntilNewLines().extendToNewlines();
                } t.isMap() && (u = u.trimEnd().extendAnyUntilNewLines().extendToNewlines(), u = u.extendToStartOfLine().extendUntilNewlinesBack()), t.kind() == I.Kind.MAPPING && (this.isJson(n) && this.isOneLine(n) || (u = u.extendSpacesUntilNewLines(), u = u.extendToNewlines(), u = u.extendToStartOfLine().extendUntilNewlinesBack())), n.isSeq() && (u = u.reduceSpaces()); var c = e; c.updateContentSafe(u.remove()), this.executeReplace(u, "", c), n.parent().removeChild(n); var f = -u.len(); t.root().shiftNodes(l, f), this.recalcPositionsUp(t); }, e.prototype.changeKey = function (e, t, n) { var r = new M.TextRange(t.unit().contents(), t.keyStart(), t.keyEnd()); if (t.kind() == I.Kind.MAPPING) {
                    var i = t._actualNode().key;
                    i.value = n, i.endPosition = i.startPosition + n.length;
                } var a = e; this.executeReplace(r, n, a); var o = n.length - r.len(); t.root().shiftNodes(r.startpos(), o, t), this.recalcPositionsUp(t); }, e.prototype.executeReplace = function (e, t, n) { var r = new S.TextChangeCommand(e.startpos(), e.endpos() - e.startpos(), t, n); n.project(); try {
                    this.tlisteners.forEach(function (e) { return e(r); });
                }
                catch (i) {
                    return !1;
                } var a = e.replace(t); return n.updateContentSafe(a), !0; }, e.prototype.changeValue = function (e, t, n) { var r, i = new M.TextRange(t.unit().contents(), t.start(), t.end()), a = 0, o = 0, s = null, u = null; if (t.kind() == I.Kind.SCALAR) {
                    if ("string" != typeof n)
                        throw new K(B.NOT_IMPLEMENTED.message);
                    t.asScalar().value = n, r = n;
                }
                else if (t.kind() == I.Kind.MAPPING) {
                    if (u = t.asMapping(), t.isValueInclude()) {
                        var l = t.valueAsInclude(), p = l.value, f = p, m = t.unit().resolve(f);
                        if (null == m)
                            return void console.log(F.applyTemplate(B.ATTR_SETVALUE_NOT_RESOLVE, { path: f }));
                        if (m.isRAMLUnit())
                            return;
                        return void (O.getIncludeReference(p) || m.updateContent(n));
                    }
                    if (i = u.value ? i.withStart(t.valueStart()).withEnd(t.valueEnd()) : i.withStart(t.keyEnd() + 1).withEnd(t.keyEnd() + 1), i = i.reduceNewlinesEnd(), null == n)
                        r = "", u.value = null;
                    else if ("string" == typeof n || null == n) {
                        var h = n, d = this.indent(t);
                        if (h && M.isMultiLine(h) && (h = "" + M.makeMutiLine(h, d.length / 2)), r = h, u.value) {
                            if (u.value.kind == I.Kind.SEQ) {
                                console.log("seq value");
                                u.value.items[0];
                                throw "assign value!!!";
                            }
                            if (u.value.kind == I.Kind.SCALAR) {
                                var y = u.value, v = y.value || "";
                                y.value = h, u.value.endPosition = u.value.startPosition + h.length, u.endPosition = u.value.endPosition, o += h.length - v.length;
                            }
                        }
                        else if (console.log("no value"), u.value = I.newScalar(h), u.value.startPosition = t.keyEnd() + 1, u.value.endPosition = u.value.startPosition + h.length, u.endPosition = u.value.endPosition, e.contents().length > t.keyEnd() + 1) {
                            var g = t.keyEnd() + 1;
                            ":" == e.contents()[g - 1] && (r = " " + r, u.value.startPosition++, u.value.endPosition++, u.endPosition++, o++);
                        }
                    }
                    else {
                        var A = n;
                        if (A.isMapping())
                            n = c([A.asMapping()]), A = n;
                        else if (!A.isMap())
                            throw new K(B.ONLY_MAP_NODES_ALLOWED.message);
                        var T = new V("");
                        A.markupNode(T, A._actualNode(), 0, !0), r = "" + T.text, A.shiftNodes(0, i.startpos() + o), s = A;
                    }
                }
                else
                    console.log(F.applyTemplate(B.UNSUPPORTED_CHANGE_VALUE_CASE, { name: t.kindName() })); var E = e; this.executeReplace(i, r, E); var S = r.length - i.len(); t.root().shiftNodes(i.endpos() + a, S, t), s && (u.value = s._actualNode()), this.recalcPositionsUp(t); }, e.prototype.initWithRoot = function (e, t) { var n = e.end(); t.markup(!1), t._actualNode().startPosition = n, t._actualNode().endPosition = n, t.setUnit(e.unit()); }, e.prototype.execute = function (e) { var t = this; e.commands.forEach(function (e) { switch (e.kind) {
                    case S.CommandKind.CHANGE_VALUE:
                        var n = e.target, r = n.value();
                        r || (r = "");
                        var i = e.value;
                        if (console.log("set value: " + typeof r + " ==> " + typeof i), "string" != typeof r && "number" != typeof r && "boolean" != typeof r || "string" != typeof i)
                            if ("string" != typeof r && "number" != typeof r && "boolean" != typeof r || "string" == typeof i)
                                if ("string" != typeof r && "string" == typeof i) {
                                    var a = e.value;
                                    if (r.kind() != I.Kind.MAPPING)
                                        throw new K(F.applyTemplate(B.UNSUPPORTED_CASE_ATTRIBUTE_VALUE_CONVERSION, { curval: r, newval: i }));
                                    M.isMultiLine(a) ? (n.children().forEach(function (e) { t.remove(n.unit(), n, e); }), t.changeValue(n.unit(), n, a)) : t.changeKey(n.unit(), r, a);
                                }
                                else {
                                    if ("string" == typeof r || "string" == typeof i)
                                        throw new K(F.applyTemplate(B.UNSUPPORTED_CASE_ATTRIBUTE_VALUE_CONVERSION, { curval: r, newval: i }));
                                    var o = i;
                                    if (o.isMapping() && (i = c([o.asMapping()])), r == i)
                                        break;
                                    var s = i;
                                    s.asMap();
                                    n.children().forEach(function (e) { t.remove(n.unit(), n, e); }), s.children().forEach(function (e) { }), t.changeValue(n.unit(), n, i);
                                }
                            else
                                t.changeValue(n.unit(), n, i);
                        else
                            r != i && t.changeValue(n.unit(), n, i);
                        return;
                    case S.CommandKind.CHANGE_KEY:
                        var n = e.target;
                        return void t.changeKey(n.unit(), n, e.value);
                    case S.CommandKind.ADD_CHILD:
                        var n = e.target, u = e.value;
                        return void t.add2(n, u, e.toSeq, e.insertionPoint);
                    case S.CommandKind.REMOVE_CHILD:
                        var l = e.target, s = e.value;
                        return void t.remove(l.unit(), l, s);
                    case S.CommandKind.INIT_RAML_FILE:
                        var p = e.target, f = e.value;
                        return void t.initWithRoot(p, f);
                    default: return void console.log(F.applyTemplate(B.UNSUPPORTED_COMMAND, { name: S.CommandKind[e.kind] }));
                } }); }, e.prototype.replaceYamlNode = function (e, t, n, r, i) { var a = I.load(t, { ignoreDuplicateKeys: !0 }); this.updatePositions(e.start(), a), e.root().shiftNodes(n, r); var o = e.parent(), s = e._actualNode(), u = s.parent; if (a.parent = u, o && o.kind() == I.Kind.MAP) {
                    var l = o._actualNode();
                    l.mappings = l.mappings.map(function (e) { return e != s ? e : a; });
                } e.updateFrom(a), this.recalcPositionsUp(e); }, e.prototype.executeTextChange2 = function (e) { var t = e.unit, n = t.contents(), r = e.target; if (r) {
                    var i = n.substring(r.start(), r.end());
                    n = n.substr(0, e.offset) + e.text + n.substr(e.offset + e.replacementLength);
                    var a = i.substr(0, e.offset - r.start()) + e.text + i.substr(e.offset - r.start() + e.replacementLength);
                    if (t.updateContentSafe(n), e.offset > r.start())
                        try {
                            var o = e.text.length - e.replacementLength, s = e.offset;
                            r.unit().project().replaceYamlNode(r, a, s, o, e.unit);
                        }
                        catch (u) {
                            console.log("New node contents (causes error below): \n" + a), console.log("Reparse error: " + u.stack);
                        }
                }
                else
                    n = n.substr(0, e.offset) + e.text + n.substr(e.offset + e.replacementLength); t.updateContent(n), this.listeners.forEach(function (e) { e(null); }), this.tlisteners.forEach(function (t) { t(e); }); }, e.prototype.executeTextChange = function (e) {
                    (new Date).getTime();
                    try {
                        var t = e.unit.contents(), n = e.target;
                        null == n && (n = this.findNode(e.unit.ast(), e.offset, e.offset + e.replacementLength));
                        var r = e.unit;
                        if (n) {
                            var a = t.substring(n.start(), n.end()), o = t;
                            t = t.substr(0, e.offset) + e.text + t.substr(e.offset + e.replacementLength);
                            var s = a.substr(0, e.offset - n.start()) + e.text + a.substr(e.offset - n.start() + e.replacementLength);
                            r.updateContentSafe(t);
                            u(o, e);
                            if (e.offset > n.start())
                                try {
                                    var l = I.load(s, { ignoreDuplicateKeys: !0 });
                                    this.updatePositions(n.start(), l);
                                    var p = e.text.length - e.replacementLength;
                                    if (e.unit.ast().shiftNodes(e.offset, p), null != l && l.kind == I.Kind.MAP) {
                                        var c = l.mappings[0], f = n._actualNode(), m = f.parent, h = new S.ASTDelta, d = e.unit;
                                        if (h.commands = [new S.ASTChangeCommand(S.CommandKind.CHANGE_VALUE, new Q(i(f), d, null, null, null), new Q(c, d, null, null, null), 0)], m && m.kind == I.Kind.MAP) {
                                            var y = m;
                                            y.mappings = y.mappings.map(function (e) { return e != f ? e : c; });
                                        }
                                        return c.parent = m, this.recalcPositionsUp(n), n.updateFrom(c), this.listeners.forEach(function (e) { e(h); }), void this.tlisteners.forEach(function (t) { t(e); });
                                    }
                                }
                                catch (v) {
                                    console.log(F.applyTemplate(B.NEW_NODE_CONTENTS_ERROR_BELOW, { content: s })), console.log(F.applyTemplate(B.REPARSE_ERROR, { content: v.stack }));
                                }
                        }
                        else
                            t = t.substr(0, e.offset) + e.text + t.substr(e.offset + e.replacementLength);
                        (new Date).getTime();
                        //!find node in scope
                        r.updateContent(t), this.listeners.forEach(function (e) { e(null); }), this.tlisteners.forEach(function (t) { t(e); });
                    }
                    finally {
                        (new Date).getTime();
                    }
                }, e.prototype.updatePositions = function (e, t) { var n = this; if (null != t)
                    switch ((-1 == t.startPosition ? t.startPosition = e : t.startPosition = e + t.startPosition, t.endPosition = e + t.endPosition, t.kind)) {
                        case I.Kind.MAP:
                            var r = t;
                            r.mappings.forEach(function (t) { return n.updatePositions(e, t); });
                            break;
                        case I.Kind.MAPPING:
                            var i = t;
                            this.updatePositions(e, i.key), this.updatePositions(e, i.value);
                            break;
                        case I.Kind.SCALAR: break;
                        case I.Kind.SEQ:
                            var a = t;
                            a.items.forEach(function (t) { return n.updatePositions(e, t); });
                    } }, e.prototype.findNode = function (e, t, n) { var r = this; if (null == e)
                    return null; var i = e; if (e.start() <= t && e.end() >= n) {
                    var a = e;
                    return i.directChildren().forEach(function (e) { var i = r.findNode(e, t, n); i && (a = i); }), a;
                } return null; }, e.prototype.addTextChangeListener = function (e) { this.tlisteners.push(e); }, e.prototype.removeTextChangeListener = function (e) { this.tlisteners = this.tlisteners.filter(function (t) { return t != e; }); }, e.prototype.addListener = function (e) { this.listeners.push(e); }, e.prototype.removeListener = function (e) { this.listeners = this.listeners.filter(function (t) { return t != e; }); }, e.prototype.namespaceResolver = function () { return this._namespaceResolver; }, e;
            }();
            t.Project = J;
            var Q = function () { function e(e, t, n, r, i, a, o) { void 0 === a && (a = !1), void 0 === o && (o = !1), this._node = e, this._unit = t, this._parent = n, this._anchor = r, this._include = i, this.cacheChildren = a, this._includesContents = o, this._errors = []; } return e.isInstance = function (t) { return null != t && t.getClassIdentifier && "function" == typeof t.getClassIdentifier && R.contains(t.getClassIdentifier(), e.CLASS_IDENTIFIER); }, e.prototype.getClassIdentifier = function () { var t = []; return t.concat(e.CLASS_IDENTIFIER); }, e.prototype.actual = function () { return this._node; }, e.prototype.yamlNode = function () { return this._node; }, e.prototype.includesContents = function () { return this._includesContents; }, e.prototype.setIncludesContents = function (e) { this._includesContents = e; }, e.prototype.gatherIncludes = function (t, n, r, i) { var a = this; if (void 0 === t && (t = []), void 0 === n && (n = null), void 0 === r && (r = null), void 0 === i && (i = !0), null != this._node) {
                var o = this._node.kind;
                if (o != I.Kind.SCALAR)
                    if (o == I.Kind.MAP) {
                        var s = this._node;
                        1 != s.mappings.length || i ? s.mappings.map(function (t) { return new e(t, a._unit, a, r ? r : a._anchor, n ? n : a._include, a.cacheChildren); }).forEach(function (e) { return e.gatherIncludes(t); }) : new e(s.mappings[0].value, this._unit, this, n, r, this.cacheChildren).gatherIncludes(t);
                    }
                    else if (o == I.Kind.MAPPING) {
                        var u = this._node;
                        null == u.value || new e(u.value, this._unit, this, r ? r : this._anchor, n ? n : this._include, this.cacheChildren).gatherIncludes(t);
                    }
                    else if (o == I.Kind.SEQ) {
                        var l = this._node;
                        l.items.filter(function (e) { return null != e; }).map(function (t) { return new e(t, a._unit, a, r ? r : a._anchor, n ? n : a._include, a.cacheChildren); }).forEach(function (e) { return e.gatherIncludes(t); });
                    }
                    else
                        o == I.Kind.INCLUDE_REF && this._unit && t.push(this);
                else if (D.isScheme(this._node.value)) {
                    var p = D.getReferences(this._node.value, this.unit());
                    p.forEach(function (n) { var r = I.newScalar(n); r.kind = I.Kind.INCLUDE_REF; var i = new e(r, a.unit(), null, null, null); t.push(i); });
                }
            } }, e.prototype.setHighLevelParseResult = function (e) { this._highLevelParseResult = e; }, e.prototype.highLevelParseResult = function () { return this._highLevelParseResult; }, e.prototype.setHighLevelNode = function (e) { this._highLevelNode = e; }, e.prototype.highLevelNode = function () { return this._highLevelNode; }, e.prototype.start = function () { return this._node.startPosition; }, e.prototype.errors = function () { return this._errors; }, e.prototype.addIncludeError = function (e) { if (!R.find(this._errors, function (t) { return t.message == e.message; })) {
                var t = this._node;
                t.includeErrors || (t.includeErrors = []), R.find(t.includeErrors, function (t) { return t.message == e.message; }) || (this._errors.push(e), t.includeErrors.push(e));
            } }, e.prototype.parent = function () { return this._parent; }, e.prototype.recalcEndPositionFromChilds = function () { var e = (this.children(), this.children()[0]), t = this.children()[this.children().length - 1]; if (this.isMapping()) {
                var n = this.asMapping();
                if (n.value)
                    if (n.value.kind == I.Kind.MAP) {
                        var r = n.value;
                        r.startPosition < 0 && e && (r.startPosition = e.start()), t && (this._node.endPosition = t._node.endPosition), this._node.endPosition = Math.max(this._node.endPosition, n.value.endPosition);
                    }
                    else if (n.value.kind == I.Kind.SEQ) {
                        var i = n.value;
                        if (i.startPosition < 0 && i.items.length > 0) {
                            var a = i.items[0].startPosition, o = new M.TextRange(this.unit().contents(), a, a);
                            o = o.extendSpacesBack().extendCharIfAnyBack("-"), i.startPosition = o.startpos();
                        }
                        if (i.items.length > 0) {
                            var s = i.items[i.items.length - 1];
                            this._node.endPosition = Math.max(this._node.endPosition, i.endPosition, s.endPosition), i.endPosition = Math.max(this._node.endPosition, i.endPosition, s.endPosition);
                        }
                    }
                    else
                        n.value.kind == I.Kind.SCALAR || t && (this._node.endPosition = t._node.endPosition);
            }
            else
                t && (this._node.endPosition = t._node.endPosition); }, e.prototype.isValueLocal = function () { if (this._node.kind == I.Kind.MAPPING) {
                var e = this._node.value.kind;
                return e != I.Kind.INCLUDE_REF && e != I.Kind.ANCHOR_REF;
            } return !0; }, e.prototype.keyStart = function () { return this._node.kind == I.Kind.MAPPING ? this._node.key.startPosition : -1; }, e.prototype.keyEnd = function () { return this._node.kind == I.Kind.MAPPING ? this._node.key.endPosition : -1; }, e.prototype.valueStart = function () { if (this._node.kind == I.Kind.MAPPING) {
                var e = this.asMapping();
                return e.value ? e.value.startPosition : e.endPosition;
            } return this._node.kind == I.Kind.SCALAR ? this.start() : -1; }, e.prototype.valueEnd = function () { if (this._node.kind == I.Kind.MAPPING) {
                var e = this.asMapping();
                return e.value ? e.value.endPosition : e.endPosition;
            } return this._node.kind == I.Kind.SCALAR ? this.end() : -1; }, e.prototype.end = function () { return this._node.endPosition; }, e.prototype.dump = function () { if (this._oldText)
                return this._oldText; if (this._unit && this._node.startPosition > 0 && this._node.endPosition > 0) {
                var e = this._unit.contents().substring(this._node.startPosition, this._node.endPosition);
                return e = o(e, $(this, this._unit.contents()));
            } return I.dump(this.dumpToObject(), {}); }, e.prototype.dumpToObject = function (e) { return void 0 === e && (e = !1), this.dumpNode(this._node, e); }, e.prototype.dumpNode = function (e, t) { var n = this; if (void 0 === t && (t = !1), !e)
                return null; if (e.kind == I.Kind.INCLUDE_REF) {
                if (this._unit) {
                    var r = e, i = r.value, a = null;
                    try {
                        a = this._unit.resolve(i);
                    }
                    catch (o) { }
                    if (null == a)
                        return null;
                    if (a.isRAMLUnit() && this.canInclude(a)) {
                        var s = this.unit(), u = a;
                        u.addIncludedBy(s.absolutePath()), s.getIncludedByPaths().forEach(function (e) { u.addIncludedBy(e); });
                        var p = a.ast();
                        if (p)
                            return p.dumpToObject(t);
                    }
                    else if (this.canInclude(a))
                        return a.contents();
                }
                return null;
            } if (e.kind == I.Kind.SEQ) {
                var c = e, f = [];
                return c.items.forEach(function (e) { return f.push(n.dumpNode(e, t)); }), f;
            } if (e.kind == I.Kind.ANCHOR_REF) {
                var m = e;
                return this.dumpNode(m.value, t);
            } if (e.kind == I.Kind.MAPPING) {
                var h = e, d = {}, y = h.value, v = this.dumpNode(y, t);
                return d["" + this.dumpNode(h.key, t)] = v, d;
            } if (e.kind == I.Kind.SCALAR) {
                var r = e, g = r.value;
                return r.plainScalar && (g = l(g)), g;
            } if (e.kind == I.Kind.MAP) {
                var A = e, T = {};
                return A.mappings && A.mappings.forEach(function (e) { var r = n.dumpNode(e.value, t); null == r && (r = t ? "!$$$novalue" : r), T[n.dumpNode(e.key, t) + ""] = r; }), T;
            } }, e.prototype.keyKind = function () { return this._node.key ? this._node.key.kind : null; }, e.prototype._actualNode = function () { return this._node; }, e.prototype.execute = function (e) { this.unit() ? this.unit().project().execute(e) : e.commands.forEach(function (e) { switch (e.kind) {
                case S.CommandKind.CHANGE_VALUE:
                    var t = e.target, n = e.value, r = t._actualNode();
                    t.start();
                    return void (r.kind == I.Kind.MAPPING && (r.value = I.newScalar("" + n)));
                case S.CommandKind.CHANGE_KEY:
                    var t = e.target, n = e.value, r = t._actualNode();
                    if (r.kind == I.Kind.MAPPING) {
                        var i = r.key;
                        i.value = n;
                    }
                    return;
            } }); }, e.prototype.updateFrom = function (e) { this._node = e; }, e.prototype.isAnnotatedScalar = function () { if (!this.unit())
                return !1; for (var e, t = this; !e && t;)
                e = t.highLevelNode(), t = t.parent(); if (e) {
                var n = void 0;
                if (e.isElement())
                    n = e.asElement().definition();
                else {
                    var r = e.property();
                    n = r && (r.domain() || r.range());
                }
                if (n) {
                    var i = n.universe().version();
                    if ("RAML08" == i)
                        return !1;
                }
            } var a; if (this.kind() == I.Kind.MAPPING && this.valueKind() == I.Kind.MAP ? a = this._node.value.mappings : null == this.key() && this.kind() == I.Kind.MAP && (a = this._node.mappings), a) {
                var o = a.length > 0;
                return a.forEach(function (e) { "value" !== e.key.value && (e.key.value && "(" == e.key.value.charAt(0) && ")" == e.key.value.charAt(e.key.value.length - 1) || (o = !1)); }), o;
            } return !1; }, e.prototype.value = function (t) { if (!this._node)
                return ""; if (this._node.kind == I.Kind.SCALAR) {
                if ("~" === this._node.value && null === this._node.valueObject)
                    return t ? "null" : null;
                if (!t && "" + this._node.valueObject === this._node.value)
                    return this._node.valueObject;
                var n = this._node.value;
                return t || this._node.plainScalar && (n = l(n)), n;
            } if (this._node.kind == I.Kind.ANCHOR_REF) {
                var r = this._node;
                return new e(r.value, this._unit, this, null, null).value(t);
            } if (this._node.kind == I.Kind.MAPPING) {
                var i = this._node;
                if (null == i.value)
                    return null;
                if (this.isAnnotatedScalar())
                    for (var a = new e(i.value, this._unit, this, null, null), o = a.children(), s = 0; s < o.length; s++)
                        if ("value" === o[s].key())
                            return o[s].valueKind() == I.Kind.SEQ ? o[s].children().map(function (e) { return e.value(); }) : o[s].value();
                return new e(i.value, this._unit, this, null, null).value(t);
            } if (this._node.kind == I.Kind.INCLUDE_REF) {
                var u = this._node.value, p = u, c = null;
                try {
                    c = this._unit.resolve(p);
                }
                catch (f) {
                    return F.applyTemplate(B.CAN_NOT_RESOLVE_REASON, { path: p, reason: f.message });
                }
                if (null == c)
                    return F.applyTemplate(B.CAN_NOT_RESOLVE, { path: p });
                if (c.isRAMLUnit()) {
                    var m = c.ast();
                    return m ? m.value() : F.applyTemplate(B.CAN_NOT_RESOLVE_REASON, { path: p, reason: "file is empty" });
                }
                var h = c.contents();
                return M.isMultiLineValue(h) && (h = M.fromMutiLine(h)), h;
            } if (this._node.kind == I.Kind.MAP) {
                var d = this._node;
                if (1 == d.mappings.length)
                    return new e(d.mappings[0], this._unit, this, null, null);
                if (this.isAnnotatedScalar())
                    for (var o = this.children(), s = 0; s < o.length; s++)
                        if ("value" === o[s].key())
                            return o[s].valueKind() == I.Kind.SEQ ? o[s].children().map(function (e) { return e.value(); }) : o[s].value();
            } if (this._node.kind == I.Kind.SEQ) {
                var y = this._node;
                if (1 == y.items.length)
                    return new e(y.items[0], this._unit, this, null, null).value(t);
            } return null; }, e.prototype.printDetails = function (e) { var t = ""; e || (e = ""); var n = this.kindName(); return this.kind() == I.Kind.SCALAR ? t += e + "[" + n + "] " + this.value() + "\n" : this.kind() == I.Kind.MAPPING && this._node.value && this._node.value.kind == I.Kind.SCALAR ? t += e + "[" + n + "] " + this.key() + " = " + this.value() + "\n" : this.kind() == I.Kind.MAPPING ? (t += e + "[" + n + "] " + this.key() + " = :\n", this.children().forEach(function (n) { t += n.printDetails(e + "	"); })) : (t += e + "[" + n + "] :\n", this.children().forEach(function (n) { t += n.printDetails(e + "	"); })), t; }, e.prototype.visit = function (e) { this.children().forEach(function (t) { e(t) && t.visit(e); }); }, e.prototype.rawKey = function () { if (!this._node)
                return ""; if (this._node.kind == I.Kind.MAPPING) {
                var e = this._node;
                if (e.key.kind == I.Kind.SEQ) {
                    var t = e.key, n = "[";
                    return t.items.forEach(function (e) { return n += e.value; }), n + "]";
                }
                return e.key.value;
            } if (this._node.kind == I.Kind.INCLUDE_REF) {
                var r = this.children();
                if (1 == r.length)
                    return r[0].key();
            } return null; }, e.prototype.key = function (e) { void 0 === e && (e = !1); var t = this.rawKey(); return e ? t : (null != t && P.stringEndsWith(t, "?") && (t = t.substring(0, t.length - 1)), t); }, e.prototype.optional = function () { var e = this.rawKey(); return null != e && P.stringEndsWith(e, "?"); }, e.prototype.addChild = function (e, t) { void 0 === t && (t = -1); var n = e; if (n._parent = this, this._oldText = null, this.isMap()) {
                var r = this.asMap();
                (null == r.mappings || void 0 == r.mappings) && (r.mappings = []), t >= 0 ? r.mappings.splice(t, 0, n.asMapping()) : r.mappings.push(n.asMapping());
            }
            else if (this.isMapping()) {
                var i = this.asMapping(), a = i.value;
                if (!i.value && n.isMap())
                    return void (i.value = n._actualNode());
                if (i.value && i.value.kind == I.Kind.SCALAR && (i.value = null, a = null), a || (a = n.isScalar() || n.highLevelNode() && n.highLevelNode().property().getAdapter(C.RAMLPropertyParserService).isEmbedMap() ? I.newSeq() : I.newMap(), i.value = a), a.kind == I.Kind.MAP) {
                    var r = a;
                    (null == r.mappings || void 0 == r.mappings) && (r.mappings = []), n.isScalar(), t >= 0 ? r.mappings.splice(t, 0, n.asMapping()) : r.mappings.push(n.asMapping());
                }
                else {
                    if (a.kind != I.Kind.SEQ)
                        throw new K(F.applyTemplate(B.INSERT_INTO_MAPPING_VALUE_NOT_SUPPORTED, { value: I.Kind[i.value.kind] }));
                    var o = a;
                    t >= 0 ? o.items.splice(t, 0, n._actualNode()) : o.items.push(n._actualNode());
                }
            }
            else {
                if (!this.isSeq())
                    throw new K(F.applyTemplate(B.INSERT_INTO_NOT_SUPPORTED, { name: this.kindName() }));
                var o = this.asSeq();
                t >= 0 ? o.items.splice(t, 0, n._actualNode()) : o.items.push(n._actualNode());
            } }, e.prototype.removeChild = function (e) { this._oldText = null; var t, n, r = e; if (this.kind() == I.Kind.SEQ) {
                var i = this.asSeq();
                t = r._node, n = i.items.indexOf(t), n > -1 && i.items.splice(n, 1);
            }
            else if (this.kind() == I.Kind.MAP) {
                var a = this.asMap();
                t = r.asMapping(), n = a.mappings.indexOf(t), n > -1 && a.mappings.splice(n, 1);
            }
            else {
                if (this.kind() != I.Kind.MAPPING)
                    throw new K(F.applyTemplate(B.DELETE_FROM_NOT_SUPPORTED, { name: I.Kind[this.kind()] }));
                var o = this.asMapping();
                if (r._actualNode() == o.value)
                    o.value = null;
                else {
                    var a = o.value;
                    t = r.asMapping(), a && a.mappings && (n = a.mappings.indexOf(t), n > -1 && a.mappings.splice(n, 1));
                }
            } }, e.prototype.hasInnerIncludeError = function () { return this.innerIncludeErrors; }, e.prototype.includeErrors = function () { if (this._node.kind == I.Kind.MAPPING) {
                var t = this._node;
                if (null == t.value)
                    return [];
                var n = new e(t.value, this._unit, this, this._anchor, this._include), r = n.includeErrors();
                return this.innerIncludeErrors = n.hasInnerIncludeError(), r;
            } var i = []; if (this._node.kind == I.Kind.INCLUDE_REF) {
                var t = this._node;
                if (null == t.value)
                    return [];
                var a = this.includePath(), o = null;
                try {
                    o = this._unit.resolve(a);
                }
                catch (s) {
                    this.innerIncludeErrors = s.inner;
                    var u = F.applyTemplate(B.CAN_NOT_RESOLVE_REASON, { path: a, reason: s.message });
                    return i.push(u), i;
                }
                var l = this._node.includeErrors;
                if (l && l.length > 0)
                    return this.innerIncludeErrors = !0, i = l.map(function (e) { return "object" == typeof e && e instanceof s ? e.message : e.toString(); });
                if (null == o)
                    return i.push(F.applyTemplate(B.CAN_NOT_RESOLVE, { path: a })), i;
                if (o.isRAMLUnit()) {
                    var p = o.ast();
                    if (p)
                        return [];
                    i.push(F.applyTemplate(B.CAN_NOT_BE_PARSED, { path: a }));
                }
            } return i; }, e.prototype.joinMappingsWithFullIncludeAnchor = function (t, n, r) { var i = this, a = R.find(t, function (e) { return e.key && e.value && e.key.kind == I.Kind.SCALAR && "<<" == e.key.value && e.value.kind == I.Kind.ANCHOR_REF; }); if (!a)
                return t.map(function (t) { return new e(t, i._unit, i, r ? r : i._anchor, n ? n : i._include, i.cacheChildren); }); var o = R.filter(t, function (e) { return !(e.key.kind == I.Kind.SCALAR && "<<" == e.key.value && e.value.kind == I.Kind.ANCHOR_REF); }), s = new e(a.value, this._unit, this, n, r, this.cacheChildren).children(null, null, !0), u = o.map(function (t) { return new e(t, i._unit, i, r ? r : i._anchor, n ? n : i._include, i.cacheChildren); }); return u.concat(s); }, e.prototype.children = function (t, n, r) { var i = this; if (void 0 === t && (t = null), void 0 === n && (n = null), void 0 === r && (r = !0), null == this._node)
                return []; if (this.cacheChildren && this._children)
                return this._children; var a, o = this._node.kind; if (o == I.Kind.SCALAR)
                a = [];
            else if (o == I.Kind.MAP) {
                var s = this._node;
                a = 1 != s.mappings.length || r ? this.joinMappingsWithFullIncludeAnchor(s.mappings, t, n) : new e(s.mappings[0].value, this._unit, this, t, n, this.cacheChildren).children(null, null, !0);
            }
            else if (o == I.Kind.MAPPING) {
                var u = this._node;
                if (null == u.value)
                    a = [];
                else {
                    var l = new e(u.value, this._unit, this, n ? n : this._anchor, t ? t : this._include, this.cacheChildren);
                    a = l.children(), l.includesContents() && this.setIncludesContents(!0);
                }
            }
            else if (o == I.Kind.SEQ) {
                var p = this._node;
                a = p.items.filter(function (e) { return null != e; }).map(function (r) { return new e(r, i._unit, i, n ? n : i._anchor, t ? t : i._include, i.cacheChildren); });
            }
            else if (o == I.Kind.INCLUDE_REF) {
                if (this._unit) {
                    var c = this.includePath(), f = null;
                    try {
                        f = this._unit.resolve(c);
                    }
                    catch (m) { }
                    if (null == f)
                        a = [];
                    else if (f.isRAMLUnit())
                        if (this.canInclude(f)) {
                            var h = this.unit(), d = f;
                            d.addIncludedBy(h.absolutePath()), h.getIncludedByPaths().forEach(function (e) { d.addIncludedBy(e); });
                            var y = f.ast();
                            y && (this.cacheChildren && (y = v(y)), a = f.ast().children(this, null), this.setIncludesContents(!0));
                        }
                        else
                            this.addIncludeError && this.addIncludeError(new m(B.RECURSIVE_DEFINITION_EMPTY.message));
                }
                a || (a = []);
            }
            else {
                if (o != I.Kind.ANCHOR_REF)
                    throw new m(F.applyTemplate(B.SHOULD_NEVER_HAPPEN_KIND, { kind: I.Kind[this._node.kind] }));
                var g = this._node;
                a = new e(g.value, this._unit, this, null, null, this.cacheChildren).children();
            } return this.cacheChildren && (this._children = a), a; }, e.prototype.canInclude = function (e) { for (var t = this.includedFrom(); null != t;) {
                if (t.unit().absolutePath() == e.absolutePath())
                    return !1;
                t = t.includedFrom();
            } return !this.unit().includedByContains(e.absolutePath()); }, e.prototype.directChildren = function (t, n, r) { var i = this; if (void 0 === t && (t = null), void 0 === n && (n = null), void 0 === r && (r = !0), this._node) {
                switch (this._node.kind) {
                    case I.Kind.SCALAR: return [];
                    case I.Kind.MAP:
                        var a = this._node;
                        return 1 != a.mappings.length || r ? a.mappings.map(function (r) { return new e(r, i._unit, i, n ? n : i._anchor, t ? t : i._include); }) : new e(a.mappings[0].value, this._unit, this, t, n).directChildren(null, null, !0);
                    case I.Kind.MAPPING:
                        var o = this._node;
                        return null == o.value ? [] : new e(o.value, this._unit, this, n ? n : this._anchor, t ? t : this._include).directChildren();
                    case I.Kind.SEQ:
                        var s = this._node;
                        return s.items.filter(function (e) { return null != e; }).map(function (r) { return new e(r, i._unit, i, n ? n : i._anchor, t ? t : i._include); });
                    case I.Kind.INCLUDE_REF: return [];
                    case I.Kind.ANCHOR_REF: return [];
                }
                throw new K(F.applyTemplate(B.SHOULD_NEVER_HAPPEN_KIND, { kind: I.Kind[this._node.kind] }));
            } return []; }, e.prototype.anchorId = function () { return this._node.anchorId; }, e.prototype.unit = function () { return this._unit; }, e.prototype.containingUnit = function () { return this.valueKind() == I.Kind.INCLUDE_REF ? this.unit().resolve(this._node.value.value) : this.kind() == I.Kind.INCLUDE_REF ? this.unit().resolve(this._node.value) : this._unit; }, e.prototype.includeBaseUnit = function () { return this._unit; }, e.prototype.setUnit = function (e) { this._unit = e; }, e.prototype.includePath = function () { var e = this.getIncludeString(); return e ? e : null; }, e.prototype.includeReference = function () { var e = this.getIncludeString(); return e ? O.getIncludeReference(e) : null; }, e.prototype.getIncludeString = function () { if (!this._node)
                return null; if (this._node.kind == I.Kind.INCLUDE_REF) {
                var t = this._node.value;
                return t;
            } if (this._node.kind == I.Kind.MAPPING) {
                var n = this._node;
                return null == n.value ? null : new e(n.value, this._unit, this, null, null).getIncludeString();
            } if (this._node.kind == I.Kind.ANCHOR_REF) {
                var r = this._node.value;
                return new e(r, this._unit, this, null, null).getIncludeString();
            } return null; }, e.prototype.anchoredFrom = function () { return this._anchor; }, e.prototype.includedFrom = function () { return this._include; }, e.prototype.kind = function () { return this._actualNode().kind; }, e.prototype.valueKind = function () { if (this._node.kind != I.Kind.MAPPING)
                return null; var e = this._node; return e.value ? e.value.kind : null; }, e.prototype.anchorValueKind = function () { if (this.valueKind() == I.Kind.ANCHOR_REF) {
                var e = this._node.value;
                return e && e.value && e.value.kind;
            } return null; }, e.prototype.resolvedValueKind = function () { var e = this.valueKind(); if (e == I.Kind.ANCHOR_REF) {
                var t = this.anchorValueKind();
                if (t == I.Kind.INCLUDE_REF) {
                    var n = this._node.value, r = n.value.value;
                    return this.unitKind(r);
                }
                return t;
            } if (e == I.Kind.INCLUDE_REF) {
                var r = this.includePath();
                return this.unitKind(r);
            } return e; }, e.prototype.unitKind = function (e) { var t; try {
                t = this._unit.resolve(e);
            }
            catch (n) {
                return null;
            } if (null == t)
                return I.Kind.SCALAR; if (t.isRAMLUnit()) {
                var r = t.ast();
                if (r)
                    return r.kind();
            } return I.Kind.SCALAR; }, e.prototype.valueKindName = function () { var e = this.valueKind(); return void 0 != e ? I.Kind[e] : null; }, e.prototype.kindName = function () { return I.Kind[this.kind()]; }, e.prototype.indent = function (e, t) { void 0 === t && (t = ""); for (var n = "", r = 0; e > r; r++)
                n += "  "; return n + t; }, e.prototype.replaceNewlines = function (e, t) { void 0 === t && (t = null); for (var n = "", r = 0; r < e.length; r++) {
                var i = e[r];
                "\r" == i && (i = null == t ? "\\r" : t), "\n" == i && (i = null == t ? "\\n" : t), n += i;
            } return n; }, e.prototype.shortText = function (e, t) { void 0 === t && (t = 50); var n = this.end() - this.start(), r = n, i = this.unit(); !e && i && (e = i.contents()); var a; if (e) {
                var o = e;
                a = o ? o.substring(this.start(), this.end()) : "[no-text]";
            }
            else
                a = "[no-unit]"; return a = "[" + this.start() + ".." + this.end() + "] " + n + " // " + a + " //", n > r && (a += "..."), a = this.replaceNewlines(a); }, e.prototype.nodeShortText = function (e, t, n) { void 0 === n && (n = 50); var r = e.endPosition - e.startPosition, i = r, a = this.unit(); !t && a && (t = a.contents()); var o; if (t) {
                var s = t;
                o = s ? s.substring(e.startPosition, e.endPosition) : "[no-text]";
            }
            else
                o = "[no-unit]"; return o = "[" + e.startPosition + ".." + e.endPosition + "] " + r + " // " + o + " //", r > i && (o += "..."), o = this.replaceNewlines(o); }, e.prototype.show = function (e, t, n) { void 0 === e && (e = null), void 0 === t && (t = 0), void 0 === n && (n = null), e && 0 == t && console.log(e); var r = this.children(), i = this.kindName(), a = this._actualNode().value; this.kind() == I.Kind.MAPPING && (i += "[" + this._actualNode().key.value + "]"), i += a ? "/" + I.Kind[a.kind] : "", 0 == r.length ? (console.log(this.indent(t) + i + " // " + this.shortText(n)), this.isMapping() && this.asMapping().value && console.log(this.indent(t + 1) + "// " + this.valueKindName() + ": " + this.nodeShortText(this.asMapping().value, n))) : (console.log(this.indent(t) + i + " { // " + this.shortText(n)), this.isMapping() && this.asMapping().value && console.log(this.indent(t + 1) + "// " + this.valueKindName() + ": " + this.nodeShortText(this.asMapping().value, n)), r.forEach(function (e) { var r = e; r.show(null, t + 1, n); }), console.log(this.indent(t) + "}")); }, e.prototype.showParents = function (e, t) { void 0 === t && (t = 0), e && 0 == t && console.log(e); var n = 0; if (this.parent()) {
                var r = this.parent();
                n = r.showParents(null, t + 1);
            } var i = this.kindName(), a = this._actualNode().value; return i += a ? "/" + I.Kind[a.kind] : "/null", console.log(this.indent(n) + i + " // " + this.shortText(null)), n + 1; }, e.prototype.inlined = function (e) { return e == I.Kind.SCALAR || e == I.Kind.INCLUDE_REF; }, e.prototype.markupNode = function (e, t, n, r) { void 0 === r && (r = !1); var i = e.text.length; switch (t.kind) {
                case I.Kind.MAP:
                    r && e.append("{");
                    for (var o = t.mappings, s = 0; s < o.length; s++)
                        r && s > 0 && e.append(", "), this.markupNode(e, o[s], n, r);
                    r && e.append("}");
                    break;
                case I.Kind.SEQ:
                    for (var u = t.items, s = 0; s < u.length; s++)
                        e.append(this.indent(n, "- ")), this.markupNode(e, u[s], n + 1, r);
                    break;
                case I.Kind.MAPPING:
                    var l = t, p = l.value;
                    if (r) {
                        if (!p) {
                            e.append("\n");
                            break;
                        }
                        if (e.append(l.key.value), e.append(": "), p.kind == I.Kind.SCALAR) {
                            var c = p;
                            e.append(c.value);
                        }
                        else {
                            if (p.kind != I.Kind.MAP)
                                throw new K(F.applyTemplate(B.NOT_IMPLEMENTED_KIND, { kind: I.Kind[p.kind] }));
                            this.markupNode(e, l.value, n + 1, r);
                        }
                        break;
                    }
                    if (e.addWithIndent(n, l.key.value + ":"), !p) {
                        e.append("\n");
                        break;
                    }
                    if (p.kind == I.Kind.SCALAR)
                        var c = p;
                    l.value ? (e.append(this.inlined(l.value.kind) ? " " : "\n"), this.markupNode(e, l.value, n + 1, r)) : e.append("\n");
                    break;
                case I.Kind.SCALAR:
                    var c = t;
                    if (M.isMultiLine(c.value)) {
                        e.append("|\n");
                        for (var f = a(c.value), s = 0; s < f.length; s++)
                            e.append(this.indent(n, f[s]));
                        e.append("\n");
                    }
                    else
                        e.append(c.value + "\n");
                    break;
                case I.Kind.INCLUDE_REF:
                    var m = t;
                    e.append("!include " + m.value + "\n");
                    break;
                default: throw new K(F.applyTemplate(B.UNKNOWN_NODE_KIND, { kind: I.Kind[t.kind] }));
            } for (; i < e.text.length && " " == e.text[i];)
                i++; t.startPosition = i, t.endPosition = e.text.length; }, e.prototype.markup = function (e) { void 0 === e && (e = !1); var t = new V(""); return this.markupNode(t, this._actualNode(), 0, e), t.text; }, e.prototype.root = function () { for (var e = this; e.parent();) {
                var t = e.parent();
                e = t;
            } return e; }, e.prototype.parentOfKind = function (e) { for (var t = this.parent(); t;) {
                if (t.kind() == e)
                    return t;
                t = t.parent();
            } return null; }, e.prototype.find = function (e) { var t = null; return this.directChildren().forEach(function (n) { n.key() && n.key() == e && (t || (t = n)); }), t; }, e.prototype.shiftNodes = function (e, t, n) { if (this.directChildren().forEach(function (r) { if (n && n.start() == r.start() && n.end() == r.end())
                ;
            else {
                r.shiftNodes(e, t, n);
            } }), n && n.start() == this.start() && n.end() == this.end())
                ;
            else {
                var r = this._actualNode();
                r && z(e, r, t);
            } return null; }, e.prototype.isMap = function () { return this.kind() == I.Kind.MAP; }, e.prototype.isMapping = function () { return this.kind() == I.Kind.MAPPING; }, e.prototype.isSeq = function () { return this.kind() == I.Kind.SEQ; }, e.prototype.isScalar = function () { return this.kind() == I.Kind.SCALAR; }, e.prototype.asMap = function () { if (!this.isMap())
                throw new K(F.applyTemplate(B.EXPECTED_INSTEAD_OF, { expected: "map", received: this.kindName() })); return this._actualNode(); }, e.prototype.asMapping = function () { if (!this.isMapping())
                throw new K(F.applyTemplate(B.EXPECTED_INSTEAD_OF, { expected: "mapping", received: this.kindName() })); return this._actualNode(); }, e.prototype.asSeq = function () { if (!this.isSeq())
                throw new K(F.applyTemplate(B.EXPECTED_INSTEAD_OF, { expected: "seq", received: this.kindName() })); return this._actualNode(); }, e.prototype.asScalar = function () { if (!this.isScalar())
                throw new K(F.applyTemplate(B.EXPECTED_INSTEAD_OF, { expected: "scalar", received: this.kindName() })); return this._actualNode(); }, e.prototype.isValueSeq = function () { return this.valueKind() == I.Kind.SEQ; }, e.prototype.isValueMap = function () { return this.valueKind() == I.Kind.MAP; }, e.prototype.isValueInclude = function () { return this.valueKind() == I.Kind.INCLUDE_REF; }, e.prototype.isValueScalar = function () { return this.valueKind() == I.Kind.SCALAR; }, e.prototype.valueAsSeq = function () { if (!this.isMapping())
                throw new K(F.applyTemplate(B.EXPECTED_INSTEAD_OF, { expected: "mapping", received: this.kindName() })); if (this.valueKind() != I.Kind.SEQ)
                throw new K(F.applyTemplate(B.EXPECTED_INSTEAD_OF, { expected: "mapping/seq", received: "mapping/" + this.kindName() })); return this.asMapping().value; }, e.prototype.valueAsMap = function () { if (!this.isMapping())
                throw new K(F.applyTemplate(B.EXPECTED_INSTEAD_OF, { expected: "mapping", received: this.kindName() })); if (this.valueKind() != I.Kind.MAP)
                throw new K(F.applyTemplate(B.EXPECTED_INSTEAD_OF, { expected: "mapping/map", received: "mapping/" + this.kindName() })); return this.asMapping().value; }, e.prototype.valueAsScalar = function () { if (!this.isMapping())
                throw new K(F.applyTemplate(B.EXPECTED_INSTEAD_OF, { expected: "mapping", received: this.kindName() })); if (this.valueKind() != I.Kind.SCALAR)
                throw new K(F.applyTemplate(B.EXPECTED_INSTEAD_OF, { expected: "mapping/scalar", received: "mapping/" + this.kindName() })); return this.asMapping().value; }, e.prototype.valueAsInclude = function () { if (!this.isMapping())
                throw new K(F.applyTemplate(B.EXPECTED_INSTEAD_OF, { expected: "mapping", received: this.kindName() })); if (this.valueKind() != I.Kind.INCLUDE_REF)
                throw new K(F.applyTemplate(B.EXPECTED_INSTEAD_OF, { expected: "mapping/include", received: "mapping/" + this.kindName() })); return this.asMapping().value; }, e.prototype.text = function (e) { if (void 0 === e && (e = null), !e) {
                if (!this.unit())
                    return "[no-text]";
                e = this.unit().contents();
            } return e.substring(this.start(), this.end()); }, e.prototype.copy = function () { var t = i(this._actualNode()); return new e(t, this._unit, this._parent, this._anchor, this._include, this._includesContents); }, e.prototype.nodeDefinition = function () { return A(this); }, e.CLASS_IDENTIFIER = "jsyaml2lowLevel.ASTNode", e; }();
            t.ASTNode = Q, function (e) { e[e.NONE = 0] = "NONE", e[e.START = 1] = "START", e[e.END = 2] = "END", e[e.POINT = 3] = "POINT"; }(t.InsertionPointType || (t.InsertionPointType = {}));
            var Z = t.InsertionPointType, ee = function () { function e(e, t) { void 0 === t && (t = null), this.type = e, this.point = t; } return e.isInstance = function (t) { return null != t && t.getClassIdentifier && "function" == typeof t.getClassIdentifier && R.contains(t.getClassIdentifier(), e.CLASS_IDENTIFIER); }, e.prototype.getClassIdentifier = function () { var t = []; return t.concat(e.CLASS_IDENTIFIER); }, e.after = function (t) { return new e(Z.POINT, t); }, e.atStart = function () { return new e(Z.START); }, e.atEnd = function () { return new e(Z.END); }, e.node = function () { return new e(Z.NONE); }, e.prototype.show = function (e) { e ? (console.log(e), console.log(F.applyTemplate(B.INSERTION_POINT_TYPE, { type: Z[this.type] }))) : console.log(F.applyTemplate(B.INSERTION_POINT_TYPE, { type: Z[this.type] })), this.type == Z.POINT && this.point && this.point.show(); }, e.CLASS_IDENTIFIER = "jsyaml2lowLevel.InsertionPoint", e; }();
            t.InsertionPoint = ee, t.createNode = p, t.createMap = c, t.createScalar = f, t.createSeq = m, t.createSeqNode = h, t.createMapNode = d, t.createMapping = y, t.toChildCachingNode = v, t.toIncludingNode = g, t.getDefinitionForLowLevelNode = A, t.fetchIncludesAndMasterAsync = E;
        }, function (e, t, n) {
            "use strict";
            function r(e) { if (!e)
                return e; var t = e.indexOf("#"); return -1 == t ? e : e.substring(0, t); }
            function i(e) { if (!e)
                return null; "string" != typeof e && (e = "" + e); var t = e.indexOf("#"); if (-1 == t)
                return null; var n = t == e.length - 1 ? "" : e.substring(t + 1, e.length), i = n.split("/"); return 0 == i.length ? null : ("" == i[0].trim() && i.splice(0, 1), new h(n, r(e), i)); }
            function a() { return [new d, new v]; }
            function o(e, t) { if (!e)
                return t; var n = i(e); if (!n)
                return t; var a = r(e); return s(a, n, t).content; }
            function s(e, t, n) { var r = c.find(a(), function (t) { return t.isApplicable(e, n); }); return r ? r.resolveReference(n, t) : { content: n, validation: [] }; }
            function u(e, t, n) { if (!n)
                return []; var r = c.find(a(), function (t) { return t.isApplicable(e, n); }); return r ? r.completeReference(n, t) : []; }
            function l(e, t) { return e && t ? e.lastIndexOf(t) === e.length - t.length : !1; }
            function p(e, t) { for (var n = e.getElementsByTagName(t), r = [], i = 0; i < n.length; i++) {
                var a = n[i];
                a.parentNode === e && r.push(a);
            } return r; }
            var c = n(70), f = n(76).DOMParser, m = n(68);
            t.getIncludePath = r, t.getIncludeReference = i, t.getIncludeReferenceResolvers = a, t.resolveContents = o, t.resolve = s, t.completeReference = u;
            var h = function () { function e(e, t, n) { this.includePath = t, this.segments = n, this.originalString = e; } return e.prototype.getIncludePath = function () { return this.includePath; }, e.prototype.getFragments = function () { return this.segments; }, e.prototype.asString = function () { return this.originalString; }, e.prototype.encodedName = function (e) { return void 0 === e && (e = !0), m(this.includePath + "/" + this.asString()) + (e ? this.includePath.substring(this.includePath.lastIndexOf(".")) : ""); }, e; }(), d = function () { function e() { } return e.prototype.isApplicable = function (e, t) { return e && (l(e.trim(), ".js") || l(e.trim(), ".json")); }, e.prototype.resolveReference = function (e, t) { try {
                var n = {};
                return n.$ref = t.getIncludePath() + "#" + t.getFragments().map(function (e) { return "/" + e; }).join(""), { content: JSON.stringify(n, null, 2), validation: [] };
            }
            catch (r) {
                console.log(r);
            } return { content: e, validation: [] }; }, e.prototype.completeReference = function (e, t) { try {
                var n = JSON.parse(e), r = t.getFragments();
                if (!r || 0 == r.length)
                    return this.getChildren(n);
                for (var i = n, a = t.asString().lastIndexOf("/") == t.asString().length - 1, o = (a ? r.length : r.length - 1, 0); o < r.length - 1; o++) {
                    var s = r[o];
                    if (i = this.findChild(i, s), !i)
                        return [];
                }
                if (a)
                    return this.getChildren(i);
                var u = r[r.length - 1], l = [];
                return this.getChildren(i).forEach(function (e) { 0 == e.indexOf(u) && l.push(e); }), l;
            }
            catch (p) {
                console.log(p);
            } return []; }, e.prototype.findChild = function (e, t) { var n = t.replace("~1", "/"); return n = t.replace("~0", "~"), e[n]; }, e.prototype.getChildren = function (e) { return Object.keys(e); }, e; }(), y = { errorHandler: { warning: function () { return null; }, error: function () { return null; }, fatalError: function () { return null; } } }, v = function () { function e() { } return e.prototype.isApplicable = function (e, t) { return e && (l(e.trim(), ".xml") || l(e.trim(), ".xsd")); }, e.prototype.resolveReference = function (e, t) { try {
                var n = new f(y).parseFromString(e), r = t.asString(), i = t.encodedName(!1), a = p(n, "xs:schema")[0], o = p(a, "xs:element"), s = p(a, "xs:complexType"), u = c.find(o, function (e) { return e.getAttribute("name") === r; }), l = u ? c.find(s, function (e) { return e.getAttribute("name") === u.getAttribute("type"); }) : c.find(s, function (e) { return e.getAttribute("name") === r; }), m = n.createElement("xs:element");
                m.setAttribute("name", i), l && m.setAttribute("type", l.getAttribute("name")), u && m.setAttribute("originalname", u.getAttribute("name")), m.setAttribute("requestedname", r), m.setAttribute("extraelement", "true"), a.appendChild(m);
                var h = n.toString(), d = h, v = h.indexOf("?>");
                if (v > 0 && h.length > v + 2) {
                    var g = h.charAt(v + 2);
                    "\n" != g && (d = h.slice(0, v + 2) + "\n" + h.slice(v + 2));
                }
                return { content: d, validation: [] };
            }
            catch (A) {
                console.log(A);
            } return { content: e, validation: [] }; }, e.prototype.completeReference = function (e, t) { try {
                var n = new f(y).parseFromString(e), r = [], i = p(n, "xs:schema")[0], a = p(i, "xs:element"), o = p(i, "xs:complexType");
                a.forEach(function (e) { return r.push(e.getAttribute("name")); }), o.forEach(function (e) { return r.push(e.getAttribute("name")); });
                var s = 0 === t.asString().trim().length;
                return s ? r : r.filter(function (e) { return 0 === e.indexOf(t.asString()); });
            }
            catch (u) {
                return [];
            } }, e; }();
        }, function (e, t, n) {
            "use strict";
            function r(e) { return e instanceof T.ApiImpl || e instanceof E.ApiImpl ? (new P).expandTraitsAndResourceTypes(e) : null; }
            function i(e) { return (new O).expandLibraries(e); }
            function a(e) {
                return (new O).expandLibrary(e);
            }
            function o(e, t, n) { var r = y.fromUnit(e); if (!r)
                throw new Error(M.applyTemplate(w.COULD_NOT_LOAD_API_FROM, { path: e.absolutePath() })); if (!t || 0 == t.length)
                return r; for (var i = [], a = 0; a < t.length; a++) {
                var o = t[a], u = y.fromUnit(o);
                if (!u)
                    throw new Error(M.applyTemplate(w.COULD_NOT_LOAD_API_FROM, { path: o.absolutePath() }));
                i.push(u);
            } var l = s(r, i, n); return l; }
            function s(e, t, n, r, i) { void 0 === r && (r = null), void 0 === i && (i = !1); for (var a = e, o = 0, s = t; o < s.length; o++) {
                var u = s[o];
                i && A.LowLevelProxyNode.isInstance(a.lowLevel()) && (a = (new P).expandHighLevelNode(a, r, e.wrapperNode()).highLevel()), u.overrideMaster(a), u.setMergeMode(n), a = u;
            } return a; }
            function u(e) { for (var t = [], n = 0, r = e; n < r.length; n++) {
                var i = r[n];
                l(t, i, !0);
            } return t; }
            function l(e, t, n) { void 0 === n && (n = !1); var r = n ? e : e.concat([]), i = t.lowLevel().unit(); if (null == i)
                return r; if (0 == r.length)
                r.push(i);
            else {
                var a = r[r.length - 1].absolutePath();
                i.absolutePath() != a && r.push(i);
            } return r; }
            function p(e) { for (var t = []; e;)
                t.push(e), e = e.parent(); return u(t); }
            function c() { return U.map(function (e) { return e.name; }); }
            function f(e) { for (var t = [], n = e.split("|").slice(1), r = 0, i = n; r < i.length; r++)
                for (var a = i[r], o = 0; o < U.length; o++)
                    if (a.match(U[o].regexp)) {
                        t.push(U[o].transformer);
                        break;
                    } return t; }
            function m(e) { return e ? "*/*" == e ? null : (e.indexOf("/*") == e.length - 2 && (e = e.substring(0, e.length - 2) + "/xxx"), C.parse(e)) : null; }
            var h = this && this.__extends || function (e, t) { function n() { this.constructor = e; } for (var r in t)
                t.hasOwnProperty(r) && (e[r] = t[r]); e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype, new n); }, d = n(25), y = n(16), v = n(83), g = n(35), A = n(41), T = n(22), E = n(50), S = n(77), N = n(17), _ = n(70), b = n(51), I = n(39), R = n(14), M = n(28), w = n(60), C = n(69), L = n(78);
            t.expandTraitsAndResourceTypes = r, t.expandLibraries = i, t.expandLibrary = a, t.mergeAPIs = o;
            var P = function () { function e() { this.hasGlobalTraits = !1, this.hasGlobalResourceTypes = !1; } return e.prototype.expandTraitsAndResourceTypes = function (e, t, n) { void 0 === t && (t = null), void 0 === n && (n = !1), this.init(e); var r = e.highLevel().lowLevel(); if (!r)
                return e; if (r.actual().libExpanded)
                return e; var i = r.unit(), a = i.project(); a.setMainUnitPath(i.absolutePath()); var o = a.namespaceResolver().hasFragments(i), s = a.namespaceResolver().hasTemplates(r.unit()); if (!s && !o && !n)
                return e; var u = this.createHighLevelNode(e.highLevel(), !1, t); if (e.definition().key() == N.Universe10.Overlay)
                return u.wrapperNode(); var l = this.expandHighLevelNode(u, t, e, !0); return l; }, e.prototype.init = function (e) { var t = e.highLevel(); this.ramlVersion = t.definition().universe().version(); }, e.prototype.expandHighLevelNode = function (e, t, n, r) { var i = this; void 0 === r && (r = !1), this.init(n); var a = e.wrapperNode(); a.setAttributeDefaults(n.getDefaultsCalculator().isEnabled()), a.highLevel().setMergeMode(n.highLevel().getMergeMode()); var o = a.resources(); return o.forEach(function (e) { return i.processResource(e); }), "RAML10" == this.ramlVersion && (t = t || new b.ReferencePatcher, t.process(e), e.lowLevel().actual().referencePatcher = t, r && e.types()), a; }, e.prototype.getTemplate = function (e, t, n, r) { var i = t.lowLevel().unit().path(), a = n[i]; a || (a = {}, n[i] = a); var o = a[e]; return void 0 !== o ? o : (o = null, o = _.find(r, function (n) { return y.qName(n.highLevel(), t) == e; }), o || (o = null), a[e] = o, o); }, e.prototype.createHighLevelNode = function (e, t, n, r) { void 0 === t && (t = !0), void 0 === n && (n = null), void 0 === r && (r = !1); for (var i = e, a = [], o = i; o;) {
                var u, l = o.lowLevel();
                i.definition().key() != N.Universe10.Overlay || r ? (A.LowLevelCompositeNode.isInstance(l) && (l = l.originalNode().originalNode()), u = new A.LowLevelCompositeNode(l, null, null, this.ramlVersion)) : u = l;
                var p = o.definition(), c = new y.ASTNodeImpl(u, null, p, null);
                if (c.setUniverse(o.universe()), a.push(c), !t)
                    break;
                o = o.getMaster();
            } var f = a.pop(); a = a.reverse(); var m = i.getMergeMode(); return s(f, a, m, n, r); }, e.prototype.processResource = function (e, t) { var n = this; void 0 === t && (t = []); var r = t.concat(e.highLevel()), i = this.collectResourceData(e, e, void 0, void 0, r), a = e.highLevel().lowLevel(); a.preserveAnnotations(), a.takeOnlyOriginalChildrenWithKey(I.universesInfo.Universe10.ResourceBase.properties.type.name), a.takeOnlyOriginalChildrenWithKey(I.universesInfo.Universe10.FragmentDeclaration.properties.uses.name), i.filter(function (e) { return null != e.resourceType; }).forEach(function (t) { var n = t.resourceType.node.highLevel().lowLevel(), r = t.resourceType.transformer; r.owner = e, a.adopt(n, r); }); var o = e.methods(); o.forEach(function (e) { var t = e.highLevel().lowLevel(); A.LowLevelCompositeNode.isInstance(t) && t.takeOnlyOriginalChildrenWithKey(I.universesInfo.Universe10.FragmentDeclaration.properties.uses.name); var n = e.method(), r = []; i.forEach(function (i) { var a = i.methodTraits[n]; a && (r = r.concat(a), a.forEach(function (n) { var r = n.node.highLevel().lowLevel(), i = n.transformer; i.owner = e, t.adopt(r, i); })); var o = i.traits; o && (r = r.concat(o), o.forEach(function (n) { var r = n.node.highLevel().lowLevel(), i = n.transformer; i.owner = e, t.adopt(r, i); })); }); }); var s = e.resources(); s.forEach(function (e) { return n.processResource(e, r); }), e.methods().forEach(function (e) { return n.mergeBodiesForMethod(e.highLevel()); }); }, e.prototype.mergeBodiesForMethod = function (e) { var t = e.lowLevel(); if (A.LowLevelCompositeNode.isInstance(t)) {
                var n = e.computedValue(N.Universe10.Api.properties.mediaType.name);
                if (null != n) {
                    for (var r, i = [], a = t.children(), o = 0, s = a; o < s.length; o++) {
                        var u = s[o];
                        if (u.key() == N.Universe10.Method.properties.body.name)
                            r = u;
                        else if (u.key() == N.Universe10.Method.properties.responses.name)
                            for (var l = u.children(), p = 0, c = l; p < c.length; p++)
                                for (var f = c[p], m = f.children(), h = 0, d = m; h < d.length; h++) {
                                    var y = d[h];
                                    y.key() == N.Universe10.Response.properties.body.name && i.push(y);
                                }
                    }
                    r && i.push(r);
                    for (var v = 0, g = i; v < g.length; v++) {
                        var T = g[v];
                        this.mergeBodies(T, n);
                    }
                }
            } }, e.prototype.mergeBodies = function (e, t) { for (var n, r = [], i = [], a = [], o = [], s = !1, u = 0, l = e.children(); u < l.length; u++) {
                var p = l[u], c = p.key();
                if (c == t)
                    n = p, a.push({ node: b.toOriginal(p), transformer: p.transformer() });
                else
                    try {
                        m(c), i.push(p);
                    }
                    catch (f) {
                        var h = b.toOriginal(p).parent();
                        o.indexOf(h) < 0 && (a.push({ node: h, transformer: p.transformer() }), o.push(h)), K[p.key()] && (s = !0), r.push(p);
                    }
            } if (0 == r.length || null == n && 0 == i.length)
                return !1; if (s) {
                for (var y = 0, g = r; y < g.length; y++) {
                    var p = g[y];
                    e.removeChild(p);
                }
                if (null == n) {
                    var A = b.toOriginal(e), T = v.newMapping(v.newScalar(t), v.newMap([])), E = new d.ASTNode(T, A.unit(), A, null, null);
                    n = e.replaceChild(null, E);
                }
                return n.patchAdoptedNodes(a), !0;
            } }, e.prototype.collectResourceData = function (e, t, n, r, i, a) { var o = this; void 0 === n && (n = []), void 0 === i && (i = []), void 0 === a && (a = {}), i = i.concat([t.highLevel()]); var s = this.extractTraits(t, r, i), l = {}, p = t.methods(); p.forEach(function (e) { var t = o.extractTraits(e, r, i); t && t.length > 0 && (l[e.method()] = t); }); var c, f = t.type(); if (null != f) {
                var m = u(i);
                c = this.readGenerictData(e, f, t.highLevel(), "resource type", r, m);
            } var h = { resourceType: c, traits: s, methodTraits: l }; if (n.push(h), c) {
                var d = c.node, v = y.qName(d.highLevel(), e.highLevel());
                a[v] ? h.resourceType = null : (a[v] = !0, this.collectResourceData(e, d, n, c.transformer, i, a));
            } return n; }, e.prototype.extractTraits = function (e, t, n, r) { var i = this; void 0 === r && (r = {}), n = n.concat([e.highLevel()]); for (var a = [], o = -1; o < a.length; o++) {
                var s = 0 > o ? null : a[o], p = s ? s.node : e, c = s ? s.unitsChain : u(n), f = s ? s.transformer : t;
                p.is && p.is().forEach(function (t) { var n = l(c, t.highLevel()), o = i.readGenerictData(e, t, p.highLevel(), "trait", f, n); if (o) {
                    var s = o.name;
                    r[s] = !0, a.push(o);
                } });
            } return a; }, e.prototype.readGenerictData = function (e, t, n, r, i, a) { void 0 === a && (a = []); var o = t.value(), s = S.plural(L.camelCase(r)); if ("string" == typeof o) {
                i && (o = i.transform(o).value);
                var u = b.getDeclaration(o, s, a);
                if (u) {
                    var l = u.wrapperNode();
                    return { name: o, transformer: null, parentTransformer: i, node: l, ref: t, unitsChain: a };
                }
            }
            else if (y.StructuredValue.isInstance(o)) {
                var p = o, c = p.valueName();
                i && (c = i.transform(c).value);
                var f = {}, m = {}, u = b.getDeclaration(c, s, a);
                if (u) {
                    var l = u.wrapperNode();
                    "RAML08" == this.ramlVersion ? p.children().forEach(function (e) { return f[e.valueName()] = e.lowLevel().value(); }) : p.children().forEach(function (e) { var t = e.lowLevel(); t.resolvedValueKind() == v.Kind.SCALAR ? f[e.valueName()] = t.value() : m[e.valueName()] = t; });
                    var h = new F(e, null, a);
                    Object.keys(f).forEach(function (e) { var t = h.transform(f[e]); t && "object" != typeof t && (f[e] = t); });
                    var d = new k(r, c, a, f, m, i), g = new F(null, d, a);
                    return { name: c, transformer: g, parentTransformer: i, node: l, ref: t, unitsChain: a };
                }
            } return null; }, e; }();
            t.TraitsAndResourceTypesExpander = P;
            var O = function () { function e() { } return e.prototype.expandLibraries = function (e) { var t = e; if (null == t)
                return null; A.LowLevelCompositeNode.isInstance(t.highLevel().lowLevel()) && (t = t.highLevel().lowLevel().unit().highLevel().asElement().wrapperNode()); var n = new P, r = new b.ReferencePatcher, i = n.createHighLevelNode(t.highLevel(), !0, r, !0), a = n.expandHighLevelNode(i, r, t); return this.processNode(r, a.highLevel()), a; }, e.prototype.expandLibrary = function (e) { var t = e; if (null == t)
                return null; A.LowLevelCompositeNode.isInstance(t.highLevel().lowLevel()) && (t = t.highLevel().lowLevel().unit().highLevel().asElement().wrapperNode()); var n = new P, r = new b.ReferencePatcher, i = n.createHighLevelNode(t.highLevel(), !0, r, !0); r.process(i), r.expandLibraries(i); var a = i.wrapperNode(); return a; }, e.prototype.processNode = function (e, t) { if (null != t) {
                var n = t.getMaster();
                this.processNode(e, n), R.isOverlayType(t.definition()) && e.process(t), e.expandLibraries(t);
            } }, e; }();
            t.LibraryExpander = O, t.toUnits = p;
            var D = function () { function e(t, n) { this.name = t, this.regexp = new RegExp(e.leftTransformRegexp.source + t + e.rightTransformRegexp.source), this.transformer = n; } return e.leftTransformRegexp = /\s*!\s*/, e.rightTransformRegexp = /\s*$/, e; }(), U = [new D("singularize", function (e) { return S.singular(e); }), new D("pluralize", function (e) { return S.plural(e); }), new D("uppercase", function (e) { return e ? e.toUpperCase() : e; }), new D("lowercase", function (e) { return e ? e.toLowerCase() : e; }), new D("lowercamelcase", function (e) { return e ? L.camelCase(e) : e; }), new D("uppercamelcase", function (e) { if (!e)
                    return e; var t = L.camelCase(e); return t[0].toUpperCase() + t.substring(1, t.length); }), new D("lowerunderscorecase", function (e) { if (!e)
                    return e; var t = L.snake(e); return t.toLowerCase(); }), new D("upperunderscorecase", function (e) { if (!e)
                    return e; var t = L.snake(e); return t.toUpperCase(); }), new D("lowerhyphencase", function (e) { if (!e)
                    return e; var t = L.param(e); return t.toLowerCase(); }), new D("upperhyphencase", function (e) { if (!e)
                    return e; var t = L.param(e); return t.toUpperCase(); })];
            t.getTransformNames = c, t.getTransformersForOccurence = f;
            var x = function () { function e() { this.buf = null; } return e.prototype.append = function (e) { "" !== e && (null != this.buf ? null != e && ("string" != typeof this.buf && (this.buf = "" + this.buf), this.buf += e) : "" !== e && (this.buf = e)); }, e.prototype.value = function () { return null != this.buf ? this.buf : ""; }, e; }(), k = function () { function e(e, t, n, r, i, a) { this.templateKind = e, this.templateName = t, this.unitsChain = n, this.params = r, this.structuredParams = i, this.vDelegate = a; } return e.prototype.transform = function (e, t, n, r) { var i = {}, a = []; if ("string" == typeof e) {
                if (this.structuredParams && g.stringStartsWith(e, "<<") && g.stringEndsWith(e, ">>")) {
                    var o = e.substring(2, e.length - 2), s = this.structuredParams[o];
                    if (null != s)
                        return { value: s, errors: a };
                }
                for (var u = e, l = new x, p = 0, c = u.indexOf("<<"); c >= 0; c = u.indexOf("<<", p)) {
                    l.append(u.substring(p, c));
                    var m = c;
                    if (c += "<<".length, p = this.paramUpperBound(u, c), -1 == p)
                        break;
                    var h = u.substring(c, p);
                    p += ">>".length;
                    var d, o, y = u.substring(m, p), v = f(h);
                    if (v.length > 0) {
                        var A = h.indexOf("|");
                        if (o = h.substring(0, A).trim(), d = this.params[o], d && "string" == typeof d && d.indexOf("<<") >= 0 && this.vDelegate && (d = this.vDelegate.transform(d, t, n, r).value), d) {
                            b.PatchedReference.isInstance(d) && (d = d.value());
                            for (var T = 0, E = v; T < E.length; T++) {
                                var S = E[T];
                                d = S(d + "");
                            }
                        }
                    }
                    else
                        o = h.trim(), d = this.params[o], d && "string" == typeof d && d.indexOf("<<") >= 0 && this.vDelegate && (d = this.vDelegate.transform(d, t, n, r).value);
                    (null === d || void 0 === d) && (i[o] = !0, d = y), l.append(d);
                }
                return l.append(u.substring(p, u.length)), { value: l.value(), errors: a };
            } return { value: e, errors: a }; }, e.prototype.paramUpperBound = function (e, t) { for (var n = 0, r = t; r < e.length; r++)
                if (g.stringStartsWith(e, "<<", r))
                    n++, r++;
                else if (g.stringStartsWith(e, ">>", r)) {
                    if (0 == n)
                        return r;
                    n--, r++;
                } return e.length; }, e.prototype.children = function (e) { var t = this.substitutionNode(e); return t ? t.children() : null; }, e.prototype.valueKind = function (e) { var t = this.substitutionNode(e); return t ? t.valueKind() : null; }, e.prototype.anchorValueKind = function (e) { var t = this.substitutionNode(e); return t && t.valueKind() == v.Kind.ANCHOR_REF ? t.anchorValueKind() : null; }, e.prototype.resolvedValueKind = function (e) { var t = this.substitutionNode(e); return t && t.resolvedValueKind(); }, e.prototype.includePath = function (e) { var t = this.substitutionNode(e); return t ? t.includePath() : null; }, e.prototype.substitutionNode = function (e) { var t = this.paramName(e); return t && this.structuredParams[t]; }, e.prototype.paramName = function (e) { var t = null; if (e.valueKind() == v.Kind.SCALAR) {
                var n = ("" + e.value()).trim();
                g.stringStartsWith(n, "<<") && g.stringEndsWith(n, ">>") && (t = n.substring(2, n.length - 2));
            } return t; }, e.prototype.definingUnitSequence = function (e) { if (e.length < 2)
                return null; if ("(" == e.charAt(0) && ")" == e.charAt(e.length - 1) && (e = e.substring(1, e.length - 1)), e.length < 4)
                return null; if ("<<" != e.substring(0, 2))
                return null; if (">>" != e.substring(e.length - 2, e.length))
                return null; var t = e.substring(2, e.length - 2); return t.indexOf("<<") >= 0 || t.indexOf(">>") >= 0 ? null : this._definingUnitSequence(t); }, e.prototype._definingUnitSequence = function (e) { return this.params && this.params[e] ? this.unitsChain : this.vDelegate ? this.vDelegate._definingUnitSequence(e) : null; }, e; }();
            t.ValueTransformer = k;
            var F = function (e) { function t(t, n, r) { e.call(this, null != n ? n.templateKind : "", null != n ? n.templateName : "", r), this.owner = t, this.delegate = n; } return h(t, e), t.prototype.transform = function (t, n, r, i) { if (null == t || null != r && !r())
                return { value: t, errors: [] }; var a = { value: t, errors: [] }, o = !1; B.forEach(function (e) { return o = o || t.toString().indexOf("<<" + e) >= 0; }), o && (this.initParams(), a = e.prototype.transform.call(this, t, n, r, i)); var s = null != this.delegate ? this.delegate.transform(a.value, n, r, i) : a.value; return null != r && r() && null != i && (s.value = i(s.value, this)), s; }, t.prototype.initParams = function () { for (var e, t, n = "", r = this.owner.highLevel().lowLevel(), i = r, a = null; i;) {
                var o = i.key();
                if (null != o)
                    if (g.stringStartsWith(o, "/")) {
                        if (!t)
                            for (var s = o.split("/"), u = s.length - 1; u >= 0; u--) {
                                var l = s[u];
                                if (-1 == l.indexOf("{")) {
                                    t = s[u];
                                    break;
                                }
                                l.length > 0 && (a = l);
                            }
                        n = o + n;
                    }
                    else
                        e = o;
                i = i.parent();
            } t || a && (t = ""), this.params = { resourcePath: n, resourcePathName: t }, e && (this.params.methodName = e); }, t.prototype.children = function (e) { return null != this.delegate ? this.delegate.children(e) : null; }, t.prototype.valueKind = function (e) { return null != this.delegate ? this.delegate.valueKind(e) : null; }, t.prototype.includePath = function (e) { return null != this.delegate ? this.delegate.includePath(e) : null; }, t.prototype.anchorValueKind = function (e) { return null != this.delegate ? this.delegate.anchorValueKind(e) : null; }, t.prototype.resolvedValueKind = function (e) { return null != this.delegate ? this.delegate.resolvedValueKind(e) : null; }, t.prototype._definingUnitSequence = function (e) { return this.params && this.params[e] ? this.unitsChain : this.delegate ? this.delegate._definingUnitSequence(e) : null; }, t; }(k);
            t.DefaultTransformer = F;
            var B = ["resourcePath", "resourcePathName", "methodName"], K = {};
            K[I.universesInfo.Universe10.TypeDeclaration.properties.type.name] = !0, K[I.universesInfo.Universe10.TypeDeclaration.properties.example.name] = !0, K[I.universesInfo.Universe08.BodyLike.properties.schema.name] = !0, K[I.universesInfo.Universe10.ObjectTypeDeclaration.properties.properties.name] = !0, t.parseMediaType = m;
        }, function (e, t, n) {
            (function (e) {
                "use strict";
                function r(e, t, n) { return new ke.Function(e).call(t, n); }
                function i(e, t) { var n = e.property(); return n && n.getContextRequirements().forEach(function (r) { e.checkContextValue(r.name, r.value, r.value) || t.accept(Q(De.CONTEXT_REQUIREMENT, { name: r.name, value: r.value, propName: n.nameId() }, e)); }), n; }
                function a(e, t) { var n; try {
                    n = e.lowLevel().unit().project().fsEnabled();
                }
                catch (r) {
                    n = !0;
                } if (n && "undefined" != typeof ge && ge) {
                    for (var i = ["exists", "readFile", "writeFile", "readdir", "existsSync", "readFileSync", "writeFileSync", "readdirSync"], a = (Object.keys(ge), 0); a < i.length; a++)
                        if (!ge[i[a]])
                            return;
                    var o = e.lowLevel().unit().absolutePath(), s = ve.dirname(o), u = ve.resolve(s, "raml-lint.js");
                    Fe(u, t, e);
                    var l = ve.resolve(s, ".raml");
                    if (ge.existsSync(l)) {
                        var p = ge.statSync(l);
                        if (p.isDirectory()) {
                            var c = ge.readdirSync(l);
                            c.forEach(function (n) { -1 != n.indexOf("-lint.js") && Fe(ve.resolve(l, n), t, e); });
                        }
                    }
                } }
                function o(e) { return e.nameId() == Ae.Universe10.TypeDeclaration.properties.type.name || e.nameId() == Ae.Universe10.TypeDeclaration.properties.schema.name; }
                function s(e) { return l(e) ? e.nameId() == Ae.Universe10.TypeDeclaration.properties["default"].name : !1; }
                function u(e) { return l(e) ? e.nameId() == Ae.Universe10.TypeDeclaration.properties.example.name : !1; }
                function l(e) { return e.domain() ? e.domain().getAdapter(Se.RAMLService).isUserDefined() ? !1 : !0 : !1; }
                function p(e) { return l(e) ? e.nameId() == Ae.Universe08.MethodBase.properties.securedBy.name : !1; }
                function c(e) { e.isElement() || (e = e.parent()); for (var t = e && e.asElement(); t;) {
                    if (t.definition().getAdapter(Se.RAMLService).isInlinedTemplates())
                        return t.definition().nameId();
                    var n = t.parent();
                    if (!n)
                        break;
                    t = n;
                } return null; }
                function f(e) { var n = e.parent(), r = null, i = n.definition(); if (n && de.UserDefinedClass.isInstance(i)) {
                    var a = n.property();
                    if (Te.isIsProperty(a) || Te.isTypeProperty(a)) {
                        var o = e.name();
                        r = null != t.RESERVED_TEMPLATE_PARAMETERS[o] ? Q(De.INVALID_PARAMETER_NAME, { paramName: o }, e) : Q(De.UNUSED_PARAMETER, { paramName: o }, e, !0);
                    }
                } if (!r) {
                    var s = e.name(), u = Ee("RAML08"), l = i.universe().version() == u.version();
                    if (l) {
                        var p = Ae.Universe08.Parameter.name;
                        Ae.Universe10.TypeDeclaration.name;
                        if (l && i.isAssignableFrom(p)) {
                            for (var c = u.type(p).allSubTypes().filter(function (e) { return null != Ae.Universe08[e.nameId()].properties[s]; }), f = {}, m = 0; m < c.length; m++) {
                                var h = c[m];
                                if (!f[h.nameId()]) {
                                    var d = h.valueRequirements();
                                    if (d && 0 != d.length) {
                                        var y = d.filter(function (e) { return "type" == e.name; }).map(function (e) { return e.value; });
                                        if (0 != y.length) {
                                            var v = y[0];
                                            f[h.nameId()] = v, h.allSubTypes().forEach(function (e) { return c.push(e); });
                                        }
                                    }
                                }
                            }
                            var g = Object.keys(f).map(function (e) { return f[e]; }).sort();
                            if (g.length > 0) {
                                var A = g.map(function (e, t) { var n = "'" + e + "'"; return t == g.length - 1 ? n : t == g.length - 2 ? n + " or " : n + ", "; }).join("");
                                r = Q(De.INVALID_PROPERTY_OWNER_TYPE, { propName: s, namesStr: A }, e);
                            }
                        }
                    }
                } return r; }
                function m(e, t) { if (e.isElement()) {
                    if (e.invalidSequence) {
                        var n = e.property().nameId();
                        n = Pe.sentenceCase(Oe.singular(n)), t.acceptUnique(ee(De.SEQUENCE_NOT_ALLOWED_10, { propName: n }, e.lowLevel().parent().parent(), e));
                    }
                    var r = e.asElement();
                    if (r.definition().isAssignableFrom(Ae.Universe10.LibraryBase.name)) {
                        var i, a = !1, o = !1;
                        r.lowLevel().children().forEach(function (e) { "schemas" == e.key() && (a = !0, i = e), "types" == e.key() && (o = !0); }), a && o && t.accept(gt(i, r, ce.IssueCode.ILLEGAL_PROPERTY_VALUE, !1, "types and schemas are mutually exclusive", !1));
                    }
                    r.definition().requiredProperties() && r.definition().requiredProperties().length > 0;
                    h(e, t), (new rt).validate(r, t), (new dt).validate(r, t);
                }
                else
                    h(e, t); (new mt).validate(e, t); }
                function h(e, t, n) { void 0 === n && (n = !1); var r = e.parent(), i = e.lowLevel().value(); if (e.lowLevel()) {
                    if (e.lowLevel().keyKind() == he.Kind.MAP && t.accept(Q(De.NODE_KEY_IS_A_MAP, {}, e)), e.lowLevel().keyKind() == he.Kind.SEQ && null == i) {
                        var a = !1;
                        e.isElement() && e.asElement().definition().isAssignableFrom(Ae.Universe10.TypeDeclaration.name) && (a = !0), a || t.accept(Q(De.NODE_KEY_IS_A_SEQUENCE, {}, e));
                    }
                    if (null == r) {
                        var o = e.lowLevel().unit().contents().length;
                        e.lowLevel().errors().forEach(function (n) { var r = n.mark ? n.mark.position : 0, i = r >= o ? r : r + 1; if (n.mark && n.mark.toLineEnd) {
                            var a = n.mark.buffer, s = a.indexOf("\n", r);
                            0 > s && (s = a.length), s < a.length && "\r" == a.charAt(s) && s--, i = s;
                        } var u = { code: "YAML_ERROR", message: n.message, node: null, start: r, end: i, isWarning: n.isWarning, path: e.lowLevel().unit() == e.root().lowLevel().unit() ? null : e.lowLevel().unit().path(), unit: e.lowLevel().unit() }; t.accept(u); });
                    }
                } if (e.isUnknown()) {
                    if (-1 != e.name().indexOf("<<") && null != c(r))
                        return (new We).validateName(e, t), !1;
                    if (e.needSequence && t.accept(Q(De.SEQUENCE_REQUIRED, { name: e.name() }, e)), e.needMap)
                        return e.knownProperty ? t.accept(Q(De.PROPERTY_MUST_BE_A_MAP_10, { propName: e.knownProperty.nameId() }, e)) : t.accept(Q(De.MAP_REQUIRED, {}, e)), !1;
                    if (e.unresolvedRef && t.accept(Q(De.UNRESOLVED_REFERENCE, { ref: i }, e)), e.knownProperty) {
                        if (0 == e.lowLevel().includeErrors().length) {
                            if (c(r) && Re.startsWith(i, "<<") && Re.endsWith(i, ">>"))
                                return !1;
                            if ("body" == e.name() && e.computedValue("mediaType"))
                                return !1;
                            "~" != e.lowLevel().value() && (ae(e, t, De.SCALAR_PROHIBITED.code, !1) || t.accept(Q(De.SCALAR_PROHIBITED, { propName: e.name() }, e)));
                        }
                    }
                    else {
                        var s = f(e);
                        s || (s = Q(De.UNKNOWN_NODE, { name: e.name() }, e)), t.accept(s);
                    }
                } if (e.markCh() && !e.allowRecursive())
                    return e.property() ? (t.accept(Q(De.RECURSIVE_DEFINITION, { name: e.name() }, e)), !1) : !1; if (e.definition && e.definition().isAssignableFrom(Ae.Universe10.Operation.name)) {
                    var u = y(e.wrapperNode()), l = u.queryStringComesFrom, p = u.queryParamsComesFrom;
                    l && p && (t.accept(d(l, e, !1)), t.accept(d(p, e, !0)));
                } var m = e.definition && e.definition() && (e.definition().key() === Ae.Universe10.Overlay || e.definition().key() === Ae.Universe10.Extension); return m && S(e, t, n), !0; }
                function d(e, t, n) { var r = e, i = e, a = n ? Ae.Universe10.Operation.properties.queryString.name : Ae.Universe10.Operation.properties.queryParameters.name; return r.unit ? ee(De.QUERY_STRING_AND_QUERY_PARAMETERS_ARE_MUTUALLY_EXCLUSIVE, { propName: a }, r, t) : Q(De.QUERY_STRING_AND_QUERY_PARAMETERS_ARE_MUTUALLY_EXCLUSIVE, { propName: a }, i); }
                function y(e) { return { queryParamsComesFrom: v(e, !0), queryStringComesFrom: v(e, !1) }; }
                function v(e, t, n, r) { if (void 0 === n && (n = !0), void 0 === r && (r = {}), !e)
                    return null; if (e.name) {
                    var i = e.name();
                    if (r[i])
                        return;
                    r[i] = !0;
                } var a = A(e, t); if (a)
                    return a; var o = e.is && e.is() || [], s = me.find(o, function (e) { return v(e.trait(), t, n, r); }); if (s)
                    return s.highLevel(); if (n) {
                    var u = e.parentResource && e.parentResource(), l = u && g(u, t, r);
                    if (l)
                        return l;
                    if (u = e.parent && e.parent(), u && u.highLevel().definition().isAssignableFrom(Ae.Universe10.ResourceBase.name))
                        return g(u, t, r);
                } return null; }
                function g(e, t, n, r) { if (void 0 === n && (n = {}), void 0 === r && (r = {}), e.name) {
                    var i = e.name();
                    if (r[i])
                        return;
                    r[i] = !0;
                } var a = e.is(), o = me.find(a, function (e) { return v(e.trait(), t, !1, n); }); if (o)
                    return o.highLevel(); var s = e.type(), u = s && s.resourceType(), l = u && g(u, t, n, r); return l ? s.highLevel() : void 0; }
                function A(e, t) { return t ? T(e) : E(e); }
                function T(e) { var t = e.highLevel(); return t.lowLevel && me.find(t.lowLevel().children(), function (e) { return e.key && e.key() === Ae.Universe10.Operation.properties.queryParameters.name; }); }
                function E(e) { var t = e.highLevel(), n = t.element(Ae.Universe10.Operation.properties.queryString.name); return n; }
                function S(e, t, n) { if (void 0 === n && (n = !1), !e.parent()) {
                    var r = e.asElement();
                    if (r && r.isAuxilary()) {
                        var i = r.getMaster();
                        i && m(i, t);
                    }
                } }
                function N(e, t, n) { if (void 0 === n && (n = !1), h(e, t, n))
                    try {
                        var r = e.definition && e.definition() && (e.definition().key() === Ae.Universe10.Overlay || e.definition().key() === Ae.Universe10.Extension), i = r ? e.children() : e.directChildren();
                        i.filter(function (e) { return !n || e.property && e.property() && e.property().isRequired(); }).forEach(function (n) { if (n && n.errorMessage) {
                            var r = n.errorMessage;
                            return void t.accept(Q(r.entry, r.parameters, n.name() ? n : e));
                        } n.validate(t); });
                    }
                    finally {
                        e.unmarkCh();
                    } }
                function _(e) { var t = e.value(); if ("string" == typeof t && -1 != t.indexOf("<<"))
                    return !0; for (var n = e.children(), r = 0; r < n.length; r++)
                    if (_(n[r]))
                        return !0; return !1; }
                function b(e, t) { if (!e.parent())
                    try {
                        R(e, t);
                    }
                    finally {
                        I(e, t);
                    } if (e.isAttr())
                    (new He).validate(e, t);
                else if (e.isElement()) {
                    if (e.invalidSequence) {
                        var n = e.property().nameId(), r = Pe.sentenceCase(Oe.singular(n));
                        t.acceptUnique(ee(De.SEQUENCE_NOT_ALLOWED_10, { propName: r }, e.lowLevel().parent().parent(), e, !1));
                    }
                    var i = e.asElement();
                    if (Te.isExampleSpecType(i.definition())) {
                        var a = i.children();
                        if (0 == a.length)
                            return void N(e, t, !0);
                        var o = a.filter(function (e) { var t = e.lowLevel().key(); return t ? "(" == t.charAt(0) && ")" == t.charAt(t.length - 1) ? !1 : null == i.definition().property(t) : !0; });
                        if (o.length > 0)
                            return void N(e, t, !0);
                    }
                    if (i.definition().isAnnotationType() || i.property() && "annotations" == i.property().nameId())
                        return void (new tt).validate(i, t);
                    if (i.definition().isAssignableFrom(Ae.Universe10.UsesDeclaration.name)) {
                        var s = i.attr(Ae.Universe10.UsesDeclaration.properties.value.name), u = s && s.value();
                        if (null != u && "string" == typeof u) {
                            var l = i.lowLevel().unit().resolve(u);
                            if (l && null !== l.contents()) {
                                if (!we.isWaitingFor(u)) {
                                    var p = [];
                                    if (0 === l.contents().trim().length)
                                        return void t.accept(Q(De.EMPTY_FILE, { path: u }, i, !1));
                                    if (l.highLevel().validate(ye.createBasicValidationAcceptor(p, l.highLevel())), p.length > 0) {
                                        var f = Ke(s, i);
                                        p.forEach(function (e) { e.unit = null == e.unit ? l : e.unit, e.path || (e.path = l.absolutePath()); });
                                        for (var m = 0, h = p; m < h.length; m++) {
                                            for (var d = h[m], y = d; y.extras && y.extras.length > 0;)
                                                y = y.extras[0];
                                            y != f && (y.extras || (y.extras = []), y.extras.push(f)), t.accept(d);
                                        }
                                    }
                                }
                            }
                            else
                                t.accept(Q(De.INVALID_LIBRARY_PATH, { path: u }, i, !1));
                        }
                    }
                    if (i.definition().isAssignableFrom(Ae.Universe10.TypeDeclaration.name)) {
                        if (c(i) && _(i.lowLevel()))
                            return;
                        return i.attrs().forEach(function (n) { var r = n.property().range().key(); if (r == Ae.Universe08.RelativeUriString || r == Ae.Universe10.RelativeUriString)
                            return void (new Xe).validate(n, t); if (r == Ae.Universe08.FullUriTemplateString || r == Ae.Universe10.FullUriTemplateString)
                            return void (new Xe).validate(n, t); if (n.property().getAdapter(Se.RAMLPropertyService).isKey()) {
                            var a = e.property() && e.property().nameId();
                            if (a == Ae.Universe08.Resource.properties.uriParameters.name || a == Ae.Universe08.Resource.properties.baseUriParameters.name)
                                return;
                            if (i.property() && i.property().nameId() == Ae.Universe10.MethodBase.properties.body.name)
                                return void (new ze).validate(n, t);
                        } }), (new ut).validate(i, t), (new lt).validate(i, t), (new ot).validate(i, t), void (new nt).validate(i, t);
                    }
                    if (i.definition().isAssignableFrom(Ae.Universe10.LibraryBase.name)) {
                        var v, g = !1, A = !1;
                        i.lowLevel().children().forEach(function (e) { "schemas" == e.key() && (g = !0, v = e), "types" == e.key() && (A = !0); }), g && A && t.accept(ee(De.TYPES_AND_SCHEMAS_ARE_EXCLUSIVE, {}, v, i));
                    }
                    var T = i.definition().requiredProperties() && i.definition().requiredProperties().length > 0, E = i.definition().getAdapter(Se.RAMLService).getAllowAny();
                    E ? T && N(e, t, !0) : N(e, t), (new ht).validate(i, t), (new rt).validate(i, t), (new dt).validate(i, t);
                }
                else
                    N(e, t); (new mt).validate(e, t); }
                function I(e, t) { if (e.lowLevel()) {
                    var n = e.lowLevel().actual();
                    delete n._inc, e.children().forEach(function (e) { return I(e, t); });
                } }
                function R(e, t) { var n = e.lowLevel(); if (n) {
                    var r = n.actual();
                    if (!r._inc) {
                        if (e.isElement()) {
                            var i = e.name();
                            "string" == typeof i && null != i && -1 != i.indexOf(" ") && t.accept(Q(De.SPACES_IN_KEY, { value: i }, e, !0));
                        }
                        if (r._inc = !0, n) {
                            n.includeErrors().forEach(function (n) { var r = !1; e.lowLevel().hasInnerIncludeError() && (r = !0); var i = Q(De.INCLUDE_ERROR, { msg: n }, e, r); t.accept(i); });
                            var a = n.includePath();
                            if (null != a && !ve.isAbsolute(a) && !fe.isWebPath(a)) {
                                var o = n.unit().absolutePath(), s = w(ve.dirname(o), a);
                                if (s > 0) {
                                    var u = Q(De.PATH_EXCEEDS_ROOT, {}, e, !0);
                                    t.accept(u);
                                }
                            }
                        }
                        e.children().forEach(function (e) { return R(e, t); }), 0 == e.children().length && null != n && n.children().forEach(function (n) { return M(n, t, e); });
                    }
                } }
                function M(e, t, n) { e.includeErrors().forEach(function (r) { var i = !1; e.hasInnerIncludeError() && (i = !0); var a = ee(De.INCLUDE_ERROR, { msg: r }, e, n, i); t.accept(a); }); var r = e.includePath(); if (null != r && !ve.isAbsolute(r) && !fe.isWebPath(r)) {
                    var i = e.unit().absolutePath(), a = w(ve.dirname(i), r);
                    if (a > 0) {
                        var o = ee(De.PATH_EXCEEDS_ROOT, {}, e, n, !0);
                        t.accept(o);
                    }
                } e.children().forEach(function (e) { return M(e, t, n); }); }
                function w(e, t) { for (var n = Ve(e), r = Ve(t), i = n.length, a = 0, o = 0, s = r; o < s.length; o++) {
                    var u = s[o];
                    ".." == u ? (i--, 0 > i && (a = Math.min(i, a))) : i++;
                } return -1 * a; }
                function C(e, t, n, r, i) { return e.hasArrayInHierarchy() ? L(e, t, n, r, i) : e.hasValueTypeInHierarchy() ? P(e, t, n, r, i) : !0; }
                function L(e, t, n, r, i) { return e.arrayInHierarchy().componentType() ? C(e.arrayInHierarchy().componentType(), t, n, r) : !0; }
                function P(e, t, n, r, i) { try {
                    if (e.key() == Ae.Universe10.AnnotationRef) {
                        var a = be.referenceTargets(r, t), o = me.find(a, function (e) { return ye.qName(e, t) == n; });
                        if (null != o) {
                            var s = o.attributes("allowedTargets");
                            if (s) {
                                var u = s.map(function (e) { return e.value(); });
                                if (u.length > 0) {
                                    var l = !1, p = t.definition().allSuperTypes();
                                    p = p.concat([t.definition()]);
                                    var c = p.map(function (e) { return e.nameId(); });
                                    if (u.forEach(function (e) { "API" == e && (e = "Api"), "NamedExample" == e && (e = "ExampleSpec"), "SecurityScheme" == e && (e = "AbstractSecurityScheme"), "SecuritySchemeSettings" == e && (e = "SecuritySchemeSettings"), me.find(c, function (t) { return t == e; }) ? l = !0 : ("Parameter" == e && t.computedValue("location") && (l = !0), "Field" == e && t.computedValue("field") && (l = !0)); }), !l) {
                                        var f = u.map(function (e) { return "'" + e + "'"; }).join(", ");
                                        return new Ye(De.INVALID_ANNOTATION_LOCATION, { aName: n, aValues: f });
                                    }
                                }
                            }
                        }
                        return g;
                    }
                    if (e.key() == Ae.Universe08.SchemaString || e.key() == Ae.Universe10.SchemaString) {
                        var m = !1;
                        if (de.UserDefinedProp.isInstance(r)) {
                            var h = r, d = h.node();
                            if (d) {
                                var y = d.property();
                                y && (m = Te.isTypeProperty(y) || Te.isSchemaProperty(y));
                            }
                        }
                        if (m)
                            return !1;
                        var v = n && n.trim().length > 0 && ("{" == n.trim().charAt(0) || "<" == n.trim().charAt(0)), g = Ce.createSchema(n, H(t.lowLevel(), i && i.lowLevel()));
                        if (!g)
                            return g;
                        if (g instanceof Error)
                            g.isWarning = !0, v || (g.canBeRef = !0);
                        else {
                            var A = !1;
                            try {
                                JSON.parse(n), A = !0;
                            }
                            catch (T) { }
                            if (A)
                                try {
                                    g.validateSelf();
                                }
                                catch (T) {
                                    return T.isWarning = !0, T;
                                }
                        }
                        return g;
                    }
                    if (e.key() == Ae.Universe08.StatusCodeString || e.key() == Ae.Universe10.StatusCodeString) {
                        var E = ne("" + n);
                        if (null != E)
                            return E;
                    }
                    if (e.key() == Ae.Universe08.BooleanType || e.isAssignableFrom(Ae.Universe10.BooleanType.name)) {
                        if ("true" !== n && "false" !== n && n !== !0 && n !== !1)
                            return new Ye(De.BOOLEAN_EXPECTED);
                        if (i) {
                            var S = i.lowLevel().value(!0);
                            if ("true" !== S && "false" !== S)
                                return new Ye(De.BOOLEAN_EXPECTED);
                        }
                    }
                    if (e.key() == Ae.Universe08.NumberType || e.isAssignableFrom(Ae.Universe10.NumberType.name)) {
                        var N = parseFloat(n);
                        if (isNaN(N))
                            return new Ye(De.NUMBER_EXPECTED, { propName: r.nameId() });
                    }
                    if ((e.key() == Ae.Universe08.StringType || e.isAssignableFrom(Ae.Universe10.StringType.name)) && null === n && t && r) {
                        var _ = t.attr(r.nameId());
                        if (_) {
                            var b = _.lowLevel().children();
                            if (b && b.length > 0)
                                return new Ye(De.STRING_EXPECTED_3, { propName: r.nameId() });
                        }
                    }
                    return !0;
                }
                catch (T) {
                    return T.canBeRef = !0, T;
                } }
                function O(e) { if (!e)
                    return !1; var t = e.toLowerCase(), n = e.toUpperCase(); return e !== t && e !== n ? !0 : !1; }
                function D(e) { if (!e)
                    return null; if (e.isElement()) {
                    var n = e, r = n.definition();
                    if (r && t.typeToName.hasOwnProperty(r.nameId()))
                        return t.typeToName[r.nameId()];
                    if (r.isAssignableFrom(Ae.Universe10.TypeDeclaration.name) || r.isAssignableFrom(Ae.Universe08.Parameter.name)) {
                        if (n.property() && t.parameterPropertyToName.hasOwnProperty(n.property().nameId()))
                            return t.parameterPropertyToName[n.property().nameId()];
                        if (n.property() && n.parent() && n.property().nameId() == Ae.Universe10.LibraryBase.properties.types.name && n.parent().definition() && n.parent().definition().isAssignableFrom(Ae.Universe10.LibraryBase.name))
                            return "type";
                        if (n.property() && n.parent() && n.property().nameId() == Ae.Universe10.LibraryBase.properties.securitySchemes.name && n.parent().definition() && n.parent().definition().isAssignableFrom(Ae.Universe10.LibraryBase.name))
                            return "security scheme";
                    }
                } return null; }
                function U(e, t, n) { var r = be.declRoot(n); pe.LowLevelProxyNode.isInstance(n.lowLevel()) && (n = r), r._cach || (r._cach = {}); var i = e.id(); if (e.domain() && (i += e.domain().nameId()), i) {
                    var a = r._cach[i];
                    if (a)
                        return null != a[t];
                } var o = be.enumValues(e, n), s = {}; return o.forEach(function (e) { return s[e] = 1; }), e.id() && (r._cach[i] = s), null != s[t]; }
                function x(e, n, r, i) { if (F(e, n, i), B(e, n, i), r && ("null" != r || !e.isAllowNull())) {
                    var a = e.getAdapter(Se.RAMLPropertyService), o = U(e, r, n.parent());
                    if (o || n.lowLevel().unit().absolutePath() === n.parent().lowLevel().unit().absolutePath() || (o = U(e, r, ye.fromUnit(n.lowLevel().unit()))), !o) {
                        if ("string" == typeof r && 0 == r.indexOf("x-") && e.nameId() == Ae.Universe10.TypeDeclaration.properties.type.name)
                            return !0;
                        var s = a.isReference && a.isReference() && a.referencesTo && a.referencesTo() && a.referencesTo().nameId && a.referencesTo().nameId(), u = t.typeToName[s] || V(n), l = { referencedToName: u, ref: r }, p = u ? De.UNRECOGNIZED_ELEMENT : De.UNRESOLVED_REFERENCE, c = K(p, e, n), f = e.range().key() === Ae.Universe08.SchemaString;
                        return ae(n, i, c.code, f) || i.accept(Q(c, l, n, f)), !0;
                    }
                    return k(n) && Te.isTraitRefType(n.definition()) ? (i.accept(Q(De.DUPLICATE_TRAIT_REFERENCE, { refValue: r }, n)), !0) : !1;
                } }
                function k(e) {
                    var t, n = e.property().domain().universe().version();
                    if (t = "RAML10" == n ? le(ue.serialize(e.lowLevel())) : e.value() && e.value().valueName && e.value().valueName(), !t)
                        return !1;
                    var r = e.parent && e.parent();
                    if (!r)
                        return !1;
                    var i = e.name && e.name();
                    if (!i)
                        return !1;
                    var a = r.attributes && r.attributes(i);
                    if (!a)
                        return !1;
                    if (0 === a.length)
                        return !1;
                    var o = 0;
                    return a.forEach(function (e) { var r; "RAML10" == n ? t = le(ue.serialize(e.lowLevel())) : r = e.value && e.value() && e.value().valueName && e.value().valueName(), r === t && o++; }), o > 1;
                }
                function F(e, t, n) { if (Te.isIsProperty(e)) {
                    var r = t.lowLevel();
                    if (null != r) {
                        var i = null, a = r.parent(), o = null != a ? a.parent() : null;
                        if (r.kind() == he.Kind.MAPPING && r.key() && "is" == r.key() ? i = r : null != a && a.kind() == he.Kind.MAPPING && a.key() && "is" == a.key() ? i = a : null != o && o.kind() == he.Kind.MAPPING && o.key() && "is" == o.key() && (i = o), null != i) {
                            null == i.value() || i.children() && 0 != i.children().length || n.accept(Q(De.IS_IS_ARRAY, {}, t));
                            var s = !1;
                            i.children().forEach(function (e) { e.kind() != he.Kind.SCALAR && e.kind() != he.Kind.MAP && (s = !0); }), s && n.accept(Q(De.IS_IS_ARRAY, {}, t));
                        }
                    }
                } }
                function B(e, t, n) { if (Te.isTypeProperty(e) && Te.isResourceTypeRefType(t.definition())) {
                    var r = t.lowLevel();
                    null == t.value() && r && r.children() && 0 == r.children().length ? r.kind() == he.Kind.MAPPING && null != r.valueKind() && n.accept(Q(De.RESOURCE_TYPE_NAME, {}, t)) : null == t.value() && r && r.children() && r.children().length > 1 && n.accept(Q(De.MULTIPLE_RESOURCE_TYPES, {}, t));
                } }
                function K(e, t, n) { return "type" == t.nameId() && "RAML08" == t.domain().universe().version() && t.domain().isAssignableFrom(Ae.Universe08.Parameter.name) ? De.TYPES_VARIETY_RESTRICTION : null != n.parent() && Te.isSecuritySchemaType(n.parent().definition()) ? De.UNRECOGNIZED_SECURITY_SCHEME : e; }
                function V(e) { var t = e && e.lowLevel() && e.lowLevel().key(); if (t === Ae.Universe10.AbstractSecurityScheme.properties.type.name) {
                    var n = e.parent() && e.parent().definition() && e.parent().definition().nameId();
                    if (n === Ae.Universe10.AbstractSecurityScheme.name)
                        return "security scheme type";
                }
                else if (t === Ae.Universe08.BodyLike.properties.schema.name) {
                    var n = e.parent() && e.parent().definition() && e.parent().definition().nameId();
                    if (n === Ae.Universe08.BodyLike.name)
                        return "schema";
                } }
                function j(e, t) { var n = t.getValidationPath(), r = q(e, n), i = t.getInternalPath(), a = !1; if (i) {
                    var o = q(r, i);
                    o && o != r && (r = o, a = !0);
                } return { node: r, internalPathUsed: a }; }
                function W(e, t) { var n = e.getExtra(Ie.SOURCE_EXTRA); return ye.LowLevelWrapperForTypeSystem.isInstance(n) ? n.node() : null; }
                function q(e, t) { if (!t)
                    return e; var n = e.children().filter(function (e) { return e.isAttr() && e.asAttr().isFromKey() ? !1 : e.name() === t.name; }); if (e.isElement() && Te.isTypeDeclarationDescendant(e.asElement().definition())) {
                    var r = e.lowLevel();
                    n = me.uniq(e.directChildren().concat(e.children())).filter(function (e) { return e.isAttr() && e.asAttr().isFromKey() ? !1 : e.name() === t.name; }).sort(function (e, t) { for (var n = e.lowLevel().parent(); n && n.kind() != he.Kind.MAPPING;)
                        n = n.parent(); for (var i = t.lowLevel().parent(); i && i.kind() != he.Kind.MAPPING;)
                        i = i.parent(); return n == r ? -1 : i == r ? 1 : 0; });
                } var i = t.child && "number" == typeof t.child.name ? t.child.name : -1; if (i >= 0 && n.length > i)
                    return q(n[i], t.child.child); if (n.length > 0)
                    return q(n[0], t.child); if (!e.lowLevel())
                    return e; for (var a = e.lowLevel().children(), o = 0; o < a.length; o++)
                    if (a[o].key() === t.name) {
                        var s = new ye.BasicASTNode(a[o], e);
                        return q(s, t.child);
                    } if (!isNaN(t.name) && a[t.name]) {
                    var u = a[t.name], s = new ye.BasicASTNode(u, e);
                    return q(s, t.child);
                } return e; }
                function H(e, t) { var n = e && e.includeBaseUnit() && (e.includePath && e.includePath() ? e.includeBaseUnit().resolve(e.includePath()) : e.includeBaseUnit()); if (t) {
                    var r = t && t.includeBaseUnit() && (t.includePath && t.includePath() ? t.includeBaseUnit().resolve(t.includePath()) : t.includeBaseUnit());
                    r != n && (n = r);
                } return new Me.ContentProvider(n); }
                function Y(e) { return -1 != e.indexOf("json"); }
                function G(e) { return -1 != e.indexOf("xml"); }
                function X(e) { var t = z(e); if ("body" == t) {
                    var n = e.root().attr("mediaType");
                    return n ? n.value() : null;
                } return t; }
                function z(e) { if (e.parent()) {
                    var t = e.parent().definition();
                    if (t.key() == Ae.Universe08.BodyLike)
                        return e.parent().name();
                    if (e.parent().parent()) {
                        var n = e.parent().parent().definition().key();
                        if (n == Ae.Universe08.Response || n == Ae.Universe10.Response)
                            return e.parent().property().nameId() == Ae.Universe08.Response.properties.headers.name ? null : e.parent().name();
                        if (n == Ae.Universe08.Method || n == Ae.Universe10.Method)
                            return e.parent().property().nameId() == Ae.Universe10.MethodBase.properties.queryParameters.name || e.parent().property().nameId() == Ae.Universe10.MethodBase.properties.headers.name ? null : e.parent().name();
                    }
                } return null; }
                function $(e, t) { return Z(e.getCode(), e.getMessage(), j(t, e).node, e.isWarning()); }
                function J(e, t, n) { var r = null != n ? n : e.isWarning, i = e.internalPath, a = t, o = !1, s = t.lowLevel().valueKind(); if (s == he.Kind.INCLUDE_REF && (s = t.lowLevel().resolvedValueKind()), i && s != he.Kind.SCALAR) {
                    var u = de.rt.toValidationPath(i);
                    if (u) {
                        var l = q(t, u);
                        l && l != t && (a = l, o = !0);
                    }
                } var p = o ? null : e.internalRange, c = Q(e.messageEntry, e.parameters, a, r, p); if (e.filePath) {
                    var f = t.lowLevel().unit().project().unit(e.filePath, !0);
                    c.unit = f, c.path = e.filePath;
                } return c; }
                function Q(e, t, n, r, i) { void 0 === r && (r = !1); var a = re(e, t); return Z(e.code, a, n, r, i); }
                function Z(e, t, n, r, i, a) { void 0 === r && (r = !1), void 0 === a && (a = !1); var o = null, s = null; if (pe.LowLevelProxyNode.isInstance(n.lowLevel()))
                    for (var u = n.lowLevel(); !u.primaryNode();)
                        o || (o = vt(n, e, r, t, !0, s, null, i, a), i = null), n = n.parent(), u = n.lowLevel(); var l = n; if (n && (s = n.property(), n.lowLevel().unit() != n.root().lowLevel().unit())) {
                    o = vt(n, e, r, t, !0, s, null, i, a), i = null;
                    for (n.lowLevel().unit(); n.lowLevel().unit() != n.root().lowLevel().unit();)
                        s = n.property(), n = n.parent();
                } if (o) {
                    var p = n.lowLevel().unit().project().namespaceResolver();
                    if (p) {
                        var c = p.resolveNamespace(n.root().lowLevel().unit(), l.lowLevel().unit());
                        if (c) {
                            var f = c.usesNodes.map(function (e) { return ee(De.ISSUES_IN_THE_LIBRARY, { value: e.value() }, e, e.unit().highLevel(), !0); });
                            f.push(o), f = f.reverse();
                            for (var m = 0; m < f.length - 1; m++)
                                f[m].extras.push(f[m + 1]);
                            return o;
                        }
                    }
                    n.property() && n.property().nameId() == Ae.Universe10.FragmentDeclaration.properties.uses.name && null != n.parent() && (s = n.property(), n = n.parent());
                } var h = vt(n, e, r, t, !1, s, null, i, a); if (o) {
                    if (o.extras.push(h), n.lowLevel().valueKind() == he.Kind.INCLUDE_REF) {
                        var d = De.ERROR_IN_INCLUDED_FILE;
                        h.code = d.code, h.message = re(d, { msg: h.message });
                    }
                    h = o;
                } return h; }
                function ee(e, t, n, r, i, a, o) { void 0 === i && (i = !1), void 0 === a && (a = !1); var s = re(e, t); return te(e.code, s, n, r, i, a, o); }
                function te(e, t, n, r, i, a, o) { void 0 === i && (i = !1), void 0 === a && (a = !1); var s = null; if (n) {
                    var u = r.root().lowLevel().unit();
                    if (r.lowLevel().unit() != u) {
                        s = gt(n, r, e, i, t, !0, o);
                        var l = r.lowLevel().unit();
                        for (l && (t = t + " " + l.path()); r.lowLevel().unit() != u;)
                            r = r.parent();
                    }
                } s && (o = null, r.property() && r.property().nameId() == Ae.Universe10.FragmentDeclaration.properties.uses.name && null != r.parent() && (r = r.parent()), n = r.lowLevel()); var p = gt(n, r, e, i, t, a, o); return s && (s.extras.push(p), n.valueKind() == he.Kind.INCLUDE_REF && (p.message = re(De.ERROR_IN_INCLUDED_FILE, { msg: p.message })), p = s), p; }
                function ne(e) { if (3 != e.length)
                    return new Ye(De.STATUS_MUST_BE_3NUMBER); for (var t = 0; t < e.length; t++) {
                    var n = e[t];
                    if (!me.find(["0", "1", "2", "3", "4", "5", "6", "7", "8", "9"], function (e) { return e == n; }))
                        return new Ye(De.STATUS_MUST_BE_3NUMBER);
                } return null; }
                function re(e, t) { for (var n = "", r = e.message, i = 0, a = r.indexOf("{{"); a >= 0; a = r.indexOf("{{", i)) {
                    if (n += r.substring(i, a), i = r.indexOf("}}", a), 0 > i) {
                        i = a;
                        break;
                    }
                    a += "{{".length;
                    var o = r.substring(a, i);
                    i += "}}".length;
                    var s = t[o];
                    if (void 0 === s)
                        throw new Error(re(De.MESSAGE_PARAMETER_NO_VALUE, { paramName: o }));
                    n += s;
                } return n += r.substring(i, r.length); }
                function ie(e) { if (!e)
                    return !1; if (e = e.trim().toLowerCase(), e.indexOf("\n") >= 0 || e.indexOf("\r") >= 0)
                    return !1; Re.startsWith(e, "http://") ? e = e.substring("http://".length) : Re.startsWith(e, "https://") ? e = e.substring("https://".length) : Re.startsWith(e, "./") ? e = e.substring("./".length) : Re.startsWith(e, "/") && (e = e.substring("/".length)), e = e.replace(/\.\.\//g, ""); var t = e.split("/"); if (0 == t.length)
                    return !1; for (var n = 0, r = t; n < r.length; n++) {
                    var i = r[n];
                    if (!/^[-a-z\\d%_.~+]+$/.test(i))
                        return !1;
                } return !0; }
                function ae(e, t, n, r) { if (void 0 === r && (r = !1), n != De.SCALAR_PROHIBITED.code && n != De.SCALAR_PROHIBITED_2.code && "CAN_NOT_PARSE_JSON" != n && "TYPE_EXPECTED" != n && "CONTENT_DOES_NOT_MATCH_THE_SCHEMA" != n && "INHERITING_UNKNOWN_TYPE" != n && "SCHEMA_ERROR" != n && "UNRECOGNIZED_ELEMENT" != n)
                    return !1; if (e) {
                    var i = e.lowLevel(), a = i.valueKind();
                    if (a == he.Kind.ANCHOR_REF && (a = i.anchorValueKind()), a == he.Kind.INCLUDE_REF)
                        return !1;
                    var o = e.property();
                    o || (o = e.knownProperty);
                    var s = Te.isExampleProperty(o) || Te.isExamplesProperty(o), u = Te.isTypeOrSchemaProperty(o);
                    if (u || o && Te.isGlobalSchemaType(o.domain()) && Te.isValueProperty(o) && (u = !0), o && (u || s || !o.range().isValueType())) {
                        var l = e.parent();
                        if (!l)
                            return !1;
                        var p = l.definition(), c = e.lowLevel().value();
                        if ("string" == typeof c && ie(c)) {
                            if (c.indexOf(".") < 0)
                                return !1;
                            if (s) {
                                if (!(Te.isBodyLikeType(p) || Te.isObjectTypeDeclarationSibling(p) || Te.isArrayTypeDeclarationSibling(p)))
                                    return !1;
                                if (!(Re.endsWith(c, ".raml") || Re.endsWith(c, ".yml") || Re.endsWith(c, ".yaml") || Re.endsWith(c, ".xml") || Re.endsWith(c, ".json")))
                                    return !1;
                            }
                            else if (u) {
                                if (!(Re.endsWith(c, ".raml") || Re.endsWith(c, ".yml") || Re.endsWith(c, ".yaml") || Re.endsWith(c, ".xml") || Re.endsWith(c, ".json") || Re.endsWith(c, ".xsd")))
                                    return !1;
                            }
                            else if (!(Re.endsWith(c, ".raml") || Re.endsWith(c, ".yml") || Re.endsWith(c, ".yaml")))
                                return !1;
                            var f = Q(De.INCLUDE_TAG_MISSING, null, e, r);
                            return t.accept(f), !0;
                        }
                    }
                    return !1;
                } }
                var oe = this && this.__extends || function (e, t) { function n() { this.constructor = e; } for (var r in t)
                    t.hasOwnProperty(r) && (e[r] = t[r]); e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype, new n); }, se = n(25), ue = n(54), le = n(72), pe = n(41), ce = n(9), fe = n(10), me = n(70), he = n(83), de = n(39), ye = n(16), ve = n(15), ge = n(49), Ae = n(17), Te = n(14), Ee = n(38), Se = de, Ne = n(55), _e = n(27), be = n(13), Ie = de.rt, Re = n(44), Me = n(33), we = n(24), Ce = de.getSchemaUtils(), Le = (n(69), n(56)), Pe = n(78), Oe = n(77), De = n(60), Ue = function () { function e() { this.validateNotStrictExamples = !0; } return e; }(), xe = new Ue, ke = n(84);
                t.RESERVED_TEMPLATE_PARAMETERS = { resourcePathName: 'Part of the resource path following the rightmost "/"', methodName: "Method name", resourcePath: "Path of the resource" };
                var Fe = function (e, t, n) { if (ge.existsSync(e))
                    try {
                        var i = ge.readFileSync(e).toString(), a = new Be(t);
                        r(i, a, null), a.visit(n);
                    }
                    catch (o) {
                        console.log("Error in custom linter"), console.log(o);
                    } }, Be = function () { function e(e) { this.acceptor = e, this.nodes = {}; } return e.prototype.error = function (e, t) { this.acceptor.accept(Q(De.INVALID_VALUE_SCHEMA, { iValue: t }, e.highLevel())); }, e.prototype.errorOnProperty = function (e, t, n) { var r = e.highLevel().attr(t); this.acceptor.accept(Q(De.INVALID_VALUE_SCHEMA, { iValue: n }, r)); }, e.prototype.warningOnProperty = function (e, t, n) { var r = e.highLevel().attr(t); this.acceptor.accept(Q(De.INVALID_VALUE_SCHEMA, { iValue: n }, r, !0)); }, e.prototype.warning = function (e, t) { this.acceptor.accept(Q(De.INVALID_VALUE_SCHEMA, { iValue: t }, e.highLevel(), !0)); }, e.prototype.registerRule = function (e, t) { var n = this.nodes[e]; n || (n = [], this.nodes[e] = n), n.push(t); }, e.prototype.visit = function (e) { var t = this, n = e.definition(); this.process(n, e), n.allSuperTypes().forEach(function (n) { return t.process(n, e); }), e.elements().forEach(function (e) { return t.visit(e); }); }, e.prototype.process = function (e, t) { var n = this; if (de.NodeClass.isInstance(e) && !e.getAdapter(Se.RAMLService).getDeclaringNode()) {
                    var r = this.nodes[e.nameId()];
                    r && r.forEach(function (e) { return e(t.wrapperNode(), n); });
                } }, e; }();
                (function () { function e() { } return e.prototype.toString = function () { return this.prev ? this.value + "." + this.prev.toString() : this.value; }, e.prototype.last = function () { return this.prev ? this.prev.last() : this; }, e; })();
                t.validateBasicFlat = h;
                (function () { function e() { } return e; })();
                t.validateBasic = N;
                var Ke = function (e, t) { var n = t.lowLevel().start(), r = []; if (0 > n) {
                    for (var i = t.attr("key").value().split("."), a = [], o = t.parent(), s = 0, u = i; s < u.length; s++) {
                        var l = u[s], p = me.find(o.elementsOfKind("uses"), function (e) { return e.attr("key") && e.attr("key").value() == l; });
                        a.push(p), o = p.lowLevel().unit().resolve(p.attr("value").value()).highLevel().asElement();
                    }
                    var c = a.map(function (e) { return Q(De.ISSUES_IN_THE_LIBRARY, { value: e.attr("value").value() }, e, !0); });
                    c = c.reverse();
                    for (var f = 0; f < c.length - 1; f++)
                        c[f].extras.push(c[f + 1]);
                    return c[0];
                } return r.push(t), Q(De.ISSUES_IN_THE_LIBRARY, { value: e.value() }, t, !0); };
                t.validate = b;
                var Ve = function (t) { t = t.replace(/\\/g, "/").trim(), t.length > 1 && ":" == t.charAt(1) && /^win/.test(e.platform) && (t = t.substring(2)); var n = t.split("/"); return 0 == n[0].length && (n = n.slice(1)), n.length > 0 && 0 == n[n.length - 1].length && (n = n.slice(0, n.length - 1)), n; }, je = function (e, t, n) { try {
                    new RegExp(e);
                }
                catch (r) {
                    t.accept(Q(De.ILLEGAL_PATTERN, { value: e }, n));
                } }, We = function () { function e() { } return e.prototype.validateName = function (e, t) { var n = e.name(); if (n) {
                    var r = e.lowLevel().keyStart();
                    this.check(n, r, e, t);
                } }, e.prototype.validateValue = function (e, t) { var n = e.value(); if ("string" == typeof n) {
                    var r = e.lowLevel().valueStart();
                    this.check(n, r, e, t);
                } }, e.prototype.hasTraitOrResourceTypeParent = function (e) { for (var t = e.parent(); null != t;) {
                    if (!t.definition())
                        return !1;
                    if (Te.isTraitType(t.definition()) || Te.isResourceTypeType(t.definition()))
                        return !0;
                    t = t.parent();
                } return !1; }, e.prototype.check = function (e, t, n, r) { if (!this.hasTraitOrResourceTypeParent(n))
                    return []; for (var i = [], a = 0, o = e.indexOf("<<"); o >= 0; o = e.indexOf("<<", a)) {
                    o += "<<".length, a = e.indexOf(">>", o);
                    var s = e.substring(o, a), u = s.indexOf("|"), l = u >= 0 ? s.substring(0, u) : s;
                    if (0 == l.trim().length) {
                        var p = Q(De.TEMPLATE_PARAMETER_NAME_MUST_CONTAIN_NONWHITESPACE_CHARACTERS, {}, n);
                        p.start = t + o, p.end = t + a, r.accept(p);
                    }
                    if (-1 != u) {
                        u++;
                        for (var c = s.split("|").slice(1).map(function (e) { return e.trim(); }), f = _e.getTransformNames(), m = 0, h = c; m < h.length; m++) {
                            var d = h[m];
                            if (!me.find(f, function (e) { return d === e || d === "!" + e; })) {
                                var p = Q(De.UNKNOWN_FUNCTION, { transformerName: d }, n, !1);
                                p.start = t + u, p.end = t + a, r.accept(p);
                            }
                        }
                    }
                    a += ">>".length;
                } return i; }, e; }(), qe = function () { function e() { } return e.prototype.validate = function (t, n) { var r = t.parent(); if (r && (r.definition().isAssignableFrom(Ae.Universe08.Method.name) || r.definition().isAssignableFrom(Ae.Universe10.Method.name))) {
                    var i = me.find(r.lowLevel() && r.lowLevel().children() || [], function (e) { var t = e.key(); return t && (Ae.Universe08.MethodBase.properties.body.name === t || Ae.Universe10.MethodBase.properties.body.name === t); });
                    i && me.find(e.methodsWithoutRequestBody, function (e) { return r.name() === e; }) && n.accept(Q(De.REQUEST_BODY_DISABLED, { methodName: r.name() }, r));
                } }, e.methodsWithoutRequestBody = ["trace"], e; }(), He = function () { function e() { } return e.prototype.validate = function (e, t) { var n = i(e, t), r = e.value(), a = e.parent().definition().universe().version(), l = null != c(e.parent()); if (!e.property().range().hasStructure()) {
                    if (ye.StructuredValue.isInstance(r) && !e.property().isSelfNode()) {
                        if (o(e.property()) && e.property().domain().key() == Ae.Universe08.BodyLike) {
                            var f = new ye.ASTNodeImpl(e.lowLevel(), e.parent(), e.parent().definition().universe().type(Ae.Universe08.BodyLike.name), e.property());
                            return void f.validate(t);
                        }
                        if ("RAML10" == a && l)
                            return;
                        t.accept(Q(De.SCALAR_EXPECTED, {}, e));
                    }
                    else {
                        var m = e.lowLevel().valueKind();
                        if (e.lowLevel().valueKind() != he.Kind.INCLUDE_REF && !e.property().getAdapter(Se.RAMLPropertyService).isKey() && !e.property().isMultiValue()) {
                            var h = e.property().range().key();
                            (h == Ae.Universe08.StringType || h == Ae.Universe08.MarkdownString || h == Ae.Universe08.MimeType) && (m != he.Kind.SEQ && m != he.Kind.MAPPING && m != he.Kind.MAP && (!e.property().isRequired() && "mediaType" != e.property().nameId() || null != m && void 0 !== m) || e.property().domain().getAdapter(Se.RAMLService).isInlinedTemplates() || t.accept(Q(De.STRING_EXPECTED, { propName: e.name() }, e)));
                        }
                    }
                    if (e.isAnnotatedScalar()) {
                        var d = new tt;
                        e.annotations().forEach(function (e) { var n = e.value(), r = n.toHighLevel(); r ? d.validate(r, t) : t.accept(Q(De.UNKNOWN_ANNOTATION, { aName: n.valueName() }, e)); });
                    }
                } var y; if ("string" == typeof r ? y = r : ye.StructuredValue.isInstance(r) && (y = r.valueName()), !(y && -1 != y.indexOf("<<") && y.indexOf(">>") > y.indexOf("<<") && ((new We).validateValue(e, t), l))) {
                    if ((new qe).validate(e, t), e.property().range().key() == Ae.Universe08.MimeType || e.property().range().key() == Ae.Universe10.MimeType || e.property().nameId() == Ae.Universe10.TypeDeclaration.properties.name.name && e.parent().property().nameId() == Ae.Universe10.MethodBase.properties.body.name)
                        return void (new ze).validate(e, t);
                    if ((u(e.property()) || s(e.property())) && (new ct).validate(e, t), p(e.property())) {
                        if ("RAML08" == a) {
                            var v = e.lowLevel().parent(), g = he.Kind.SEQ;
                            pe.LowLevelProxyNode.isInstance(e.lowLevel()) ? v.valueKind() != g && t.accept(Q(De.SECUREDBY_LIST_08, {}, e, !1)) : v.kind() != g && t.accept(Q(De.SECUREDBY_LIST_08, {}, e, !1));
                        }
                        if ((new ct).validate(e, t), "RAML10" == a && ye.StructuredValue.isInstance(r)) {
                            var A = r, T = A.children().filter(function (e) { return "scopes" == e.valueName(); });
                            if (T.length > 0) {
                                var E = e.findReferencedValue();
                                if (E) {
                                    var S = [];
                                    T.forEach(function (e) { var t = e.children(); if (t.length > 0)
                                        t.forEach(function (e) { var t = e.lowLevel().value(); null == t || l && t.indexOf("<<") >= 0 || S.push(e); });
                                    else {
                                        var n = e.lowLevel().value();
                                        null == n || l && n.indexOf("<<") >= 0 || S.push(e);
                                    } });
                                    var N = {}, _ = E.element(de.universesInfo.Universe10.AbstractSecurityScheme.properties.settings.name);
                                    if (_) {
                                        var b = _.attributes(de.universesInfo.Universe10.OAuth2SecuritySchemeSettings.properties.scopes.name);
                                        b.forEach(function (e) { return N[e.value()] = !0; });
                                    }
                                    for (var I = 0, R = S; I < R.length; I++) {
                                        var M = R[I], w = M.lowLevel().value();
                                        N.hasOwnProperty(w) || t.accept(ee(De.INVALID_SECURITY_SCHEME_SCOPE, { invalidScope: w, securityScheme: E.name(), allowedScopes: Object.keys(N).map(function (e) { return "'" + e + "'"; }).join(", ") }, M.lowLevel(), e, !1));
                                    }
                                }
                            }
                        }
                    }
                    if (e.property().nameId() == Ae.Universe10.TypeDeclaration.properties.name.name) {
                        var C = e.parent().property() && e.parent().property().nameId();
                        if (C == Ae.Universe08.Resource.properties.uriParameters.name || C == Ae.Universe08.Resource.properties.baseUriParameters.name)
                            return;
                    }
                    var L = e.property().range().key();
                    if (L == Ae.Universe08.RelativeUriString || L == Ae.Universe10.RelativeUriString)
                        return void (new Xe).validate(e, t);
                    if (L == Ae.Universe08.FullUriTemplateString || L == Ae.Universe10.FullUriTemplateString)
                        return void (new Xe).validate(e, t);
                    if ("pattern" == e.name() && Ae.Universe10.StringType == e.definition().key() && e.parent().definition().isAssignableFrom("StringTypeDeclaration") && je(e.value(), t, e), "name" == e.name() && Ae.Universe10.StringType == e.definition().key() && "string" == typeof e.value() && 0 == e.value().indexOf("[") && e.value().lastIndexOf("]") == e.value().length - 1 && ye.ASTNodeImpl.isInstance(e.parent()) && Ae.Universe10.ObjectTypeDeclaration.properties.properties.name == e.parent().property().nameId() && ye.ASTNodeImpl.isInstance(e.parent().parent()) && Ae.Universe10.ObjectTypeDeclaration == e.parent().parent().definition().key()) {
                        var P = e.value().substr(1, e.value().length - 2);
                        je(P, t, e);
                    }
                    n.isReference() || n.isDescriminator() ? (new Je).validate(e, t) : (new Ge).validate(e, t);
                } }, e; }();
                t.isValid = C;
                var Ye = function (e) { function t(t, n) { void 0 === n && (n = {}), e.call(this), this.messageEntry = t, this.parameters = n, this.isWarning = !1; } return oe(t, e), t.isInstance = function (e) { return null != e && e.getClassIdentifier && "function" == typeof e.getClassIdentifier && me.contains(e.getClassIdentifier(), t.CLASS_IDENTIFIER_ValidationError); }, t.prototype.getClassIdentifier = function () { var e = []; return e.concat(t.CLASS_IDENTIFIER_ValidationError); }, t.CLASS_IDENTIFIER_ValidationError = "linter.ValidationError", t; }(Error), Ge = function () { function e() { } return e.prototype.validate = function (e, t) { var n = e.value(), r = e.property(), i = r.range(), a = i.getAdapter(Se.RAMLService).getDeclaringNode(); if (a && i.isUserDefined()) {
                    var o = a.parsedType(), s = e.parent().lowLevel().dumpToObject(), u = s[e.parent().name()], l = r.canBeValue(), p = l || null === u || void 0 === u ? u : u[r.nameId()], c = o.validate(p, !0);
                    c.isOk() || c.getErrors().forEach(function (n) { return t.accept(Z(n.getCode(), n.getMessage(), e, !1)); });
                } var f = t; if (e.lowLevel().keyKind() != he.Kind.SEQ)
                    var m = C(r.range(), e.parent(), n, r, e);
                else
                    m = !0; if (m instanceof Error && !m.canBeRef)
                    return Ye.isInstance(m) ? f.accept(J(m, e)) : f.accept(Q(De.SCHEMA_EXCEPTION, { msg: m.message }, e, m.isWarning)), void (m = null); if (!m || m instanceof Error)
                    if ("value" != r.nameId()) {
                        if (!x(r, e, n, f)) {
                            if ((r.nameId() == Ae.Universe10.TypeDeclaration.properties.schema.name || Ae.Universe10.TypeDeclaration.properties.type.name) && n && n.trim() && (r.domain().key() == Ae.Universe08.BodyLike || r.domain().key() == Ae.Universe10.TypeDeclaration)) {
                                var h = n.trim().charAt(0);
                                if ("{" != h && "<" != h)
                                    return;
                            }
                            var d = e.findReferencedValue();
                            if (d instanceof Error) {
                                var y = e.findReferenceDeclaration();
                                if (y) {
                                    var v = void 0, g = void 0;
                                    if (Ye.isInstance(d)) {
                                        var A = d;
                                        v = J(A, y), g = Q(A.messageEntry, { msg: A.message }, e);
                                    }
                                    else
                                        v = Q(De.SCHEMA_EXCEPTION, { msg: d.message }, y), g = Q(De.SCHEMA_EXCEPTION, { msg: d.message }, e);
                                    v.extras.push(g), f.accept(v);
                                }
                            }
                            if (!d) {
                                if (n && r.nameId() == Ae.Universe10.TypeDeclaration.properties.schema.name) {
                                    var T = n.trim();
                                    if ("{" != T.charAt(0) && "<" != T.charAt(0) && (-1 != n.indexOf("|") || -1 != n.indexOf("[]") || -1 != n.indexOf("(")))
                                        return;
                                }
                                if (m instanceof Error && n)
                                    return Ye.isInstance(m) ? f.accept(J(m, e)) : f.accept(Q(De.SCHEMA_EXCEPTION, { msg: m.message }, e)), void (m = null);
                                if (e.property().isRequired() && null == e.value())
                                    f.accept(Q(De.EMPTY_VALUE_NOT_ALLOWED, {}, e));
                                else {
                                    var E = e.lowLevel().valueKind();
                                    (E == he.Kind.MAP || E == he.Kind.SEQ || E == he.Kind.MAPPING) && f.accept(Q(De.EMPTY_VALUE_NOT_ALLOWED, {}, e));
                                }
                            }
                        }
                    }
                    else {
                        var S = r.range().key() == Ae.Universe08.SchemaString;
                        if (m instanceof Error) {
                            var N = m.message;
                            ae(e, f, De.SCHEMA_ERROR.code, S) || f.accept(Q(De.SCHEMA_ERROR, { msg: N }, e, S));
                        }
                        else {
                            var n = e.value();
                            f.accept(Q(De.INVALID_VALUE_SCHEMA, { iValue: n }, e, S));
                        }
                    } var _ = r.enumOptions(); if (_) {
                    var b = e.parent() && e.parent().definition(), I = b && b.isAssignableFrom(Ae.Universe10.Api.name), R = b && b.isAssignableFrom(Ae.Universe08.Api.name), M = r.nameId() === Ae.Universe08.Api.properties.protocols.name, w = r.nameId() === Ae.Universe10.Api.properties.protocols.name;
                    if ("string" != typeof n)
                        return;
                    !R && !I || !M && !w || O(n) || (n = n.toUpperCase()), "string" == typeof _ ? _ != n && (n && 0 == n.indexOf("x-") && r.nameId() == Ae.Universe08.AbstractSecurityScheme.properties.type.name || f.accept(Q(De.INVALID_VALUE, { iValue: n, aValues: "'" + _ + "'" }, e))) : _.length > 0 && (me.find(_, function (e) { return e == n; }) || n && 0 == n.indexOf("x-") && r.nameId() == Ae.Universe08.AbstractSecurityScheme.properties.type.name || f.accept(Q(De.INVALID_VALUE, { iValue: n, aValues: _.map(function (e) { return "'" + e + "'"; }).join(", ") }, e)));
                } }, e; }(), Xe = function () { function e() { } return e.prototype.validate = function (e, t) { try {
                    var n = (new $e).parseUrl(e.value() || "");
                    if (n.some(function (e) { return "version" == e; }) && "baseUri" == e.property().nameId()) {
                        var r = e.root().attr("version");
                        r || t.accept(Q(De.MISSING_VERSION, {}, e, !1));
                    }
                    n.some(function (e) { return 0 == e.length; }) && t.accept(Q(De.URI_PARAMETER_NAME_MISSING, {}, e, !1));
                }
                catch (i) {
                    t.accept(Q(De.URI_EXCEPTION, { msg: i.message }, e, !1));
                } }, e; }(), ze = function () { function e() { } return e.prototype.validate = function (e, t) { try {
                    var n = e.value();
                    if ("body" == n && e.parent().parent()) {
                        var r = e.parent().parent().definition().key();
                        (r === Ae.Universe08.Response || r === Ae.Universe10.Response || e.parent().parent().definition().isAssignableFrom(Ae.Universe10.MethodBase.name)) && (n = e.parent().computedValue("mediaType"));
                    }
                    if (null != c(e) && n.indexOf("<<") >= 0)
                        return;
                    var i = _e.parseMediaType(n);
                    if (!i)
                        return;
                    i.type.match(/[\w\d][\w\d!#\$&\-\^_+\.]*/) || t.accept(Q(De.INVALID_MEDIATYPE, { mediaType: i.type }, e));
                }
                catch (a) {
                    t.accept(Q(De.MEDIATYPE_EXCEPTION, { msg: a.message }, e));
                } (e.value() && "multipart/form-data" == e.value() || "application/x-www-form-urlencoded" == e.value()) && e.parent() && e.parent().parent() && e.parent().parent().property() && e.parent().parent().property().nameId() == Ae.Universe10.MethodBase.properties.responses.name && t.accept(Q(De.FORM_IN_RESPONSE, {}, e, !0)); }, e; }(), $e = function () { function e() { } return e.prototype.checkBaseUri = function (e, t, n, r) { var i = t.root().attr("baseUri"); if (i) {
                    var a = i.value();
                    try {
                        var o = this.parseUrl(a);
                        me.find(o, function (e) { return e == n; }) || r.accept(Q(De.UNUSED_URL_PARAMETER, { paramName: "" }, e));
                    }
                    catch (s) { }
                }
                else
                    r.accept(Q(De.UNUSED_URL_PARAMETER, { paramName: "" }, e)); }, e.prototype.parseUrl = function (e) { for (var t = [], n = "", r = !1, i = 0, a = 0; a < e.length; a++) {
                    var o = e[a];
                    "{" != o ? "}" != o ? r && (n += o) : (i--, r = !1, t.push(n), n = "") : (i++, r = !0);
                } if (i > 0)
                    throw new Error(re(De.INVALID_RESOURCE_NAME_UNMATCHED_SYMBOL, { symbol: "{" })); if (0 > i)
                    throw new Error(re(De.INVALID_RESOURCE_NAME_UNMATCHED_SYMBOL, { symbol: "}" })); return t; }, e.prototype.validate = function (e, t) { var n = e.value(); if (e.parent().property().nameId() == Ae.Universe10.Api.properties.baseUri.name) {
                    var r = e.parent().parent();
                    return void this.checkBaseUri(e, r, n, t);
                } var r = e.parent().parent(), i = r.name(); if (r.definition().key() === Ae.Universe10.Api || r.definition().key() === Ae.Universe08.Api)
                    return void this.checkBaseUri(e, r, n, t); if (r.definition().key() != Ae.Universe10.ResourceType && r.definition().key() != Ae.Universe08.ResourceType)
                    try {
                        var a = this.parseUrl(i), o = me.find(a, function (e) { return e == n; });
                        if (!o) {
                            var s = e.root().attr(Ae.Universe10.Api.properties.baseUri.name);
                            if (s && e.name() === Ae.Universe08.Api.properties.baseUriParameters.name) {
                                var u = s.value();
                                if (u && (a = this.parseUrl(u), a && a.length > 0 && me.find(a, function (e) { return e == n; })))
                                    return;
                            }
                            t.accept(Q(De.UNUSED_URL_PARAMETER, { paramName: "'" + n + "'" }, e));
                        }
                    }
                    catch (l) { } }, e; }();
                t.UrlParameterNameValidator = $e, t.typeToName = {}, t.typeToName[Ae.Universe08.Trait.name] = "trait", t.typeToName[Ae.Universe08.ResourceType.name] = "resource type", t.typeToName[Ae.Universe10.Trait.name] = "trait", t.typeToName[Ae.Universe10.ResourceType.name] = "resource type", t.typeToName[Ae.Universe10.AbstractSecurityScheme.name] = "security scheme", t.typeToName[Ae.Universe10.Method.name] = "method", t.typeToName[Ae.Universe08.Method.name] = "method", t.typeToName[Ae.Universe10.Resource.name] = "resource", t.typeToName[Ae.Universe08.Resource.name] = "resource", t.typeToName[Ae.Universe10.Api.name] = "api", t.typeToName[Ae.Universe08.Api.name] = "api", t.typeToName[Ae.Universe10.Response.name] = "response", t.typeToName[Ae.Universe08.Response.name] = "response", t.typeToName[Ae.Universe08.BodyLike.name] = "body", t.parameterPropertyToName = {}, t.parameterPropertyToName[Ae.Universe08.MethodBase.properties.headers.name] = "header", t.parameterPropertyToName[Ae.Universe08.MethodBase.properties.queryParameters.name] = "query parameter", t.parameterPropertyToName[Ae.Universe08.Api.properties.uriParameters.name] = "uri parameter", t.parameterPropertyToName[Ae.Universe08.Api.properties.baseUriParameters.name] = "base uri parameter", t.parameterPropertyToName[Ae.Universe08.BodyLike.properties.formParameters.name] = "form parameter", t.parameterPropertyToName[Ae.Universe10.MethodBase.properties.headers.name] = "header", t.parameterPropertyToName[Ae.Universe10.MethodBase.properties.queryParameters.name] = "query parameter", t.parameterPropertyToName[Ae.Universe10.ResourceBase.properties.uriParameters.name] = "uri parameter", t.parameterPropertyToName[Ae.Universe10.Api.properties.baseUriParameters.name] = "base uri parameter", t.parameterPropertyToName[Ae.Universe10.MethodBase.properties.body.name] = "body", t.getHumanReadableNodeName = D;
                var Je = function () { function e() { } return e.prototype.validate = function (e, t) { var n = e.value(), r = n, i = e.property(); if ("string" == typeof n) {
                    if (x(i, e, n, t), de.ReferenceType.isInstance(i.range())) {
                        var a = (i.range(), se.createNode("" + n, e.lowLevel().parent(), e.lowLevel().unit()));
                        a._actualNode().startPosition = e.lowLevel().valueStart(), a._actualNode().endPosition = e.lowLevel().valueEnd();
                        var o = new ye.StructuredValue(a, e.parent(), e.property()), s = o.toHighLevel();
                        s && s.validate(t);
                    }
                }
                else if (ye.StructuredValue.isInstance(n)) {
                    var u = n;
                    if (u) {
                        r = u.valueName();
                        var l = u.valueName();
                        if (!x(i, e, l, t)) {
                            var p = u.toHighLevel();
                            p && p.validate(t);
                        }
                    }
                    else
                        r = null;
                }
                else
                    "number" == typeof n || "boolean" == typeof n ? e.definition().isAssignableFrom(Ae.Universe10.Reference.name) && x(i, e, n + "", t) : e.definition().isAssignableFrom(Ae.Universe10.Reference.name) && x(i, e, null, t); if (r) {
                    var c = C(i.range(), e.parent(), r, i);
                    c instanceof Error && (Ye.isInstance(c) ? t.accept(J(c, e)) : t.accept(Q(De.SCHEMA_EXCEPTION, { msg: c.message }, e, c.isWarning)), c = null);
                } }, e; }(), Qe = function () { function e() { } return e.prototype.validate = function (e, t) { var n = e.universe(), r = n.getTypedVersion(); if (r) {
                    if ("0.8" !== r && "1.0" !== r) {
                        var i = Q(De.UNKNOWN_RAML_VERSION, {}, e);
                        t.accept(i);
                    }
                    var a = n.getOriginalTopLevelText();
                    if (a) {
                        var o = { typeName: a };
                        if (a != e.definition().nameId()) {
                            if ("Api" == e.definition().nameId()) {
                                var i = Q(De.UNKNOWN_TOPL_LEVEL_TYPE, o, e);
                                t.accept(i);
                            }
                        }
                        else if ("Api" == n.getOriginalTopLevelText()) {
                            var i = Q(De.REDUNDANT_FRAGMENT_NAME, o, e);
                            t.accept(i);
                        }
                    }
                } }, e; }(), Ze = function () { function e() { } return e.prototype.validate = function (e, t) { var n = this; e.definition().getAdapter(Se.RAMLService).getContextRequirements().forEach(function (n) { if (!e.checkContextValue(n.name, n.value, n.value)) {
                    var r = { v1: n.name, v2: n.value, v3: e.definition().nameId() }, i = De.CONTEXT_REQUIREMENT_VIOLATION;
                    "location" == n.name && "ParameterLocation.FORM" == n.value && (i = De.WEB_FORMS), t.accept(Q(i, r, e));
                } }); var r, i = e.definition().getAdapter(Se.RAMLService).isInlinedTemplates(); if (i) {
                    for (var a = {}, o = 0, s = e.lowLevel().children(); o < s.length; o++) {
                        var u = s[o];
                        a[u.key()] = u.value(!0);
                    }
                    for (var l = e.definition().isAssignableFrom(Ae.Universe10.Trait.name) ? "trait" : "resource type", p = _e.toUnits(e), c = new _e.ValueTransformer(l, e.definition().nameId(), p, a), f = e.parent(), m = f ? f.definition() : e.definition(); null != f && !Te.isResourceType(m) && !Te.isMethodType(m);)
                        f = f.parent();
                    r = new _e.DefaultTransformer(f, c, p);
                } e.definition().requiredProperties().forEach(function (a) { if (i) {
                    var o = a.getAdapter(Se.RAMLPropertyService).meta("templatePaths");
                    if (o) {
                        for (var s = e.parent(), u = !1, l = 0, p = o; l < p.length; l++) {
                            var c = p[l];
                            if (c = c.map(function (e) { return r.transform(e).value; }), n.checkPathSufficiency(s.lowLevel(), c, s)) {
                                u = !0;
                                break;
                            }
                        }
                        if (!u)
                            return;
                    }
                } var f = a.range(); if (f.hasArrayInHierarchy() && (f = f.arrayInHierarchy().componentType()), f.hasValueTypeInHierarchy()) {
                    var m = e.attr(a.nameId()), h = !1;
                    if (null != m && (m.lowLevel().kind() == he.Kind.SCALAR || m.lowLevel().resolvedValueKind() == he.Kind.SCALAR || m.lowLevel().kind() == he.Kind.INCLUDE_REF || m.lowLevel().valueKind() == he.Kind.INCLUDE_REF || null === m.lowLevel().valueKind() && !i ? h = !0 : 0 != m.lowLevel().children().length && (h = !0)), !h) {
                        var d = { propName: a.nameId() }, y = De.MISSING_REQUIRED_PROPERTY;
                        i && (y = De.VALUE_NOT_PROVIDED);
                        var v = Q(y, d, e);
                        t.accept(v);
                    }
                }
                else {
                    var g = e.elementsOfKind(a.nameId());
                    if (!g || 0 == g.length) {
                        var v = Q(De.MISSING_REQUIRED_PROPERTY, { propName: a.nameId() }, e);
                        t.accept(v);
                    }
                } }); }, e.prototype.checkPathSufficiency = function (e, t, n) { if (null == n || null == n.definition())
                    return !1; var r = n.definition(); if (Te.isResourceTypeType(r) || Te.isTraitType(r))
                    return !0; if (0 == t.length)
                    return !1; if (null == e)
                    return !1; var i = t[0]; if (null == i)
                    return !1; if ("/" == i)
                    return this.checkPathSufficiency(e, t.slice(1), n); if (0 == i.length)
                    return !0; var a = e.children().filter(function (e) { return e.key() == i; }); 0 == a.length && t.indexOf("/") < 0; var o = a[0]; if (pe.LowLevelCompositeNode.isInstance(o) && (o = o.primaryNode()), null == o)
                    return t.indexOf("/") < 0; if ("type" == o.key())
                    return !0; if (1 == t.length)
                    return null == o || null == o.value(); var s = t.slice(1); return this.checkPathSufficiency(o, s, n); }, e; }(), et = function () { function e() { } return e.prototype.validate = function (e, t) { var n = e.lowLevel().unit(); e.lowLevel().visit(function (r) { if (r.unit() != n)
                    return !1; if (r.value() && r._node && r._node.value && r._node.value.doubleQuoted) {
                    var i = (r.value() + "").indexOf(":"), a = (r.value() + "").indexOf("\n");
                    if (-1 != i && -1 != a && (!r.includePath() || 0 == r.includePath().length)) {
                        var o = Q(De.SUSPICIOUS_DOUBLEQUOTE, { value: r.value() }, e, !0);
                        o.start = r._node.value.startPosition, o.end = r._node.value.endPosition, o.start == o.end && o.end++, t.accept(o);
                    }
                } return !0; }); }, e; }(), tt = function () { function e() { } return e.prototype.validate = function (e, t) { var n = e.definition(), r = n.getAdapter(Se.RAMLService).getDeclaringNode(); if (r) {
                    var i = r.parsedType(), a = e.lowLevel().dumpToObject(!0);
                    a && (a = a[Object.keys(a)[0]]);
                    var o = i.validate(a, !1, !1);
                    o.isOk() || o.getErrors().forEach(function (n) { return t.accept(Z(n.getCode(), n.getMessage(), j(e, n).node, !1)); });
                } }, e; }(), nt = function () {
                    function e() { this.annotables = { API: !0, DocumentationItem: !0, Resource: !0, Method: !0, Response: !0, RequestBody: !0, ResponseBody: !0, TypeDeclaration: !0, Example: !0, ResourceType: !0, Trait: !0, SecurityScheme: !0, SecuritySchemeSettings: !0, AnnotationType: !0, Library: !0, Overlay: !0, Extension: !0 }; }
                    return e.prototype.validate = function (e, t) {
                        var n = (e.definition(), e.parsedType()), r = n.validateType(e.types().getAnnotationTypeRegistry());
                        if (!r.isOk())
                            for (var i = 0, a = r.getErrors(); i < a.length; i++) {
                                var o = a[i], s = W(o, e.lowLevel().unit().project()), u = void 0, l = j(e, o);
                                if (l.node == e && !l.internalPathUsed) {
                                    var p = o.getValidationPath();
                                    if (p && p.name == de.universesInfo.Universe10.TypeDeclaration.properties.type.name && e.attr(de.universesInfo.Universe10.TypeDeclaration.properties.schema.name)) {
                                        var c = p.name;
                                        p.name = de.universesInfo.Universe10.TypeDeclaration.properties.schema.name, l = j(e, o), p.name = c;
                                    }
                                }
                                var f = l.internalPathUsed ? null : o.getInternalRange();
                                if (s) {
                                    if (u = te(o.getCode(), o.getMessage(), s, l.node, o.isWarning(), !0, f), s.unit().absolutePath() != e.lowLevel().unit().absolutePath()) {
                                        var m = Z(o.getCode(), o.getMessage(), e, o.isWarning());
                                        u.extras.push(m);
                                    }
                                }
                                else {
                                    if (o.getFilePath() && o.getFilePath() != e.lowLevel().unit().absolutePath()) {
                                        var h = e.lowLevel().unit().project().unit(o.getFilePath(), !0);
                                        if (h) {
                                            var d = h.highLevel();
                                            if (d) {
                                                u = Z(o.getCode(), o.getMessage(), d, o.isWarning(), f, !0);
                                                var m = Z(o.getCode(), o.getMessage(), l.node, o.isWarning());
                                                u.extras.push(m);
                                            }
                                        }
                                    }
                                    if (!u) {
                                        if (ae(l.node, t, o.getCode(), o.isWarning()))
                                            continue;
                                        u = Z(o.getCode(), o.getMessage(), l.node, o.isWarning(), f);
                                    }
                                }
                                var y = o.getFilePath();
                                if (null != y) {
                                    var v = e.lowLevel().unit().project().unit(y);
                                    v && (u.unit = v, u.path = y);
                                }
                                t.accept(u);
                            }
                        var g = e.lowLevel() && me.find(e.lowLevel().children(), function (e) { return "examples" == e.key(); });
                        if (g && g.valueKind && g.valueKind() === he.Kind.SEQ) {
                            var u = ee(De.MAP_EXPECTED, {}, g, e, !1);
                            t.accept(u);
                        }
                        if (e.property() && Te.isAnnotationTypesProperty(e.property()) || ye.isAnnotationTypeFragment(e))
                            for (var A = e.attributes(Ae.Universe10.TypeDeclaration.properties.allowedTargets.name), T = 0, E = A; T < E.length; T++) {
                                var S = E[T];
                                this.checkAnnotationTarget(S, t);
                            }
                    }, e.prototype.checkAnnotationTarget = function (e, t) { var n = e.value(); if (null != n) {
                        if ("string" != typeof n)
                            return void t.accept(Q(De.ANNOTATION_TARGET_MUST_BE_A_STRING, {}, e, !1));
                        var r = n;
                        n.replace(/\w|\s/g, "").length > 0 ? t.accept(Q(De.ALLOWED_TARGETS_MUST_BE_ARRAY, {}, e, !1)) : this.annotables[r] || t.accept(Q(De.UNSUPPORTED_ANNOTATION_TARGET, { aTarget: r }, e, !1));
                    } }, e;
                }(), rt = function () { function e() { } return e.prototype.validate = function (e, t) { if (!e.definition().isAnnotationType()) {
                    if (e.lowLevel().keyKind() == he.Kind.SEQ) {
                        var n = e.definition().isAssignableFrom(Ae.Universe10.TypeDeclaration.name);
                        n || t.accept(Q(De.NODE_KEY_IS_A_SEQUENCE, {}, e));
                    }
                    var r = e.name();
                    if (null == r && (r = e.lowLevel().key(), null == r && (r = "")), e.definition().key() == Ae.Universe08.GlobalSchema && e.lowLevel().valueKind() != he.Kind.SCALAR) {
                        var o = !1;
                        if (e.lowLevel().valueKind() == he.Kind.ANCHOR_REF || e.lowLevel().valueKind() == he.Kind.INCLUDE_REF) {
                            var s = e.lowLevel().value();
                            "string" == typeof s && (o = !0);
                        }
                        o || t.accept(Q(De.SCHEMA_NAME_MUST_BE_STRING, { name: r }, e));
                    }
                    e.parent() || ((new Qe).validate(e, t), (e.definition().key() == Ae.Universe08.Api || e.definition().key() == Ae.Universe10.Api) && (new Ne).validateApi(e.wrapperNode(), t), (new et).validate(e, t), a(e, t)), (new st).validate(e, t);
                    var u = e.definition();
                    if (u.key() == Ae.Universe08.BodyLike && e.lowLevel().children().map(function (e) { return e.key(); }).some(function (e) { return "formParameters" === e; }))
                        if (e.parent() && e.parent().definition().key() == Ae.Universe08.Response) {
                            var l = Q(De.FORM_PARAMS_IN_RESPONSE, {}, e);
                            t.accept(l);
                        }
                        else if (e.lowLevel().children().map(function (e) { return e.key(); }).some(function (e) { return "schema" === e || "example" === e; })) {
                            var l = Q(De.FORM_PARAMS_WITH_EXAMPLE, {}, e);
                            t.accept(l);
                        }
                    if (u.key() == Ae.Universe10.OAuth2SecuritySchemeSettings) {
                        var p = !1;
                        if (e.attributes("authorizationGrants").forEach(function (e) { var n = e.value(); if ("authorization_code" === n || "implicit" === n)
                            p = !0;
                        else if ("password" !== n && "client_credentials" !== n && n && "string" == typeof n && -1 == n.indexOf("://") && -1 == n.indexOf(":")) {
                            var r = Q(De.AUTHORIZATION_GRANTS_ENUM, {}, e);
                            t.accept(r);
                        } }), p && !e.attr("authorizationUri")) {
                            var l = Q(De.AUTHORIZATION_URI_REQUIRED, {}, e);
                            t.accept(l);
                        }
                    }
                    if (e.definition().isAssignableFrom(Ae.Universe08.Parameter.name) || e.definition().isAssignableFrom(Ae.Universe10.TypeDeclaration.name)) {
                        var f = e.attributes("enum").map(function (e) { return e.value(); });
                        if (f.length != me.uniq(f).length) {
                            var l = Q(De.REPEATING_COMPONENTS_IN_ENUM, {}, e);
                            t.accept(l);
                        }
                        if (e.definition().isAssignableFrom(Ae.Universe08.NumberTypeDeclaration.name) || e.definition().isAssignableFrom(Ae.Universe10.NumberTypeDeclaration.name)) {
                            var m = e.definition().isAssignableFrom(Ae.Universe08.IntegerTypeDeclaration.name) || e.definition().isAssignableFrom(Ae.Universe10.IntegerTypeDeclaration.name);
                            e.attributes("enum").forEach(function (e) { var n = m ? parseInt(e.value()) : parseFloat(e.value()), r = m ? !isNaN(n) && -1 === e.value().indexOf(".") : !isNaN(n); if (!r) {
                                var i = Q(m ? De.INTEGER_EXPECTED : De.NUMBER_EXPECTED_2, {}, e);
                                t.accept(i);
                            } });
                        }
                    }
                    Te.isResourceTypeType(e.definition()) && null == e.value() && "null" === e.lowLevel().value(!0) && t.accept(Q(De.RESOURCE_TYPE_NULL, {}, e)), i(e, t);
                    var h = e.value();
                    if (("string" == typeof h || "number" == typeof h || "boolean" == typeof h) && !e.definition().getAdapter(Se.RAMLService).allowValue() && e.parent() && "~" != h) {
                        var d = null != c(e) && "string" == typeof h && Re.startsWith(h, "<<") && Re.endsWith(h, ">>"), y = !0;
                        if ("" == h) {
                            var v = e.lowLevel().actual() && e.lowLevel().actual().value;
                            v && (v.doubleQuoted || v.singleQuoted) || (y = !1);
                        }
                        if (y && !d && !ae(e, t, De.SCALAR_PROHIBITED_2.code)) {
                            var l = Q(De.SCALAR_PROHIBITED_2, { name: r }, e);
                            t.accept(l);
                        }
                    }
                    (new Ze).validate(e, t), (new pt).validate(e, t), (new ot).validate(e, t);
                } }, e; }(), it = function () { function e() { } return e.prototype.validate = function (e, t) { var n = e.attrValue(Ae.Universe10.TypeDeclaration.properties.name.name); "version" == n && t.accept(Q(De.VERSION_NOT_ALLOWED, {}, e)); }, e; }(), at = function () { function e(e, t, n, r) { void 0 === r && (r = !1), this.definitions = e, this.propertyName = t, this.assignableFrom = r, this.validator = n; } return e.prototype.validate = function (e, t) { var n = e.definition(); if (null != n) {
                    var r = !1;
                    if (r = this.assignableFrom ? this.definitions.some(function (e) { return n.isAssignableFrom(e.name); }) : this.definitions.some(function (e) { return e === n; })) {
                        if (null != this.propertyName) {
                            if (null == e.property())
                                return;
                            if (e.property().nameId() != this.propertyName)
                                return;
                        }
                        this.validator.validate(e, t);
                    }
                } }, e; }(), ot = function () { function e() { } return e.createRegistry = function () { var t = []; return e.registerValidator(t, [Ae.Universe10.TypeDeclaration, Ae.Universe08.Parameter], Ae.Universe10.Api.properties.baseUriParameters.name, new it, !0), t; }, e.registerValidator = function (e, t, n, r, i) { void 0 === i && (i = !1); var a = new at(t, n, r, i); e.push(a); }, e.prototype.validate = function (t, n) { e.entries.forEach(function (e) { return e.validate(t, n); }); }, e.entries = e.createRegistry(), e; }(), st = function () { function e() { } return e.prototype.allowsAnyChildren = function (e, t) { var n = e.property(), r = e.definition(); return (Te.isAnnotationTypeType(r) || Te.isTypeDeclarationTypeOrDescendant(r)) && Te.isAnnotationTypesProperty(n) ? !0 : e.parent() == t && Te.isTypesProperty(n) && Te.isTypeDeclarationTypeOrDescendant(r) ? !0 : Te.isSchemasProperty(n) && Te.isTypeDeclarationTypeOrDescendant(r) ? !0 : e.parent() == t && Te.isDocumentationProperty(n) && Te.isDocumentationType(r) ? !0 : Te.isAnnotationsProperty(n) ? !0 : Te.isUsesProperty(n) ? !0 : Te.isExamplesProperty(n) ? !0 : !1; }, e.prototype.nodeAllowedDueToParent = function (e, t) { for (var n = e; n != t && null != n;) {
                    if (this.allowsAnyChildren(n, t))
                        return !0;
                    n = n.parent();
                } return !1; }, e.prototype.validate = function (e, t) { var n = e.root(); if (!n.isExpanded() || n.lowLevel().unit().absolutePath() == e.lowLevel().unit().absolutePath()) {
                    e.property(), e.definition();
                    if (Te.isOverlayType(n.definition())) {
                        if (e == n)
                            return void this.validateProperties(e, t);
                        if (!this.nodeAllowedDueToParent(e, n)) {
                            var r = n.knownIds();
                            if (r) {
                                var i = r.hasOwnProperty(e.id());
                                return i ? void this.validateProperties(e, t) : void t.accept(Q(De.INVALID_OVERLAY_NODE, { nodeId: e.id() }, e));
                            }
                        }
                    }
                } }, e.prototype.validateProperties = function (e, t) { var n = e.root(), r = n.lowLevel().unit().absolutePath(), i = n.isExpanded(); e.attrs().forEach(function (n) { i && r != n.lowLevel().unit().absolutePath() || n.property().getAdapter(Se.RAMLPropertyService).isKey() || n.parent() == e && (n.isElement() || Te.isTitlePropertyName(n.name()) || Te.isDescriptionPropertyName(n.name()) || Te.isDisplayNamePropertyName(n.name()) || Te.isUsagePropertyName(n.name()) || Te.isExampleProperty(n.property()) || Te.isMasterRefProperty(n.property()) || Te.isAnnotationsProperty(n.property()) || Te.isUsesProperty(n.property()) || t.accept(Q(De.INVALID_OVERRIDE_IN_OVERLAY, { propName: n.name() }, n))); }); }, e; }(), ut = function () { function e() { } return e.prototype.validate = function (e, t) { var n = this, r = new st; r.validate(e, t), e.directChildren().forEach(function (e) { e.isElement() && n.validate(e.asElement(), t); }); }, e; }(), lt = function () { function e() { } return e.prototype.val = function (e, t, n) { var r = this; if (e.kind() == he.Kind.MAP || e.kind() == he.Kind.MAPPING) {
                    var i = {};
                    e.children().forEach(function (e) { var r = e.key(); if (r) {
                        if (i.hasOwnProperty(r)) {
                            var a = Q(De.KEYS_SHOULD_BE_UNIQUE, {}, n, !1);
                            e.unit() == n.lowLevel().unit() && (a.start = e.keyStart(), a.end = e.keyEnd()), t.accept(a);
                        }
                        i[r] = 1;
                    } });
                } e.children().forEach(function (e) { r.val(e, t, n); }); }, e.prototype.validate = function (e, t) { this.val(e.lowLevel(), t, e); }, e; }(), pt = function () { function e() { } return e.prototype.validate = function (e, t) { this.validateChildElements(e, t); var n = e.lowLevel().children(), r = me.groupBy(n.filter(function (e) { return null != e.key(); }), function (e) { return e.key(); }); this.validateChildAttributes(e, r, t), this.validateUnrecognizedLowLevelChildren(e, r, t); }, e.prototype.validateChildElements = function (e, t) { var n = {}, r = e.directChildren().filter(function (e) { return e.isElement(); }); r.forEach(function (e) { var t = e; if (!t._computed && t.name()) {
                    var r = t.name() + t.property().nameId();
                    n.hasOwnProperty(r) ? t.isNamePatch() || n[r].push(t) : n[r] = [t];
                } }), Object.keys(n).forEach(function (e) { var r = n[e]; !r || r.length < 2 || r.forEach(function (e) { var n = D(e), r = { name: e.name() }, i = De.ALREADY_EXISTS_IN_CONTEXT; n && (r.capitalized = Pe.upperCaseFirst(n), i = De.ALREADY_EXISTS); var a = Q(i, r, e); t.accept(a); }); }); }, e.prototype.validateChildAttributes = function (e, t, n) { var r = this.getHighLevelAttributes(e), i = me.groupBy(r, function (e) { return e.name(); }), a = this.allowsAnyAndHasRequireds(e); Object.keys(i).forEach(function (r) { if (!(i[r].length < 2)) {
                    var o = i[r][0].isUnknown(), s = !o && i[r][0].property().isMultiValue();
                    s && (e.definition().isAssignableFrom(Ae.Universe08.SecuritySchemeSettings.name) || e.definition().isAssignableFrom(Ae.Universe10.SecuritySchemeSettings.name)) && (s = t[r] && 1 === t[r].length), (o && a || !s || s && null != t[r] && t[r].length > 1) && i[r].forEach(function (e) { var t = { propName: e.property() ? e.property().nameId() : e.name() }, r = De.PROPERTY_USED, i = D(e.parent()); i && (t.parent = Pe.upperCaseFirst(i), r = De.PARENT_PROPERTY_USED); var a = Q(r, t, e); n.accept(a); });
                } }); }, e.prototype.validateUnrecognizedLowLevelChildren = function (e, t, n) { var r = e.directChildren(), i = me.groupBy(r, function (e) { return e.name(); }); Object.keys(t).forEach(function (r) { if (r && t[r].length > 1 && !i[r]) {
                    if (e.definition().isAssignableFrom(Ae.Universe10.ObjectTypeDeclaration.name))
                        return;
                    var a = { propName: r }, o = De.PROPERTY_USED, s = D(e);
                    s && (a.parent = Pe.upperCaseFirst(s), o = De.PARENT_PROPERTY_USED), t[r].forEach(function (t) { var r = ee(o, a, t, e); r.start = t.keyStart(), r.end = t.keyEnd(), n.accept(r); });
                } }); }, e.prototype.filterMultiValueAnnotations = function (e, t, n) { this.getHighLevelAttributes(e); Object.keys(t).forEach(function (e) { "(" !== e.charAt(0) || t[e].length < 2; }); }, e.prototype.getHighLevelAttributes = function (e) { var t = this.allowsAnyAndHasRequireds(e); return e.directChildren().filter(function (e) { return e.isAttr() || t; }); }, e.prototype.allowsAnyAndHasRequireds = function (e) { var t = e.definition().requiredProperties(), n = t && t.length > 0, r = e.definition().getAdapter(Se.RAMLService), i = r && r.getAllowAny(), a = i && n; return a; }, e; }(), ct = function () { function e() { } return e.prototype.validate = function (e, t) { var n = this.isStrict(e); if (n || xe.validateNotStrictExamples) {
                    var r = this.parseObject(e, t, n);
                    if (r) {
                        var i = this.aquireSchema(e);
                        if (i) {
                            var a = r;
                            "object" == typeof a && (a = e.value()), i.validate(a, t, n);
                        }
                    }
                } }, e.prototype.isExampleNode = function (e) { return this.isSingleExampleNode(e) || this.isExampleNodeInMultipleDecl(e); }, e.prototype.isSingleExampleNode = function (e) { return e.name() == Ae.Universe10.TypeDeclaration.properties.example.name; }, e.prototype.isExampleNodeInMultipleDecl = function (e) { var t = e.parent(); return t ? Te.isExampleSpecType(t.definition()) : !1; }, e.prototype.findParentSchemaOrTypeAttribute = function (e) { var t = e.parent().attr(Ae.Universe10.TypeDeclaration.properties.schema.name); return t ? t : (t = e.parent().attr(Ae.Universe10.TypeDeclaration.properties.type.name)) ? t : e.parent() ? (t = e.parent().parent().attr(Ae.Universe10.TypeDeclaration.properties.schema.name)) ? t : (t = e.parent().parent().attr(Ae.Universe10.TypeDeclaration.properties.type.name), t ? t : null) : null; }, e.prototype.aquireSchema = function (e) { var t = e.parent().definition().isAssignableFrom(Ae.Universe10.TypeDeclaration.name); if (this.isExampleNode(e)) {
                    var n = e;
                    if (this.isExampleNodeInMultipleDecl(e) && (n = e.parent()), n.parent() && (n.parent().definition().isAssignableFrom(Ae.Universe10.TypeDeclaration.name) && null === n.parent().parent() ? t = !1 : n.parent().property().nameId() == Ae.Universe10.LibraryBase.properties.types.name && (t = !1), n.parent().parent())) {
                        var r = n.parent().parent().definition().key();
                        (r == Ae.Universe08.Method || r == Ae.Universe10.Method) && (n.parent().property().nameId() == Ae.Universe10.MethodBase.properties.queryParameters.name || (t = !0)), (r == Ae.Universe08.Response || r == Ae.Universe10.Response) && (t = !0);
                    }
                } if (e.parent().definition().key() == Ae.Universe08.BodyLike || t) {
                    var i = this.findParentSchemaOrTypeAttribute(e);
                    if (i) {
                        var a = i.value();
                        if (ye.StructuredValue.isInstance(a))
                            return null;
                        var o = ("" + a).trim(), s = null;
                        if ("{" == o.charAt(0))
                            try {
                                s = Ce.getJSONSchema(o, H(i.lowLevel()));
                            }
                            catch (u) {
                                return null;
                            }
                        if ("<" == o.charAt(0))
                            try {
                                s = Ce.getXMLSchema(o);
                            }
                            catch (u) {
                                return null;
                            }
                        if (s)
                            return { validate: function (t, n, r) { try {
                                    if (t.__$validated)
                                        return;
                                    if (s instanceof Error)
                                        return void n.accept(Q(De.INVALID_VALUE_SCHEMA, { iValue: s.message }, e, !r));
                                    s.validate(t);
                                }
                                catch (a) {
                                    var o = "Cannot assign to read only property '__$validated' of ";
                                    if (a.message && 0 == a.message.indexOf(o)) {
                                        var u = a.message.substr(o.length, a.message.length - o.length);
                                        return void n.accept(Q(De.INVALID_JSON_SCHEMA, { propName: u }, i, !r));
                                    }
                                    if ("Object.keys called on non-object" == a.message)
                                        return;
                                    return Ye.isInstance(a) ? void (ae(e, n, a.messageEntry.code, !r) || n.accept(J(a, e, !r))) : void n.accept(Q(De.EXAMPLE_SCHEMA_FAILURE, { msg: a.message }, e, !r));
                                } } };
                        if (o.length > 0) {
                            var l = e.parent(), p = l && l.parent(), c = l && l.definition() && l.definition().isAssignableFrom(Ae.Universe10.ObjectTypeDeclaration.name) && l;
                            if (c = c || p && p.definition() && p.definition().isAssignableFrom(Ae.Universe10.ObjectTypeDeclaration.name) && p)
                                return this.typeValidator(c, e);
                        }
                    }
                } return this.getSchemaFromModel(e); }, e.prototype.getSchemaFromModel = function (e) { var t = e.parent(); return this.typeValidator(t, e); }, e.prototype.typeValidator = function (e, t) { var n = { validate: function (n, r, i) { var a = e.parsedType(); if (a && !a.isUnknown()) {
                        "number" == typeof n && a.isString() && (n = "" + n), "boolean" == typeof n && a.isString() && (n = "" + n), a.getExtra("repeat") && (n = [n]);
                        var o = a.validate(n, !1);
                        o.isOk() || o.getErrors().forEach(function (e) { return r.accept(Z(e.getCode(), e.getMessage(), t, !i, e.getInternalRange())); });
                    } } }; return n; }, e.prototype.toObject = function (e, t, n) { var r = t.lowLevel().dumpToObject(!0); return this.testDublication(e, t.lowLevel(), n), r.example ? r.example : r.content ? r.content : void 0; }, e.prototype.testDublication = function (e, t, n) { var r = this, i = {}; t.children().forEach(function (t) { t.key() && (i[t.key()] && n.accept(Q(De.KEYS_SHOULD_BE_UNIQUE, {}, new ye.BasicASTNode(t, e.parent()))), i[t.key()] = t), r.testDublication(e, t, n); }); }, e.prototype.parseObject = function (e, t, n) { var r = null, i = e.value(), a = X(e); if (ye.StructuredValue.isInstance(i))
                    r = this.toObject(e, i, t);
                else if (a) {
                    if (Y(a))
                        try {
                            de.rt.getSchemaUtils().tryParseJSON(i, !0), r = JSON.parse(i);
                        }
                        catch (o) {
                            return void (Ye.isInstance(o) ? ae(e, t, o.messageEntry.code, !n) || t.accept(J(o, e, !n)) : t.accept(Q(De.CAN_NOT_PARSE_JSON, { msg: o.message }, e, !n)));
                        }
                    if (G(a))
                        try {
                            r = Le.parseXML(i);
                        }
                        catch (o) {
                            return void t.accept(Q(De.CAN_NOT_PARSE_XML, { msg: o.message }, e, !n));
                        }
                }
                else
                    try {
                        if (!(i && i.length > 0) || "[" != i.trim().charAt(0) && "{" != i.trim().charAt(0) && "<" != i.trim().charAt(0)) {
                            if ("true" == i)
                                return !0;
                            if ("false" == i)
                                return !1;
                            var s = parseFloat(i);
                            return isNaN(i) ? i : s;
                        }
                        r = JSON.parse(i);
                    }
                    catch (o) {
                        if (0 != i.trim().indexOf("<"))
                            return i;
                        try {
                            r = Le.parseXML(i);
                        }
                        catch (o) {
                            return void t.accept(Q(De.CAN_NOT_PARSE_XML, { msg: o.message }, e, !n));
                        }
                    } return null != r && "object" != typeof r ? i : r; }, e.prototype.isStrict = function (e) { if (Te.isDefaultValue(e.property()))
                    return !0; if (Te.isExampleProperty(e.property()) && "RAML08" == e.parent().definition().universe().version())
                    return !1; var t = !1, n = e.parent().attr("strict"); return n && "true" == n.value() && (t = !0), t; }, e; }();
                t.ExampleAndDefaultValueValidator = ct;
                var ft = function (e, t, n) { var r = Pe.sentence(e); return t || (r = Pe.ucFirst(r)), n && (r = Oe.plural(r)), r; }, mt = function () { function e() { } return e.prototype.validate = function (e, t) { if (e.isAttr()) {
                    if (!e.optional())
                        return;
                    var n = e, r = n.property();
                    if (r.isMultiValue() || r.range().isArray())
                        return;
                    if (!r.isFromParentKey()) {
                        var i = c(n.parent());
                        if (i && r.isValueProperty()) {
                            var a = ft(i, !0, !0), o = Q(De.OPTIONAL_SCLARAR_PROPERTIES_10, { templateNamePlural: a, propName: n.name() }, n, !1);
                            t.accept(o);
                        }
                    }
                }
                else if (e.isElement()) {
                    var s = e, r = s.property(), u = s.allowsQuestion();
                    if (!u) {
                        var l = r ? ft(r.nameId(), !0, !0) : "API root";
                        s.optionalProperties().forEach(function (n) { s.children().forEach(function (n) { var r = { propName: l, oPropName: n.lowLevel().key() }, i = Q(De.OPTIONAL_PROPERTIES_10, r, e, !1); t.accept(i); }); });
                    }
                    var p = e.asElement().definition();
                    if (e.optional() && "RAML10" == p.universe().version()) {
                        var r = e.property(), f = Te.isQueryParametersProperty(r) || Te.isUriParametersProperty(r) || Te.isHeadersProperty(r);
                        if (!(Te.isMethodType(p) || Te.isTypeDeclarationType(p) && f)) {
                            var o = Q(De.ONLY_METHODS_CAN_BE_OPTIONAL, {}, e, !1);
                            t.accept(o);
                        }
                    }
                } }, e; }(), ht = function () { function e() { } return e.prototype.validate = function (e, t) { var n = e.definition(), r = Ae.Universe10.Api.properties.baseUri.name, i = Ae.Universe10.Api.properties.baseUriParameters.name, a = Ae.Universe10.Resource.properties.relativeUri.name, o = Ae.Universe10.ResourceBase.properties.uriParameters.name; if (Te.isApiSibling(n))
                    this.inspectParameters(e, t, r, i);
                else if (Te.isResourceType(n)) {
                    var s = e.root();
                    this.inspectParameters(e, t, r, i, s), this.inspectParameters(e, t, a, o);
                }
                else if (Te.isResourceTypeType(n)) {
                    var s = e.root();
                    this.inspectParameters(e, t, r, i, s);
                } }, e.prototype.inspectParameters = function (e, t, n, r, i) { i = i || e; var a = "", o = i.attr(n); o && (a = o.value(), a && "string" == typeof a || (a = "")); var s = e.elementsOfKind(r); s.forEach(function (n) { var i = n.attr(Ae.Universe10.TypeDeclaration.properties.name.name); if (i) {
                    var o = i.value();
                    if (null != o && a.indexOf("{" + o + "}") < 0) {
                        if (Te.isResourceTypeType(e.definition()) && o.indexOf("<<") >= 0)
                            return;
                        var s = Pe.upperCaseFirst(Oe.singular(Pe.sentence(r))), u = Q(De.PROPERTY_UNUSED, { propName: s }, n, !0);
                        t.accept(u);
                    }
                } }); }, e; }(), dt = function () { function e() { this.nameProperty = Ae.Universe10.ResourceType.properties.name.name; } return e.prototype.validate = function (e, t) { var n = e.definition(); if (Te.isLibraryBaseSibling(n) || Te.isApiType(n)) {
                    var r = (Ae.Universe10.LibraryBase.properties.resourceTypes.name, Ae.Universe10.ResourceBase.properties.type.name), i = (Ae.Universe10.LibraryBase.properties.traits.name, Ae.Universe10.MethodBase.properties.is.name), a = be.globalDeclarations(e).filter(function (e) { return Te.isResourceTypeType(e.definition()); }), o = be.globalDeclarations(e).filter(function (e) { return Te.isTraitType(e.definition()); });
                    this.checkCycles(a, r, t), this.checkCycles(o, i, t);
                } }, e.prototype.checkCycles = function (e, t, n) { var r = this, i = {}; e.forEach(function (e) { var t = r.templateName(e); i[t] = e; }); var a = {}; e.forEach(function (e) { var o = r.templateName(e); a[o] || r.findCyclesInDefinition(e, t, i).forEach(function (t) { t.forEach(function (e) { return a[e] = !0; }), t = t.reverse(); var r = ft(e.definition().nameId()), i = t.join(" -> "), o = { typeName: r, cycle: i }, s = Q(De.CYCLE_IN_DEFINITION, o, e, !1); n.accept(s); }); }); }, e.prototype.templateName = function (e) { var t = e.attr(this.nameProperty); return t ? t.value() : null; }, e.prototype.findCyclesInDefinition = function (e, t, n, r) { void 0 === r && (r = {}); var i = this.templateName(e); if (r[i])
                    return [[i]]; var a = {}; Object.keys(r).forEach(function (e) { return a[e] = r[e]; }), a[i] = !0; for (var o = [], s = e.attributes(t), u = 0; u < s.length; u++) {
                    var l = s[u], p = l.value();
                    if (p) {
                        var c = "string" == typeof p || "number" == typeof p || "boolean" == typeof p ? p + "" : p.valueName(), f = n[c];
                        if (null != f) {
                            var m = this.findCyclesInDefinition(f, t, n, a);
                            m.forEach(function (e) { return o.push(e); });
                        }
                    }
                } return o.forEach(function (e) { return e.push(i); }), o; }, e; }();
                t.isJson = Y, t.isXML = G, t.getMediaType = X;
                var yt = /^[ ]*/, vt = function (e, t, n, r, i, a, o, s, u) { void 0 === u && (u = !1); var l = o ? o : e.lowLevel(), p = l.unit() && l.unit().contents(), c = p && p.length, f = l.start(), m = l.end(), h = l.actual(), d = h && h.value, y = d && d.rawValue, v = l.valueKind(); v == he.Kind.ANCHOR_REF && (v = l.anchorValueKind()); var g = v; if (v == he.Kind.INCLUDE_REF && (v = e.lowLevel().resolvedValueKind()), s && (v == he.Kind.SCALAR || u)) {
                    if (g == he.Kind.INCLUDE_REF) {
                        var A = l.unit().resolve(l.includePath());
                        if (A) {
                            var T = A.lineMapper(), E = T.toPosition(s.start.line, s.start.column), S = T.toPosition(s.end.line, s.end.column), N = { code: t, isWarning: n, message: r, node: null, start: E.position, end: S.position, path: A.path(), extras: [], unit: A }, _ = vt(e, t, n, r, i, a, o);
                            return N.extras.push(_), N;
                        }
                    }
                    var b = l.unit().lineMapper(), I = l.valueStart();
                    0 > I && (I = l.start());
                    var R = b.position(I), M = void 0, w = void 0, C = R.line + s.start.line, L = R.line + s.end.line;
                    if (y && "string" == typeof y && "|" == y.charAt(0)) {
                        var P = y.indexOf("\n") + 1, O = y.indexOf("\n", P);
                        0 > O && (O = y.length);
                        var D = yt.exec(y.substring(P, O))[0].length;
                        M = D + s.start.column, w = D + s.end.column, C++, L++;
                    }
                    else
                        M = R.column + s.start.column, w = R.column + s.end.column, d && (d.singleQuoted || d.doubleQuoted) && (M++, w++);
                    var U = b.toPosition(C, M), x = b.toPosition(L, w);
                    U && x && (f = U.position, m = x.position);
                }
                else {
                    if (c && m > c && (m = c - 1), l.key() && l.keyStart()) {
                        var k = l.keyStart();
                        k > 0 && (f = k);
                        var F = l.keyEnd();
                        F > 0 && (m = F);
                    }
                    if (f > m && (m = f + 1, e.isElement())) {
                        var B = e.definition();
                        Te.isApiType(B) && (f = 0 == c ? 0 : c - 1, m = f);
                    }
                    if (a && !a.getAdapter(Se.RAMLPropertyService).isMerged() && null == e.parent()) {
                        var K = me.find(l.children(), function (e) { return e.key() == a.nameId(); });
                        if (K) {
                            var k = K.keyStart(), F = K.keyEnd();
                            k > 0 && F > k && (f = k, m = F);
                        }
                    }
                } return { code: t, isWarning: n, message: r, node: e, start: f, end: m, path: i ? l.unit() ? l.unit().path() : "" : null, extras: [], unit: e ? l.unit() : null }; }, gt = function (e, t, n, r, i, a, o) { var s = e.unit() && e.unit().contents(), u = s && s.length, l = e.start(), p = e.end(); if (u && p >= u && (p = u - 1), e.key() && e.keyStart()) {
                    var c = e.keyStart();
                    c > 0 && (l = c);
                    var f = e.keyEnd();
                    f > 0 && (p = f);
                } return { code: n, isWarning: r, message: i, node: t, start: l, end: p, path: a ? e.unit() ? e.unit().path() : "" : null, extras: [], unit: e ? e.unit() : null }; };
                t.toIssue = $, t.createIssue1 = Q, t.createIssue = Z, t.createLLIssue = te, t.validateResponseString = ne, t.applyTemplate = re;
            }).call(t, n(64));
        }, function (e, t, n) {
            "use strict";
            function r(e, t) { if (void 0 === t && (t = 0), t > 20)
                return []; try {
                var n = [], i = e.leftType();
                i && n.push(i);
                var a = e.rightType();
                if (a)
                    if (a.hasUnionInHierarchy()) {
                        var o = r(a.unionInHierarchy(), t + 1);
                        n = n.concat(o);
                    }
                    else
                        n.push(a);
                return n;
            }
            finally { } }
            function i(e) { var t = e.definition(); if (!t || !b.isTypeDeclarationDescendant(t))
                return !1; var n = e.lowLevel(); if (n.valueKind() !== g.Kind.SEQ)
                return !1; var r = n.children(); if (null == r)
                return !1; for (var i = 0, a = r; i < a.length; i++) {
                var o = a[i];
                if (o.kind() !== g.Kind.SCALAR)
                    return !1;
            } return !0; }
            function a(e, t) { if (!t)
                return [e.definition().universe().type(_.Universe10.StringTypeDeclaration.name)]; var n = e.parsedType(), r = []; return n.isString() ? r.push(e.definition().universe().type(_.Universe10.StringTypeDeclaration.name)) : n.isNumber() ? (n.isInteger() && r.push(e.definition().universe().type(_.Universe10.IntegerTypeDeclaration.name)), r.push(e.definition().universe().type(_.Universe10.NumberTypeDeclaration.name))) : n.isBoolean() ? r.push(e.definition().universe().type(_.Universe10.BooleanTypeDeclaration.name)) : n.isObject() ? r.push(e.definition().universe().type(_.Universe10.ObjectTypeDeclaration.name)) : n.isArray() ? r.push(e.definition().universe().type(_.Universe10.ArrayTypeDeclaration.name)) : n.isFile() ? r.push(e.definition().universe().type(_.Universe10.FileTypeDeclaration.name)) : n.isDateTime() ? r.push(e.definition().universe().type(_.Universe10.DateTimeTypeDeclaration.name)) : n.isDateTimeOnly() ? r.push(e.definition().universe().type(_.Universe10.DateTimeOnlyTypeDeclaration.name)) : n.isDateOnly() ? r.push(e.definition().universe().type(_.Universe10.DateOnlyTypeDeclaration.name)) : n.isTimeOnly() && r.push(e.definition().universe().type(_.Universe10.TimeOnlyTypeDeclaration.name)), n.isUnion() && r.push(e.definition().universe().type(_.Universe10.UnionTypeDeclaration.name)), 0 == r.length && r.push(e.definition().universe().type(_.Universe10.TypeDeclaration.name)), r; }
            function o(e) { return function (t) { var n = e.type(t); if (!n) {
                new y.UserDefinedClass("", e, null, "", "");
            } return n; }; }
            function s(e, t) { var n = e.asElement(); if (null == n)
                return null; var r = n.elementsOfKind(_.Universe10.TypeDeclaration.properties.facets.name); return null == r || 0 == r.length ? null : A.find(r, function (e) { return t == e.attrValue(_.Universe10.TypeDeclaration.properties.name.name); }); }
            function u(e) { var t = e.owner(); if (null == t)
                return null; var n = e.facetName(); if (!n)
                return null; var r = t.getExtra(R.SOURCE_EXTRA); return null == r ? null : T.isSourceProvider(r) || v.isParseResult(r) ? { getSource: function () { if (T.isSourceProvider(r)) {
                    var e = r.getSource();
                    if (e && v.isParseResult(e))
                        return s(e, n);
                }
                else if (v.isParseResult(r))
                    return s(r, n); return null; }, getClassIdentifier: function () { return [y.SourceProvider.CLASS_IDENTIFIER]; } } : null; }
            function l(e, t, n) { for (var r, i = 0, a = e; i < a.length; i++) {
                var o = a[i];
                if (null != o) {
                    var s = t.parsedType();
                    r || (r = new y.NodeClass(t.name(), t.definition().universe(), "", ""), r.addAdapter(s)), r._superTypes.push(o), p(r, t, n);
                }
            } return r; }
            function p(e, t, n) { var r = t.parsedType(); r.allFacets().forEach(function (r) { if (r.kind() == y.tsInterfaces.MetaInformationKind.FacetDeclaration) {
                var i = u(r), a = null;
                null != i ? (a = new y.UserDefinedProp(r.facetName(), null), a.setSourceProvider(i)) : a = new y.Property(r.facetName(), "");
                var s = null;
                s = n ? n.definition().universe() : t.definition().universe(), a.withRange(s.type("StringType")), a.withDomain(e), a.withGroupName(r.facetName()), a.withRequired(!1), r.value(), R.setPropertyConstructor(function (e) { var t = new y.Property(e, ""); return t.unmerge(), t; }), a.withRange(R.toNominal(r.value(), o(t.definition().universe())));
            } }); }
            function c(e, t, n) { var r = n.attr("type"); if (r) {
                var i = a(n, r.value()), o = l(i, n, t);
                return o && 0 == o.superTypes().length && o._superTypes.push(n.definition().universe().type(_.Universe10.TypeDeclaration.name)), o;
            } var s = _.Universe10.ObjectTypeDeclaration.properties.properties.name; if (e) {
                if ("body" == e.nameId() || A.find(n.lowLevel().children(), function (e) { return e.key() === s; }))
                    return n.definition().universe().type(_.Universe10.ObjectTypeDeclaration.name);
            }
            else if (!t && n.lowLevel() && A.find(n.lowLevel().children(), function (e) { return e.key() === s; }))
                return n.definition().universe().type(_.Universe10.ObjectTypeDeclaration.name); return n.definition().universe().type(_.Universe10.StringTypeDeclaration.name); }
            function f(e) { try {
                var t = e.definition().nameId(), n = t === _.Universe10.Api.name || t === _.Universe08.Api.name;
                if (!n && !e.property() && !e.parent() && e.definition().nameId() === E.getFragmentDefenitionName(e)) {
                    if (e.property() && e.property().nameId() === _.Universe10.LibraryBase.properties.annotationTypes.name)
                        return m(null, null, e);
                    var r = null, i = e.definition().allSubTypes();
                    return i.forEach(function (t) { !r && d(t, e, null) && (r = t); }), r;
                }
            }
            catch (a) { } return m(e.property(), e.parent(), e); }
            function m(e, t, n) { var r = n.lowLevel(); e && e.nameId() == _.Universe10.FragmentDeclaration.properties.uses.name && e.range().nameId() == _.Universe10.Library.name; var i = e ? e.range().nameId() : n.definition().nameId(); if (r._node && r._node.descriminate)
                return null; r._node && (r._node.descriminate = 1); try {
                if (i == _.Universe10.TypeDeclaration.name) {
                    var a = c(e, t, n);
                    if (e || !e && !t && n.lowLevel()) {
                        if (e && null != a && (e.nameId() == _.Universe10.MethodBase.properties.body.name || e.nameId() == _.Universe10.ArrayTypeDeclaration.properties.items.name || e.nameId() == _.Universe10.Response.properties.headers.name || e.nameId() == _.Universe10.MethodBase.properties.queryParameters.name)) {
                            var o = new y.UserDefinedClass(n.lowLevel().key(), a.universe(), n, n.lowLevel().unit() ? n.lowLevel().unit().path() : "", "");
                            return o._superTypes.push(a), o;
                        }
                        if (null != a && b.isAnnotationTypeType(n.definition())) {
                            var s = h(a), o = new y.UserDefinedClass(n.lowLevel().key(), a.universe(), n, n.lowLevel().unit() ? n.lowLevel().unit().path() : "", "");
                            return o._superTypes.push(s), o._superTypes.push(a), o;
                        }
                    }
                    if (a)
                        return a;
                }
                var u = null;
                if (e && t) {
                    var l = N.findAllSubTypes(e, t);
                    return l.length > 0 && l.forEach(function (e) { u || d(e, n, u) && (u = e); }), u;
                }
            }
            finally {
                r._node && delete r._node.descriminate;
            } }
            function h(e) { for (var t, n = [e].concat(e.allSuperTypes()), r = 0; r < n.length; r++) {
                var i = n[r];
                if (!i.isUserDefined()) {
                    if (i.isUnion()) {
                        var a = i, o = a.leftType(), s = (a.leftType(), h(o)), u = h(o);
                        if (s.isAssignableFrom(u.nameId()) && (null == t || s.isAssignableFrom(t.nameId()))) {
                            t = s;
                            continue;
                        }
                        if (u.isAssignableFrom(s.nameId()) && (null == t || u.isAssignableFrom(t.nameId()))) {
                            t = u;
                            continue;
                        }
                        t = e.universe().type(_.Universe10.UnionTypeDeclaration.name);
                        break;
                    }
                    if (i.isArray()) {
                        t = e.universe().type(_.Universe10.ArrayTypeDeclaration.name);
                        break;
                    }
                    for (var l = i.subTypes(), p = 0; p < l.length; p++) {
                        var c = l[p];
                        c.isAssignableFrom(_.Universe10.TypeDeclaration.name) && (null == t ? t = c : c.isAssignableFrom(t.nameId()) && (t = c));
                    }
                }
            } return null != t ? t : e.universe().type(_.Universe10.TypeDeclaration.name); }
            function d(e, t, n) { if (t.isAttr() || t.isUnknown())
                return !1; var r = t, i = A.find(e.superTypes(), function (t) { var n = A.find(t.allProperties(), function (e) { return e.isDescriminator(); }); if (n) {
                var i = r.attr(n.nameId());
                if (i && i.value() == e.nameId())
                    return !0;
            } return !1; }); if (i)
                return !0; if (0 == e.valueRequirements().length)
                return !1; var a = !0; return e.valueRequirements().forEach(function (t) { var i = r.attr(t.name); if (i)
                if (i.value() == t.value)
                    ;
                else if (e.getAdapter(I.RAMLService).getConsumesRefs()) {
                    var o = i.value(), s = [];
                    e.superTypes().forEach(function (e) { return e.allSubTypes().forEach(function (e) { s.push(e); }); });
                    var u = [];
                    A.unique(s).forEach(function (e) { u.push(e.nameId()), e.valueRequirements().forEach(function (e) { u.push(e.value); }), e.getAdapter(I.RAMLService).getAliases().forEach(function (e) { return u.push(e); }); }), A.find(u, function (e) { return e == o; }) && (a = !1);
                }
                else
                    a = !1;
            else {
                var l = e.getAdapter(I.RAMLService).getDefining(), p = !1;
                if (l.forEach(function (e) { r.lowLevel().children().forEach(function (t) { t.key() == e && (p = !0); }); }), p)
                    return void (a = !0);
                if (n)
                    a = !1;
                else {
                    var c = e.property(t.name);
                    c && c.defaultValue() == t.value || (a = !1);
                }
            } }), a; }
            var y = n(39), v = n(9), g = n(83), A = n(70), T = y, E = n(16), S = n(41), N = n(13), _ = n(17), b = n(14), I = y, R = y.rt, M = n(60), w = n(69), C = function () { function e(e) { this._props = e; for (var t = 0, n = e.filter(function (e) { return y.Property.isInstance(e); }); t < n.length; t++) {
                var r = n[t];
                r.isFromParentValue() && (this.parentValue = this.parentValue || r), r.isFromParentKey() && (this.parentKey = this.parentKey || r), r.canBeValue() && (this.canBeValue = this.canBeValue || r);
            } } return e.prototype.add = function (e) { this._props.push(e); }, e.prototype.match = function (e) { var t = this, n = null, r = ""; return this._props.forEach(function (i) { i.getAdapter(I.RAMLPropertyService).isSystem() || i != t.parentValue && i != t.parentKey && i.matchKey(e) && (null != i.keyPrefix() ? i.keyPrefix().length >= r.length && (r = i.keyPrefix(), n = i) : (n = i, r = i.nameId())); }), n; }, e; }(), L = 0, P = function () {
                function e() { this.shouldDescriminate = !1; }
                return e.prototype.process = function (e, t) {
                    var n = this, a = e.lowLevel(), o = e;
                    o._mergedChildren = null;
                    var s = a._node ? a._node : a;
                    try {
                        if (s.currentChildren)
                            return s.currentChildren;
                        if (!e.definition())
                            return;
                        if (null == e.parent() && !this.shouldDescriminate) {
                            this.shouldDescriminate = !0;
                            try {
                                var u = this.process(e, t), l = e;
                                l._children = u, l._mergedChildren = null;
                                var p = f(e);
                                p && l.patchType(p);
                                var u = this.process(e, t);
                                l._children = u, l._mergedChildren = null;
                            }
                            finally {
                                this.shouldDescriminate = !1;
                            }
                        }
                        if (e.definition().hasUnionInHierarchy() && e.parent() && e.property().nameId() == _.Universe10.LibraryBase.properties.annotations.name) {
                            var c = r(e.definition().unionInHierarchy()), m = null, h = null, d = null, y = 1e3, v = e;
                            if (c.forEach(function (r) { if (!m && !r.hasUnionInHierarchy()) {
                                v.patchType(r);
                                if (0 == L) {
                                    L++;
                                    try {
                                        for (var i = n.process(e, t), a = 0, o = 0; o < i.length; o++)
                                            i[o].isUnknown() && a++;
                                        0 == a && (m = i), y > a && (y = a, h = i, d = r);
                                    }
                                    finally {
                                        L--;
                                    }
                                }
                            } }), m)
                                return v.patchType(d), m;
                            h && v.patchType(d);
                        }
                        var A = new C(e.definition().allProperties());
                        if (null == e.parent() || e.lowLevel().includePath()) {
                            var T = e.definition().universe();
                            "RAML10" == T.version() && (e.definition().property("uses") || T.type("FragmentDeclaration").allProperties().forEach(function (e) { return A.add(e); }));
                        }
                        var S = e, N = S._allowQuestion || e.definition().getAdapter(I.RAMLService).getAllowQuestion(), R = [];
                        if (A.parentKey) {
                            if (e.lowLevel().key()) {
                                var w = new E.ASTPropImpl(e.lowLevel(), e, A.parentKey.range(), A.parentKey, !0);
                                R.push(w);
                                var P = e.property() && b.isBodyProperty(e.property()) && e.lowLevel().key() == e.property().nameId();
                                if (P) {
                                    O(S);
                                    w.overrideValue(S._computedKey);
                                }
                            }
                            if (e.lowLevel().valueKind() === g.Kind.SEQ && !i(e)) {
                                var D = new E.BasicASTNode(e.lowLevel(), S);
                                return D.errorMessage = { entry: M.DEFINITION_SHOULD_BE_A_MAP, parameters: { typeName: e.definition().nameId() } }, R.push(D), R;
                            }
                        }
                        if (null != e.lowLevel().value(!0))
                            if (A.parentValue)
                                R.push(new E.ASTPropImpl(e.lowLevel(), e, A.parentValue.range(), A.parentValue));
                            else if (A.canBeValue) {
                                var U = e.lowLevel().value();
                                null == U && (U = e.lowLevel().value(!0)), "string" == typeof U && U.trim().length > 0 && R.push(new E.ASTPropImpl(e.lowLevel(), e, A.canBeValue.range(), A.canBeValue));
                            }
                        if (S._children = R, S._mergedChildren = null, S.definition().getAdapter(I.RAMLService).isUserDefined())
                            R = this.processChildren(t, S, R, N, A);
                        else if (S.definition().key() == _.Universe08.Api || S.definition().key() == _.Universe10.Api) {
                            var x = t.filter(function (e) { return "uses" == e.key(); });
                            R = this.processChildren(x, S, R, N, A);
                            var k = t.filter(function (e) { return "types" == e.key(); });
                            R = this.processChildren(k, S, R, N, A);
                            var F = t.filter(function (e) { return "types" != e.key() && "uses" != e.key(); });
                            R = this.processChildren(F, S, R, N, A);
                        }
                        else
                            R = this.processChildren(t, S, R, N, A);
                        return S._children = R, S._mergedChildren = null, R;
                    }
                    finally { }
                }, e.prototype.isTypeDeclarationShortcut = function (e, t) { var n = b.isTypeOrSchemaProperty(t), r = e.definition() && b.isTypeDeclarationTypeOrDescendant(e.definition()); return r && n && e.lowLevel() && e.lowLevel().valueKind() === g.Kind.SEQ ? !0 : !1; }, e.prototype.processChildren = function (e, t, n, r, i) { var a = this, o = _.Universe10.TypeDeclaration.name, s = _.Universe10.TypeDeclaration.properties.type.name, u = _.Universe10.ArrayTypeDeclaration.properties.items.name; if (t.definition() && t.definition().isAssignableFrom(o) && t.lowLevel() && i.canBeValue && (i.canBeValue.nameId() === s || i.canBeValue.nameId() === u) && t.lowLevel()._node && t.lowLevel()._node.value && t.lowLevel()._node.value.kind === g.Kind.SEQ)
                    return e.forEach(function (e) { var r = new E.ASTPropImpl(e, t, i.canBeValue.range(), i.canBeValue); n.push(r); }), n; var l = t.root().lowLevel().unit(); e.forEach(function (e) { if (i.canBeValue && a.isTypeDeclarationShortcut(t, i.canBeValue))
                    return void n.push(new E.ASTPropImpl(e, t, i.canBeValue.range(), i.canBeValue)); var o = e.key(), s = null != o ? i.match(o) : null; if (null != s) {
                    var u = s.range();
                    if (s.isAnnotation() && "annotations" != o) {
                        var p = new E.ASTPropImpl(e, t, u, s);
                        return void n.push(p);
                    }
                    var c = !1, f = s.isMultiValue();
                    u.isArray() ? (f = !0, u = u.array().componentType(), c = !0) : u.hasArrayInHierarchy() && (f = !0, c = !0);
                    var h, d = !1;
                    if (t.reuseMode() && e.valueKind() != g.Kind.SEQ) {
                        var v = t.reusedNode();
                        if (v) {
                            var T = [e], N = t.lowLevel();
                            !s.isMerged() && f && (h = [], T = e.children(), N = e);
                            for (var R = 0, C = T; R < C.length; R++) {
                                var L = C[R], P = L.containingUnit();
                                if (P && P.absolutePath() != l.absolutePath()) {
                                    var D = A.find(v.children(), function (e) { return e.lowLevel().key() == L.key(); });
                                    if (D && D.lowLevel().unit().absolutePath() == P.absolutePath()) {
                                        d = !0, n.push(D), D.setReused(!0), D.setParent(t), D.isElement() && D.resetRuntimeTypes(), t.isExpanded() && (N.replaceChild(L, D.lowLevel()), S.LowLevelCompositeNode.isInstance(D.lowLevel()) && D.lowLevel().setTransformer(N.transformer()));
                                        continue;
                                    }
                                }
                                h && h.push(L);
                            }
                        }
                    }
                    if (!h) {
                        if (d)
                            return;
                        h = e.children();
                    }
                    if (u.hasValueTypeInHierarchy()) {
                        var U = h, x = e.valueKind() == g.Kind.SEQ;
                        if ((x && U.length > 0 || U.length > 1) && f)
                            if (U.length > 1 && b.isTypeDeclarationDescendant(t.definition()) && (b.isTypeOrSchemaProperty(s) || b.isItemsProperty(s)) && e.valueKind() != g.Kind.SEQ) {
                                var p = new E.ASTPropImpl(e, t, u, s);
                                n.push(p), t.setComputed(s.nameId(), p);
                            }
                            else {
                                var k = [];
                                U.forEach(function (e) { var r = new E.ASTPropImpl(e, t, u, s); n.push(r), k.push(e.value()); }), s.isInherited() && t.setComputed(s.nameId(), k);
                            }
                        else {
                            s.isInherited() && t.setComputed(s.nameId(), e.value());
                            var F = new E.ASTPropImpl(e, t, u, s);
                            if (x || e.valueKind() == g.Kind.MAP) {
                                var B = s.range().nameId();
                                s.getAdapter(I.RAMLPropertyService).isExampleProperty() || ("StringType" == B && (B = "string"), "NumberType" == B && (B = "number"), "BooleanType" == B && (B = "boolean"), ("string" == B || "number" == B || "boolean" == B) && (e.isAnnotatedScalar() || (F.errorMessage = { entry: M.INVALID_PROPERTY_RANGE, parameters: { propName: s.groupName(), range: B } }, 0 == h.length && "enum" == s.groupName() && (F.errorMessage = { entry: M.ENUM_IS_EMPTY, parameters: {} }, e.valueKind() == g.Kind.MAP && (F.errorMessage = { entry: M.ENUM_MUST_BE_AN_ARRAY, parameters: {} })))));
                            }
                            n.push(F);
                        }
                        return;
                    }
                    var K = [];
                    if (t._children = n, t._mergedChildren = null, null != e.value() && ("string" == typeof e.value() || "boolean" == typeof e.value() || "number" == typeof e.value()) && ("" + e.value()).trim().length > 0) {
                        var V = s.range();
                        if (!V.allProperties().some(function (e) { var t = e; return t ? t.canBeValue() && t.isFromParentValue() : !1; })) {
                            var j = new E.BasicASTNode(e, t);
                            j.getLowLevelEnd = function () { return -1; }, j.getLowLevelStart = function () { return -1; }, j.knownProperty = s, n.push(j);
                        }
                    }
                    if (s.isMerged()) {
                        var W = new E.ASTNodeImpl(e, t, u, s);
                        W._allowQuestion = r, K.push(W);
                    }
                    else if (f)
                        if (s.getAdapter(I.RAMLPropertyService).isEmbedMap()) {
                            var q = h, H = [], Y = !1;
                            if (q.forEach(function (e) { e.kind() == g.Kind.INCLUDE_REF && "RAML08" == t.universe().version() ? e.children().forEach(function (e) { var n = new E.ASTNodeImpl(e, t, u, s); n._allowQuestion = r, K.push(n), Y = !0; }) : H.push(e); }), q = H, 0 == q.length) {
                                if (s.range().key() == _.Universe08.ResourceType && !Y) {
                                    var G = new E.BasicASTNode(e, t);
                                    G.errorMessage = { entry: M.PROPERTY_MUST_BE_A_MAP, parameters: { propName: s.nameId() } }, n.push(G);
                                }
                                if (e.valueKind() == g.Kind.SCALAR && s.range().key() == _.Universe08.AbstractSecurityScheme) {
                                    var G = new E.BasicASTNode(e.parent(), t);
                                    G.errorMessage = { entry: M.PROPERTY_MUST_BE_A_MAP, parameters: { propName: s.nameId() } }, n.push(G);
                                }
                            }
                            if (q.forEach(function (e) { var i = e.children(); if (e.key() || 1 != i.length)
                                if ("RAML10" == t.universe().version()) {
                                    var a = new E.ASTNodeImpl(e, t, u, s);
                                    a._allowQuestion = r, K.push(a);
                                }
                                else {
                                    var o = new E.BasicASTNode(e, t);
                                    n.push(o), e.key() && (o.needSequence = !0);
                                }
                            else if ("RAML10" != t.universe().version() || t.parent()) {
                                var a = new E.ASTNodeImpl(i[0], t, u, s);
                                a._allowQuestion = r, K.push(a);
                            } }), "RAML10" == t.universe().version() && e.valueKind() == g.Kind.SEQ) {
                                var j = new E.BasicASTNode(e, t);
                                n.push(j), j.needMap = !0, j.knownProperty = s;
                            }
                        }
                        else {
                            var X = {}, z = [];
                            if (y.NodeClass.isInstance(u)) {
                                var $ = u;
                                $.getAdapter(I.RAMLService).getCanInherit().length > 0 && $.getAdapter(I.RAMLService).getCanInherit().forEach(function (n) { for (var i = t.computedValue(n), a = Array.isArray(i) ? i : [i], o = 0; o < a.length; o++) {
                                    var l = a[o];
                                    if (l && s.nameId() == _.Universe10.Response.properties.body.name) {
                                        for (var p = A.find(h, function (e) { return e.key() == l; }), c = e; c.originalNode;)
                                            c = c.originalNode();
                                        var f = A.find(c.children(), function (e) { try {
                                            return w.parse(e.key()), !0;
                                        }
                                        catch (t) {
                                            return !1;
                                        } });
                                        if (!f) {
                                            var d = t.parent().definition().key(), y = new E.ASTNodeImpl(e, t, u, s);
                                            y._computedKey = l, (d == _.Universe10.MethodBase || d == _.Universe08.MethodBase) && y.setComputed("form", "true");
                                            var v = O(t), g = m(s, t, y);
                                            g && (v || g.setName(l), y.patchType(g));
                                            var T = y.children();
                                            y._children = T.filter(function (e) { return !e.isUnknown(); }), y._mergedChildren = null, y._allowQuestion = r, p || z.push(y), y.children().forEach(function (e) { var t = e.property(); if (t && t.getAdapter(I.RAMLPropertyService).isKey()) {
                                                var n = e;
                                                return void (n._computed = !0);
                                            } if (e.isElement() && (e.property().getAdapter(I.RAMLPropertyService).isMerged() || (X[e.property().nameId()] = !0)), e.property().isAnnotation()) {
                                                var n = e, r = n.value(), i = "";
                                                i = E.StructuredValue.isInstance(r) ? r.valueName() : "" + r, X["(" + i + ")"] = !0;
                                            }
                                            else
                                                X[e.name()] = !0; });
                                            var S = y.definition().allProperties();
                                            S.forEach(function (e) { e.getAdapter(I.RAMLPropertyService).isKey() || e.getAdapter(I.RAMLPropertyService).isSystem() || y.lowLevel().children().some(function (t) { return t.key() == e.nameId(); }) && (X[e.nameId()] = !0); }), y._computed = !0;
                                        }
                                    }
                                } });
                            }
                            var J = [];
                            if (0 == h.length && e.valueKind() == g.Kind.SEQ && s.range().key() == _.Universe08.Parameter) {
                                var G = new E.BasicASTNode(e, t);
                                G.errorMessage = { entry: M.PROPERTY_MUST_BE_A_MAP, parameters: { propName: s.nameId() } }, n.push(G);
                            }
                            if ("documentation" === s.nameId() && e.resolvedValueKind() !== g.Kind.SEQ) {
                                if (!t.definition().getAdapter(I.RAMLService).isUserDefined()) {
                                    var G = new E.BasicASTNode(e, t);
                                    G.errorMessage = { entry: M.PROPERTY_MUST_BE_A_SEQUENCE, parameters: { propName: s.nameId() } }, n.push(G);
                                }
                            }
                            else
                                h.forEach(function (e) { if (!X[e.key()])
                                    if (e.valueKind() == g.Kind.SEQ) {
                                        var i = "RAML10" == t.definition().universe().version();
                                        if (e.children().forEach(function (n) { var a = new E.ASTNodeImpl(n, t, u, s); a._allowQuestion = r, a.setNamePatch(e.key()), i && (a.invalidSequence = !0), J.push(a); }), 0 == e.children().length) {
                                            var a = new E.BasicASTNode(e, t);
                                            s.range().key() == _.Universe08.Parameter ? a.errorMessage = { entry: M.NAMED_PARAMETER_NEEDS_TYPE, parameters: {} } : a.errorMessage = { entry: M.NODE_SHOULD_HAVE_VALUE, parameters: {} }, n.push(a);
                                        }
                                    }
                                    else {
                                        var o = new E.ASTNodeImpl(e, t, u, s), l = s.domain().key();
                                        "body" != s.nameId() || l != _.Universe08.MethodBase && l != _.Universe10.MethodBase || o.setComputed("form", "true"), o._allowQuestion = r, J.push(o);
                                    } });
                            J.length > 0 ? J.forEach(function (e) { return K.push(e); }) : z.forEach(function (e) { return K.push(e); });
                        }
                    else
                        K.push(new E.ASTNodeImpl(e, t, u, s));
                    t._children = t._children.concat(K), t._mergedChildren = null, n = n.concat(K), K.forEach(function (e) { var n = m(s, t, e); n && n != e.definition() && e.patchType(n), e._associatedDef = null, s.childRestrictions().forEach(function (t) { e.setComputed(t.name, t.value); }); e.definition(); });
                }
                else
                    S.LowLevelCompositeNode.isInstance(e) && null == e.primaryNode() || n.push(new E.BasicASTNode(e, t)); }); var p = t.reusedNode(); if (p && t.lowLevel().valueKind() != g.Kind.SEQ) {
                    var c = {};
                    p.elements().forEach(function (e) { return c[e.property().nameId() + "_" + e.lowLevel().key()] = e; }), p.attrs().forEach(function (e) { return c[e.property().nameId() + "_" + e.lowLevel().key()] = e; }), n.filter(function (e) { return e.isElement() || e.isAttr(); }).forEach(function (e) { var n = c[e.property().nameId() + "_" + e.lowLevel().key()]; n && n != e && e.isElement() && e.lowLevel().parent().valueKind() != g.Kind.SEQ && (e.setReusedNode(n), e.setReuseMode(t.reuseMode())); });
                } return n; }, e;
            }();
            t.BasicNodeBuilder = P, t.doDescrimination = f;
            var O = function (e) { for (var t = !1, n = e; n;) {
                var r = n.definition();
                if (b.isTraitType(r) || b.isResourceTypeType(r)) {
                    t = !0;
                    break;
                }
                n = n.parent();
            } return t; };
        }, function (e, t, n) {
            "use strict";
            function r(e) { if (!I.BasicNodeImpl.isInstance(e))
                return null; var t = e, n = i(t.highLevel()); if (!n)
                return null; var r = n.wrapperNode(); return r.setAttributeDefaults(t.getDefaultsCalculator().isEnabled()), r; }
            function i(e) { if (null == e)
                return null; var t = e.definition(); if (!t || !w.isApiSibling(t))
                return null; var n = (new D).expandTraitsAndResourceTypes(e); return n; }
            function a(e) { if (!e)
                return null; var t = s(e.highLevel()); if (!t)
                return null; var n = t.wrapperNode(); return n.setAttributeDefaults(e.getDefaultsCalculator().isEnabled()), n; }
            function o(e) { if (!e)
                return null; var t = u(e.highLevel()); if (!t)
                return null; var n = t.wrapperNode(); return n.setAttributeDefaults(e.getDefaultsCalculator().isEnabled()), n; }
            function s(e) { return (new U).expandLibraries(e); }
            function u(e) { return (new U).expandLibrary(e); }
            function l(e, t, n) { var r = A.fromUnit(e); if (!r)
                throw new Error(C.applyTemplate(L.COULD_NOT_LOAD_API_FROM, { path: e.absolutePath() })); if (!t || 0 == t.length)
                return r.asElement(); for (var i = [], a = 0; a < t.length; a++) {
                var o = t[a], s = A.fromUnit(o);
                if (!s)
                    throw new Error(C.applyTemplate(L.COULD_NOT_LOAD_API_FROM, { path: o.absolutePath() }));
                i.push(s);
            } var u = p(r.asElement(), i, n); return u; }
            function p(e, t, n, r, i) { void 0 === r && (r = null), void 0 === i && (i = !1); for (var a, o = e, s = 0, u = t; s < u.length; s++) {
                var l = u[s];
                i && S.LowLevelProxyNode.isInstance(o.lowLevel()) && (a || (a = new D), a.expandHighLevelNode(o, r, e, i)), l.overrideMaster(o), l.setMergeMode(n), o = l;
            } return o; }
            function c(e) { for (var t = [], n = 0, r = e; n < r.length; n++) {
                var i = r[n];
                f(t, i, !0);
            } return t; }
            function f(e, t, n) { void 0 === n && (n = !1); var r = n ? e : e.concat([]), i = t.lowLevel().unit(); if (null == i)
                return r; if (0 == r.length)
                r.push(i);
            else {
                var a = r[r.length - 1].absolutePath();
                i.absolutePath() != a && r.push(i);
            } return r; }
            function m(e) { for (var t = []; e;)
                t.push(e), e = e.parent(); return c(t); }
            function h() { return k.map(function (e) { return e.name; }); }
            function d(e) { for (var t = [], n = e.split("|").slice(1), r = 0, i = n; r < i.length; r++)
                for (var a = i[r], o = 0; o < k.length; o++)
                    if (a.match(k[o].regexp)) {
                        t.push(k[o].transformer);
                        break;
                    } return t; }
            function y(e) { return e ? "*/*" == e ? null : (e.indexOf("/*") == e.length - 2 && (e = e.substring(0, e.length - 2) + "/xxx"), P.parse(e)) : null; }
            var v = this && this.__extends || function (e, t) { function n() { this.constructor = e; } for (var r in t)
                t.hasOwnProperty(r) && (e[r] = t[r]); e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype, new n); }, g = n(25), A = n(16), T = n(83), E = n(35), S = n(41), N = n(77), _ = n(17), b = n(70), I = n(48), R = n(51), M = n(39), w = n(14), C = n(28), L = n(60), P = n(69), O = n(78);
            t.expandTraitsAndResourceTypes = r, t.expandTraitsAndResourceTypesHL = i, t.expandLibraries = a, t.expandLibrary = o, t.expandLibrariesHL = s, t.expandLibraryHL = u, t.mergeAPIs = l;
            var D = function () { function e() { } return e.prototype.expandTraitsAndResourceTypes = function (e, t, n) { void 0 === t && (t = null), void 0 === n && (n = !1), this.init(e); var r = e.lowLevel(); if (!r)
                return e; if (r.actual().libExpanded)
                return e; var i = e.lowLevel().unit(), a = i.project(); a.setMainUnitPath(i.absolutePath()); var o = this.createHighLevelNode(e, !1, t); if (e.definition().key() == _.Universe10.Overlay)
                return o; var s = a.namespaceResolver().hasFragments(i), u = this.expandHighLevelNode(o, t, e, s, !0); return u ? u : e; }, e.prototype.init = function (e) { this.ramlVersion = e.definition().universe().version(); }, e.prototype.expandHighLevelNode = function (e, t, n, r, i) { var a = this; void 0 === r && (r = !1), void 0 === i && (i = !1), this.init(e), e.setMergeMode(n.getMergeMode()); var o = e.elementsOfKind("resources"), s = !1; if (o.forEach(function (e) { return s = a.processResource(e) || s; }), !s && !r)
                return null; if (A.ASTNodeImpl.isInstance(e)) {
                var u = e;
                null != u.reusedNode() && u.setReuseMode(!0);
            } return "RAML10" == this.ramlVersion && (t = t || new R.ReferencePatcher, t.process(e), e.lowLevel().actual().referencePatcher = t, i && e.types()), e; }, e.prototype.getTemplate = function (e, t, n, r) { var i = t.lowLevel().unit().path(), a = n[i]; a || (a = {}, n[i] = a); var o = a[e]; return void 0 !== o ? o : (o = null, o = b.find(r, function (n) { return A.qName(n.highLevel(), t) == e; }), o || (o = null), a[e] = o, o); }, e.prototype.createHighLevelNode = function (e, t, n, r) { void 0 === t && (t = !0), void 0 === n && (n = null), void 0 === r && (r = !1); for (var i = e, a = [], o = i; o;) {
                var s, u = o.lowLevel();
                i.definition().key() != _.Universe10.Overlay || r ? (S.LowLevelCompositeNode.isInstance(u) && (u = u.originalNode().originalNode()), s = new S.LowLevelCompositeNode(u, null, null, this.ramlVersion)) : s = u;
                var l = o.definition(), c = new A.ASTNodeImpl(s, null, l, null);
                if (c.setUniverse(o.universe()), a.push(c), !t)
                    break;
                o = o.getMaster();
            } var f = a.pop(); a = a.reverse(); var m = i.getMergeMode(), h = p(f, a, m, n, r); return h.setReusedNode(i.reusedNode()), h; }, e.prototype.processResource = function (e, t) { var n = this; void 0 === t && (t = []); var r = !1, i = t.concat(e), a = this.collectResourceData(e, e, void 0, void 0, i), o = e.lowLevel(); if (!S.LowLevelProxyNode.isInstance(o))
                return r; o.preserveAnnotations(), o.takeOnlyOriginalChildrenWithKey(M.universesInfo.Universe10.ResourceBase.properties.type.name), o.takeOnlyOriginalChildrenWithKey(M.universesInfo.Universe10.FragmentDeclaration.properties.uses.name), a.filter(function (e) { return null != e.resourceType; }).forEach(function (t) { var n = t.resourceType.node.lowLevel(), i = t.resourceType.transformer; i.owner = e, o.adopt(n, i), r = !0; }); var s = e.elementsOfKind("methods"); s.forEach(function (e) { var t = e.lowLevel(); S.LowLevelCompositeNode.isInstance(t) && t.takeOnlyOriginalChildrenWithKey(M.universesInfo.Universe10.FragmentDeclaration.properties.uses.name); var n = e.attr("method").value(), i = []; a.forEach(function (a) { var o = a.methodTraits[n]; o && (i = i.concat(o), o.forEach(function (n) { var i = n.node.lowLevel(), a = n.transformer; a.owner = e, t.adopt(i, a), r = !0; })); var s = a.traits; s && (i = i.concat(s), s.forEach(function (n) { var i = n.node.lowLevel(), a = n.transformer; a.owner = e, t.adopt(i, a), r = !0; })); }); }); var u = e.elementsOfKind("resources"); return u.forEach(function (e) { return r = n.processResource(e, i) || r; }), e.elementsOfKind("methods").forEach(function (e) { return n.mergeBodiesForMethod(e); }), r; }, e.prototype.mergeBodiesForMethod = function (e) { var t = e.lowLevel(); if (S.LowLevelCompositeNode.isInstance(t)) {
                var n = e.computedValue(_.Universe10.Api.properties.mediaType.name);
                if (null != n) {
                    for (var r, i = [], a = t.children(), o = 0, s = a; o < s.length; o++) {
                        var u = s[o];
                        if (u.key() == _.Universe10.Method.properties.body.name)
                            r = u;
                        else if (u.key() == _.Universe10.Method.properties.responses.name)
                            for (var l = u.children(), p = 0, c = l; p < c.length; p++)
                                for (var f = c[p], m = f.children(), h = 0, d = m; h < d.length; h++) {
                                    var y = d[h];
                                    y.key() == _.Universe10.Response.properties.body.name && i.push(y);
                                }
                    }
                    r && i.push(r);
                    for (var v = 0, g = i; v < g.length; v++) {
                        var A = g[v];
                        this.mergeBodies(A, n);
                    }
                }
            } }, e.prototype.mergeBodies = function (e, t) { for (var n, r = [], i = [], a = [], o = [], s = !1, u = 0, l = e.children(); u < l.length; u++) {
                var p = l[u], c = p.key();
                if (c == t)
                    n = p, a.push({ node: R.toOriginal(p), transformer: p.transformer() });
                else
                    try {
                        y(c), i.push(p);
                    }
                    catch (f) {
                        var m = R.toOriginal(p).parent();
                        o.indexOf(m) < 0 && (a.push({ node: m, transformer: p.transformer() }), o.push(m)), j[p.key()] && (s = !0), r.push(p);
                    }
            } if (0 == r.length || null == n && 0 == i.length)
                return !1; if (s) {
                for (var h = 0, d = r; h < d.length; h++) {
                    var p = d[h];
                    e.removeChild(p);
                }
                if (null == n) {
                    var v = R.toOriginal(e), A = T.newMapping(T.newScalar(t), T.newMap([])), E = new g.ASTNode(A, v.unit(), v, null, null);
                    n = e.replaceChild(null, E);
                }
                return n.patchAdoptedNodes(a), !0;
            } }, e.prototype.collectResourceData = function (e, t, n, r, i, a) { var o = this; void 0 === n && (n = []), void 0 === i && (i = []), void 0 === a && (a = {}), i = i.concat([t]); var s = this.extractTraits(t, r, i), u = {}, l = t.elementsOfKind("methods"); l.forEach(function (e) { var t = o.extractTraits(e, r, i); t && t.length > 0 && (u[e.attr("method").value()] = t); }); var p, f = t.attr("type"); if (null != f) {
                var m = c(i);
                p = this.readGenerictData(e, f, t, "resource type", r, m);
            } var h = { resourceType: p, traits: s, methodTraits: u }; if (n.push(h), p) {
                var d = p.node, y = A.qName(d, e);
                a[y] ? h.resourceType = null : (a[y] = !0, this.collectResourceData(e, d, n, p.transformer, i, a));
            } return n; }, e.prototype.extractTraits = function (e, t, n, r) { var i = this; void 0 === r && (r = {}), n = n.concat([e]); for (var a = [], o = -1; o < a.length; o++) {
                var s = 0 > o ? null : a[o], u = s ? s.node : e, l = s ? s.unitsChain : c(n), p = s ? s.transformer : t;
                u.attributes("is").forEach(function (t) { var n = f(l, t), o = i.readGenerictData(e, t, u, "trait", p, n); if (o) {
                    var s = o.name;
                    r[s] = !0, a.push(o);
                } });
            } return a; }, e.prototype.readGenerictData = function (e, t, n, r, i, a) { void 0 === a && (a = []); var o, s, u = t.value(), l = N.plural(O.camelCase(r)); if ("string" == typeof u)
                s = u;
            else {
                if (!A.StructuredValue.isInstance(u))
                    return null;
                o = u, s = o.valueName();
            } i && (s = i.transform(s).value); var p = {}, c = {}, f = R.getDeclaration(s, l, a); if (f) {
                var m = new K(e, null, a);
                o && ("RAML08" == this.ramlVersion ? o.children().forEach(function (e) { return p[e.valueName()] = e.lowLevel().value(); }) : o.children().forEach(function (e) { var t = e.lowLevel(), t = e.lowLevel(); t.resolvedValueKind() == T.Kind.SCALAR ? p[e.valueName()] = t.value() : c[e.valueName()] = t; }), Object.keys(p).forEach(function (e) { var t = m.transform(p[e]); t && "object" != typeof t && (p[e] = t); }));
                var h = new B(r, s, a, p, c, i), d = new K(null, h, a);
                return { name: s, transformer: d, parentTransformer: i, node: f, ref: t, unitsChain: a };
            } return null; }, e; }();
            t.TraitsAndResourceTypesExpander = D;
            var U = function () { function e() { } return e.prototype.expandLibraries = function (e) { var t = e; if (null == t)
                return null; S.LowLevelCompositeNode.isInstance(t.lowLevel()) && (t = t.lowLevel().unit().highLevel().asElement()); var n = new D, r = new R.ReferencePatcher, i = n.createHighLevelNode(t, !0, r, !0), a = n.expandHighLevelNode(i, r, t, !0); return this.processNode(r, a), a; }, e.prototype.expandLibrary = function (e) { var t = e; if (null == t)
                return null; S.LowLevelCompositeNode.isInstance(t.lowLevel()) && (t = t.lowLevel().unit().highLevel().asElement()); var n = new D, r = new R.ReferencePatcher, i = n.createHighLevelNode(t, !0, r, !0); return r.process(i), r.expandLibraries(i, !0), i; }, e.prototype.processNode = function (e, t) { if (null != t) {
                var n = t.getMaster();
                this.processNode(e, n), w.isOverlayType(t.definition()) && e.process(t), e.expandLibraries(t);
            } }, e; }();
            t.LibraryExpander = U, t.toUnits = m;
            var x = function () { function e(t, n) { this.name = t, this.regexp = new RegExp(e.leftTransformRegexp.source + t + e.rightTransformRegexp.source), this.transformer = n; } return e.leftTransformRegexp = /\s*!\s*/, e.rightTransformRegexp = /\s*$/, e; }(), k = [new x("singularize", function (e) { return N.singular(e); }), new x("pluralize", function (e) { return N.plural(e); }), new x("uppercase", function (e) { return e ? e.toUpperCase() : e; }), new x("lowercase", function (e) { return e ? e.toLowerCase() : e; }), new x("lowercamelcase", function (e) { return e ? O.camelCase(e) : e; }), new x("uppercamelcase", function (e) { if (!e)
                    return e; var t = O.camelCase(e); return t[0].toUpperCase() + t.substring(1, t.length); }), new x("lowerunderscorecase", function (e) { if (!e)
                    return e; var t = O.snake(e); return t.toLowerCase(); }), new x("upperunderscorecase", function (e) { if (!e)
                    return e; var t = O.snake(e); return t.toUpperCase(); }), new x("lowerhyphencase", function (e) { if (!e)
                    return e; var t = O.param(e); return t.toLowerCase(); }), new x("upperhyphencase", function (e) { if (!e)
                    return e; var t = O.param(e); return t.toUpperCase(); })];
            t.getTransformNames = h, t.getTransformersForOccurence = d;
            var F = function () { function e() { this.buf = null; } return e.prototype.append = function (e) { "" !== e && (null != this.buf ? null != e && ("string" != typeof this.buf && (this.buf = "" + this.buf), this.buf += e) : "" !== e && (this.buf = e)); }, e.prototype.value = function () { return null != this.buf ? this.buf : ""; }, e; }(), B = function () { function e(e, t, n, r, i, a) { this.templateKind = e, this.templateName = t, this.unitsChain = n, this.params = r, this.structuredParams = i, this.vDelegate = a; } return e.prototype.transform = function (e, t, n, r) { var i = {}, a = []; if ("string" == typeof e) {
                if (this.structuredParams && E.stringStartsWith(e, "<<") && E.stringEndsWith(e, ">>")) {
                    var o = e.substring(2, e.length - 2), s = this.structuredParams[o];
                    if (null != s)
                        return { value: s, errors: a };
                }
                for (var u = e, l = new F, p = 0, c = u.indexOf("<<"); c >= 0; c = u.indexOf("<<", p)) {
                    l.append(u.substring(p, c));
                    var f = c;
                    if (c += "<<".length, p = this.paramUpperBound(u, c), -1 == p)
                        break;
                    var m = u.substring(c, p);
                    p += ">>".length;
                    var h, o, y = u.substring(f, p), v = d(m);
                    if (v.length > 0) {
                        var g = m.indexOf("|");
                        if (o = m.substring(0, g).trim(), h = this.params[o], h && "string" == typeof h && h.indexOf("<<") >= 0 && this.vDelegate && (h = this.vDelegate.transform(h, t, n, r).value), h) {
                            R.PatchedReference.isInstance(h) && (h = h.value());
                            for (var A = 0, T = v; A < T.length; A++) {
                                var S = T[A];
                                h = S(h);
                            }
                        }
                    }
                    else
                        o = m.trim(), h = this.params[o], h && "string" == typeof h && h.indexOf("<<") >= 0 && this.vDelegate && (h = this.vDelegate.transform(h, t, n, r).value);
                    (null === h || void 0 === h) && (i[o] = !0, h = y), l.append(h);
                }
                return l.append(u.substring(p, u.length)), { value: l.value(), errors: a };
            } return { value: e, errors: a }; }, e.prototype.paramUpperBound = function (e, t) { for (var n = 0, r = t; r < e.length; r++)
                if (E.stringStartsWith(e, "<<", r))
                    n++, r++;
                else if (E.stringStartsWith(e, ">>", r)) {
                    if (0 == n)
                        return r;
                    n--, r++;
                } return e.length; }, e.prototype.children = function (e) { var t = this.substitutionNode(e); return t ? t.children() : null; }, e.prototype.valueKind = function (e) { var t = this.substitutionNode(e); return t ? t.valueKind() : null; }, e.prototype.anchorValueKind = function (e) { var t = this.substitutionNode(e); return t && t.valueKind() == T.Kind.ANCHOR_REF ? t.anchorValueKind() : null; }, e.prototype.resolvedValueKind = function (e) { var t = this.substitutionNode(e); return t && t.resolvedValueKind(); }, e.prototype.includePath = function (e) { var t = this.substitutionNode(e); return t ? t.includePath() : null; }, e.prototype.substitutionNode = function (e) { var t = this.paramName(e); return t && this.structuredParams[t]; }, e.prototype.paramName = function (e) { var t = null; if (e.valueKind() == T.Kind.SCALAR) {
                var n = ("" + e.value()).trim();
                E.stringStartsWith(n, "<<") && E.stringEndsWith(n, ">>") && (t = n.substring(2, n.length - 2));
            } return t; }, e.prototype.definingUnitSequence = function (e) { if (e.length < 2)
                return null; if ("(" == e.charAt(0) && ")" == e.charAt(e.length - 1) && (e = e.substring(1, e.length - 1)), e.length < 4)
                return null; if ("<<" != e.substring(0, 2))
                return null; if (">>" != e.substring(e.length - 2, e.length))
                return null; var t = e.substring(2, e.length - 2); return t.indexOf("<<") >= 0 || t.indexOf(">>") >= 0 ? null : this._definingUnitSequence(t); }, e.prototype._definingUnitSequence = function (e) { return this.params && this.params[e] ? this.unitsChain : this.vDelegate ? this.vDelegate._definingUnitSequence(e) : null; }, e; }();
            t.ValueTransformer = B;
            var K = function (e) { function t(t, n, r) { e.call(this, null != n ? n.templateKind : "", null != n ? n.templateName : "", r), this.owner = t, this.delegate = n; } return v(t, e), t.prototype.transform = function (t, n, r, i) { if (null == t || null != r && !r())
                return { value: t, errors: [] }; var a = { value: t, errors: [] }, o = !1; V.forEach(function (e) { return o = o || t.toString().indexOf("<<" + e) >= 0; }), o && (this.initParams(), a = e.prototype.transform.call(this, t, n, r, i)); var s = null != this.delegate ? this.delegate.transform(a.value, n, r, i) : a.value; return null != r && r() && null != i && (s.value = i(s.value, this)), s; }, t.prototype.initParams = function () { for (var e, t, n = "", r = this.owner.lowLevel(), i = r, a = null; i;) {
                var o = i.key();
                if (null != o)
                    if (E.stringStartsWith(o, "/")) {
                        if (!t)
                            for (var s = o.split("/"), u = s.length - 1; u >= 0; u--) {
                                var l = s[u];
                                if (-1 == l.indexOf("{")) {
                                    t = s[u];
                                    break;
                                }
                                l.length > 0 && (a = l);
                            }
                        n = o + n;
                    }
                    else
                        e = o;
                i = i.parent();
            } t || a && (t = ""), this.params = { resourcePath: n, resourcePathName: t }, e && (this.params.methodName = e); }, t.prototype.children = function (e) { return null != this.delegate ? this.delegate.children(e) : null; }, t.prototype.valueKind = function (e) { return null != this.delegate ? this.delegate.valueKind(e) : null; }, t.prototype.includePath = function (e) { return null != this.delegate ? this.delegate.includePath(e) : null; }, t.prototype.anchorValueKind = function (e) { return null != this.delegate ? this.delegate.anchorValueKind(e) : null; }, t.prototype.resolvedValueKind = function (e) { return null != this.delegate ? this.delegate.resolvedValueKind(e) : null; }, t.prototype._definingUnitSequence = function (e) { return this.params && this.params[e] ? this.unitsChain : this.delegate ? this.delegate._definingUnitSequence(e) : null; }, t; }(B);
            t.DefaultTransformer = K;
            var V = ["resourcePath", "resourcePathName", "methodName"], j = {};
            j[M.universesInfo.Universe10.TypeDeclaration.properties.type.name] = !0, j[M.universesInfo.Universe10.TypeDeclaration.properties.example.name] = !0, j[M.universesInfo.Universe08.BodyLike.properties.schema.name] = !0, j[M.universesInfo.Universe10.ObjectTypeDeclaration.properties.properties.name] = !0, t.parseMediaType = y;
        }, function (e, t, n) {
            "use strict";
            function r(e) { for (var t = [], n = {}; null != e.parent();)
                e.lowLevel().includePath() && (t = t.concat(a(e, n))), e = e.parent(); return t = t.concat(a(e, n)); }
            function i(e) { var t = e.node(); if (t && U.isParseResult(t))
                return t; var n = V.getNominalPropertySource2(e); return n ? n.getSource() : null; }
            function a(e, t, n) { if (void 0 === t && (t = {}), void 0 === n && (n = []), !e.lowLevel())
                return []; var r = e.lowLevel().unit().absolutePath(); if (t[r] = !0, !F.ASTNodeImpl.isInstance(e))
                return n; var i = !1; return e.elements().forEach(function (e) { if (e.definition().key() == B.Universe10.UsesDeclaration) {
                if (i)
                    return;
                var r = e.attr("value");
                if (r) {
                    var o = e.root().lowLevel().unit().resolve(r.value());
                    if (o && j.isWaitingFor(o.absolutePath()))
                        return void (i = !0);
                    null != o && o.isRAMLUnit() && !t[o.absolutePath()] && o.highLevel().isElement() && a(o.highLevel().asElement(), t, n);
                }
            }
            else
                n.push(e); }), n; }
            function o(e, t) { for (var n = "", r = e - 1; r >= 0; r--) {
                var i = t.charAt(r);
                if (" " == i || "	" == i)
                    n ? n += i : n = i;
                else if ("\r" == i || "\n" == i)
                    return n;
            } }
            function s(e, t, n, r, i) { if (void 0 === r && (r = !0), void 0 === i && (i = !0), null == e)
                return null; if (e.lowLevel() && e.lowLevel().start() <= t && e.lowLevel().end() >= n) {
                if (F.ASTNodeImpl.isInstance(e)) {
                    for (var a = e, o = r ? a.children() : a.directChildren(), u = 0; u < o.length; u++)
                        if (r || o[u].lowLevel().unit() == e.lowLevel().unit()) {
                            var l = s(o[u], t, n, r);
                            if (l)
                                return !i && F.ASTPropImpl.isInstance(l) && (l = l.parent()), l;
                        }
                    return e;
                }
                if (F.ASTPropImpl.isInstance(e)) {
                    var p = e;
                    if (!p.property().isKey()) {
                        var c = p.value();
                        if (F.StructuredValue.isInstance(c)) {
                            var f = c, m = f.toHighLevel2();
                            if (m && !r && m.lowLevel().unit() != e.lowLevel().unit())
                                return null;
                            var l = s(m, t, n, r);
                            if (l)
                                return !i && F.ASTPropImpl.isInstance(l) && (l = l.parent()), l;
                        }
                        return i ? p : p.parent();
                    }
                    return null;
                }
                return null;
            } return null; }
            function u(e, t) { for (var n = -1, r = t - 1; r >= 0; r--) {
                var i = e.charAt(r);
                if ("\r" == i || "\n" == i || " " == i || "	" == i || '"' == i || "'" == i || ":" == i) {
                    n = r + 1;
                    break;
                }
            } for (var a = -1, r = t; r < e.length; r++) {
                var i = e.charAt(r);
                if ("\r" == i || "\n" == i || " " == i || "	" == i || '"' == i || "'" == i || ":" == i) {
                    a = r;
                    break;
                }
            } return -1 != n && -1 != a ? e.substring(n, a) : ""; }
            function l(e, t) { for (var n = "", r = t; r >= 0; r--) {
                var i = e[r];
                if (" " == i || "\r" == i || "\n" == i || "|" == i || "[" == i || "]" == i || ":" == i || "(" == i || ")" == i)
                    break;
                n = i + n;
            } for (var r = t + 1; r < e.length; r++) {
                var i = e[r];
                if (" " == i || "\r" == i || "\n" == i || "|" == i || "[" == i || "]" == i || ":" == i || "(" == i || ")" == i || "," == i)
                    break;
                n += i;
            } return n; }
            function p(e, t) { var n = d(e, t); if (n) {
                if (F.ASTNodeImpl.isInstance(n)) {
                    var r = n;
                    return { node: r, results: r.findReferences() };
                }
                F.ASTPropImpl.isInstance(n);
            } var i = s(F.fromUnit(e), t, t, !1); if (F.ASTNodeImpl.isInstance(i))
                return { node: i, results: i.findReferences() }; if (F.ASTPropImpl.isInstance(i)) {
                var a = i;
                if (a.property().canBeValue())
                    return { node: a.parent(), results: a.parent().findReferences() };
            } return { node: null, results: [] }; }
            function c(e, t) { var n = e; if (n.getAdapter(K.RAMLPropertyService).isTypeExpr()) {
                var i = r(t).filter(function (e) { var t = e.definition().key(); return t === B.Universe08.GlobalSchema ? !0 : e.definition().isAssignableFrom(B.Universe10.TypeDeclaration.name); });
                return i;
            } if (n.getAdapter(K.RAMLPropertyService).isDescriminating()) {
                var a = I(n.range(), t);
                return a;
            } if (n.isReference()) {
                var o = n.referencesTo(), a = I(o, t);
                return a;
            } if (n.range().hasValueTypeInHierarchy()) {
                var s = n.range().getAdapter(K.RAMLService);
                if (s.globallyDeclaredBy().length > 0) {
                    var i = r(t).filter(function (e) { return null != x.find(s.globallyDeclaredBy(), function (t) { return t == e.definition(); }); });
                    return i;
                }
            } return []; }
            function f(e, t) { if (t) {
                var n = [];
                if (e.getAdapter(K.RAMLPropertyService).isTypeExpr()) {
                    var i = r(t).filter(function (e) { var t = e.definition().key(); return t === B.Universe08.GlobalSchema ? !0 : e.definition().isAssignableFrom(B.Universe10.TypeDeclaration.name); });
                    n = i.map(function (e) { return F.qName(e, t); });
                    var a = t.definition().universe().type(B.Universe10.TypeDeclaration.name);
                    if (a) {
                        var o = a.allSubTypes();
                        n = n.concat(o.map(function (e) { return e.getAdapter(K.RAMLService).descriminatorValue(); }));
                    }
                    return n;
                }
                var s = e.range().key();
                if ((s == B.Universe08.SchemaString || s == B.Universe10.SchemaString) && "RAML10" == e.range().universe().version() && e.range().hasValueTypeInHierarchy()) {
                    var i = r(t).filter(function (e) { return e.definition().isAssignableFrom(B.Universe10.TypeDeclaration.name); });
                    n = i.map(function (e) { return F.qName(e, t); });
                }
                if (e.getAdapter(K.RAMLPropertyService).isDescriminating()) {
                    var o = N(e.domain(), t);
                    n = n.concat(o.map(function (e) { return e.getAdapter(K.RAMLService).descriminatorValue(); }));
                }
                else if (e.isReference()) {
                    var u = I(e.referencesTo(), t);
                    n = u.map(function (e) { return F.qName(e, t); });
                }
                else if (e.range().hasValueTypeInHierarchy()) {
                    var l = e.range().getAdapter(K.RAMLService);
                    if (l.globallyDeclaredBy().length > 0) {
                        var i = r(t).filter(function (e) { return null != x.find(l.globallyDeclaredBy(), function (t) { return t == e.definition(); }); });
                        n = n.concat(i.map(function (e) { return F.qName(e, t); }));
                    }
                }
                return e.isAllowNull() && n.push("null"), e.enumOptions() && (n = n.concat(e.enumOptions())), n;
            } return e.enumOptions() && "string" == typeof e.enumOptions() ? [e.enumOptions() + ""] : e.enumOptions(); }
            function m(e) { return e.isElement() && e.asElement().definition().key() != B.Universe10.Library ? null : e.asElement().attrValue("name"); }
            function h(e, t) { var n = e.lowLevel().unit(); if (!n)
                return null; var r = e.lowLevel().start(), i = e.lowLevel().end(); if (null != t && t == q.KEY_COMPLETION ? (r = e.lowLevel().keyStart(), i = e.lowLevel().keyEnd()) : null != t && t == q.VALUE_COMPLETION && (r = e.lowLevel().valueStart(), i = e.lowLevel().valueEnd()), -1 == r || -1 == i)
                return null; var a = Math.floor((r + i) / 2); return d(n, a, t); }
            function d(e, t, n) {
                var r = s(F.fromUnit(e), t, t, !1), a = null;
                if (r.isElement() && r.asElement().definition().isAssignableFrom(B.Universe10.TypeDeclaration.name) && r.asElement().directChildren().forEach(function (e) { if (e.isUnknown() && e.getLowLevelStart() < t && e.getLowLevelEnd() > t) {
                    var n = r.asElement().localType();
                    n.allFacets().forEach(function (t) { if (t.nameId() == e.lowLevel().key() && k.UserDefinedProp.isInstance(t)) {
                        var n = i(t);
                        a = n;
                    } });
                } }), !r.property())
                    return r;
                if ("example" == r.property().nameId()) {
                    r.parent().localType();
                    r.lowLevel().children().forEach(function (e) { "example" == e.key() && e.children().forEach(function (e) { if (e.start() < t && e.end() > t) {
                        var n = r.parent().asElement().localType();
                        n.allProperties().forEach(function (t) { if (t.nameId() == e.key() && k.UserDefinedProp.isInstance(t)) {
                            var n = i(t);
                            a = n;
                        } });
                    } }); });
                }
                if (a)
                    return a;
                var o = null != n ? n : E(e.contents(), t);
                if (o == q.VALUE_COMPLETION) {
                    var l = r;
                    if (F.ASTPropImpl.isInstance(r)) {
                        var p = r;
                        if (p && p.value()) {
                            if (!F.StructuredValue.isInstance(p.value()))
                                return W(t, e.contents(), p, l);
                            var c = p.value(), f = c.toHighLevel();
                            if (f) {
                                var m = x.find(f.attrs(), function (e) {
                                    return e.lowLevel().start() < t && e.lowLevel().end() >= t;
                                });
                                if (m)
                                    return W(t, e.contents(), m, f, p.property());
                            }
                        }
                    }
                    else {
                        var h = l.property();
                        if (h)
                            return W(t, e.contents(), null, l, h);
                    }
                }
                if (o == q.KEY_COMPLETION || o == q.SEQUENCE_KEY_COPLETION) {
                    var l = r, d = r.property();
                    if (D.UserDefinedProp.isInstance(d)) {
                        var g = d;
                        return i(g);
                    }
                    if (F.ASTNodeImpl.isInstance(r) && D.isUserDefinedClass(l.definition())) {
                        var A = l.definition();
                        return A.isAssignableFrom("TypeDeclaration") ? r : A.getAdapter(K.RAMLService).getDeclaringNode();
                    }
                    if (F.ASTPropImpl.isInstance(r)) {
                        var S = r;
                        if (T(S)) {
                            var N = y(S);
                            if (N) {
                                var _ = v(S, N);
                                if (_) {
                                    var r = s(_, t, t);
                                    if (d = r.property(), D.UserDefinedProp.isInstance(d)) {
                                        var g = d;
                                        return i(g);
                                    }
                                    if (F.ASTNodeImpl.isInstance(r) && D.isUserDefinedClass(l.definition())) {
                                        var A = l.definition();
                                        return A.getAdapter(K.RAMLService).getDeclaringNode();
                                    }
                                }
                            }
                        }
                    }
                }
                if (o == q.PATH_COMPLETION) {
                    var b = u(e.contents(), t);
                    if (b) {
                        var I = e.resolve(b);
                        return I;
                    }
                }
            }
            function y(e) { var t = null; if (e.isElement() ? t = e : e.isAttr() && (t = e.parent()), !t.definition().isAssignableFrom(B.Universe10.TypeDeclaration.name)) {
                var n = t.parent();
                if (!n)
                    return null;
                if (n.definition().isAssignableFrom(B.Universe10.TypeDeclaration.name))
                    t = n;
                else {
                    if (n = n.parent(), null == n)
                        return null;
                    if (!n.definition().isAssignableFrom(B.Universe10.TypeDeclaration.name))
                        return null;
                    t = n;
                }
            } return t.localType(); }
            function v(e, t) { return F.StructuredValue.isInstance(e.value()) ? new F.ASTNodeImpl(e.value().lowLevel(), e.parent(), t, e.property()) : null; }
            function g(e, t) { return new F.ASTNodeImpl(e.lowLevel(), e, t, e.property()); }
            function A(e) { return e.definition().key() == B.Universe10.ExampleSpec; }
            function T(e) { var t = B.Universe10.TypeDeclaration.properties.example.name, n = B.Universe10.ObjectTypeDeclaration.name; if (!F.ASTPropImpl.isInstance(e))
                return !1; var r = e, i = r.parent(), a = i && i.property(); a && a.nameId(); return t === r.name() && r.isString() && F.ASTNodeImpl.isInstance(i) && i.definition().isAssignableFrom(n) ? !0 : !1; }
            function E(e, t) { for (var n = !1, r = !1, i = !1, a = t - 1; a >= 0; a--) {
                var s = e.charAt(a);
                if ("(" == s)
                    i = !0;
                else {
                    if (i) {
                        if ("\r" == s || "\n" == s) {
                            for (var u = !1, l = t - 1; l < e.length; l++) {
                                var p = e[l];
                                if (")" == p && (u = !0), "\r" == p || "\n" == p)
                                    break;
                                if (":" == p) {
                                    i = !1;
                                    break;
                                }
                            }
                            if (i && u)
                                return q.ANNOTATION_COMPLETION;
                            break;
                        }
                        if (" " == s || "	" == s)
                            continue;
                        break;
                    }
                    if ("\r" == s || "\n" == s)
                        break;
                    if (":" == s)
                        break;
                }
            } for (var a = t - 1; a >= 0; a--) {
                var s = e.charAt(a);
                if ("#" == s) {
                    if (0 == a)
                        return q.VERSION_COMPLETION;
                    for (var l = a - 1; l >= 0; l--) {
                        var c = e.charAt(l);
                        if ("\r" == c || "\n" == c)
                            break;
                        if ("!" == c && e.indexOf("!include", l) == l)
                            return q.PATH_COMPLETION;
                    }
                    return q.INCOMMENT;
                }
                if (":" == s)
                    return n ? q.DIRECTIVE_COMPLETION : q.VALUE_COMPLETION;
                if ("\r" == s || "\n" == s) {
                    for (var f = !1, m = o(t, e), h = a; h > 0; h--) {
                        if (s = e.charAt(h), ":" == s) {
                            if (f) {
                                var d = o(h, e);
                                if (d.length < m.length)
                                    return q.VALUE_COMPLETION;
                            }
                            break;
                        }
                        "|" != s ? (("\r" == s || "\n" == s) && (f = !1), " " != s && "	" != s && (f = !1)) : f = !0;
                    }
                    return r ? q.SEQUENCE_KEY_COPLETION : q.KEY_COMPLETION;
                }
                if ("-" == s && (r = !0), "!" == s) {
                    if (e.indexOf("!include", a) == a)
                        return q.PATH_COMPLETION;
                    e.indexOf("!i", a) == a && (n = !0);
                }
            } }
            function S(e, t) { if (!t)
                return null; for (var n = t.split("/"), r = e, i = 0; i < n.length; i++)
                if ("#" != n[i]) {
                    if (r = x.find(r.children(), function (e) { return e.key() == n[i]; }), !r)
                        return null;
                }
                else
                    r = e.unit().ast(); return r; }
            function N(e, n) { if (null == e)
                return []; var i = e.nameId(); n = t.declRoot(n); var a = n; if (a._subTypesCache) {
                var o = a._subTypesCache[i];
                if (o)
                    return o;
            }
            else
                a._subTypesCache = {}; var s = e.allSubTypes(); if (e.getAdapter(K.RAMLService).getRuntimeExtenders().length > 0 && n) {
                var u = r(n), l = e.getAdapter(K.RAMLService).getRuntimeExtenders();
                n.root();
                l.forEach(function (t) { var n = u.filter(function (n) { var r = n.definition().allSuperTypes(); r.push(n.definition()); var i = n.definition() == t || null != x.find(r, function (e) { return e == t; }) || null != x.find(r, function (t) { return t == e; }); return i; }); s = s.concat(n.map(function (e) { return e.localType(); })); });
            } return s = x.unique(s), a._subTypesCache[i] = s, s; }
            function _(e, n, i) { n = t.declRoot(n); var a = r(n), o = x.find(a, function (t) { return F.qName(t, n) == e && t.property() && t.property().nameId() == B.Universe10.LibraryBase.properties.types.name; }); return o.localType(); }
            function b(e, n, i) { n = t.declRoot(n); var a = r(n), o = x.find(a, function (t) { return F.qName(t, n) == e && t.property() && t.property().nameId() == B.Universe10.LibraryBase.properties.schemas.name; }); return o.localType(); }
            function I(e, t) { var n = [], i = [e].concat(e.getAdapter(K.RAMLService).getRuntimeExtenders()); if (t) {
                var a = t;
                i.forEach(function (e) { var t = r(a), i = t.filter(function (t) { return t.definition().isAssignableFrom(e.nameId()); }); n = n.concat(i); });
            } var o = !e.hasValueTypeInHierarchy(); if (o && e.getAdapter(K.RAMLService).isInlinedTemplates() && t) {
                var a = t, s = r(a).filter(function (t) { return t.definition() == e; });
                n = n.concat(s);
            }
            else {
                var a = t, u = {};
                e.allSubTypes().forEach(function (e) { return u[e.nameId()] = !0; }), u[e.nameId()] = !0;
                var s = r(a).filter(function (e) { return u[e.definition().nameId()]; });
                n = n.concat(s);
            } return n; }
            function R(e, t) { var n = e.range(); return N(n, t); }
            function M(e, t) { if (t) {
                if (e.isDescriminator()) {
                    var n = e.range(), i = n.getAdapter(K.RAMLService).getRuntimeExtenders();
                    if (i.length > 0 && t) {
                        var a = [];
                        return i.forEach(function (e) { var n = r(t).filter(function (t) { return t.definition() == e; }); a = a.concat(n); }), a;
                    }
                    return [];
                }
                if (e.isReference())
                    return I(e.referencesTo(), t);
                if (e.range().hasValueTypeInHierarchy()) {
                    var o = e.range().getAdapter(K.RAMLService);
                    if (o.globallyDeclaredBy && o.globallyDeclaredBy().length > 0) {
                        var s = r(t).filter(function (e) { return null != x.find(o.globallyDeclaredBy(), function (t) { return t == e.definition(); }); });
                        return s;
                    }
                }
            } return []; }
            function w(e) { var t = []; return C(e, t), t; }
            function C(e, t) { e.children().forEach(function (e) { t.push(e), C(e, t); }); }
            function L(e, t, n) { e.elements().forEach(function (e) { L(e, t, n); e.definition(); }), e.attrs().forEach(function (r) { var i = r.property(), a = r.value(); if (D.UserDefinedProp.isInstance(i)) {
                var o = i.node();
                o == t ? n.push(r) : o.lowLevel().start() == t.lowLevel().start() && o.lowLevel().unit() == t.lowLevel().unit() && n.push(r);
            } if (T(r)) {
                var s = y(r);
                if (s) {
                    var u = v(r, s);
                    u && L(u, t, n);
                }
            }
            else if (i.getAdapter(K.RAMLPropertyService).isTypeExpr() && "string" == typeof a) {
                var l = e.localType();
                H(l, r, t, n);
                var p = m(t);
                if (p && -1 != a.indexOf(p)) {
                    var c = P(r);
                    c && c.lowLevel().start() == t.lowLevel().start() && n.push(r);
                }
            } if (i.isReference() || i.isDescriminator()) {
                if ("string" == typeof a) {
                    var f = M(i, e);
                    x.find(f, function (e) { return e.name() == a && e == t; }) && n.push(r);
                    var p = m(t);
                    if (p && -1 != a.indexOf(p)) {
                        var c = P(r);
                        c && c.lowLevel().start() == t.lowLevel().start() && n.push(r);
                    }
                }
                else if (F.StructuredValue.isInstance(a)) {
                    var h = a;
                    if (h) {
                        var d = h.valueName(), f = M(i, e);
                        x.find(f, function (e) { return e.name() == d && e == t; }) && n.push(r);
                        var g = h.toHighLevel();
                        g && L(g, t, n);
                        var p = m(t);
                        if (p && -1 != d.indexOf(p)) {
                            var c = P(g);
                            c && c.lowLevel().start() == t.lowLevel().start() && n.push(r);
                        }
                    }
                }
            }
            else {
                var f = M(i, e);
                x.find(f, function (e) { return e.name() == a && e == t; }) && n.push(r);
            } }); }
            function P(e) { if (!e.lowLevel)
                return null; var t = e.lowLevel(); if (!t)
                return null; if (t.key()) {
                var n = Math.floor((t.keyEnd() + t.keyStart()) / 2), r = O(t.unit(), n);
                if (r)
                    return r;
            } if (t.value()) {
                var n = Math.floor((t.valueEnd() + t.valueStart()) / 2), r = O(t.unit(), n);
                if (r)
                    return r;
            } return null; }
            function O(e, t) { var n = d(e, t); if (n && n.isElement && n.isElement())
                for (var r = n.asElement(), i = r; i;) {
                    if (i.definition().key() == B.Universe10.Library)
                        return i;
                    i = i.parent();
                } return null; }
            var D = n(39), U = n(9), x = n(70), k = n(39), F = n(16), B = n(17), K = k, V = n(32), j = n(24);
            t.declRoot = function (e) { for (var t = e;;) {
                if (t.definition().key() == B.Universe10.Library)
                    break;
                var n = t.parent();
                if (!n)
                    break;
                t = n;
            } return t; }, t.globalDeclarations = r, t.findDeclarations = a, t.deepFindNode = s, t.extractName = l;
            var W = function (e, t, n, r, a) { void 0 === a && (a = n.property()); var o = c(a, r), s = l(t, e), u = x.find(o, function (e) { return F.qName(e, r) == s; }); if (u)
                return u; if (D.UserDefinedProp.isInstance(a)) {
                var p = a;
                return i(p);
            } return null; };
            t.findUsages = p, t.referenceTargets = c, t.enumValues = f, t.findDeclarationByNode = h, t.findDeclaration = d, t.findExampleContentType = y, t.parseDocumentationContent = v, t.parseStructuredExample = g, t.isExampleNode = A, t.isExampleNodeContent = T, t.determineCompletionKind = E, function (e) { e[e.VALUE_COMPLETION = 0] = "VALUE_COMPLETION", e[e.KEY_COMPLETION = 1] = "KEY_COMPLETION", e[e.PATH_COMPLETION = 2] = "PATH_COMPLETION", e[e.DIRECTIVE_COMPLETION = 3] = "DIRECTIVE_COMPLETION", e[e.VERSION_COMPLETION = 4] = "VERSION_COMPLETION", e[e.ANNOTATION_COMPLETION = 5] = "ANNOTATION_COMPLETION", e[e.SEQUENCE_KEY_COPLETION = 6] = "SEQUENCE_KEY_COPLETION", e[e.INCOMMENT = 7] = "INCOMMENT"; }(t.LocationKind || (t.LocationKind = {}));
            var q = t.LocationKind;
            t.resolveReference = S, t.subTypesWithLocals = N, t.subTypesWithName = _, t.schemasWithName = b, t.nodesDeclaringType = I, t.findAllSubTypes = R, t.allChildren = w;
            var H = function (e, t, n, r) { var i = e.getAdapter(K.RAMLService).getDeclaringNode(); if (i && n.isSameNode(i))
                return void r.push(t); if (e.isArray() && H(e.array().componentType(), t, n, r), e.isUnion()) {
                var a = e.union();
                H(a.leftType(), t, n, r), H(a.rightType(), t, n, r);
            } e.superTypes().some(function (e) { return e.nameId() == n.name(); }) && r.push(t); };
            t.refFinder = L;
        }, function (e, t, n) {
            "use strict";
            function r(e) { var t = e.getExtra(p.SOURCE_EXTRA); return null == t ? null : l.isSourceProvider(t) ? t : f.isLowLevelNode(t) ? { getSource: function () { return t.highLevelNode(); } } : c.isParseResult(t) ? { getSource: function () { return t; } } : null; }
            function i(e) { return r(e); }
            function a(e) { var t = e.getAdapters(); return t ? h.find(t, function (e) { return l.rt.isParsedType(e); }) : null; }
            function o(e) { if (!e)
                return null; var t = e.getExtra(p.SOURCE_EXTRA); if (t)
                return r(e); var n = a(e); return n ? i(n) : null; }
            function s(e, t) { var n = o(e); return n ? { getSource: function () { var e = n.getSource(), r = e.asElement(); if (null == r)
                    return null; var i = r.elementsOfKind(m.Universe10.ObjectTypeDeclaration.properties.properties.name); return null == i || 0 == i.length ? null : h.find(i, function (e) { return t == e.attrValue(m.Universe10.TypeDeclaration.properties.name.name); }); } } : null; }
            function u(e) { return s(e.domain(), e.nameId()); }
            var l = n(39), p = l.rt, c = n(9), f = n(10), m = n(17), h = n(70);
            t.getExtraProviderSource = r, t.getRTypeSource = i, t.findRTypeByNominal = a, t.getNominalTypeSource = o, t.getNominalPropertySource = s, t.getNominalPropertySource2 = u;
        }, function (e, t, n) {
            "use strict";
            function r(e) { return a.isWebPath(e); }
            var i = n(15), a = n(10), o = n(24), s = function () { function e(e) { this.unit = e; } return e.prototype.contextPath = function () { if (!this.unit)
                return ""; var e = this.unit.absolutePath(); return e || ""; }, e.prototype.normalizePath = function (e) { if (!e)
                return e; var t; if (r(e)) {
                var n = 0 === e.toLowerCase().indexOf("https") ? "https://" : "http://";
                t = n + i.normalize(e.substring(n.length)).replace(/\\/g, "/");
            }
            else
                t = i.normalize(e).replace(/\\/g, "/"); return t; }, e.prototype.content = function (e) { var t = this.normalizePath(e), n = this.toRelativeIfNeeded(t), r = this.unit.resolve(n); return r ? r.contents() || "" : ""; }, e.prototype.contentAsync = function (e) { var t = this.normalizePath(e), n = this.toRelativeIfNeeded(t), r = this.unit.resolveAsync(n); if (!r)
                return Promise.resolve(""); var i = r.then(function (e) { return e && e.contents() || ""; }); return i; }, e.prototype.toRelativeIfNeeded = function (e) { var t = e; return i.isAbsolute(e) && !r(e) && (t = i.relative(i.dirname(this.unit.absolutePath()), e)), t; }, e.prototype.hasAsyncRequests = function () { return o.hasAsyncRequests(); }, e.prototype.resolvePath = function (e, t) { return a.buildPath(t, e, this.unit.project().getRootPath()); }, e.prototype.isAbsolutePath = function (e) { return e ? r(e) ? !0 : i.isAbsolute(e) : !1; }, e.prototype.promiseResolve = function (e) { return Promise.resolve(e); }, e; }();
            t.ContentProvider = s;
        }, function (e, t, n) {
            "use strict";
            function r(e, t) { return new w(t).dump(e); }
            function i(e, t, n, r, i) { if (!t)
                return e; var a = {}; e && e.arr.forEach(function (e) { var t = a[e.name()]; t || (t = [], a[e.name()] = t), t.push(e); }); for (var o = new C(r), s = 0, u = {}, l = !1, p = t.indexOf("{"); p >= 0 && (s = t.indexOf("}", ++p), !(0 > s)); p = t.indexOf("{", s)) {
                var f = t.substring(p, s);
                if (u[f] = !0, a[f])
                    a[f].forEach(function (e) { o.registerValue(e), o.registerMeta(null); });
                else {
                    l = !0;
                    var m = n.definition().universe(), h = m.type(T.Universe10.StringTypeDeclaration.name), d = _.createStubNode(h, null, f, n.lowLevel().unit());
                    if (d.setParent(n), d.attrOrCreate("name").setValue(f), d.patchProp(r), o.registerValue(d), i) {
                        o.hasMeta = !0;
                        var y = new c.NodeMetadataImpl;
                        y.setCalculated(), o.registerMeta(y);
                    }
                }
            } return l ? (Object.keys(a).filter(function (e) { return !u[e]; }).forEach(function (e) { return a[e].forEach(function (e) { o.registerValue(e), o.hasMeta && o.registerMeta(null); }); }), o) : e; }
            function a(e, t, n, r) { if (0 == t.length)
                return null; var i = e.lowLevel().unit().absolutePath(), a = new C(n); return t.forEach(function (e) { if (a.registerValue(e), r)
                if (e.lowLevel().unit().absolutePath() != i) {
                    a.hasMeta = !0;
                    var t = new c.NodeMetadataImpl;
                    t.setCalculated(), a.mArr.push(t);
                }
                else
                    a.mArr.push(null); }), a; }
            function o(e, t, n, r) { var i; if (e.isElement())
                i = e.asElement().definition();
            else if (e.isAttr()) {
                var a = e.asAttr().property();
                a && (i = a.range());
            } if ((i instanceof m.UserDefinedClass || i.isUserDefined()) && (i = b.find(i.allSuperTypes(), function (e) { return !e.isUserDefined(); })), null == i)
                return n; var o = i.universe().version(), s = r[o]; if (!s)
                return n; var u = s[i.nameId()]; if (!u)
                return n; var l = t ? t.nameId() : "__$$anyprop__", p = u[l]; if (p || (p = u.__$$anyprop__), !p)
                return n; for (var c = 0, f = p; c < f.length; c++) {
                var h = f[c];
                n = h.transform(n, e);
            } return n; }
            function s(e, t) { for (var n = 0, r = e; n < r.length; n++) {
                var i = r[n], a = i.registrationInfo();
                if (a)
                    for (var o = 0, s = Object.keys(a); o < s.length; o++) {
                        var u = s[o], l = a[u], p = t[u];
                        null == p && (p = {}, t[u] = p);
                        for (var c = 0, f = Object.keys(l); c < f.length; c++) {
                            var m = f[c], h = l[m], d = p[m];
                            null == d && (d = {}, p[m] = d);
                            for (var y = 0, v = Object.keys(h); y < v.length; y++) {
                                var g = v[y], A = d[g];
                                if (null == A) {
                                    if (A = [], "__$$anyprop__" != g) {
                                        var T = d.__$$anyprop__;
                                        T && (A = A.concat(T));
                                    }
                                    d[g] = A;
                                }
                                if ("__$$anyprop__" == g)
                                    for (var E = 0, S = Object.keys(d); E < S.length; E++) {
                                        var N = S[E];
                                        d[N].push(i);
                                    }
                                else
                                    A.push(i);
                            }
                        }
                    }
            } }
            function u(e) { if (0 == e.length)
                return {}; for (var t = e[0], n = 1; n < e.length; n++) {
                var r = e[n];
                t = l(t, r);
            } return t; }
            function l(e, t) { for (var n = 0, r = Object.keys(t); n < r.length; n++) {
                var i = r[n], a = e[i], o = t[i];
                null == a ? e[i] = o : "object" == typeof a && "object" == typeof o && (e[i] = l(a, o));
            } return e; }
            var p = this && this.__extends || function (e, t) { function n() { this.constructor = e; } for (var r in t)
                t.hasOwnProperty(r) && (e[r] = t[r]); e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype, new n); }, c = n(48), f = n(41), m = n(39), h = n(16), d = n(29), y = n(51), v = m.rt, g = v.typeExpressions, A = n(14), T = n(17), E = n(35), S = n(58), N = n(59), _ = n(18), b = n(70), I = n(15), R = "application/raml+yaml";
            t.dump = r;
            var M = function (e) { var t, n = e.root(); if (n) {
                var r = n.lowLevel();
                if (r) {
                    var i = r.unit();
                    i && (t = i.absolutePath());
                }
            } return t; }, w = function () { function e(e) { this.options = e, this.nodePropertyTransformers = [new $, new J, new Q, new ee, new Z, new te, new H, new ne, new ie, new re, new ae], this.nodeTransformersMap = {}, this.nodePropertyTransformersMap = {}, this.options = this.options || {}, null == this.options.serializeMetadata && (this.options.serializeMetadata = !0), null == this.options.attributeDefaults && (this.options.attributeDefaults = !0), this.defaultsCalculator = new S.AttributeDefaultsCalculator(!0, !0), this.nodeTransformers = [new V, new j(this.options), new W, new q, new Y, new G, new X, new oe, new z(this.options.allUriParameters)], s(this.nodeTransformers, this.nodeTransformersMap), s(this.nodePropertyTransformers, this.nodePropertyTransformersMap); } return e.prototype.init = function (e) { this.helpersMap = { baseUriParameters: L, uriParameters: P }; var t = e.isElement(); if (t) {
                var n = e.asElement(), r = n.definition();
                if ("RAML08" == r.universe().version() && A.isApiType(r)) {
                    var i = {};
                    n.elementsOfKind(T.Universe08.Api.properties.schemas.name).forEach(function (e) { return i[e.name()] = e; }), this.helpersMap.schemaContent = new D(i);
                }
                A.isApiSibling(r) && (this.helpersMap.traits = new O(N.allTraits(n, !1)), this.helpersMap.resourceTypes = new O(N.allResourceTypes(n, !1)));
            } }, e.prototype.dispose = function () { delete this.helpersMap; }, e.prototype.dump = function (e) { this.init(e); var t = e.isElement(), n = e.parent(), r = !n && this.options.rootNodeDetails, i = M(e), a = this.dumpInternal(e, null, i, null, !0); if (r) {
                var o = a;
                if (a = {}, a.specification = o, t) {
                    var s = e.asElement(), u = s.definition();
                    if (u) {
                        var l = u.universe().version();
                        a.ramlVersion = l, a.type = u.nameId();
                    }
                    a.errors = this.dumpErrors(c.errors(s));
                }
            } return this.dispose(), a; }, e.prototype.dumpInternal = function (e, t, n, r, i) { var a = this; if (void 0 === i && (i = !1), null == e)
                return null; if (e.isReused()) {
                var s = e.getJSON();
                if (null != s)
                    return s;
            } var u = {}; if (e.isElement()) {
                var l = {}, p = e.asElement(), f = p.definition();
                if (A.isExampleSpecType(f))
                    if (null != p.parent())
                        u = "";
                    else {
                        var y = h.auxiliaryTypeForExample(p), v = N.dumpExpandableExample(y.examples()[0], this.options.dumpXMLRepresentationOfExamples), g = p.elementsOfKind("uses").map(function (e) { return a.dumpInternal(e, e.property(), n); });
                        g.length > 0 && (v.uses = g), u = v;
                    }
                else {
                    for (var _ = {}, R = p.attrs().concat(p.children().filter(function (e) { return !e.isAttr(); })), M = 0, w = R; M < w.length; M++) {
                        var L = w[M], P = L.property();
                        if (null != P) {
                            var O = P.nameId(), D = l[O];
                            null == D && (D = new C(P), l[O] = D), D.registerValue(L);
                        }
                        else
                            var U = L.lowLevel(), x = U.key();
                    }
                    for (var k = {}, F = 0, B = f.allProperties().concat(f.allCustomProperties()); F < B.length; F++) {
                        var K = B[F];
                        if (!m.UserDefinedProp.isInstance(K)) {
                            var O = K.nameId();
                            if (i || "uses" != O || !A.isApiSibling(p.root().definition())) {
                                var D = l[O];
                                if (A.isTypeProperty(K)) {
                                    if (l.schema) {
                                        var V = null == D;
                                        !V && 1 == D.arr.length && D.arr[0].isAttr() && (V = null == D.arr[0].asAttr().value()), V && (r = r || new c.NodeMetadataImpl, r.registerInsertedAsDefaultValue("type"));
                                        continue;
                                    }
                                    if (A.isStringTypeDeclarationDescendant(f)) {
                                        if (null == D) {
                                            u.type = "string", r = r || new c.NodeMetadataImpl, r.registerInsertedAsDefaultValue("type");
                                            continue;
                                        }
                                        if (1 == D.arr.length && D.arr[0].isAttr()) {
                                            var j = D.arr[0].asAttr().value();
                                            if (null == j) {
                                                u.type = "string", r = r || new c.NodeMetadataImpl, r.registerInsertedAsDefaultValue("type");
                                                continue;
                                            }
                                            if ("NULL" === j || "Null" === j) {
                                                u.type = "string";
                                                continue;
                                            }
                                        }
                                    }
                                }
                                D = this.applyHelpers(D, p, K, this.options.serializeMetadata);
                                var W = _[O], q = void 0;
                                if (void 0 !== D) {
                                    if (D.isMultiValue) {
                                        if (q = D.arr.map(function (e, t) { var r = D.hasMeta ? D.mArr[t] : null; return a.dumpInternal(e, D.prop, n, r); }), K.isValueProperty()) {
                                            var H = [], Y = !1;
                                            D.arr.filter(function (e) { return e.isAttr(); }).map(function (e) { return e.asAttr(); }).filter(function (e) { return e.isAnnotatedScalar(); }).forEach(function (e) { var t = e.annotations().map(function (e) { return a.dumpInternal(e, null, n); }); Y = Y || t.length > 0, H.push(t); }), Y && (k[O] = H);
                                        }
                                        A.isTypeDeclarationDescendant(f) && A.isTypeProperty(K) && D.arr.map(function (e) { return e.value(); }).filter(function (e) { return h.isStructuredValue(e); }).length > 0 && (q = q[0]);
                                    }
                                    else if (q = this.dumpInternal(D.val, D.prop, n), K.isValueProperty()) {
                                        var G = D.val.asAttr();
                                        if (G.isAnnotatedScalar()) {
                                            var H = G.annotations().map(function (e) { return a.dumpInternal(e, null, n); });
                                            H.length > 0 && (k[O] = H);
                                        }
                                    }
                                }
                                else if (void 0 !== W)
                                    q = W;
                                else if (this.options.attributeDefaults) {
                                    var X = this.defaultsCalculator.attributeDefaultIfEnabled(p, K);
                                    if (null != X) {
                                        r = r || new c.NodeMetadataImpl, Array.isArray(X) ? X = X.map(function (e) { return h.isASTPropImpl(e) ? a.dumpInternal(e, K, n) : e; }) : h.isASTPropImpl(X) && (X = this.dumpInternal(X, K, n)), q = X, null != q && K.isMultiValue() && !Array.isArray(q) && (q = [q]);
                                        var z = this.defaultsCalculator.insertionKind(p, K);
                                        z == S.InsertionKind.CALCULATED ? r.registerCalculatedValue(O) : z == S.InsertionKind.BY_DEFAULT && r.registerInsertedAsDefaultValue(O);
                                    }
                                }
                                if (q = o(p, K, q, this.nodePropertyTransformersMap), null != q) {
                                    if (("type" === O || "schema" == O) && q && q.forEach && "string" == typeof q[0]) {
                                        var $ = q[0].trim(), J = "{" === $[0] && "}" === $[$.length - 1], Q = "<" === $[0] && ">" === $[$.length - 1];
                                        if (J || Q) {
                                            var Z = p.lowLevel().includePath && p.lowLevel().includePath();
                                            if (!Z) {
                                                var ee = p.attr("type");
                                                ee || (ee = p.attr("schema")), ee && (Z = ee.lowLevel().includePath && ee.lowLevel().includePath());
                                            }
                                            if (Z) {
                                                var te = Z.indexOf("#"), ne = "";
                                                te >= 0 && (ne = Z.substring(te), Z = Z.substring(0, te));
                                                var re, ie = p.lowLevel().unit().resolve(Z).absolutePath();
                                                re = E.stringStartsWith(ie, "http://") || E.stringStartsWith(ie, "https://") ? ie : I.relative(p.lowLevel().unit().project().getRootPath(), ie), re = re.replace(/\\/g, "/"), u.schemaPath = re + ne;
                                            }
                                        }
                                    }
                                    u[O] = q;
                                }
                            }
                        }
                    }
                    if (this.options.dumpSchemaContents && l.schema && l.schema.prop.range().key() == T.Universe08.SchemaString) {
                        var ae = p.root().elementsOfKind("schemas");
                        ae.forEach(function (e) { if (e.name() == u.schema) {
                            var t = e.attr("value");
                            t && (u.schema = t.value(), u.schemaContent = t.value());
                        } });
                    }
                    this.options.serializeMetadata && this.serializeMeta(u, p, r), Object.keys(k).length > 0 && (u.scalarsAnnotations = k);
                    var oe = N.getTemplateParametrizedProperties(p);
                    if (oe && (u.parametrizedProperties = oe), A.isTypeDeclarationDescendant(f)) {
                        var se = N.typeFixedFacets(p);
                        se && (u.fixedFacets = se);
                    }
                    u = o(p, t || p.property(), u, this.nodeTransformersMap);
                }
            }
            else if (e.isAttr()) {
                var ue, le = e.asAttr(), ue = le.value(), P = le.property(), pe = P.range(), ce = pe.isValueType();
                if (ce && le.value && (ue = le.value(), null == ue && A.isAnyTypeType(pe))) {
                    var fe = le.lowLevel();
                    le.isAnnotatedScalar() && (fe = b.find(fe.children(), function (e) { return "value" == e.key(); })), fe && (ue = le.lowLevel().dumpToObject());
                }
                if (null == ue || "number" != typeof ue && "string" != typeof ue && "boolean" != typeof ue) {
                    if (h.isStructuredValue(ue)) {
                        var me = ue, U = me.lowLevel();
                        ue = U ? U.dumpToObject() : null;
                        var he = P.nameId();
                        if (pe.isAssignableFrom("Reference")) {
                            var x = Object.keys(ue)[0], de = me.valueName(), ye = ue[x];
                            void 0 === ye && (ye = null), ue = { name: de, structuredValue: ye };
                        }
                        else if ("type" == he) {
                            var U = le.lowLevel(), ve = m.getUniverse("RAML10").type(T.Universe10.TypeDeclaration.name), ge = m.getUniverse("RAML10").type(T.Universe10.LibraryBase.name), Ae = new h.ASTNodeImpl(U, le.parent(), ve, ge.property(T.Universe10.LibraryBase.properties.types.name));
                            Ae.patchType(d.doDescrimination(Ae)), ue = this.dumpInternal(Ae, t || le.property(), n, null, !0);
                        }
                        else if ("items" == he && "object" == typeof ue) {
                            var Te = Array.isArray(ue), Ee = !Te;
                            if (Te && (Ee = null != b.find(ue, function (e) { return "object" == typeof e; })), Ee) {
                                ue = null;
                                var Se = e.parent().lowLevel();
                                Se.children().forEach(function (e) { if ("items" == e.key()) {
                                    var r = m.getUniverse("RAML10").type(T.Universe10.TypeDeclaration.name), i = m.getUniverse("RAML10").type(T.Universe10.LibraryBase.name), o = new h.ASTNodeImpl(e, le.parent(), r, i.property(T.Universe10.LibraryBase.properties.types.name));
                                    o.patchType(d.doDescrimination(o)), ue = a.dumpInternal(o, t || le.property(), n, null, !0), he = e.key();
                                } });
                            }
                        }
                    }
                    ue = o(le, t || le.property(), ue, this.nodeTransformersMap), u = ue;
                }
                else
                    u = ue;
            }
            else {
                var U = e.lowLevel();
                u = U ? U.dumpToObject() : null;
            } return e.setJSON(u), u; }, e.prototype.getDefaultsCalculator = function () { return this.defaultsCalculator; }, e.prototype.canBeFragment = function (e) { var t = e.definition(), n = [t].concat(t.allSubTypes()), r = n.filter(function (e) { return e.getAdapter(m.RAMLService).possibleInterfaces().filter(function (e) { return e.nameId() == m.universesInfo.Universe10.FragmentDeclaration.name; }).length > 0; }); return r.length > 0; }, e.prototype.dumpErrors = function (e) { var t = this; return e.map(function (e) { var n = t.dumpErrorBasic(e); return e.trace && e.trace.length > 0 && (n.trace = t.dumpErrors(e.trace)), n; }).sort(function (e, t) { return e.path != t.path ? e.path.localeCompare(t.path) : e.range.start.position != t.range.start.position ? e.range.start.position - t.range.start.position : e.code - t.code; }); }, e.prototype.dumpErrorBasic = function (e) { var t = { code: e.code, message: e.message, path: e.path, line: e.line, column: e.column, position: e.start, range: e.range }; return e.isWarning === !0 && (t.isWarning = !0), t; }, e.prototype.serializeMeta = function (e, t, n) { if (this.options.serializeMetadata) {
                var r = t.definition(), i = A.isMethodType(r) && t.optional();
                if (n || i) {
                    var a = n || new c.NodeMetadataImpl(!1, !1);
                    i && a.setOptional(), e.__METADATA__ = a.toJSON();
                }
            } }, e.prototype.applyHelpers = function (e, t, n, r) { var i = n.nameId(), a = this.helpersMap[i]; if (!a)
                return e; var o = a.apply(t, e, n, r); return o ? o : e; }, e; }();
            t.TCKDumper = w;
            var C = function () { function e(e) { this.prop = e, this.arr = [], this.mArr = [], this.isMultiValue = e.isMultiValue(); } return e.prototype.registerValue = function (e) { this.isMultiValue ? this.arr.push(e) : this.val = e; }, e.prototype.registerMeta = function (e) { this.isMultiValue && this.mArr.push(e); }, e; }(), L = { apply: function (e, t, n, r) { var a = e.attr(T.Universe10.Api.properties.baseUri.name), o = a ? a.value() : ""; return i(t, o, e, n, r); } }, P = { apply: function (e, t, n, r) { var a = e.attr(T.Universe10.Resource.properties.relativeUri.name); if (!a)
                    return t; var o = a.value(); return i(t, o, e, n, r); } }, O = function () { function e(e) { this.arr = e; } return e.prototype.apply = function (e, t, n, r) { return a(e, this.arr, n, r); }, e; }(), D = function () { function e(e) { this.schemasCache08 = e; } return e.prototype.apply = function (e, t, n, r) { var i = null, a = N.schemaContent08Internal(e, this.schemasCache08); return a && (i = new C(n), i.registerValue(a)), i; }, e; }();
            t.applyTransformersMap = o;
            var U = function () { function e() { } return e.prototype.match = function (e, t) { if (null == e)
                return !1; var n = this.registrationInfo(), r = e.universe().version(); if ((e instanceof m.UserDefinedClass || e.isUserDefined()) && (e = b.find(e.allSuperTypes(), function (e) { return !e.isUserDefined(); }), null == e))
                return null == t; var i = n[r]; if (!i)
                return !1; var a = i[e.nameId()]; if (!a)
                return !1; var o = null == t || a[t.nameId()] === !0 || a.__$$anyprop__ === !0; return o; }, e; }(), x = function (e) { function t(t, n, r, i) { void 0 === r && (r = !1), void 0 === i && (i = ["RAML10", "RAML08"]), e.call(this), this.typeName = t, this.propName = n, this.applyToDescendatns = r, this.restrictToUniverses = i; } return p(t, e), t.prototype.registrationInfo = function () { var e = this; if (this.regInfo)
                return this.regInfo; for (var t = {}, n = [], r = 0, i = this.restrictToUniverses; r < i.length; r++) {
                var a = i[r], o = {};
                t[a] = o, n.push(o);
            } for (var s = 0, u = Object.keys(t); s < u.length; s++) {
                var a = u[s], l = m.getUniverse(a).type(this.typeName);
                if (l) {
                    var p = t[a], c = [this.typeName];
                    this.applyToDescendatns && l.allSubTypes().forEach(function (e) { return c.push(e.nameId()); });
                    for (var f = 0, h = c; f < h.length; f++) {
                        var d = h[f], y = {};
                        null != this.propName ? y[this.propName] = !0 : y.__$$anyprop__ = !0, p[d] = y;
                    }
                }
            } return this.regInfo = {}, Object.keys(t).forEach(function (n) { var r = t[n]; Object.keys(r).length > 0 && (e.regInfo[n] = r); }), this.regInfo; }, t; }(U), k = function () { function e(e) { this.matcher = e; } return e.prototype.match = function (e, t) { var n; if (e.isElement())
                n = e.asElement().definition();
            else if (e.isAttr()) {
                var r = e.asAttr().property();
                r && (n = r.range());
            } return n ? this.matcher.match(n, t) : !1; }, e.prototype.registrationInfo = function () { return this.matcher.registrationInfo(); }, e; }(), F = function (e) { function t(t, n, r, i) { void 0 === r && (r = !1), void 0 === i && (i = ["RAML10", "RAML08"]), e.call(this, new x(t, n, r, i)), this.typeName = t, this.propName = n, this.applyToDescendatns = r, this.restrictToUniverses = i; } return p(t, e), t; }(k), B = function (e) { function t(t) { e.call(this), this.matchers = t; } return p(t, e), t.prototype.registrationInfo = function () { return this.regInfo ? this.regInfo : (this.regInfo = u(this.matchers.map(function (e) { return e.registrationInfo(); })), this.regInfo); }, t; }(U), K = function () { function e(e, t) { this.matcher = e, this.propName = t; } return e.prototype.match = function (e, t) { return e.isElement() && this.matcher.match(e.asElement().definition(), t); }, e.prototype.transform = function (e, t) { var n = this; if (Array.isArray(e) && e.length > 0 && e[0][this.propName]) {
                var r = {};
                return e.forEach(function (e) { var t = e["$$" + n.propName]; null != t ? delete e["$$" + n.propName] : t = e[n.propName]; var i = r[t]; i ? Array.isArray(i) ? i.push(e) : r[t] = [i, e] : r[t] = e; }), r;
            } return e; }, e.prototype.registrationInfo = function () { return this.matcher.registrationInfo(); }, e; }(), V = function (e) { function t() { e.call(this, T.Universe10.Resource.name, null, !0); } return p(t, e), t.prototype.transform = function (e, t) { if (Array.isArray(e))
                return e; var n = e[T.Universe10.Resource.properties.relativeUri.name]; if (n) {
                for (var r = n.trim().split("/"); r.length > 0 && 0 == r[0].length;)
                    r.shift();
                e.relativeUriPathSegments = r, e.absoluteUri = N.absoluteUri(t.asElement()), e.completeRelativeUri = N.completeRelativeUri(t.asElement()), A.isResourceType(t.parent().definition()) ? e.parentUri = N.completeRelativeUri(t.parent()) : e.parentUri = "";
            } return e; }, t; }(F), j = function (e) { function t(t) { void 0 === t && (t = {}), e.call(this, T.Universe10.TypeDeclaration.name, null, !0), this.options = t; } return p(t, e), t.prototype.transform = function (e, t) { var n = Array.isArray(e); if (n && 0 == e.length)
                return e; var r = n ? e[0] : e, i = N.typeExample(t.asElement(), this.options.dumpXMLRepresentationOfExamples); if (i)
                r.examples = [i];
            else {
                var a = N.typeExamples(t.asElement(), this.options.dumpXMLRepresentationOfExamples);
                a.length > 0 && (r.examples = a);
            } if (delete r.example, r.hasOwnProperty("schema")) {
                if (r.hasOwnProperty("type")) {
                    var o = r.type;
                    Array.isArray(o) || (o = [o], r.type = o);
                    var s = r.schema;
                    Array.isArray(s) ? s.forEach(function (e) { return o.push(e); }) : o.push(s);
                }
                else
                    r.type = r.schema;
                delete r.schema;
            } if (Array.isArray(r.type) || (r.type = [r.type]), r.mediaType = R, t && t.isElement()) {
                var u = t.asElement(), l = u.localType().isExternal() ? u.localType() : null;
                if (!l)
                    for (var p = 0, c = u.localType().allSuperTypes(); p < c.length; p++) {
                        var f = c[p];
                        f.isExternal() && (l = f);
                    }
                if (l) {
                    var m = l.external().schema().trim();
                    E.stringStartsWith(m, "<") ? r.mediaType = "application/xml" : r.mediaType = "application/json";
                }
            } var h = t.property(); if (h && !(A.isHeadersProperty(h) || A.isQueryParametersProperty(h) || A.isUriParametersProperty(h) || A.isPropertiesProperty(h) || A.isBaseUriParametersProperty(h))) {
                delete r.required;
                var d = r.__METADATA__;
                if (d) {
                    var y = d.primitiveValuesMeta;
                    y && delete y.required;
                }
            } var o = r.type; if (o.forEach && "string" == typeof o[0]) {
                var v = t.asElement().localType();
                if (v && v.hasExternalInHierarchy()) {
                    var g = o[0].trim(), T = "{" === g[0] && "}" === g[g.length - 1], S = "<" === g[0] && ">" === g[g.length - 1];
                    T ? r.typePropertyKind = "JSON" : S && (r.typePropertyKind = "XML");
                }
                else
                    r.typePropertyKind = "TYPE_EXPRESSION";
            }
            else
                "object" == typeof o && (r.typePropertyKind = "INPLACE"); if (this.options.unfoldTypes && (r.unfolded = this.processExpressions(r)), 1 == r.type.length) {
                var _ = r.type[0];
                if ("string" == typeof _) {
                    _ = _.trim();
                    var b = E.stringEndsWith(_, "[]");
                    if (b) {
                        for (var I = _.substring(0, _.length - "[]".length).trim(); I.length > 0 && "(" == I.charAt(0) && ")" == I.charAt(I.length - 1);)
                            I = I.substring(1, I.length - 1);
                        r.type[0] = "array", r.items = I;
                    }
                }
            } return e; }, t.prototype.processExpressions = function (e) { var t = E.deepCopy(e); return this.parseExpressions(t), t; }, t.prototype.parseExpressions = function (e) { if (this.parseExpressionsForProperty(e, "type"), this.parseExpressionsForProperty(e, "items"), e.properties)
                for (var t = 0, n = Object.keys(e.properties); t < n.length; t++) {
                    var r = n[t], i = e.properties[r];
                    i.unfolded && (e.properties[r] = i.unfolded);
                } }, t.prototype.parseExpressionsForProperty = function (e, t) { var n = e[t]; if (n) {
                var r = !1;
                if (!Array.isArray(n)) {
                    if ("object" == typeof n)
                        return void (n.unfolded ? e.prop = n.unfolded : this.parseExpressions(n));
                    "string" == typeof n && (r = !0, n = [n]);
                }
                for (var i = [], a = 0; a < n.length; a++) {
                    var o = n[a];
                    if ("object" == typeof o && (o.unfolded ? o = o.unfolded : this.parseExpressions(o)), i.push(o), "string" == typeof o) {
                        var s = o, u = y.checkExpression(s);
                        if (u) {
                            var l = { status: y.ParametersEscapingStatus.NOT_REQUIRED };
                            if (o.indexOf("<<") >= 0)
                                if (l = y.escapeTemplateParameters(o), l.status == y.ParametersEscapingStatus.OK) {
                                    if (s = l.resultingString, u = y.checkExpression(s), !u)
                                        continue;
                                }
                                else if (l.status == y.ParametersEscapingStatus.ERROR)
                                    continue;
                            var p = void 0;
                            try {
                                p = g.parse(s);
                            }
                            catch (c) {
                                continue;
                            }
                            if (p) {
                                var f = this.expressionToObject(p, l);
                                null != f && (i[a] = f);
                            }
                        }
                    }
                }
                e[t] = r ? i[0] : i;
            } }, t.prototype.expressionToObject = function (e, t) { var n, r = 0; if ("name" == e.type) {
                var i = e;
                if (r = i.arr, n = i.value, t.status == y.ParametersEscapingStatus.OK) {
                    var a = y.unescapeTemplateParameters(n, t.substitutions);
                    a.status == y.ParametersEscapingStatus.OK ? n = a.resultingString : a.status == y.ParametersEscapingStatus.ERROR && (n = null);
                }
            }
            else if ("union" == e.type) {
                var o = e;
                n = { type: ["union"], options: [] };
                for (var s = this.toOptionsArray(o), u = 0, l = s; u < l.length; u++) {
                    var p = l[u];
                    if (null == p) {
                        n = null;
                        break;
                    }
                    var c = this.expressionToObject(p, t);
                    n.options.push(c);
                }
                n.options = b.unique(n.options).sort();
            }
            else if ("parens" == e.type) {
                var f = e;
                r = f.arr, n = this.expressionToObject(f.expr, t);
            } if (null != n)
                for (; r-- > 0;)
                    n = { type: ["array"], items: n }; return n; }, t.prototype.toOptionsArray = function (e) { for (var t, n = e.first, r = e.rest; "parens" == n.type && 0 == n.arr;)
                n = n.expr; for (; "parens" == r.type && 0 == r.arr;)
                r = r.expr; return t = "union" == n.type ? this.toOptionsArray(n) : [n], "union" == r.type ? t = t.concat(this.toOptionsArray(r)) : t.push(r), t; }, t; }(F), W = function (e) {
                function t() { e.call(this, new B([new x(T.Universe10.TypeDeclaration.name, T.Universe10.LibraryBase.properties.annotationTypes.name, !0, ["RAML10"]), new x(T.Universe10.TypeDeclaration.name, T.Universe10.LibraryBase.properties.types.name, !0, ["RAML10"]), new x(T.Universe10.Trait.name, T.Universe10.LibraryBase.properties.traits.name, !0, ["RAML10"]), new x(T.Universe10.AbstractSecurityScheme.name, T.Universe10.LibraryBase.properties.securitySchemes.name, !0, ["RAML10"]), new x(T.Universe10.ResourceType.name, T.Universe10.LibraryBase.properties.resourceTypes.name, !0, ["RAML10"])])); }
                return p(t, e), t.prototype.transform = function (e, t) {
                    if (!t.parent() || !t.parent().lowLevel().libProcessed)
                        return e;
                    var n = t.lowLevel(), r = n.key();
                    e.$$name = r;
                    for (var i = n; f.LowLevelProxyNode.isInstance(i);)
                        i = i.originalNode();
                    var a = i.key(), o = e;
                    return o.name = a, o.displayName == r && (o.displayName = a), e;
                }, t;
            }(k), q = function (e) { function t() { e.call(this, new B([new x(T.Universe10.ResourceType.name, null, !0), new x(T.Universe10.Trait.name, null, !0), new x(T.Universe10.Method.name, null, !0), new x(T.Universe10.Response.name, null, !0), new x(T.Universe08.Parameter.name, null, !0), new x(T.Universe08.BodyLike.name, null, !0), new x(T.Universe10.TypeDeclaration.name, null, !0)])); } return p(t, e), t.prototype.transform = function (e) { if (Array.isArray(e))
                return e; var t = m.universesInfo.Universe10.Trait.properties.parametrizedProperties.name, n = e[t]; return n && (Object.keys(n).forEach(function (t) { e[t] = n[t]; }), delete e[t]), e; }, t; }(k), H = function (e) { function t() { e.call(this, new B([new x(T.Universe10.ObjectTypeDeclaration.name, T.Universe10.ObjectTypeDeclaration.properties.properties.name, !0)]), "name"); } return p(t, e), t; }(K), Y = function (e) { function t() { e.call(this, T.Universe08.GlobalSchema.name, T.Universe08.Api.properties.schemas.name, !0, ["RAML08"]); } return p(t, e), t.prototype.transform = function (e) { if (Array.isArray(e))
                return e; var t = {}; return t[e.key] = e.value, t; }, t; }(F), G = function (e) { function t() { e.call(this, new B([new x(T.Universe10.Api.name, T.Universe10.Api.properties.protocols.name, !0), new x(T.Universe10.MethodBase.name, T.Universe10.MethodBase.properties.protocols.name, !0)])); } return p(t, e), t.prototype.transform = function (e) { return "string" == typeof e ? e.toUpperCase() : Array.isArray(e) ? e.map(function (e) { return e.toUpperCase(); }) : e; }, t; }(k), X = function (e) { function t() { e.call(this, new B([new x(T.Universe10.SecuritySchemeRef.name, T.Universe10.Api.properties.securedBy.name, !0), new x(T.Universe10.TraitRef.name, T.Universe10.MethodBase.properties.is.name, !0), new x(T.Universe10.ResourceTypeRef.name, T.Universe10.ResourceBase.properties.type.name, !0)])); } return p(t, e), t.prototype.transform = function (e) { return e ? Array.isArray(e) ? e : this.toSimpleValue(e) : null; }, t.prototype.toSimpleValue = function (e) { if ("string" == typeof e)
                return e; var t = e.name, n = e.structuredValue; if (n) {
                var r = {};
                return r[t] = n, r;
            } return t; }, t; }(k), z = function (e) { function t(t) { void 0 === t && (t = !1), e.call(this, new B([new x(T.Universe10.Api.name, null, !0)])), this.enabled = t; } return p(t, e), t.prototype.match = function (t, n) { return this.enabled ? e.prototype.match.call(this, t, n) : !1; }, t.prototype.registrationInfo = function () { return this.enabled ? e.prototype.registrationInfo.call(this) : null; }, t.prototype.transform = function (e, n, r) { var i = this, a = r, o = e[t.uriParamsPropName]; if (o && (a = [].concat(r || []), Object.keys(o).forEach(function (e) { var t = o[e]; Array.isArray(t) ? t.forEach(function (e) { return a.push(e); }) : a.push(t); })), a) {
                e.allUriParameters = a;
                var s = e[t.methodsPropName];
                s && Object.keys(s).forEach(function (e) { return s[e].allUriParameters = a; });
            } var u = e[t.resourcesPropName]; return u && u.forEach(function (e) { return i.transform(e, null, a); }), e; }, t.uriParamsPropName = T.Universe10.ResourceBase.properties.uriParameters.name, t.methodsPropName = T.Universe10.ResourceBase.properties.methods.name, t.resourcesPropName = T.Universe10.Api.properties.resources.name, t; }(k), $ = function (e) { function t() { e.call(this, new B([new x(T.Universe10.ResourceBase.name, T.Universe10.ResourceBase.properties.methods.name, !0), new x(T.Universe08.Resource.name, T.Universe08.Resource.properties.methods.name, !0), new x(T.Universe08.ResourceType.name, T.Universe08.ResourceType.properties.methods.name, !0)]), "method"); } return p(t, e), t; }(K), J = function (e) { function t() { e.call(this, new B([new x(T.Universe10.LibraryBase.name, T.Universe10.LibraryBase.properties.types.name, !0), new x(T.Universe10.LibraryBase.name, T.Universe10.LibraryBase.properties.schemas.name, !0), new x(T.Universe10.LibraryBase.name, T.Universe10.LibraryBase.properties.annotationTypes.name, !0)]), "name"); } return p(t, e), t; }(K), Q = function (e) { function t() { e.call(this, new B([new x(T.Universe10.LibraryBase.name, T.Universe10.LibraryBase.properties.traits.name, !0), new x(T.Universe08.Api.name, T.Universe08.Api.properties.traits.name, !0)]), "name"); } return p(t, e), t; }(K), Z = function (e) { function t() { e.call(this, new B([new x(T.Universe10.LibraryBase.name, T.Universe10.LibraryBase.properties.resourceTypes.name, !0), new x(T.Universe08.Api.name, T.Universe10.Api.properties.resourceTypes.name, !0, ["RAML08"])]), "name"); } return p(t, e), t; }(K), ee = function (e) { function t() { e.call(this, new B([new x(T.Universe10.LibraryBase.name, T.Universe10.LibraryBase.properties.securitySchemes.name, !0), new x(T.Universe08.Api.name, T.Universe08.Api.properties.securitySchemes.name, !0, ["RAML08"])]), "name"); } return p(t, e), t; }(K), te = function (e) { function t() { e.call(this, new B([new x(T.Universe10.Api.name, T.Universe10.Api.properties.baseUriParameters.name, !0), new x(T.Universe10.ResourceBase.name, T.Universe10.ResourceBase.properties.uriParameters.name, !0), new x(T.Universe08.Resource.name, T.Universe08.Resource.properties.uriParameters.name, !0, ["RAML08"]), new x(T.Universe10.ResourceBase.name, T.Universe10.MethodBase.properties.queryParameters.name, !0), new x(T.Universe10.MethodBase.name, T.Universe10.MethodBase.properties.queryParameters.name, !0), new x(T.Universe10.Operation.name, T.Universe10.MethodBase.properties.queryParameters.name, !0), new x(T.Universe10.Operation.name, T.Universe10.MethodBase.properties.headers.name, !0), new x(T.Universe10.MethodBase.name, T.Universe10.MethodBase.properties.headers.name, !0), new x(T.Universe08.BodyLike.name, T.Universe08.BodyLike.properties.formParameters.name)]), "name"); } return p(t, e), t; }(K), ne = function (e) { function t() { e.call(this, new B([new x(T.Universe10.MethodBase.name, T.Universe10.MethodBase.properties.responses.name, !0)]), "code"); } return p(t, e), t; }(K), re = function (e) { function t() { e.call(this, new B([new x(T.Universe10.Annotable.name, T.Universe10.Annotable.properties.annotations.name, !0)]), "name"); } return p(t, e), t; }(K), ie = function (e) { function t() { e.call(this, new B([new x(T.Universe10.Response.name, T.Universe10.Response.properties.body.name), new x(T.Universe10.MethodBase.name, T.Universe10.MethodBase.properties.body.name, !0)]), "name"); } return p(t, e), t; }(K), ae = function (e) { function t() { e.call(this, new B([new x(T.Universe10.TypeDeclaration.name, T.Universe10.TypeDeclaration.properties.facets.name, !0)]), "name"); } return p(t, e), t; }(K), oe = function (e) { function t() { e.call(this, new B([new x(T.Universe10.LibraryBase.name, null, !0, ["RAML10"])])); } return p(t, e), t.prototype.transform = function (e, t) { if (!e)
                return e; if (!e.hasOwnProperty("schemas"))
                return e; var n = e.schemas; if (e.hasOwnProperty("types")) {
                var r = e.types;
                Object.keys(n).forEach(function (e) { r.hasOwnProperty(e) || (r[e] = n[e]); });
            }
            else
                e.types = n; return delete e.schemas, e; }, t; }(k);
            t.mergeRegInfos = u;
        }, function (e, t, n) {
            "use strict";
            function r(e) { var t = {}; return e.forEach(function (e) { return Object.keys(e).forEach(function (n) { return t[n] = e[n]; }); }), t; }
            function i(e, t) { return new b(_.find(e || [], t)); }
            function a(e) { return Object.keys(e).map(function (t) { return [t, e[t]]; }); }
            function o(e) { var t = {}; return e.forEach(function (e) { return t[e[0]] = e[1]; }), t; }
            function s(e, t) { return t(e), e; }
            function u(e, t) { "object" == typeof e && Object.keys(e).forEach(function (n) { return t(n, e[n]); }); }
            function l(e, n, r) { void 0 === r && (r = !1); var i = {}; return e.forEach(function (e) { var a = t.shallowCopy(e); r && delete a[n], i[e[n]] = a; }), i; }
            function p(e, t) { var n = e.length - t.length; return n >= 0 && e.lastIndexOf(t) === n; }
            function c(e, t, n) { return void 0 === n && (n = 0), e.length - t.length >= n && e.substring(n, n + t.length) === t; }
            function f(e) { return "_" == e[e.length - 1]; }
            function m(e, t, n) { var r, i = !1; e[t] = function () { return i || (i = !0, r = n.apply(e)), r; }; }
            function h(e, n) { void 0 === n && (n = f); for (var r in e)
                n(r) && t.ifInstanceOf(e[r], Function, function (t) { return 0 === t.length ? m(e, r, t) : null; }); }
            function d(e, t) { void 0 !== e && t(e); }
            function y(e) { return "string" != typeof e || "" == e ? !1 : p(e, ".raml"); }
            function v(e) { for (var t, n = [], r = new RegExp("require\\('([^']+)'\\)", "gi"); t = r.exec(e);)
                n.push(t[1]); for (var i = new RegExp('require\\("([^"]+)"\\)', "gi"); t = i.exec(e);)
                n.push(t[1]); return n = _.unique(n).filter(function (e) { return "" != e; }), n.sort(), n; }
            function g(e) { return "undefined" != typeof e && null != e; }
            function A(e) { return 0 == e.length ? e : e.charAt(0).toUpperCase() + e.substr(1); }
            function T(e, t, n) { void 0 === n && (n = !1); var r = Object.keys(t); if (n) {
                var i = {};
                r.forEach(function (e) { return i[e] = !0; }), Object.keys(e).forEach(function (e) { return i[e] = !0; }), r = Object.keys(i);
            } r.forEach(function (n) { var r = e[n]; r instanceof Object ? (t[n] || (t[n] = {}), T(r, t[n], !0)) : void 0 != r && (t[n] = e[n]); }); }
            function E(e, t) { return Object.keys(t).forEach(function (n) { return e = S(e, n, t[n]); }), e; }
            function S(e, t, n) { for (var r = "", i = 0, a = e.indexOf(t); a < e.length && a >= 0; a = e.indexOf(t, i))
                r += e.substring(i, a), r += n, i = a + t.length; return r += e.substring(i, e.length); }
            function N(e) { if (null == e || "object" != typeof e)
                return e; var t; if (Array.isArray(e)) {
                t = [];
                for (var n = 0, r = e; n < r.length; n++) {
                    var i = r[n];
                    t.push(N(i));
                }
            }
            else {
                t = {};
                for (var a = 0, o = Object.keys(e); a < o.length; a++) {
                    var s = o[a];
                    t[s] = N(e[s]);
                }
            } return t; }
            var _ = n(70), b = n(23);
            t.defined = function (e) { return null !== e && void 0 !== e; }, t.flattenArrayOfObjects = r, t.find = i, t.isInstance = function (e, t) { return e instanceof t ? [e] : []; }, t.ifInstanceOf = function (e, t, n) { return e instanceof t ? n(e) : null; }, t.toTuples = a, t.fromTuples = o, t.collectInstancesOf = function (e, n) { return s([], function (r) { return e.forEach(function (e) { return t.ifInstanceOf(e, n, function (e) { return r.push(e); }); }); }); }, t.collectInstancesOfInMap = function (e, t) { return Object.keys(e).map(function (t) { return [t, e[t]]; }).filter(function (e) { return e[1] instanceof t; }).map(function (e) { return e; }); }, t.asArray = function (e) { return t.defined(e) ? e instanceof Array ? e : [e] : []; }, t.shallowCopy = function (e) { return s({}, function (t) { return Object.keys(e).forEach(function (n) { return t[n] = e[n]; }); }); }, t.flatMap = function (e, n) { return t.flatten(e.map(n)); }, t.flatten = function (e) { return Array.prototype.concat.apply([], e); }, t.takeWhile = function (e, t) { return s([], function (n) { for (var r = 0; r < e.length && t(e[r]); r++)
                n.push(e[r]); }); }, t.tap = s, t.kv = u, t.indexed = l, t.stringEndsWith = p, t.stringStartsWith = c, t.lazypropkeyfilter = f, t.lazyprops = h, t.iff = d, t.isRAMLUrl = y, t.getAllRequiredExternalModulesFromCode = v, t.serial = function () { var e = 0; return function () { return e++; }; }(), t.isEssential = g, t.firstToUpper = A, t.updateObject = T, t.replaceMap = E, t.replace = S, t.deepCopy = N;
        }, function (e, t, n) {
            "use strict";
            function r(e) { return e.highLevel().localType(); }
            function i(e) { return e.highLevel().localType(); }
            function a(e) { var t = new Oe.Project(Ue.dirname(e)), n = t.unit(Ue.basename(e)); return n && n.isRAMLUnit() ? Te.fromUnit(n).wrapperNode() : null; }
            function o(e) { var t = "", n = e; do
                e = n, t = e.relativeUri().value() + t, n = e.parent();
            while (n.definition().key().name == be.Universe10.Resource.name); return t; }
            function s(e) { var t = null != e.highLevel().reusedNode() ? we : Me; return t.expandLibrary(e); }
            function u(e, t) { return void 0 === t && (t = !1), t ? p(e) : l(e); }
            function l(e) { var t = e.highLevel().lowLevel(); if (Ce.LowLevelProxyNode.isInstance(t))
                return e; var n = null != e.highLevel().reusedNode() ? we : Me; return n.expandTraitsAndResourceTypes(e); }
            function p(e) { var t = null != e.highLevel().reusedNode() ? we : Me; return t.expandLibraries(e); }
            function c(e) { var t = "", n = e; do
                e = n, t = e.relativeUri().value() + t, n = e.parent();
            while (n.definition().key().name == be.Universe10.Resource.name); n = k(e), t = t.replace(/\/\//g, "/"); var r = n.baseUri(), i = r ? r.value() : ""; return i = i ? i : "", Re.stringEndsWith(i, "/") && (t = t.substring(1)), t = i + t; }
            function f(e, t) { return e.runtimeType().validate(t).map(function (e) { return e.getMessage(); }); }
            function m(e, t) { return e.runtimeType().validate(t); }
            function h(e) { return d(e); }
            function d(e) { return e.highLevel().lowLevel().actual().libExpanded ? e.traits_original() : g(e, function (e) { return xe.isTraitType(e); }); }
            function y(e) { return v(e); }
            function v(e) { return e.highLevel().lowLevel().actual().libExpanded ? e.resourceTypes_original() : g(e, function (e) { return xe.isResourceTypeType(e); }); }
            function g(e, t) { var n = Pe.globalDeclarations(e.highLevel()).filter(function (e) { return t(e.definition()); }), r = e.highLevel().lowLevel(), i = r.includePath(); i || (i = r.unit().path()); var a = Ce.LowLevelProxyNode.isInstance(e.highLevel().lowLevel()), o = a ? new Me.TraitsAndResourceTypesExpander : null, s = n.map(function (t) { var n, r = t.lowLevel().unit().path(); return a && (Ce.LowLevelProxyNode.isInstance(t.lowLevel()) || (t = o.createHighLevelNode(t, !1)), (new Le.ReferencePatcher).process(t, e.highLevel(), !0, !0)), r != i ? (n = ye.buildWrapperNode(t, !1), n.meta().setCalculated()) : n = t.wrapperNode(), n; }); return s; }
            function A(e) { var t = [], n = e; do
                e = n, t.push(e.relativeUri().value()), n = e.parent();
            while (n.definition().key().name == be.Universe10.Resource.name); return t.reverse(); }
            function T(e) { return de.ResourceImpl.isInstance(e.parent()) ? e.parent() : null; }
            function E(e) { var t = e.parent(); return t.definition().key().name == be.Universe10.Resource.name ? t : null; }
            function S(e, t) { if (null == e)
                return null; var n = e.resources(); return n ? (n = n.filter(function (e) { return e.relativeUri().value() == t; }), 0 == n.length ? null : n[0]) : null; }
            function N(e, t) { if (!e)
                return null; for (var n = null, r = 0; r < t.length; r++) {
                if (n = S(e, t[r]), !n)
                    return null;
                e = n;
            } return n; }
            function _(e, t) { return e ? e.methods().filter(function (e) { return e.method() == t; }) : null; }
            function b(e, t, n) { var r = N(e, t); return r ? _(r, n) : null; }
            function I(e) { return xe.isApiSibling(e.definition()); }
            function R(e) { for (var t = e; !I(t);)
                t = t.parent(); return t; }
            function M(e) { var t = e.parent(); if (de.ResourceImpl.isInstance(t))
                return o(t) + " " + e.method().toLowerCase(); if (de.ResourceTypeImpl.isInstance(t))
                return t.name() + " " + e.method().toLowerCase(); throw new Error(Ee.applyTemplate(Fe.METHOD_OWNED_BY, { owner: e.definition().key().name })); }
            function w(e) { var t = e.code().value(), n = Ee.validateResponseString(t); if (null != n)
                return !1; try {
                if (parseInt(t.charAt(0)) < 4)
                    return !0;
            }
            catch (r) { } return !1; }
            function C(e) { var t = [], n = function (e) { t.push(e), e.resources().forEach(function (e) { return n(e); }); }; return e.resources().forEach(function (e) { return n(e); }), t; }
            function L(e, t) { for (var n = {}; null != t;)
                O(t).forEach(function (e) { return n[e.name()] = new je(e); }), t = E(t); var r = ge.ramlPathMatch(o(t), n, {})(e); return r ? new Ie(Object.keys(r.params).map(function (e) { return new Ve(e, r.params[e]); })) : Ie.empty(); }
            function P(e) { return O(e); }
            function O(e) { var t = e.uriParameters_original(); if (!de.ResourceImpl.isInstance(e))
                return t; var n = e.relativeUri().value(), r = be.Universe10.ResourceBase.properties.uriParameters.name; return ce(t, n, e, r); }
            function D(e) { return U(e); }
            function U(e) { var t = e.baseUri() ? e.baseUri().value() : "", n = e.baseUriParameters_original(), r = be.Universe10.Api.properties.baseUriParameters.name; return ce(n, t, e, r); }
            function x(e) { var t = [], n = e; do
                e = n, t = O(e).concat(t), n = k(e);
            while (n.definition().key().name == be.Universe10.Resource.name); var r = n; r.baseUriParameters(); return t = U(r).concat(t); }
            function k(e) { var t = e.parent(); if (!t)
                return null; var n = t.highLevel().getSlaveCounterPart(); return n && (t = n.wrapperNode()), t; }
            function F(e) { return B(e); }
            function B(e) { return e.protocols().map(function (e) { return e.toUpperCase(); }); }
            function K(e) { return V(e); }
            function V(e) { return e.securedBy(); }
            function j(e) { var t = e.highLevel(); if (!t)
                return ""; var n = t.value(); return n ? n.toString() : ""; }
            function W(e) { var t = e.highLevel(); if (!t)
                return null; var n = Pe.findDeclarationByNode(t, Pe.LocationKind.VALUE_COMPLETION); if (!n)
                return null; if (!n.getKind || n.getKind() != Ae.NodeKind.NODE)
                return null; var r = n.wrapperNode(); return de.AbstractSecuritySchemeImpl.isInstance(r) ? r : null; }
            function q(e) { return e.highLevel().definition().universe().version(); }
            function H(e) { var t = e.value().lowLevel(), n = null, r = t.highLevelParseResult(); if (r) {
                var i = null, a = !1;
                if (r.isAttr() ? (a = xe.isAnnotationsProperty(r.property()), i = r.parent().types()) : r.isElement() && (i = r.asElement().types()), i) {
                    var o = e.name(), s = o.indexOf(".") >= 0;
                    if (s) {
                        var u = a ? i.getAnnotationTypeRegistry() : i.getTypeRegistry();
                        n = u.get(o);
                    }
                    else
                        n = a ? i.getAnnotationType(o) : i.getType(o);
                }
            } return new ve.TypeInstanceImpl(t, n); }
            function Y(e) { var t = e.highLevel().value(); return "string" == typeof t || null == t ? t : Te.StructuredValue.isInstance(t) ? t.valueName() : null; }
            function G(e) { return $(e); }
            function X(e) { return $(e); }
            function z(e) { return $(e); }
            function $(e) { var t = e.highLevel(), n = t.parent(), r = e.name(), i = Pe.referenceTargets(t.property(), n).filter(function (e) { return Te.qName(e, n) == r; }); return 0 == i.length ? null : i[0].wrapperNode(); }
            function J(e, t, n, r) { void 0 === r && (r = !0); var i = t.lowLevel(), a = t.definition().property(n ? "example" : "examples"), o = Ne.getUniverse("RAML10"), s = o.type(_e.Universe10.ExampleSpec.name), u = e.examples().filter(function (e) { return null != e && !e.isEmpty() && e.isSingle() == n; }); return u.map(function (e) { var n = e.asJSON(), o = e.isSingle() ? "example" : null, u = i.unit(), l = new De.AstNode(u, n, i, null, o), p = r ? new Te.ASTNodeImpl(l, t, s, a) : t, c = e.annotations(), f = Be(c, l, p, u), m = e.scalarsAnnotations(), h = {}; Object.keys(m).forEach(function (e) { return h[e] = Be(m[e], l, p, u); }); var d = new We(p, e, f, { description: function () { return h.description || []; }, displayName: function () { return h.displayName || []; }, strict: function () { return h.strict || []; } }); return d; }); }
            function Q(e, t) { void 0 === t && (t = !1); var n = e.runtimeDefinition(); if (!n)
                return []; var r = e.highLevel(); return J(n, r, t); }
            function Z(e) { var t = Q(e, !0); return t.length > 0 ? t[0] : null; }
            function ee(e) { return Q(e); }
            function te(e) { var t = e.runtimeDefinition(), n = t.fixedFacets(); if (e.kind() == _e.Universe10.UnionTypeDeclaration.name)
                for (var r = t.allFixedBuiltInFacets(), i = 0, a = Object.keys(r); i < a.length; i++) {
                    var o = a[i];
                    n[o] = r[o];
                }
            else
                for (var s = Object.keys(n), u = 0, l = s; u < l.length; u++) {
                    var o = l[u];
                    null == t.facet(o) && delete n[o];
                } if (0 == Object.keys(n).length)
                return null; var p = new De.AstNode(null, n); return new ve.TypeInstanceImpl(p); }
            function ne(e) { var t = e.highLevel().attributes(Ne.universesInfo.Universe10.TypeDeclaration.properties.type.name), n = t.filter(function (e) { return Te.StructuredValue.isInstance(e.value()); }); if (0 == n.length)
                return e.type_original().map(function (e) { return null === e || "NULL" === e || "Null" === e ? "string" : e; }); var r = !1, i = t.map(function (e) { var t = e.value(); return null == t ? null : "string" == typeof t ? t : (Te.StructuredValue.isInstance(t) && (r = !0), t.toString()); }); return r ? null : i; }
            function re(e) { var t = !1, n = e.highLevel().attributes(Ne.universesInfo.Universe10.TypeDeclaration.properties.schema.name); if (t)
                return null; var r = n.filter(function (e) { return Te.StructuredValue.isInstance(e.value()); }); if (0 == r.length)
                return e.schema_original(); var i = n.map(function (e) { var n = e.value(); return "string" == typeof n ? n : (Te.StructuredValue.isInstance(n) && (t = !0), n.toString()); }); return t ? null : i; }
            function ie(e) { var t = e.highLevel().attributes(Ne.universesInfo.Universe10.TypeDeclaration.properties.type.name); t = t.concat(e.highLevel().attributes(Ne.universesInfo.Universe10.TypeDeclaration.properties.schema.name)); for (var n = t.map(function (e) { return e.value(); }), r = 0, i = n; r < i.length; r++) {
                var a = i[r];
                if (Te.StructuredValue.isInstance(a)) {
                    var o = new ve.TypeInstanceImpl(a.lowLevel());
                    return o;
                }
            } return null; }
            function ae(e) { for (var t = e.highLevel().attributes(Ne.universesInfo.Universe10.ArrayTypeDeclaration.properties.items.name), n = t.map(function (e) { return e.value(); }), r = 0, i = n; r < i.length; r++) {
                var a = i[r];
                if (Te.StructuredValue.isInstance(a)) {
                    var o = new ve.TypeInstanceImpl(a.lowLevel());
                    return o;
                }
            } return null; }
            function oe(e) { var t = e.value(), n = e.highLevel().lowLevel().unit().resolve(t), r = n.highLevel(), i = r.asElement(); if (i) {
                var a = i.wrapperNode();
                return he.isLibrary(a) ? (a.setAttributeDefaults(e.attributeDefaults()), a) : null;
            } return null; }
            function se(e) { var t = e.highLevel().attributes(Ne.universesInfo.Universe10.ArrayTypeDeclaration.properties.items.name), n = t.filter(function (e) { return Te.StructuredValue.isInstance(e.value()); }); if (0 == n.length)
                return e.items_original().map(function (e) { return null === e || "NULL" === e || "Null" === e ? "string" : e; }); var r = !1, i = t.map(function (e) { var t = e.value(); return null == t ? null : "string" == typeof t ? t : (Te.StructuredValue.isInstance(t) && (r = !0), t.toString()); }); return r ? null : i; }
            function ue(e) { var t = e.highLevel(); if (!t)
                return null; var n = t.attr(be.Universe10.TypeDeclaration.properties.type.name); if (null == n)
                return null; var r = n.lowLevel(); if (null == r)
                return null; var i = n.value(); if (!i || "string" != typeof i)
                return null; var a = r.end() - i.length + 1, o = n.lowLevel().unit(); if (!o)
                return null; var s = Pe.findDeclaration(o, a); return s && s.getKind && s.getKind() == Ae.NodeKind.NODE && xe.isTypeDeclarationSibling(s.definition()) ? s.wrapperNode() : null; }
            function le(e) { var t = e.runtimeType(); if (!t)
                return null; if (!t.isArray() || !t.componentType)
                return null; var n = t, r = n.componentType(); if (!r)
                return null; var i = Pe.getNominalTypeSource(r); if (!i)
                return null; var a = i.getSource(); if (!a)
                return null; if (!a.isElement())
                return null; if (!xe.isTypeDeclarationSibling(a.definition()))
                return null; var o = a.wrapperNode(); return o; }
            function pe(e) { var t = e.items_original(); if (t && "string" != typeof t && (!Array.isArray(t) || 0 != t.length)) {
                var n = e.highLevel(), r = _e.Universe10.ArrayTypeDeclaration.properties.items.name, i = n.attr(r), a = n.definition().universe().type(_e.Universe10.TypeDeclaration.name), o = n.definition().universe().type(_e.Universe10.ArrayTypeDeclaration.name), s = new Te.ASTNodeImpl(i.lowLevel(), n, a, o.property(r));
                s.patchType(ke.doDescrimination(s));
            } var u = le(e); return u ? u : ue(e); }
            function ce(e, t, n, r) { if ("string" != typeof t)
                return []; var i = n.highLevel(), a = i.definition(), o = a.property(r); if (!t)
                return []; var s = {}; e.forEach(function (e) { var t = s[e.name()]; t || (t = [], s[e.name()] = t), t.push(e); }); for (var u = [], l = 0, p = {}, c = t.indexOf("{"); c >= 0 && (l = t.indexOf("}", ++c), !(0 > l)); c = t.indexOf("{", l)) {
                var f = t.substring(c, l);
                if (p[f] = !0, s[f])
                    s[f].forEach(function (e) { return u.push(e); });
                else {
                    var m = a.universe(), h = m.type(_e.Universe10.StringTypeDeclaration.name), d = Se.createStubNode(h, null, f, i.lowLevel().unit()), y = ye.buildWrapperNode(d), v = y.highLevel();
                    v.setParent(i), y.meta().setCalculated(), y.setName(f), v.patchProp(o), u.push(y);
                }
            } return Object.keys(s).filter(function (e) { return !p[e]; }).forEach(function (e) { return s[e].forEach(function (e) { return u.push(e); }); }), u; }
            function fe(e) { if (e.kind() == _e.Universe10.Method.name || xe.isTypeDeclarationSibling(e.definition())) {
                for (var t = !1, n = e.highLevel().parent(); null != n;) {
                    var r = n.definition();
                    if (xe.isResourceTypeType(r) || xe.isTraitType(r)) {
                        t = !0;
                        break;
                    }
                    n = n.parent();
                }
                if (!t)
                    return null;
            } var i = e.highLevel(); if (null == i)
                return null; var a = i.lowLevel(); if (null == a)
                return null; var o = a.children().filter(function (e) { var t = e.key(); return t ? "(" == t.charAt(0) && ")" == t.charAt(t.length - 1) ? !1 : t.indexOf("<<") >= 0 : !1; }); if (0 == o.length)
                return null; var s = new ve.TypeInstanceImpl(o); return s; }
            var me = this && this.__extends || function (e, t) { function n() { this.constructor = e; } for (var r in t)
                t.hasOwnProperty(r) && (e[r] = t[r]); e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype, new n); }, he = n(11), de = n(22), ye = n(45), ve = n(48), ge = n(57), Ae = n(9), Te = n(16), Ee = n(28), Se = n(18), Ne = n(39), _e = n(17), be = n(17), Ie = n(23), Re = n(35), Me = n(27), we = n(30), Ce = n(41), Le = n(51), Pe = n(13), Oe = n(25), De = n(54), Ue = n(15), xe = n(14), ke = n(29), Fe = n(60);
            t.resolveType = r, t.runtimeType = i, t.load = a, t.completeRelativeUri = o, t.expandLibrarySpec = s, t.expandSpec = u, t.expandTraitsAndResourceTypes = l, t.expandLibraries = p, t.absoluteUri = c, t.validateInstance = f, t.validateInstanceWithDetailedStatuses = m, t.traitsPrimary = h, t.allTraits = d, t.resourceTypesPrimary = y, t.allResourceTypes = v, t.relativeUriSegments = A, t.parentResource = T, t.parent = E, t.childResource = S, t.getResource = N, t.childMethod = _, t.getMethod = b, t.ownerApi = R, t.methodId = M, t.isOkRange = w, t.allResources = C, t.matchUri = L;
            t.uriParametersPrimary = P, t.uriParameters = O, t.baseUriParametersPrimary = D, t.baseUriParameters = U, t.absoluteUriParameters = x, t.protocolsPrimary = F, t.allProtocols = B, t.securedByPrimary = K, t.allSecuredBy = V, t.securitySchemeName = j, t.securityScheme = W, t.RAMLVersion = q, t.structuredValue = H, t.referenceName = Y, t.referencedTrait = G, t.referencedAnnotation = X, t.referencedResourceType = z;
            var Be = function (e, t, n, r) { var i = []; if (e)
                for (var a = Ne.getUniverse("RAML10"), o = a.type("Annotable").property("annotations"), s = 0, u = Object.keys(e); s < u.length; s++) {
                    var l = u[s], p = e[l], c = new De.AstNode(r, p.value(), t, null, "(" + l + ")"), f = new Te.ASTPropImpl(c, n, o.range(), o), m = new de.AnnotationRefImpl(f);
                    i.push(m);
                } return i; };
            t.examplesFromNominal = J, t.getTypeExample = Z, t.getTypeExamples = ee, t.typeFixedFacets = te, t.typeValue = ne, t.schemaValue = re, t.typeStructuredValue = ie, t.itemsStructuredValue = ae, t.referencedNode = oe, t.getItems = se, t.findComponentTypeDeclaration = pe, t.getTemplateParametrizedProperties = fe;
            var Ke = function () { function e(e, t) { this._content = e, this._name = t; } return e.prototype.name = function () { return this._name; }, e.prototype.content = function () { return this._content; }, e; }();
            t.SchemaDef = Ke;
            var Ve = function () { function e(e, t) { this.key = e, this.value = t; } return e; }();
            t.ParamValue = Ve;
            var je = function () { function e(e) { this._param = e, this.description = e.description() ? e.description().value() : this.description, this.displayName = e.displayName(), this.type = e.type().length > 0 ? e.type()[0] : "string", this.example = e.example(), this.required = e.required(), this["default"] = e["default"](); } return e; }(), We = function (e) { function t(t, n, r, i) { e.call(this, t), this.expandable = n, this._annotations = r, this._scalarAnnotations = i; } return me(t, e), t.prototype.value = function () { return this.expandable.asString(); }, t.prototype.structuredValue = function () { var e; e = this.expandable.isJSONString() || this.expandable.isYAML() ? this.expandable.asJSON() : this.expandable.original(); var t = this._node.lowLevel(), n = this.expandable.isSingle() ? "example" : null, r = new De.AstNode(t.unit(), e, t, null, n); return new ve.TypeInstanceImpl(r); }, t.prototype.strict = function () { return this.expandable.strict(); }, t.prototype.description = function () { var e = this.expandable.description(); if (null == e && null !== e)
                return null; var t = Se.createAttr(this._node.definition().property(_e.Universe10.ExampleSpec.properties.description.name), e), n = new de.MarkdownStringImpl(t); return n; }, t.prototype.name = function () { return this.expandable.name(); }, t.prototype.displayName = function () { return this.expandable.displayName(); }, t.prototype.annotations = function () { return this._annotations; }, t.prototype.scalarsAnnotations = function () { return this._scalarAnnotations; }, t.prototype.uses = function () { return e.prototype.elements.call(this, "uses"); }, t; }(ve.BasicNodeImpl);
            t.ExampleSpecImpl = We;
        }, function (e, t, n) {
            "use strict";
            var r = n(39);
            e.exports = r;
        }, function (e, t, n) {
            "use strict";
            var r = n(39);
            e.exports = r.getUniverse;
        }, function (e, t, n) {
            "use strict";
            function r() { return t.rt.getSchemaUtils(); }
            function i(e) { e.isUnion ? e.addAdapter(new b(e)) : e.range && e.addAdapter(new _(e)); }
            function a(e) { return e.getSource && "function" == typeof e.getSource; }
            function o(e) { var t = e; return t.genuineUserDefinedType && t.isUserDefined && t.isUserDefined(); }
            function s(e, t, n, r, i) { var a = new T(e, t); return a.withDomain(n, i).withRange(r); }
            var u = this && this.__extends || function (e, t) { function n() { this.constructor = e; } for (var r in t)
                t.hasOwnProperty(r) && (e[r] = t[r]); e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype, new n); };
            t.rt = n(88);
            var l = t.rt.nominalTypes;
            t.getSchemaUtils = r, t.TOP_LEVEL_EXTRA = t.rt.TOP_LEVEL_EXTRA, t.DEFINED_IN_TYPES_EXTRA = t.rt.DEFINED_IN_TYPES_EXTRA, t.USER_DEFINED_EXTRA = t.rt.USER_DEFINED_EXTRA, t.SOURCE_EXTRA = t.rt.SOURCE_EXTRA, t.tsInterfaces = t.rt.tsInterfaces, t.injector = { inject: function (e) { i(e); } }, l.registerInjector(t.injector);
            var p = function (e) { function t() { e.apply(this, arguments); } return u(t, e), t; }(l.AbstractType);
            t.AbstractType = p;
            var c = function (e) { function t() { e.apply(this, arguments); } return u(t, e), t; }(l.ValueType);
            t.ValueType = c;
            var f = function () { function e() { } return e.isInstance = function (t) { if (null != t && t.getClassIdentifier && "function" == typeof t.getClassIdentifier)
                for (var n = 0, r = t.getClassIdentifier(); n < r.length; n++) {
                    var i = r[n];
                    if (i == e.CLASS_IDENTIFIER)
                        return !0;
                } return !1; }, e.prototype.getClassIdentifier = function () { var t = []; return t.concat(e.CLASS_IDENTIFIER); }, e.prototype.getSource = function () { return null; }, e.CLASS_IDENTIFIER = "definitionSystem.SourceProvider", e; }();
            t.SourceProvider = f, t.isSourceProvider = a;
            var m = function (e) { function t() { e.apply(this, arguments), this.values = []; } return u(t, e), t.isInstance = function (e) { if (null != e && e.getClassIdentifier && "function" == typeof e.getClassIdentifier)
                for (var n = 0, r = e.getClassIdentifier(); n < r.length; n++) {
                    var i = r[n];
                    if (i == t.CLASS_IDENTIFIER)
                        return !0;
                } return !1; }, t.prototype.getClassIdentifier = function () { var e = []; return e.concat(t.CLASS_IDENTIFIER); }, t.CLASS_IDENTIFIER = "definitionSystem.EnumType", t; }(c);
            t.EnumType = m;
            var h = function (e) { function t(t, n, r, i) { e.call(this, t, i, n), this.referenceTo = r; } return u(t, e), t.isInstance = function (e) { if (null != e && e.getClassIdentifier && "function" == typeof e.getClassIdentifier)
                for (var n = 0, r = e.getClassIdentifier(); n < r.length; n++) {
                    var i = r[n];
                    if (i == t.CLASS_IDENTIFIER)
                        return !0;
                } return !1; }, t.prototype.getClassIdentifier = function () { var e = []; return e.concat(t.CLASS_IDENTIFIER); }, t.prototype.getReferencedType = function () { return this.universe().type(this.referenceTo); }, t.prototype.hasStructure = function () { return !0; }, t.CLASS_IDENTIFIER = "definitionSystem.ReferenceType", t; }(c);
            t.ReferenceType = h;
            var d = function (e) { function t(t, n, r, i) { void 0 === i && (i = ""), e.call(this, t, n, r); } return u(t, e), t.isInstance = function (e) { if (null != e && e.getClassIdentifier && "function" == typeof e.getClassIdentifier)
                for (var n = 0, r = e.getClassIdentifier(); n < r.length; n++) {
                    var i = r[n];
                    if (i == t.CLASS_IDENTIFIER)
                        return !0;
                } return !1; }, t.prototype.getClassIdentifier = function () { var e = []; return e.concat(t.CLASS_IDENTIFIER); }, t.prototype.allProperties = function (t) { return void 0 === t && (t = {}), e.prototype.allProperties.call(this, t); }, t.CLASS_IDENTIFIER = "definitionSystem.NodeClass", t; }(l.StructuredType);
            t.NodeClass = d;
            var y = function (e) { function t(t, n, r, i, a) { e.call(this, t, n, i, a), this.getAdapter(b).setDeclaringNode(r); } return u(t, e), t.isInstance = function (e) { if (null != e && e.getClassIdentifier && "function" == typeof e.getClassIdentifier)
                for (var n = 0, r = e.getClassIdentifier(); n < r.length; n++) {
                    var i = r[n];
                    if (i == t.CLASS_IDENTIFIER_UserDefinedClass)
                        return !0;
                } return !1; }, t.prototype.getClassIdentifier = function () { var n = e.prototype.getClassIdentifier.call(this); return n.concat(t.CLASS_IDENTIFIER_UserDefinedClass); }, t.prototype.key = function () { return null; }, t.prototype.isUserDefined = function () { return !0; }, t.prototype.typeId = function () { var e = this.nameId(), t = this.getAdapter(b).getDeclaringNode(); if (t) {
                e += t.lowLevel().start();
                var n = t.lowLevel().unit();
                n && (e += n.absolutePath());
            } return e; }, t.prototype.hasValueTypeInHierarchy = function () { return this._value ? !0 : this.isAssignableFrom("ObjectTypeDeclaration") ? !1 : !1; }, t.prototype.isGenuineUserDefinedType = function () { return null != this.genuineUserDefinedType(); }, t.prototype.genuineUserDefinedType = function () { var e = this.getAdapter(b).getDeclaringNode(); return e ? this : null; }, t.CLASS_IDENTIFIER_UserDefinedClass = "definitionSystem.UserDefinedClass", t; }(d);
            t.UserDefinedClass = y, t.isUserDefinedClass = o;
            var v = function (e) { function t() { e.apply(this, arguments); } return u(t, e), t.prototype.allProperties = function (e) { void 0 === e && (e = {}); var t = this.superTypes()[0].allProperties(); if (0 == t.length) {
                var n = this.getAdapter(b).getDeclaringNode(), r = new E("value", n);
                r.withDomain(this), r.withCanBeValue(), r.withRequired(!1);
                this.superTypes()[0];
                t = [], r.withRange(r.node().asElement().definition().universe().type("string")), t.push(r);
            } return t; }, t.prototype.isAnnotationType = function () { return !0; }, t; }(y);
            t.AnnotationType = v;
            var g = function (e) {
                function t(t, n, r, i) { void 0 === n && (n = ""), void 0 === r && (r = null), void 0 === i && (i = "RAML08"), e.call(this, n), this._parent = r, this._classes = [], this._uversion = "RAML08", this.aMap = {}, this.matchedObjects = t, this._uversion = i; }
                return u(t, e), t.prototype.matched = function () { return this.matchedObjects ? this.matchedObjects : this._parent ? this._parent.matched() : void 0; }, t.prototype.setTopLevel = function (e) { this._topLevel = e; }, t.prototype.getTopLevel = function () { return this._topLevel; }, t.prototype.setOriginalTopLevelText = function (e) { this._originalTopLevelText = e; }, t.prototype.getOriginalTopLevelText = function () { return this._originalTopLevelText; }, t.prototype.setTypedVersion = function (e) { this._typedVersion = e; }, t.prototype.getTypedVersion = function () { return this._typedVersion; }, t.prototype.version = function () { return this._uversion; }, t.prototype.setUniverseVersion = function (e) { this._uversion = e; }, t.prototype.types = function () { var e = [].concat(this._classes); return null != this._parent && (e = e.concat(this._parent.types())), e; }, t.prototype.type = function (e) { if (this.aMap[e])
                    return this.aMap[e]; for (var t, n = 0; n < this._classes.length; n++)
                    if (this._classes[n].nameId() == e) {
                        t = this._classes[n];
                        break;
                    } if (null == t && this._parent) {
                    var t = this._parent.type(e);
                    if (t instanceof p) {
                        var r = t;
                        r._universe = this;
                    }
                } return t; }, t.prototype.register = function (e) {
                    return this._classes.push(e),
                        e instanceof d && this._classes.forEach(function (t) { if (t instanceof d) {
                            var n = t;
                            n.getAdapter(b).getExtendedType() == e && e.getAdapter(b).getRuntimeExtenders().push(t);
                        } }), this;
                }, t.prototype.registerAlias = function (e, t) { this.aMap[e] = t; }, t.prototype.unregister = function (e) { this._classes = this._classes.filter(function (t) { return t != e; }); var t = e.superTypes(); return t.forEach(function (t) { var n = t; n._superTypes = n._superTypes.filter(function (t) { return t != e; }); }), t = e.subTypes(), t.forEach(function (t) { var n = t; n._subTypes = n._subTypes.filter(function (t) { return t != e; }); }), this; }, t.prototype.registerSuperClass = function (e, t) { var n = e, r = t; n._superTypes.push(t), r._subTypes.push(e); }, t;
            }(l.Described);
            t.Universe = g, t.prop = s;
            var A = function () { function e(e, t) { this.name = e, this.value = t; } return e; }();
            t.ChildValueConstraint = A;
            var T = function (e) { function t() { e.apply(this, arguments), this._isFromParentValue = !1, this._isFromParentKey = !1, this._key = !1, this._declaresFields = !1, this._describes = null, this._canBeDuplicator = !1, this._allowsNull = !1, this._canBeValue = !1, this._isInherited = !1, this._selfNode = !1, this._noDirectParse = !1, this._contextReq = [], this.determinesChildValues = []; } return u(t, e), t.isInstance = function (e) { if (null != e && e.getClassIdentifier && "function" == typeof e.getClassIdentifier)
                for (var n = 0, r = e.getClassIdentifier(); n < r.length; n++) {
                    var i = r[n];
                    if (i == t.CLASS_IDENTIFIER_Property_def)
                        return !0;
                } return !1; }, t.prototype.getClassIdentifier = function () { var n = e.prototype.getClassIdentifier.call(this); return n.concat(t.CLASS_IDENTIFIER_Property_def); }, t.prototype.isPrimitive = function () { return this.range().isValueType() && !(this.range() instanceof h); }, t.prototype.withNoDirectParse = function () { this._noDirectParse = !0; }, t.prototype.isNoDirectParse = function () { return this._noDirectParse; }, t.prototype.withSelfNode = function () { this._selfNode = !0; }, t.prototype.isSelfNode = function () { return this._selfNode; }, t.prototype.matchKey = function (t) { return null != this._groupName ? this.isAnnotation() ? "(" == t.charAt(0) && ")" == t.charAt(t.length - 1) ? !0 : !1 : this._groupName == t : e.prototype.matchKey.call(this, t); }, t.prototype.valueDocProvider = function () { return this._vprovider; }, t.prototype.setValueDocProvider = function (e) { return this._vprovider = e, this; }, t.prototype.suggester = function () { return this._suggester; }, t.prototype.setValueSuggester = function (e) { this._suggester = e; }, t.prototype.enumOptions = function () { return this._enumOptions && "string" == typeof this._enumOptions ? [this._enumOptions + ""] : this._enumOptions; }, t.prototype.getOftenKeys = function () { return this._oftenKeys; }, t.prototype.withOftenKeys = function (e) { return this._oftenKeys = e, this; }, t.prototype.withCanBeValue = function () { return this._canBeValue = !0, this; }, t.prototype.withInherited = function (e) { this._isInherited = e; }, t.prototype.isInherited = function () { return this._isInherited; }, t.prototype.isAllowNull = function () { return this._allowsNull; }, t.prototype.withAllowNull = function () { this._allowsNull = !0; }, t.prototype.getCanBeDuplicator = function () { return this._canBeDuplicator; }, t.prototype.canBeValue = function () { return this._canBeValue; }, t.prototype.setCanBeDuplicator = function () { return this._canBeDuplicator = !0, !0; }, t.prototype.inheritedContextValue = function () { return this._inheritsValueFromContext; }, t.prototype.withInheritedContextValue = function (e) { return this._inheritsValueFromContext = e, this; }, t.prototype.withContextRequirement = function (e, t) { this._contextReq.push({ name: e, value: t }); }, t.prototype.getContextRequirements = function () { return this._contextReq; }, t.prototype.withDescribes = function (e) { return this._describes = e, this; }, t.prototype.describesAnnotation = function () { return null != this._describes; }, t.prototype.describedAnnotation = function () { return this._describes; }, t.prototype.isReference = function () { return this.range() instanceof h; }, t.prototype.referencesTo = function () { return this.range().getReferencedType(); }, t.prototype.newInstanceName = function () { return this._newInstanceName ? this._newInstanceName : this.range().nameId(); }, t.prototype.withThisPropertyDeclaresFields = function (e) { return void 0 === e && (e = !0), this._declaresFields = e, this; }, t.prototype.isThisPropertyDeclaresTypeFields = function () { return this._declaresFields; }, t.prototype.withNewInstanceName = function (e) { return this._newInstanceName = e, this; }, t.prototype.addChildValueConstraint = function (e) { this.determinesChildValues.push(e); }, t.prototype.getChildValueConstraints = function () { return this.determinesChildValues; }, t.prototype.childRestrictions = function () { return this.determinesChildValues; }, t.prototype.id = function () { return this._id ? this._id : this._groupName ? this.domain().getAdapter(b).getDeclaringNode() ? null : (this._id = this._groupName + this.domain().nameId(), this._id) : null; }, t.prototype.isAnnotation = function () { return "annotations" == this._groupName && this.domain() && !this.domain().isUserDefined(); }, t.prototype.withFromParentValue = function (e) { return void 0 === e && (e = !0), this._isFromParentValue = e, this; }, t.prototype.withFromParentKey = function (e) { return void 0 === e && (e = !0), this._isFromParentKey = e, this; }, t.prototype.isFromParentKey = function () { return this._isFromParentKey; }, t.prototype.isFromParentValue = function () { return this._isFromParentValue; }, t.prototype.withGroupName = function (e) { return this._groupName = e, this; }, t.prototype.unmerge = function () { return this._groupName = this.nameId(), this; }, t.prototype.merge = function () { return this._groupName = null, this; }, t.prototype.withKey = function (e) { return this._key = e, this; }, t.prototype.isKey = function () { return this._key; }, t.prototype.isMerged = function () { return null == this._groupName; }, t.prototype.groupName = function () { return this._groupName; }, t.prototype.key = function () { return null; }, t.CLASS_IDENTIFIER_Property_def = "definitionSystem.Property", t; }(l.Property);
            t.Property = T;
            var E = function (e) { function t(t, n) { e.call(this, t), this._node = n; } return u(t, e), t.isInstance = function (e) { if (null != e && e.getClassIdentifier && "function" == typeof e.getClassIdentifier)
                for (var n = e.getClassIdentifier(), r = 0; r < n.length; r++)
                    if (n[r] == t.CLASS_IDENTIFIER)
                        return !0; return !1; }, t.prototype.getClassIdentifier = function () { var n = e.prototype.getClassIdentifier.call(this); return n.concat(t.CLASS_IDENTIFIER); }, t.prototype.withDisplayName = function (e) { this._displayName = e; }, t.prototype.getDisplayName = function () { return this._displayName; }, t.prototype.node = function () { return this._node || null == this.sourceProvider || (this._node = this.sourceProvider.getSource()), this._node; }, t.prototype.setSourceProvider = function (e) { this.sourceProvider = e; }, t.CLASS_IDENTIFIER = "definitionSystem.UserDefinedProp", t; }(T);
            t.UserDefinedProp = E;
            var S = function () { function e() { } return e.prototype.setDocTableName = function (e) { this._documentationTableName = e; }, e.prototype.docTableName = function () { return this._documentationTableName; }, e.prototype.setHidden = function (e) { this._isHidden = e; }, e.prototype.isHidden = function () { return this._isHidden; }, e.prototype.setMarkdownDescription = function (e) { this._markdownDescription = e; }, e.prototype.markdownDescription = function () { return this._markdownDescription; }, e.prototype.setValueDescription = function (e) { this._valueDescription = e; }, e.prototype.valueDescription = function () { return this._valueDescription; }, e; }();
            t.RAMLPropertyDocumentationService = S;
            var N = function (e) { function t() { e.apply(this, arguments); } return u(t, e), t.prototype.isSystem = function () { return this._isSystemProperty; }, t.prototype.withSystem = function (e) { return this._isSystemProperty = e, this; }, t.prototype.isEmbedMap = function () { return this._isEmbededMap; }, t.prototype.withEmbedMap = function () { return this._isEmbededMap = !0, this; }, t; }(S);
            t.RAMLPropertyParserService = N;
            var _ = function (e) { function t(t) { if (e.call(this), this._property = t, this._meta = {}, !t)
                throw new Error; e.call(this); } return u(t, e), t.prototype.valueDocProvider = function () { return this._property.valueDocProvider(); }, t.prototype.withPropertyGrammarType = function (e) { this._propertyGrammarType = e; }, t.prototype.getPropertyGrammarType = function () { return this._propertyGrammarType; }, t.prototype.id = function () { return this._property.nameId(); }, t.prototype.range = function () { return this._property.range(); }, t.prototype.domain = function () { return this._property.domain(); }, t.prototype.isAllowNull = function () { return this._property.isAllowNull(); }, t.prototype.referencesTo = function () { return this._property.referencesTo(); }, t.prototype.isReference = function () { return this._property.isReference(); }, t.prototype.nameId = function () { return this._property.nameId(); }, t.prototype.priority = function () { return this.isKey() ? 128 : this.isReference() ? 64 : this.isTypeExpr() ? 32 : "example" == this.nameId() ? 0 : -1024; }, t.prototype.isKey = function () { return this._property instanceof T ? this._property.isKey() : !1; }, t.prototype.isMerged = function () { return this._property instanceof T ? this._property.isMerged() : !1; }, t.prototype.isTypeExpr = function () { return this.texpr; }, t.prototype.isExampleProperty = function () { return this.example; }, t.prototype.setExample = function (e) { this.example = e; }, t.prototype.setTypeExpression = function (e) { this.texpr = e; }, t.prototype.isDescriminating = function () { return this._property.isDescriminator(); }, t.prototype.putMeta = function (e, t) { this._meta[e] = t; }, t.prototype.meta = function (e) { return this._meta[e]; }, t; }(N);
            t.RAMLPropertyService = _;
            var b = function () {
                function e(e) {
                    //!!!
                    this._allowsOptionalProperties = !1, this._possibleInterfaces = [],
                        //!!!
                        this._canInherit = [], this._declaredBy = [],
                        //!!!
                        this._aliases = [],
                        //!!!???
                        this._defining = [], this._runtimeExtenders = [],
                        //!!!???
                        this._declaresType = null,
                        //!!!
                        this._isTemplate = !1,
                        //!!!
                        this._contextRequirements = [], this._type = e;
                }
                return e.prototype.withAllowQuestion = function () { this._allowsOptionalProperties = !0; }, e.prototype.getAllowQuestion = function () { return this._allowsOptionalProperties; }, e.prototype.withCanInherit = function (e) { this._canInherit.push(e); }, e.prototype.getReferenceIs = function () { return this._referenceIs; }, e.prototype.withReferenceIs = function (e) { this._referenceIs = e; }, e.prototype.descriminatorValue = function () { return 0 == this.valueRequirements().length ? this.nameId() : this.valueRequirements()[0].value; }, e.prototype.getCanInherit = function () { return this._canInherit; }, e.prototype.withAllowAny = function () { this._allowsAnyChildren = !0; }, e.prototype.getAllowAny = function () { return this._allowsAnyChildren || this._type.isExternal(); }, e.prototype.globallyDeclaredBy = function () { return this._declaredBy; }, e.prototype.setGloballyDeclaredBy = function (e) { this._declaredBy.push(e); }, e.prototype.setDeclaringNode = function (e) { this._node = e; }, e.prototype.nameId = function () { return this._type.nameId(); }, e.prototype.universe = function () { return this._type.universe(); }, e.prototype.isAssignableFrom = function (e) { return this._type.isAssignableFrom(e); }, e.prototype.setConsumesRefs = function (e) { this._consumesRef = e; }, e.prototype.definingPropertyIsEnough = function (e) { this._defining.push(e); }, e.prototype.getDefining = function () { return this._defining; }, e.prototype.getConsumesRefs = function () { return this._consumesRef; }, e.prototype.addAlias = function (e) { this._aliases.push(e); }, e.prototype.getAliases = function () { return this._aliases; }, e.prototype.valueRequirements = function () { return this._type.valueRequirements(); }, e.prototype.isAnnotation = function () { return this._annotationChecked ? this._isAnnotation : (this._annotationChecked = !0, this._isAnnotation = this._type.allSuperTypes().some(function (e) { return e.key() && "AnnotationRef" == e.key().name; }), this._isAnnotation); }, e.prototype.allowValue = function () { return this._allowsValueSet ? this._allowsValue : this._type.allProperties().some(function (e) { return e.isFromParentValue() || e.canBeValue(); }) ? (this._allowsValue = !0, this._allowsValueSet = !0, !0) : (this._allowsValueSet = !0, !1); }, e.prototype.key = function () { return this._type.key(); }, e.prototype.getRepresentationOf = function () { return this._representationOf; }, e.prototype.getPath = function () { return ""; }, e.prototype.isDeclaration = function () { return this._isTemplate ? !0 : this._convertsToGlobal ? !0 : this._declaresType ? !0 : this.key() && "Library" === this.key().name ? !0 : !1; }, e.prototype.isGlobalDeclaration = function () { return this._actuallyExports ? !0 : this._isTemplate ? !0 : this._declaresType ? !0 : !1; }, e.prototype.isTypeSystemMember = function () { return null != this._declaresType; }, e.prototype.getExtendedType = function () { return this.universe().type(this._declaresType); }, e.prototype.setInlinedTemplates = function (e) { return this._isTemplate = e, this; }, e.prototype.getRuntimeExtenders = function () { return this._runtimeExtenders; }, e.prototype.isInlinedTemplates = function () { return this._isTemplate; }, e.prototype.setExtendedTypeName = function (t) { this._declaresType = t; var n = this.universe().type(t); if (n instanceof d) {
                    var r = n;
                    r.getAdapter(e)._runtimeExtenders.push(this._type);
                } }, e.prototype.getKeyProp = function () { for (var e = this._type.allProperties(), t = 0; t < e.length; t++)
                    if (e[t].getAdapter(_).isKey())
                        return e[t]; return null; }, e.prototype.withActuallyExports = function (e) { this._actuallyExports = e; }, e.prototype.withConvertsToGlobal = function (e) { this._convertsToGlobal = e; }, e.prototype.getConvertsToGlobal = function () { return this._convertsToGlobal; }, e.prototype.getActuallyExports = function () { return this._actuallyExports; }, e.prototype.isUserDefined = function () { return this._type instanceof d ? this._type.isUserDefined() : this._type instanceof p ? this._type.isUserDefined() : !1; }, e.prototype.withContextRequirement = function (e, t) { this._contextRequirements.push({ name: e, value: t }); }, e.prototype.getContextRequirements = function () { return this._contextRequirements; }, e.prototype.findMembersDeterminer = function () { for (var e = this._type.allProperties(), t = 0; t < e.length; t++)
                    if (e[t].isThisPropertyDeclaresTypeFields())
                        return e[t]; return null; }, e.prototype.getDeclaringNode = function () { if (this._node)
                    return this._node; if (this._type) {
                    var e = this._type.getExtra(t.SOURCE_EXTRA);
                    return e ? e instanceof f || e.getSource && "function" == typeof e.getSource ? e.getSource() : e : null;
                } return null; }, e.prototype.registerSupertypes = function (e) { var t = this, n = this._type.universe(); e.forEach(function (e) { var r = n.type(e); r && t._type.addSuperType(r); }); }, e.prototype.registerPossibleInterfaces = function (e) { for (var t = this._type.universe(), n = 0, r = e; n < r.length; n++) {
                    var i = r[n], a = t.type(i);
                    if (!a)
                        return;
                    this._possibleInterfaces.push(a);
                } }, e.prototype.possibleInterfaces = function () { return this._possibleInterfaces; }, e;
            }();
            t.RAMLService = b;
            var I = {}, R = n(61), M = R.universeDumps, w = n(62), C = n(63);
            t.universesInfo = C, t.getUniverse = function () { var e = function (e) { if (I[e])
                return I[e]; var t = M[e], n = w.toDefSystem(t, "RAML08" == e ? C.Universe08 : C.Universe10); return n && (n.setUniverseVersion(e), I[e] = n), n; }; return e.availableUniverses = function () { return Object.keys(M); }, e; }();
        }, function (e, t, n) { function r() { this.protocol = null, this.slashes = null, this.auth = null, this.host = null, this.port = null, this.hostname = null, this.hash = null, this.search = null, this.query = null, this.pathname = null, this.path = null, this.href = null; } function i(e, t, n) { if (e && l(e) && e instanceof r)
            return e; var i = new r; return i.parse(e, t, n), i; } function a(e) { return u(e) && (e = i(e)), e instanceof r ? e.format() : r.prototype.format.call(e); } function o(e, t) { return i(e, !1, !0).resolve(t); } function s(e, t) { return e ? i(e, !1, !0).resolveObject(t) : t; } function u(e) { return "string" == typeof e; } function l(e) { return "object" == typeof e && null !== e; } function p(e) { return null === e; } function c(e) { return null == e; } var f = n(89); t.parse = i, t.resolve = o, t.resolveObject = s, t.format = a, t.Url = r; var m = /^([a-z0-9.+-]+:)/i, h = /:[0-9]*$/, d = ["<", ">", '"', "`", " ", "\r", "\n", "	"], y = ["{", "}", "|", "\\", "^", "`"].concat(d), v = ["'"].concat(y), g = ["%", "/", "?", ";", "#"].concat(v), A = ["/", "?", "#"], T = 255, E = /^[a-z0-9A-Z_-]{0,63}$/, S = /^([a-z0-9A-Z_-]{0,63})(.*)$/, N = { javascript: !0, "javascript:": !0 }, _ = { javascript: !0, "javascript:": !0 }, b = { http: !0, https: !0, ftp: !0, gopher: !0, file: !0, "http:": !0, "https:": !0, "ftp:": !0, "gopher:": !0, "file:": !0 }, I = n(87); r.prototype.parse = function (e, t, n) { if (!u(e))
            throw new TypeError("Parameter 'url' must be a string, not " + typeof e); var r = e; r = r.trim(); var i = m.exec(r); if (i) {
            i = i[0];
            var a = i.toLowerCase();
            this.protocol = a, r = r.substr(i.length);
        } if (n || i || r.match(/^\/\/[^@\/]+@[^@\/]+/)) {
            var o = "//" === r.substr(0, 2);
            !o || i && _[i] || (r = r.substr(2), this.slashes = !0);
        } if (!_[i] && (o || i && !b[i])) {
            for (var s = -1, l = 0; l < A.length; l++) {
                var p = r.indexOf(A[l]);
                -1 !== p && (-1 === s || s > p) && (s = p);
            }
            var c, h;
            h = -1 === s ? r.lastIndexOf("@") : r.lastIndexOf("@", s), -1 !== h && (c = r.slice(0, h), r = r.slice(h + 1), this.auth = decodeURIComponent(c)), s = -1;
            for (var l = 0; l < g.length; l++) {
                var p = r.indexOf(g[l]);
                -1 !== p && (-1 === s || s > p) && (s = p);
            }
            -1 === s && (s = r.length), this.host = r.slice(0, s), r = r.slice(s), this.parseHost(), this.hostname = this.hostname || "";
            var d = "[" === this.hostname[0] && "]" === this.hostname[this.hostname.length - 1];
            if (!d)
                for (var y = this.hostname.split(/\./), l = 0, R = y.length; R > l; l++) {
                    var M = y[l];
                    if (M && !M.match(E)) {
                        for (var w = "", C = 0, L = M.length; L > C; C++)
                            w += M.charCodeAt(C) > 127 ? "x" : M[C];
                        if (!w.match(E)) {
                            var P = y.slice(0, l), O = y.slice(l + 1), D = M.match(S);
                            D && (P.push(D[1]), O.unshift(D[2])), O.length && (r = "/" + O.join(".") + r), this.hostname = P.join(".");
                            break;
                        }
                    }
                }
            if (this.hostname.length > T ? this.hostname = "" : this.hostname = this.hostname.toLowerCase(), !d) {
                for (var U = this.hostname.split("."), x = [], l = 0; l < U.length; ++l) {
                    var k = U[l];
                    x.push(k.match(/[^A-Za-z0-9_-]/) ? "xn--" + f.encode(k) : k);
                }
                this.hostname = x.join(".");
            }
            var F = this.port ? ":" + this.port : "", B = this.hostname || "";
            this.host = B + F, this.href += this.host, d && (this.hostname = this.hostname.substr(1, this.hostname.length - 2), "/" !== r[0] && (r = "/" + r));
        } if (!N[a])
            for (var l = 0, R = v.length; R > l; l++) {
                var K = v[l], V = encodeURIComponent(K);
                V === K && (V = escape(K)), r = r.split(K).join(V);
            } var j = r.indexOf("#"); -1 !== j && (this.hash = r.substr(j), r = r.slice(0, j)); var W = r.indexOf("?"); if (-1 !== W ? (this.search = r.substr(W), this.query = r.substr(W + 1), t && (this.query = I.parse(this.query)), r = r.slice(0, W)) : t && (this.search = "", this.query = {}), r && (this.pathname = r), b[a] && this.hostname && !this.pathname && (this.pathname = "/"), this.pathname || this.search) {
            var F = this.pathname || "", k = this.search || "";
            this.path = F + k;
        } return this.href = this.format(), this; }, r.prototype.format = function () { var e = this.auth || ""; e && (e = encodeURIComponent(e), e = e.replace(/%3A/i, ":"), e += "@"); var t = this.protocol || "", n = this.pathname || "", r = this.hash || "", i = !1, a = ""; this.host ? i = e + this.host : this.hostname && (i = e + (-1 === this.hostname.indexOf(":") ? this.hostname : "[" + this.hostname + "]"), this.port && (i += ":" + this.port)), this.query && l(this.query) && Object.keys(this.query).length && (a = I.stringify(this.query)); var o = this.search || a && "?" + a || ""; return t && ":" !== t.substr(-1) && (t += ":"), this.slashes || (!t || b[t]) && i !== !1 ? (i = "//" + (i || ""), n && "/" !== n.charAt(0) && (n = "/" + n)) : i || (i = ""), r && "#" !== r.charAt(0) && (r = "#" + r), o && "?" !== o.charAt(0) && (o = "?" + o), n = n.replace(/[?#]/g, function (e) { return encodeURIComponent(e); }), o = o.replace("#", "%23"), t + i + n + o + r; }, r.prototype.resolve = function (e) { return this.resolveObject(i(e, !1, !0)).format(); }, r.prototype.resolveObject = function (e) { if (u(e)) {
            var t = new r;
            t.parse(e, !1, !0), e = t;
        } var n = new r; if (Object.keys(this).forEach(function (e) { n[e] = this[e]; }, this), n.hash = e.hash, "" === e.href)
            return n.href = n.format(), n; if (e.slashes && !e.protocol)
            return Object.keys(e).forEach(function (t) { "protocol" !== t && (n[t] = e[t]); }), b[n.protocol] && n.hostname && !n.pathname && (n.path = n.pathname = "/"), n.href = n.format(), n; if (e.protocol && e.protocol !== n.protocol) {
            if (!b[e.protocol])
                return Object.keys(e).forEach(function (t) { n[t] = e[t]; }), n.href = n.format(), n;
            if (n.protocol = e.protocol, e.host || _[e.protocol])
                n.pathname = e.pathname;
            else {
                for (var i = (e.pathname || "").split("/"); i.length && !(e.host = i.shift());)
                    ;
                e.host || (e.host = ""), e.hostname || (e.hostname = ""), "" !== i[0] && i.unshift(""), i.length < 2 && i.unshift(""), n.pathname = i.join("/");
            }
            if (n.search = e.search, n.query = e.query, n.host = e.host || "", n.auth = e.auth, n.hostname = e.hostname || e.host, n.port = e.port, n.pathname || n.search) {
                var a = n.pathname || "", o = n.search || "";
                n.path = a + o;
            }
            return n.slashes = n.slashes || e.slashes, n.href = n.format(), n;
        } var s = n.pathname && "/" === n.pathname.charAt(0), l = e.host || e.pathname && "/" === e.pathname.charAt(0), f = l || s || n.host && e.pathname, m = f, h = n.pathname && n.pathname.split("/") || [], i = e.pathname && e.pathname.split("/") || [], d = n.protocol && !b[n.protocol]; if (d && (n.hostname = "", n.port = null, n.host && ("" === h[0] ? h[0] = n.host : h.unshift(n.host)), n.host = "", e.protocol && (e.hostname = null, e.port = null, e.host && ("" === i[0] ? i[0] = e.host : i.unshift(e.host)), e.host = null), f = f && ("" === i[0] || "" === h[0])), l)
            n.host = e.host || "" === e.host ? e.host : n.host, n.hostname = e.hostname || "" === e.hostname ? e.hostname : n.hostname, n.search = e.search, n.query = e.query, h = i;
        else if (i.length)
            h || (h = []), h.pop(), h = h.concat(i), n.search = e.search, n.query = e.query;
        else if (!c(e.search)) {
            if (d) {
                n.hostname = n.host = h.shift();
                var y = n.host && n.host.indexOf("@") > 0 ? n.host.split("@") : !1;
                y && (n.auth = y.shift(), n.host = n.hostname = y.shift());
            }
            return n.search = e.search, n.query = e.query, p(n.pathname) && p(n.search) || (n.path = (n.pathname ? n.pathname : "") + (n.search ? n.search : "")), n.href = n.format(), n;
        } if (!h.length)
            return n.pathname = null, n.search ? n.path = "/" + n.search : n.path = null, n.href = n.format(), n; for (var v = h.slice(-1)[0], g = (n.host || e.host) && ("." === v || ".." === v) || "" === v, A = 0, T = h.length; T >= 0; T--)
            v = h[T], "." == v ? h.splice(T, 1) : ".." === v ? (h.splice(T, 1), A++) : A && (h.splice(T, 1), A--); if (!f && !m)
            for (; A--; A)
                h.unshift(".."); !f || "" === h[0] || h[0] && "/" === h[0].charAt(0) || h.unshift(""), g && "/" !== h.join("/").substr(-1) && h.push(""); var E = "" === h[0] || h[0] && "/" === h[0].charAt(0); if (d) {
            n.hostname = n.host = E ? "" : h.length ? h.shift() : "";
            var y = n.host && n.host.indexOf("@") > 0 ? n.host.split("@") : !1;
            y && (n.auth = y.shift(), n.host = n.hostname = y.shift());
        } return f = f || n.host && h.length, f && !E && h.unshift(""), h.length ? n.pathname = h.join("/") : (n.pathname = null, n.path = null), p(n.pathname) && p(n.search) || (n.path = (n.pathname ? n.pathname : "") + (n.search ? n.search : "")), n.auth = e.auth || n.auth, n.slashes = n.slashes || e.slashes, n.href = n.format(), n; }, r.prototype.parseHost = function () { var e = this.host, t = h.exec(e); t && (t = t[0], ":" !== t && (this.port = t.substr(1)), e = e.substr(0, e.length - t.length)), e && (this.hostname = e); }; }, function (e, t, n) {
            "use strict";
            function r(e) { var t = e; return t.valueName && t.toHighLevel && t.toHighLevel2; }
            var i = this && this.__extends || function (e, t) { function n() { this.constructor = e; } for (var r in t)
                t.hasOwnProperty(r) && (e[r] = t[r]); e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype, new n); }, a = n(83), o = n(54), s = n(72), u = n(25), l = n(35), p = n(17), c = n(39), f = n(14), m = n(51), h = n(70), d = n(60), y = function () { function e(e, t, n) { this._parent = e, this._transformer = t, this.ramlVersion = n; } return e.isInstance = function (t) { return null != t && t.getClassIdentifier && "function" == typeof t.getClassIdentifier && h.contains(t.getClassIdentifier(), e.CLASS_IDENTIFIER); }, e.prototype.getClassIdentifier = function () { var t = []; return t.concat(e.CLASS_IDENTIFIER); }, e.prototype.hasInnerIncludeError = function () { return this._originalNode.hasInnerIncludeError(); }, e.prototype.keyKind = function () { return this._originalNode.keyKind(); }, e.prototype.primaryNode = function () { return null; }, e.prototype.isAnnotatedScalar = function () { return this._originalNode.isAnnotatedScalar(); }, e.prototype.actual = function () { return this._originalNode ? this._originalNode.actual() : this; }, e.prototype.transformer = function () { return this._transformer; }, e.prototype.setTransformer = function (e) { this._transformer = e; }, e.prototype.originalNode = function () { return this._originalNode; }, e.prototype.start = function () { return this._originalNode.start(); }, e.prototype.end = function () { return this._originalNode.end(); }, e.prototype.value = function (e) { throw new Error(d.METHOD_MUST_BE_OVERRIDDEN.message); }, e.prototype.includeErrors = function () { return this._originalNode.includeErrors(); }, e.prototype.includePath = function () { return this._originalNode.includePath(); }, e.prototype.includeReference = function () { return this._originalNode.includeReference(); }, e.prototype.setKeyOverride = function (e) { this._keyOverride = e; }, e.prototype.setValueOverride = function (e) { this._valueOverride = e; }, e.prototype.key = function (e) { return void 0 === e && (e = !1), this._keyOverride ? this._keyOverride : this._originalNode.key(e); }, e.prototype.optional = function () { return this.originalNode().optional(); }, e.prototype.children = function () { throw new Error(d.METHOD_MUST_BE_OVERRIDDEN.message); }, e.prototype.parent = function () { return this._parent; }, e.prototype.unit = function () { return this._originalNode.unit(); }, e.prototype.containingUnit = function () { return this._originalNode.containingUnit(); }, e.prototype.includeBaseUnit = function () { return this._originalNode.unit(); }, e.prototype.anchorId = function () { return this._originalNode.anchorId(); }, e.prototype.errors = function () { return this._originalNode.errors(); }, e.prototype.anchoredFrom = function () { return this._originalNode.anchoredFrom(); }, e.prototype.includedFrom = function () { return this._originalNode.includedFrom(); }, e.prototype.visit = function (e) { e(this) && this.children().forEach(function (t) { return t.visit(e); }); }, e.prototype.addChild = function (e) { }, e.prototype.execute = function (e) { }, e.prototype.dump = function () { return null; }, e.prototype.dumpToObject = function (e) { var t = o.serialize2(this, e); if (this.kind() == a.Kind.MAPPING) {
                var n = {};
                return n[this.key(!0)] = t, n;
            } return t; }, e.prototype.keyStart = function () { return this._originalNode.keyStart(); }, e.prototype.keyEnd = function () { return this._originalNode.keyEnd(); }, e.prototype.valueStart = function () { return this._originalNode.valueStart(); }, e.prototype.valueEnd = function () { return this._originalNode.valueEnd(); }, e.prototype.isValueLocal = function () { return this._originalNode.isValueLocal(); }, e.prototype.kind = function () { return this._originalNode.kind(); }, e.prototype.valueKind = function () { return this._originalNode.valueKind(); }, e.prototype.anchorValueKind = function () { return this._originalNode.anchorValueKind(); }, e.prototype.resolvedValueKind = function () { return this._originalNode.resolvedValueKind(); }, e.prototype.show = function (e) { this._originalNode.show(e); }, e.prototype.setHighLevelParseResult = function (e) { this._highLevelParseResult = e; }, e.prototype.highLevelParseResult = function () { return this._highLevelParseResult; }, e.prototype.setHighLevelNode = function (e) { this._highLevelNode = e; }, e.prototype.highLevelNode = function () { return this._highLevelNode ? this._highLevelNode : this._originalNode.highLevelNode(); }, e.prototype.text = function (e) { throw new Error(d.NOT_IMPLEMENTED.message); }, e.prototype.copy = function () { throw new Error(d.NOT_IMPLEMENTED.message); }, e.prototype.markup = function (e) { throw new Error(d.NOT_IMPLEMENTED.message); }, e.prototype.nodeDefinition = function () { return u.getDefinitionForLowLevelNode(this); }, e.prototype.includesContents = function () { return this._originalNode.includesContents(); }, e.prototype.root = function () { for (var e = this; e.parent();) {
                var t = e.parent();
                e = t;
            } return e; }, e.prototype.find = function (e) { var t = null; return this.children().forEach(function (n) { n.key() && n.key() == e && (t || (t = n)); }), t; }, e.prototype.isMap = function () { return this.kind() == a.Kind.MAP; }, e.prototype.isMapping = function () { return this.kind() == a.Kind.MAPPING; }, e.prototype.isSeq = function () { return this.kind() == a.Kind.SEQ; }, e.prototype.isScalar = function () { return this.kind() == a.Kind.SCALAR; }, e.prototype.isValueSeq = function () { return this.valueKind() == a.Kind.SEQ; }, e.prototype.isValueMap = function () { return this.valueKind() == a.Kind.MAP; }, e.prototype.isValueInclude = function () { return this.valueKind() == a.Kind.INCLUDE_REF; }, e.prototype.isValueScalar = function () { return this.valueKind() == a.Kind.SCALAR; }, e.prototype.definingUnitSequence = function () { var e = m.toOriginal(this).key(), t = this.transformer(); return t ? t.definingUnitSequence(e) : null; }, e.CLASS_IDENTIFIER = "LowLevelASTProxy.LowLevelProxyNode", e; }();
            t.LowLevelProxyNode = y;
            var v = function (e) { function t(t, n, r, i, a) { void 0 === a && (a = !0), e.call(this, n, r, i), this.isPrimary = a, this._adoptedNodes = [], this._preserveAnnotations = !1, this.nonMergableChildren = {}; var o = this.parent() ? this.parent().originalNode() : null; g.isInstance(t) ? this._originalNode = t : this._originalNode = new g(t, o, r, this.ramlVersion), this._adoptedNodes.push(this._originalNode); } return i(t, e), t.isInstance = function (e) { return null != e && e.getClassIdentifier && "function" == typeof e.getClassIdentifier && h.contains(e.getClassIdentifier(), t.CLASS_IDENTIFIER_LowLevelCompositeNode); }, t.prototype.getClassIdentifier = function () { var n = e.prototype.getClassIdentifier.call(this); return n.concat(t.CLASS_IDENTIFIER_LowLevelCompositeNode); }, t.prototype.adoptedNodes = function () { return this._adoptedNodes; }, t.prototype.primaryNode = function () { return this.isPrimary ? this._originalNode : null; }, t.prototype.parent = function () { return this._parent; }, t.prototype.adopt = function (e, t) { for (; y.isInstance(e);)
                e = e.originalNode(); t || (t = this._transformer); var n = this.parent() ? this.parent().originalNode() : null, r = new g(e, n, t, this.ramlVersion); this._adoptedNodes.push(r), this._children && this._children.forEach(function (e) { return e._parent = null; }), this._children = null, this.highLevelNode() && this.highLevelNode().resetChildren(); }, t.prototype.value = function (e) { if (this._valueOverride)
                return this._valueOverride; var t, n = this._adoptedNodes.filter(function (e) { return null != e.value(); }); if (t = n.length > 0 ? n[0].value(e) : this._originalNode.value(e), g.isInstance(t)) {
                var r = t.key();
                if (r)
                    for (var i = this; 1 == i.children().length && (i.kind() == a.Kind.MAPPING || i.kind() == a.Kind.MAP || i.kind() == a.Kind.SEQ);)
                        if (i = i.children()[0], i.originalNode().key() == r) {
                            t = i;
                            break;
                        }
                this._valueOverride = t;
            } return t; }, t.prototype.patchAdoptedNodes = function (e) { var t = this; this._adoptedNodes = [], e.forEach(function (e) { return t.adopt(e.node, e.transformer); }), this._adoptedNodes.length > 0 && (this._originalNode = this._adoptedNodes[0]), this.resetChildren(); }, t.prototype.children = function () { var e = this; if (this._children)
                return this._children; for (var n = [], r = !1, i = !1, o = 0, s = this._adoptedNodes; o < s.length; o++) {
                var u = s[o], l = u.children();
                if (l && l.length > 0 && (i = !0, l[0].key() && this.originalNode().valueKind() != a.Kind.SEQ && (r = !0)), r && i)
                    break;
            } if (r)
                n = this.collectChildrenWithKeys();
            else if (i) {
                n = this.collectChildrenWithKeys();
                var p = {};
                this._adoptedNodes.forEach(function (r) { return r.children().filter(function (e) { return !e.key(); }).forEach(function (i) { var a = r == e.primaryNode(), o = e.buildKey(i); if (a || !p[o]) {
                    p[o] = !0;
                    var s = r.transformer() ? r.transformer() : e.transformer(), u = g.isInstance(i) ? i.originalNode() : i;
                    n.push(new t(u, e, s, e.ramlVersion, a));
                } }); });
            }
            else
                n = []; return this._children = n, this._preserveAnnotations && this._children.forEach(function (e) { return e.preserveAnnotations(); }), n; }, t.prototype.buildKey = function (e) { var t = o.serialize(e), n = this.nodeDefinition(); if (n && (n.key() == p.Universe08.TraitRef || n.key() == p.Universe08.ResourceTypeRef || n.key() == p.Universe10.TraitRef || n.key() == p.Universe10.ResourceTypeRef) && t && "object" == typeof t) {
                var r = Object.keys(t);
                r.length > 0 && (t = r[0]);
            } return null == t ? "" : s(t); }, t.prototype.collectChildrenWithKeys = function () { for (var e = this, n = [], r = {}, i = 0, a = this._adoptedNodes; i < a.length; i++)
                for (var o = a[i], s = o == this.primaryNode(), u = 0, f = o.children(); u < f.length; u++) {
                    var m = f[u], h = m.originalNode().key();
                    if (!this.nonMergableChildren[h] || o == this._originalNode) {
                        if (h && o.transformer()) {
                            var d = null != h && this._preserveAnnotations && l.stringStartsWith(h, "(") && l.stringEndsWith(h, ")");
                            d || (h = o.transformer().transform(h).value);
                        }
                        if (!this.skipKey(h, s) && h) {
                            var y = r.hasOwnProperty(h) && r[h];
                            y || (y = [], r[h] = y), y.push({ node: m.originalNode(), transformer: o.transformer(), isPrimary: s });
                        }
                    }
                } var v = this.unit().highLevel().root().definition().universe().version(), g = this.key() && "/" == this.key()[0], A = c.getUniverse("RAML10").type(p.Universe10.Method.name), T = A.property(p.Universe10.Method.properties.method.name).enumOptions(); return Object.keys(r).forEach(function (i) { var a = r[i], o = !0, s = !1, u = T.indexOf(i) >= 0; if (a.forEach(function (e) { var t = e.node.optional() && ("RAML10" != v || g && u); o = o && t, s = s || e.isPrimary; }), s) {
                var l = [];
                a.filter(function (e) { return e.isPrimary; }).forEach(function (n) { var r = n.transformer ? n.transformer : e.transformer(); l.push(new t(n.node, e, r, e.ramlVersion, !0)); });
                var p = l[0];
                a.filter(function (e) { return !e.isPrimary; }).forEach(function (e) { p.adopt(e.node, e.transformer); }), l.forEach(function (e) { return n.push(e); });
            }
            else if (!o) {
                for (var c = a[0].transformer ? a[0].transformer : e.transformer(), p = new t(a[0].node, e, c, e.ramlVersion, !1), f = 1; f < a.length; f++)
                    p.adopt(a[f].node, a[f].transformer);
                n.push(p);
            } }), n; }, t.prototype.isResource = function () { return this.highLevelNode() && f.isResourceType(this.highLevelNode().definition()); }, t.prototype.skipKey = function (e, t) { if (t)
                return !1; if ("RAML08" != this.ramlVersion)
                return !1; p.Universe08.Method, p.Universe08.Resource; return !1; }, t.prototype.valueKind = function () { if (this._originalNode.kind() != a.Kind.MAPPING)
                return null; for (var e = 0; e < this._adoptedNodes.length; e++) {
                var t = this._adoptedNodes[e], n = t.originalNode().actual();
                if (n && null != n.value)
                    return t.valueKind();
            } return null; }, t.prototype.includePath = function () { for (var e = 0; e < this._adoptedNodes.length; e++) {
                var t = this._adoptedNodes[e], n = t.includePath();
                if (null != n)
                    return n;
            } return null; }, t.prototype.includeBaseUnit = function () { for (var t = 0; t < this._adoptedNodes.length; t++) {
                var n = this._adoptedNodes[t], r = n.includePath();
                if (null != r)
                    return n.unit();
            } return e.prototype.includeBaseUnit.call(this); }, t.prototype.includeReference = function () { for (var e = 0; e < this._adoptedNodes.length; e++) {
                var t = this._adoptedNodes[e];
                if (null != t.value())
                    return t.includeReference();
            } return null; }, t.prototype.optional = function () { return h.all(this._adoptedNodes, function (e) { return e.optional(); }); }, t.prototype.replaceChild = function (e, n, r, i) { void 0 === r && (r = !1), void 0 === i && (i = null), this._children || (this._children = []); var a; if (t.isInstance(n) ? (a = n, a._parent = this) : a = new t(n, this, null, this.ramlVersion), null == e)
                return this._children.push(a), a; var o = this._children.indexOf(e); return o >= 0 ? this._children[o] = a : this._children.push(a), a; }, t.prototype.removeChild = function (e) { if (this._children && null != e) {
                var t = this._children.indexOf(e);
                if (t >= 0) {
                    for (var n = t; n < this._children.length - 1; n++)
                        this._children[n] = this._children[n + 1];
                    this._children.pop();
                }
            } }, t.prototype.setChildren = function (e) { var n = this; return null == e ? void (this._children = null) : (this._children = e.map(function (e) { return t.isInstance(e) ? e : new t(e, n, null, n.ramlVersion); }), void (this._preserveAnnotations && this._children.forEach(function (e) { return e.preserveAnnotations(); }))); }, t.prototype.resetChildren = function () { this._children = null; }, t.prototype.preserveAnnotations = function () { this._preserveAnnotations = !0, this._children && this._children.forEach(function (e) { return e.preserveAnnotations(); }); }, t.prototype.filterChildren = function () { this.children(); var e = {}, t = []; this._children.forEach(function (n) { if (null != n.key())
                return void t.push(n); var r = JSON.stringify(o.serialize(n)); e[r] || (e[r] = !0, t.push(n)); }), this._children = t; }, t.prototype.containingUnit = function () { for (var e = {}, t = 0, n = this.adoptedNodes(); t < n.length; t++) {
                var r = n[t], i = r.containingUnit();
                i && (e[i.absolutePath()] = !0);
            } return Object.keys(e).length <= 1 ? this._originalNode.containingUnit() : null; }, t.prototype.takeOnlyOriginalChildrenWithKey = function (e) { this.nonMergableChildren[e] = !0; }, t.CLASS_IDENTIFIER_LowLevelCompositeNode = "LowLevelASTProxy.LowLevelCompositeNode", t; }(y);
            t.LowLevelCompositeNode = v;
            var g = function (e) { function t(t, n, r, i) { e.call(this, n, r, i), this._originalNode = t; } return i(t, e), t.isInstance = function (e) { return null != e && e.getClassIdentifier && "function" == typeof e.getClassIdentifier && h.contains(e.getClassIdentifier(), t.CLASS_IDENTIFIER_LowLevelValueTransformingNode); }, t.prototype.getClassIdentifier = function () { var n = e.prototype.getClassIdentifier.call(this); return n.concat(t.CLASS_IDENTIFIER_LowLevelValueTransformingNode); }, t.prototype.value = function (e) { var n = this.originalNode().value(e), r = this.transformer(); if (r) {
                var i = r.transform(n, e);
                n = i.value;
            } return null == n || "object" != typeof n || Array.isArray(n) ? (null != n && e && (n = "" + n), n) : new t(n, this._parent, this._transformer, this.ramlVersion); }, t.prototype.children = function () { var e = this, n = null, r = this.originalNode(); if (null != this._transformer) {
                var i = this._transformer.children(r);
                null != i && (n = i);
            } return null == n && (n = r.children()), n.map(function (n) { return new t(n, e, e._transformer, e.ramlVersion); }); }, t.prototype.valueKind = function () { var t = this._transformer && this._transformer.valueKind(this.originalNode()); return null != t ? t : e.prototype.valueKind.call(this); }, t.prototype.anchorValueKind = function () { var t = this._transformer && this._transformer.anchorValueKind(this.originalNode()); return null != t ? t : e.prototype.anchorValueKind.call(this); }, t.prototype.resolvedValueKind = function () { var t = this._transformer && this._transformer.resolvedValueKind(this.originalNode()); return null != t ? t : e.prototype.resolvedValueKind.call(this); }, t.prototype.includePath = function () { var t = this._transformer && this._transformer.includePath(this.originalNode()); return null != t ? t : e.prototype.includePath.call(this); }, t.prototype.parent = function () { return this._parent; }, t.prototype.key = function (t) { void 0 === t && (t = !1); var n = e.prototype.key.call(this, t); if (null != this.transformer()) {
                var r = this.transformer().transform(n).value;
                return "object" == typeof r ? null : r;
            } return n; }, t.CLASS_IDENTIFIER_LowLevelValueTransformingNode = "LowLevelASTProxy.LowLevelValueTransformingNode", t; }(y);
            t.LowLevelValueTransformingNode = g, t.isLowLevelProxyNode = r;
        }, function (e, t, n) {
            "use strict";
            function r(e) { for (var t = -1, n = e.lowLevel().children(), r = 0; r < n.length; r++) {
                var i = n[r];
                if (i.isMapping()) {
                    var a = i.asMapping().key.value, o = e.definition().property(a);
                    o && (o.isFromParentValue() || o.range().hasValueTypeInHierarchy()) && (t = r);
                }
            } return t; }
            function i(e, t, n, r) { var i = null, a = n && n.getAdapter(R.RAMLPropertyService).isEmbedMap(); if (a && S.find(e.lowLevel().children(), function (e) { return e.key() == n.nameId(); }) && (a = !1), r || a) {
                var o = v(e);
                i = o ? o : A.InsertionPoint.atStart();
            } return i; }
            function a(e) { for (var t = e; t.originalNode && t.originalNode();)
                t = t.originalNode(); return t.asMapping(); }
            function o(e, t) { e.isStub() || e.clearChildrenCache(); var n = e.children(), r = t.property() && t.property().getAdapter(R.RAMLPropertyService).isEmbedMap(); r && S.find(e.lowLevel().children(), function (e) { return e.key() == t.property().nameId(); }) && (r = !1); if (!t.isAttr() && !r || I.isMethodType(e.definition()) && t.property && I.isIsProperty(t.property())) {
                var i = t.property().nameId(), o = e.definition(), s = (o.allProperties(), e.lowLevel().children()), u = t.property();
                if (I.isTraitsProperty(u) || I.isResourceTypesProperty(u))
                    return S.find(s, function (e) { return e.isMapping() ? a(e).key.value === t.property().nameId() : !1; });
                var l = o.propertyIndex(i);
                if (0 > l)
                    return null;
                for (var p = 0; p < s.length; p++) {
                    var c = s[p];
                    if (c.isMapping()) {
                        var f = a(c).key.value, m = o.propertyIndex(f);
                        if (m > l) {
                            var h = p - 1;
                            return 0 > h ? null : (console.log("insert to node: " + h), s[h]);
                        }
                    }
                }
                return null;
            } for (var d = null, p = 0; p < n.length && n[p].isAttr(); p++)
                n[p].property && n[p].property() && I.isIsProperty(n[p].property()) || (d = n[p].lowLevel()); return null == d && (d = e.lowLevel()), d; }
            function s(e, t) { if (e.isStub()) {
                if (_.ASTNodeImpl.isInstance(t)) {
                    var n = t;
                    if (n.isInEdit)
                        return;
                }
                if (!e._children)
                    return;
                return void (e._children = e._children.filter(function (e) { return e != t; }));
            } var r = new E.CompositeCommand; if (_.ASTNodeImpl.isInstance(t)) {
                var i = t;
                i.property().getAdapter(R.RAMLPropertyService).isMerged() ? r.commands.push(E.removeNode(e.lowLevel(), i.lowLevel())) : 1 == e.elementsOfKind(i.property().nameId()).length ? r.commands.push(E.removeNode(e.lowLevel(), i.lowLevel().parent().parent())) : r.commands.push(E.removeNode(e.lowLevel(), i.lowLevel()));
            }
            else
                r.commands.push(E.removeNode(e.lowLevel(), t.lowLevel())); e.lowLevel().execute(r); }
            function u(e) { var t = (e.lowLevel().root(), new E.CompositeCommand), n = A.createMap([]); t.commands.push(E.initRamlFile(e.lowLevel(), n)), e.lowLevel().execute(t); var r = e.root(); r._node = n, r.clearChildrenCache(); }
            function l(e, t) { if (t != e.value()) {
                var n = new E.CompositeCommand;
                if ("string" == typeof t) {
                    var r = t;
                    e.property().isFromParentKey() || e.property().isAnnotation() ? (e.property().isAnnotation() && (r = "(" + r + ")"), n.commands.push(E.setKey(e.lowLevel(), r))) : r && 0 != r.length || e.isEmbedded() ? (r || (r = ""), n.commands.push(E.setAttr(e.lowLevel(), r))) : (n.commands.push(E.removeNode(e.lowLevel().parent(), e.lowLevel())), e.parent().clearChildrenCache());
                }
                else {
                    if (e.property().isFromParentKey())
                        throw new Error(M.applyTemplate(w.COULD_NOT_SET_STRUCTURED_VALUE, { key: e.property().nameId() }));
                    var i = t;
                    n.commands.push(E.setAttrStructured(e.lowLevel(), i));
                }
                e.lowLevel().execute(n);
            } }
            function p(e, t) { var n = A.createScalar(t), r = e.lowLevel(); r.isScalar() ? r = r.parent() : r.isMapping(); var i = new E.CompositeCommand; i.commands.push(E.insertNode(r, n, null, !0)), e.lowLevel().execute(i), e.parent().clearChildrenCache(); }
            function c(e, t) { var n = e.lowLevel(); if (n.isScalar())
                n = n.parent();
            else if (n.isMapping()) {
                e.lowLevel();
            } var r = new E.CompositeCommand; r.commands.push(E.insertNode(n, t.lowLevel(), null, !0)), e.lowLevel().execute(r), e.parent().clearChildrenCache(); }
            function f(e) { var t = e.lowLevel().parent(); if (!e.property().isMultiValue() && e.isEmbedded())
                e.setValue("");
            else {
                var n = new E.CompositeCommand;
                n.commands.push(E.removeNode(t, e.lowLevel())), e.lowLevel().execute(n), e.parent().clearChildrenCache();
            } }
            function m(e, t) { if (!e.property().isMultiValue())
                throw new Error(w.SETVALUE_ONLY_MULTI_VALUES_PROPERTIES.message); var n = e.parent(); if (n && d(n)) {
                var r = new E.CompositeCommand;
                return r.commands.push(E.setAttr(n.lowLevel(), t[0])), void n.lowLevel().execute(r);
            } if (e.isEmpty())
                ;
            else {
                var i = (n.lowLevel(), n.attributes(e.name()));
                i.forEach(function (e) { return e.remove(); });
            } 1 == t.length && e.property().isDescriminator() ? n.attrOrCreate(e.name()).setValue(t[0]) : t.forEach(function (t) { return n.attrOrCreate(e.name()).addValue(t); }); }
            function h(e, t) { if (t != e.name()) {
                var n = new E.CompositeCommand;
                n.commands.push(E.setKey(e.lowLevel(), t)), e.lowLevel().execute(n);
            } }
            function d(e) { return e.definition() && e.definition().isAssignableFrom(b.Universe10.TypeDeclaration.name) && e.lowLevel() && e.lowLevel().valueKind() === N.Kind.SCALAR ? !0 : !1; }
            function y(e, t, n) {
                var a = A.createMapping(t, n);
                if (e.definition() && e.definition().isAssignableFrom(b.Universe10.TypeDeclaration.name) && e.lowLevel() && (e.lowLevel().valueKind() === N.Kind.SCALAR || !e.lowLevel()._node.value)) {
                    var o = t, s = A.createMapping(o, e.lowLevel().value()), u = new E.CompositeCommand;
                    u.commands.push(E.setAttr(e.lowLevel(), "")), e.lowLevel().execute(u),
                        u = new E.CompositeCommand;
                    var l = i(e, s, e.definition().property(o), !0);
                    u.commands.push(E.insertNode(e.lowLevel(), s, l)), e.lowLevel().execute(u), e.resetChildren();
                    var p = e.attr(o) && e.attr(o).lowLevel();
                    if (p)
                        return u = new E.CompositeCommand, u.commands.push(E.setAttr(p, n)), p.execute(u), void e.clearChildrenCache();
                }
                if (e.isStub()) {
                    var c = r(e);
                    e.lowLevel().addChild(a, c + 1);
                }
                else {
                    e.isEmptyRamlFile() && e.initRamlFile();
                    var u = new E.CompositeCommand, l = i(e, a, e.definition().property(t), !0);
                    u.commands.push(E.insertNode(e.lowLevel(), a, l)), e.lowLevel().execute(u);
                }
                e.clearChildrenCache();
            }
            function v(e) { var t = e.lowLevel().children(), n = r(e); return 0 > n ? null : t[n]; }
            function g(e, t) { !e.isStub() && e.isEmptyRamlFile() && e.initRamlFile(); var n = t.lowLevel(); if (e._children || (e._children = []), !t.property()) {
                var i = t, a = e.definition().allProperties(), s = null;
                if (a.forEach(function (e) { var t = e.range(); t == i.definition() && (s = e); var n = S.find(i.definition().allSuperTypes(), function (e) { return e == t; }); n && (s = e); }), !s)
                    throw new Error(w.UNABLE_TO_FIND_CHILD.message);
                i.patchProp(s);
            } var u = o(e, t), l = new E.CompositeCommand, p = null; if (t.property().getAdapter(R.RAMLPropertyService).isMerged() || t.property().range().hasValueTypeInHierarchy())
                l.commands.push(E.insertNode(e.lowLevel(), t.lowLevel(), u)), p = e.lowLevel();
            else {
                var c = t.property().nameId(), f = e.lowLevel(), m = e.lowLevel().find(c);
                if (p = m, m) {
                    var h = null === m.value() && m.key && m.key() === b.Universe10.Api.properties.types.name, d = !h && t.property().getAdapter(R.RAMLPropertyService).isEmbedMap();
                    l.commands.push(E.insertNode(m, t.lowLevel(), u, d));
                }
                else {
                    var y = null;
                    if (t.property().getAdapter(R.RAMLPropertyService).isEmbedMap()) {
                        var v = "RAML10" == e.definition().universe().version();
                        y = n.isValueMap() && v ? A.createMapNode(c) : I.isLibraryType(e.definition()) && I.isTraitsProperty(t.property()) && v ? A.createMapNode(c) : I.isLibraryType(e.definition()) && I.isResourceTypesProperty(t.property()) && v ? A.createMapNode(c) : I.isLibraryBaseSibling(e.definition()) && I.isTypesProperty(t.property()) && v ? A.createMapNode(c) : A.createSeqNode(c), y.addChild(t.lowLevel());
                    }
                    else
                        y = A.createNode(c), y.addChild(t.lowLevel());
                    l.commands.push(E.insertNode(f, y, u)), p = f;
                }
            } if (e.isStub()) {
                var g = r(e);
                return 0 > g ? e._children.push(t) : e._children.splice(g, 0, t), void l.commands.forEach(function (e) { return p.addChild(e.value); });
            } e.lowLevel().execute(l), e._children.push(t), t.setParent(e); }
            var A = n(25), T = n(39), E = n(10), S = n(70), N = n(83), _ = n(16), b = n(17), I = n(14), R = T, M = n(28), w = n(60);
            t.removeNodeFrom = s, t.initEmptyRAMLFile = u, t.setValue = l, t.addStringValue = p, t.addStructuredValue = c, t.removeAttr = f, t.setValues = m, t.setKey = h, t.createAttr = y, t.addToNode = g;
        }, function (e, t, n) {
            "use strict";
            function r(e, t) { var n = e.root().definition().universe(), i = e.lowLevel().key(); if (i) {
                var a = y.ASTPropImpl.isInstance(e) ? e : null;
                E(i, t, a, !0, n, !0);
            } if (e.children().forEach(function (e) { return r(e, t); }), y.ASTPropImpl.isInstance(e)) {
                var o = e, s = o.value();
                if ("string" == typeof s) {
                    var u = s;
                    E(u, t, o, !1, n);
                }
                else
                    e.lowLevel().visit(function (e) { if (e.value()) {
                        var r = e.value() + "";
                        E(r, t, o, !0, n);
                    } return !0; });
            }
            else if (y.BasicASTNode.isInstance(e)) {
                var s = e.lowLevel().value();
                if ("string" == typeof s) {
                    var u = s;
                    E(u, t, null, !1, n);
                }
                else
                    e.lowLevel().visit(function (e) { if (e.value()) {
                        var r = e.value() + "";
                        E(r, t, null, !0, n);
                    } return !0; });
            } }
            function i(e, t, n) { void 0 === n && (n = []), e.optional() && (n = n.concat("/")); var r = e.value(); if ("string" == typeof r)
                for (var a = r, o = T(a), s = o.parameterUsages, u = 0, l = s; u < l.length; u++) {
                    var p = l[u], c = t[p];
                    null == c && (c = [], t[p] = c), c.push(n);
                }
            else
                for (var f = 0, m = e.children(); f < m.length; f++) {
                    var h = m[f];
                    i(h, t, n.concat(h.key()));
                } }
            function a(e, t) { var n = {}, a = {}; r(t, n), i(t.lowLevel(), a); for (var o = 0, s = Object.keys(a); o < s.length; o++) {
                var u = s[o];
                a[u] = h.unique(a[u]);
            } e.getAdapter(v.RAMLService).setInlinedTemplates(!0), Object.keys(n).forEach(function (r) { var i = null; n[r].length > 0 && (i = n[r][0].attr); var o = new f.UserDefinedProp(r, i); o.withDomain(e); var s = a[r]; o.getAdapter(v.RAMLPropertyService).putMeta("templatePaths", s); var u; if ("RAML10" == t.definition().universe().version()) {
                var l = n[r].filter(function (e) { return A.isStringTypeType(e.tp); }).length > 0;
                u = l ? d.Universe10.StringType.name : d.Universe10.AnyType.name;
            }
            else
                u = d.Universe08.StringType.name; var p = h.unique(n[r].map(function (e) { return e.tp; })).filter(function (e) { return e && e.nameId() != u; }); o.withRange(1 == p.length ? p[0] : t.definition().universe().type(u)), o.withRequired(!0), 1 == p.length && "RAML10" == t.definition().universe().version() && p[0].key() == d.Universe10.SchemaString && o.getAdapter(v.RAMLPropertyService).setTypeExpression(!0), o.unmerge(); }); var l = new f.UserDefinedProp("____key", t); return l.withDomain(e), l.withKey(!0), l.withFromParentKey(!0), l.withRange(t.definition().universe().type(d.Universe08.StringType.name)), e; }
            function o(e, t) { "RAML08" == t.universe().version() && e.getAdapter(v.RAMLService).withAllowAny(); var n = t.property(t.getAdapter(v.RAMLService).getReferenceIs()); return n && n.range().properties().forEach(function (t) { var n = new f.Property(t.nameId()); n.unmerge(), n.withDomain(e), n.withRange(t.range()), n.withMultiValue(t.isMultiValue()); }), e; }
            function s(e) { if (!e)
                return null; if (e.associatedType())
                return e.associatedType(); var t = e.lowLevel().unit(), n = t ? t.path() : ""; m.setPropertyConstructor(function (t) { var n = null, r = e.elementsOfKind("properties").filter(function (e) { return e.name() == t; }); r && (n = r[0]); var i = new f.UserDefinedProp(t, n); return i.unmerge(), i; }); try {
                var r = e.definition();
                if (e.property() && e.property().nameId() == d.Universe10.LibraryBase.properties.annotationTypes.name) {
                    var i = new S(e.name(), e.definition().universe(), e, n, ""), s = u(e);
                    i._superTypes.push(s), 0 == e.elementsOfKind(d.Universe10.ObjectTypeDeclaration.properties.properties.name).length && i.getAdapter(v.RAMLService).withAllowAny();
                    var l = r.getAdapter(v.RAMLService).getExtendedType();
                    return l && i._superTypes.push(l), i;
                }
                var i = new f.UserDefinedClass(e.name(), e.definition().universe(), e, n, "");
                if (e.setAssociatedType(i), r.getAdapter(v.RAMLService).isInlinedTemplates())
                    return a(i, e);
                if (r.getAdapter(v.RAMLService).getReferenceIs())
                    return o(i, r);
                var p = u(e);
                p.getAdapter(v.RAMLService).setDeclaringNode(e), e.setAssociatedType(p);
            }
            finally {
                m.setPropertyConstructor(null);
            } return p; }
            function u(e) { return m.toNominal(e.parsedType(), function (t) { var n = e.definition().universe().type(t); if (!n) {
                new f.UserDefinedClass("", e.definition().universe(), e, "", "");
            } return n; }); }
            function l(e) { return function (t) { var n = e.type(t); if (!n) {
                new f.UserDefinedClass("", e, null, "", "");
            } return n; }; }
            function p(e, t) { var n = h.find(e.elementsOfKind("types"), function (e) { return e.name() == t.name(); }); n && m.setPropertyConstructor(function (e) { var t = n.elementsOfKind("properties").filter(function (t) { return t.name() == e; }), r = null; if (t && t.length > 0)
                r = t[0];
            else {
                var t = n.elementsOfKind("facets").filter(function (t) { return t.name() == e; });
                t && t.length > 0 && (r = t[0]);
            } var i = new f.UserDefinedProp(e, r); return i.unmerge(), i; }); var r = l(e.definition().universe()); return m.toNominal(t, r); }
            var c = this && this.__extends || function (e, t) { function n() { this.constructor = e; } for (var r in t)
                t.hasOwnProperty(r) && (e[r] = t[r]); e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype, new n); }, f = n(39), m = f.rt, h = n(70), d = n(17), y = n(16), v = f, g = n(28), A = n(14);
            m.setPropertyConstructor(function (e) { var t = new f.Property(e); return t.unmerge(), t; });
            var T = function (e, t) { void 0 === t && (t = !1), t && "(" == e.charAt(0) && ")" == e.charAt(e.length - 1) && (e = e.substring(1, e.length - 1)); for (var n = [], r = 0;;) {
                var i = e.indexOf("<<", r);
                if (-1 == i)
                    break;
                var a = e.indexOf(">>", i), o = 0 == i && a == e.length - 2, s = e.substring(i + 2, a);
                r = i + 2;
                var u = s.indexOf("|");
                -1 != u && (s = s.substring(0, u)), s = s.trim(), n.push(s);
            } return { parameterUsages: n, isFull: o }; }, E = function (e, t, n, r, i, a) { void 0 === a && (a = !1); var o = T(e, a), s = o.parameterUsages, u = o.isFull, l = n ? n.property().range() : null; a && "(" == e.charAt(0) && ")" == e.charAt(e.length - 1) ? (l = i.type(d.Universe10.SchemaString.name), r = !1) : n && (n.property().nameId() == d.Universe10.TypeDeclaration.properties.type.name || n.property().nameId() == d.Universe10.TypeDeclaration.properties.schema.name) && n.property().domain().key() == d.Universe10.TypeDeclaration && (l = i.type(d.Universe10.SchemaString.name)), !u || r ? l = i.type(d.Universe10.StringType.name) : null == l && "RAML10" == i.version() && (l = i.type(d.Universe10.AnyType.name)); for (var p = 0, c = s; p < c.length; p++) {
                var f = c[p];
                if (null == g.RESERVED_TEMPLATE_PARAMETERS[f]) {
                    var m = t[f];
                    m ? m.push({ tp: l, attr: n }) : t[f] = [{ tp: l, attr: n }];
                }
            } }, S = function (e) { function t() { e.apply(this, arguments); } return c(t, e), t.prototype.allProperties = function (e) { void 0 === e && (e = {}); var t = this.superTypes()[0].allProperties(); if (1 == t.length && "annotations" == t[0].nameId()) {
                var n = this.getAdapter(f.RAMLService).getDeclaringNode(), r = new f.UserDefinedProp("value", n);
                r.withDomain(this), r.withCanBeValue(), r.withRequired(!1);
                this.superTypes()[0];
                t = [], r.withRange(r.node().asElement().definition().universe().type("string")), t.push(r);
            } return t; }, t.prototype.isAnnotationType = function () { return !0; }, t; }(f.UserDefinedClass);
            t.typeFromNode = s, t.convertType = p;
        }, function (e, t, n) {
            "use strict";
            function r(e) { return e && e.indexOf("\n") >= 0; }
            function i(e) { return r(e) && e.length > 2 && "|" == e[0] && ("\n" == e[1] || "\r" == e[1] || "\n" == e[2]); }
            function a(e, t) { var n = ""; if (r(e)) {
                n += "|\n";
                for (var i = m(e), a = 0; a < i.length; a++)
                    n += u(t, i[a]);
            }
            else
                n += e; return n; }
            function o(e) { if (!i(e))
                return e; for (var t = null, n = m(e), r = 1; r < n.length; r++) {
                var a = n[r], o = a.substring(2);
                t ? t += o : t = o;
            } return t; }
            function s(e) { if (!e)
                return e; for (var t = 0; t < e.length;) {
                var n = e[t];
                if ("\r" != n && "\n" != n && " " != n && "	" != n)
                    break;
                t++;
            } return e.substring(t, e.length); }
            function u(e, t) { void 0 === t && (t = ""); for (var n = "", r = 0; e > r; r++)
                n += "  "; return n + t; }
            function l(e, t) { void 0 === t && (t = ""), console.log(u(e, t)); }
            function p(e, t) { void 0 === t && (t = null); for (var n = "", r = 0; r < e.length; r++) {
                var i = e[r];
                "\r" == i && (i = null == t ? "\\r" : t), "\n" == i && (i = null == t ? "\\n" : t), n += i;
            } return n; }
            function c(e) { for (var t = e.length; t > 0;) {
                var n = e[t - 1];
                if (" " != n && "	" != n && "\r" != n && "\n" != n)
                    break;
                t--;
            } return e.substring(0, t); }
            function f(e) { return s(c(e)); }
            function m(e) { var t = e.match(/^.*((\r\n|\n|\r)|$)/gm); return t; }
            function h(e, t) { if (!e || !t || e.length < t.length)
                return !1; for (var n = 0; n < t.length; n++)
                if (e[n] != t[n])
                    return !1; return !0; }
            function d(e, t) { if (!e || !t || e.length < t.length)
                return !1; for (var n = 0; n < t.length; n++)
                if (e[e.length - 1 - n] != t[t.length - 1 - n])
                    return !1; return !0; }
            function y(e) { return e.charAt(0).toUpperCase() + e.slice(1); }
            t.isMultiLine = r, t.isMultiLineValue = i, t.makeMutiLine = a, t.fromMutiLine = o, t.trimStart = s, t.indent = u, t.print = l, t.replaceNewlines = p, t.trimEnd = c, t.trim = f, t.splitOnLines = m, t.startsWith = h, t.endsWith = d, t.capitalize = y;
            var v = function () { function e(e, t, n) { this.contents = e, this.start = t, this.end = n; } return e.prototype.text = function () { return this.contents.substring(this.start, this.end); }, e.prototype.startpos = function () { return this.start; }, e.prototype.endpos = function () { return this.end; }, e.prototype.len = function () { return this.end - this.start; }, e.prototype.unitText = function () { return this.contents; }, e.prototype.withStart = function (t) { return new e(this.contents, t, this.end); }, e.prototype.withEnd = function (t) { return new e(this.contents, this.start, t); }, e.prototype.sub = function (e, t) { return this.contents.substring(e, t); }, e.prototype.trimStart = function () { for (var t = this.start; t < this.contents.length - 1;) {
                var n = this.contents[t];
                if (" " != n && "	" != n)
                    break;
                t++;
            } return new e(this.contents, t, this.end); }, e.prototype.trimEnd = function () { for (var t = this.end; t > 0;) {
                var n = this.contents[t - 1];
                if (" " != n && "	" != n)
                    break;
                t--;
            } return new e(this.contents, this.start, t); }, e.prototype.extendToStartOfLine = function () { for (var t = this.start; t > 0;) {
                var n = this.contents[t - 1];
                if ("\r" == n || "\n" == n)
                    break;
                t--;
            } return new e(this.contents, t, this.end); }, e.prototype.extendAnyUntilNewLines = function () { var t = this.end; if (t > 0) {
                var n = this.contents[t - 1];
                if ("\n" == n)
                    return this;
            } for (; t < this.contents.length - 1;) {
                var r = this.contents[t];
                if ("\r" == r || "\n" == r)
                    break;
                t++;
            } return new e(this.contents, this.start, t); }, e.prototype.extendSpacesUntilNewLines = function () { var t = this.end; if (t > 0) {
                var n = this.contents[t - 1];
                if ("\n" == n)
                    return this;
            } for (; t < this.contents.length - 1;) {
                var r = this.contents[t];
                if (" " != r || "\r" == r || "\n" == r)
                    break;
                t++;
            } return new e(this.contents, this.start, t); }, e.prototype.extendSpaces = function () { for (var t = this.end; t < this.contents.length - 1;) {
                var n = this.contents[t];
                if (" " != n)
                    break;
                t++;
            } return new e(this.contents, this.start, t); }, e.prototype.extendSpacesBack = function () { for (var t = this.start; t > 0;) {
                var n = this.contents[t - 1];
                if (" " != n)
                    break;
                t--;
            } return new e(this.contents, t, this.end); }, e.prototype.extendCharIfAny = function (t) { var n = this.end; return n < this.contents.length - 1 && this.contents[n] == t && n++, new e(this.contents, this.start, n); }, e.prototype.extendCharIfAnyBack = function (t) { var n = this.start; return n > 0 && this.contents[n - 1] == t && n--, new e(this.contents, n, this.end); }, e.prototype.extendToNewlines = function () { var t = this.end; if (t > 0) {
                var n = this.contents[t - 1];
                if ("\n" == n)
                    return this;
            } for (; t < this.contents.length - 1;) {
                var r = this.contents[t];
                if ("\r" != r && "\n" != r)
                    break;
                t++;
            } return new e(this.contents, this.start, t); }, e.prototype.extendUntilNewlinesBack = function () { for (var t = this.start; t > 0;) {
                var n = this.contents[t - 1];
                if ("\r" == n || "\n" == n)
                    break;
                t--;
            } return new e(this.contents, t, this.end); }, e.prototype.reduceNewlinesEnd = function () { for (var t = this.end; t > this.start;) {
                var n = this.contents[t - 1];
                if ("\r" != n && "\n" != n)
                    break;
                t--;
            } return new e(this.contents, this.start, t); }, e.prototype.reduceSpaces = function () { for (var t = this.end; t > this.start;) {
                var n = this.contents[t - 1];
                if (" " != n)
                    break;
                t--;
            } return new e(this.contents, this.start, t); }, e.prototype.replace = function (e) { return this.sub(0, this.start) + e + this.sub(this.end, this.unitText().length); }, e.prototype.remove = function () { return this.sub(0, this.start) + this.sub(this.end, this.unitText().length); }, e; }();
            t.TextRange = v;
        }, function (e, t, n) {
            "use strict";
            function r(e) { return e.isBuiltIn() ? s[e.nameId()] : null; }
            function i(e, t) { void 0 === t && (t = !0); var n = e.definition(), i = (n.nameId(), r(n)); if (!i) {
                for (var o = a(n), u = n.allSuperTypes().sort(function (e, t) { return o[e.nameId()] - o[t.nameId()]; }), l = null, p = 0; p < u.length; p++) {
                    var c = u[p].nameId();
                    if (i = r(u[p]), "DataElement" != c) {
                        if ("hl.BasicNode" != c && i)
                            break;
                    }
                    else
                        l = c;
                }
                i || (l = c);
            } return i || (i = s["hl.BasicNode"]), i(e, t); }
            function a(e, t, n) { void 0 === t && (t = {}), void 0 === n && (n = {}); var r = e.nameId(); if (!n[r]) {
                n[r] = !0;
                var i = null != t[r] && t[r] + 1 || 0, o = e.superTypes();
                return o.forEach(function (e) { var r = e.nameId(), o = t[r]; (null == o || i > o) && (t[r] = i, a(e, t, n)); }), delete n[r], t;
            } }
            var o = n(22);
            t.buildWrapperNode = i;
            var s = { AbstractSecurityScheme: function (e, t) { return new o.AbstractSecuritySchemeImpl(e, t); }, Annotable: function (e, t) { return new o.AnnotableImpl(e, t); }, AnnotationRef: function (e) { return new o.AnnotationRefImpl(e); }, AnnotationTarget: function (e) { return new o.AnnotationTargetImpl(e); }, AnyType: function (e) { return new o.AnyTypeImpl(e); }, Api: function (e, t) { return new o.ApiImpl(e, t); }, ArrayTypeDeclaration: function (e, t) { return new o.ArrayTypeDeclarationImpl(e, t); }, BasicSecurityScheme: function (e, t) { return new o.BasicSecuritySchemeImpl(e, t); }, BooleanType: function (e) { return new o.BooleanTypeImpl(e); }, BooleanTypeDeclaration: function (e, t) { return new o.BooleanTypeDeclarationImpl(e, t); }, ContentType: function (e) { return new o.ContentTypeImpl(e); }, CustomSecurityScheme: function (e, t) { return new o.CustomSecuritySchemeImpl(e, t); }, DateOnlyType: function (e) { return new o.DateOnlyTypeImpl(e); }, DateOnlyTypeDeclaration: function (e, t) { return new o.DateOnlyTypeDeclarationImpl(e, t); }, DateTimeOnlyType: function (e) { return new o.DateTimeOnlyTypeImpl(e); }, DateTimeOnlyTypeDeclaration: function (e, t) { return new o.DateTimeOnlyTypeDeclarationImpl(e, t); }, DateTimeType: function (e) { return new o.DateTimeTypeImpl(e); }, DateTimeTypeDeclaration: function (e, t) { return new o.DateTimeTypeDeclarationImpl(e, t); }, DigestSecurityScheme: function (e, t) { return new o.DigestSecuritySchemeImpl(e, t); }, DocumentationItem: function (e, t) { return new o.DocumentationItemImpl(e, t); }, Extension: function (e, t) { return new o.ExtensionImpl(e, t); }, FileType: function (e) { return new o.FileTypeImpl(e); }, FileTypeDeclaration: function (e, t) { return new o.FileTypeDeclarationImpl(e, t); }, FixedUriString: function (e) { return new o.FixedUriStringImpl(e); }, FragmentDeclaration: function (e, t) { return new o.FragmentDeclarationImpl(e, t); }, FullUriTemplateString: function (e) { return new o.FullUriTemplateStringImpl(e); }, IntegerType: function (e) { return new o.IntegerTypeImpl(e); }, IntegerTypeDeclaration: function (e, t) { return new o.IntegerTypeDeclarationImpl(e, t); }, Library: function (e, t) { return new o.LibraryImpl(e, t); }, LibraryBase: function (e, t) { return new o.LibraryBaseImpl(e, t); }, LocationKind: function (e) { return new o.LocationKindImpl(e); }, MarkdownString: function (e) { return new o.MarkdownStringImpl(e); }, Method: function (e, t) { return new o.MethodImpl(e, t); }, MethodBase: function (e, t) { return new o.MethodBaseImpl(e, t); }, MimeType: function (e) { return new o.MimeTypeImpl(e); }, ModelLocation: function (e) { return new o.ModelLocationImpl(e); }, NullType: function (e) { return new o.NullTypeImpl(e); }, NumberType: function (e) { return new o.NumberTypeImpl(e); }, NumberTypeDeclaration: function (e, t) { return new o.NumberTypeDeclarationImpl(e, t); }, OAuth1SecurityScheme: function (e, t) { return new o.OAuth1SecuritySchemeImpl(e, t); }, OAuth1SecuritySchemeSettings: function (e, t) { return new o.OAuth1SecuritySchemeSettingsImpl(e, t); }, OAuth2SecurityScheme: function (e, t) { return new o.OAuth2SecuritySchemeImpl(e, t); }, OAuth2SecuritySchemeSettings: function (e, t) { return new o.OAuth2SecuritySchemeSettingsImpl(e, t); }, ObjectTypeDeclaration: function (e, t) { return new o.ObjectTypeDeclarationImpl(e, t); }, Operation: function (e, t) { return new o.OperationImpl(e, t); }, Overlay: function (e, t) { return new o.OverlayImpl(e, t); }, PassThroughSecurityScheme: function (e, t) { return new o.PassThroughSecuritySchemeImpl(e, t); }, Reference: function (e) { return new o.ReferenceImpl(e); }, RelativeUriString: function (e) { return new o.RelativeUriStringImpl(e); }, Resource: function (e, t) { return new o.ResourceImpl(e, t); }, ResourceBase: function (e, t) { return new o.ResourceBaseImpl(e, t); }, ResourceType: function (e, t) { return new o.ResourceTypeImpl(e, t); }, ResourceTypeRef: function (e) { return new o.ResourceTypeRefImpl(e); }, Response: function (e, t) { return new o.ResponseImpl(e, t); }, SchemaString: function (e) { return new o.SchemaStringImpl(e); }, SecuritySchemePart: function (e, t) { return new o.SecuritySchemePartImpl(e, t); }, SecuritySchemeRef: function (e) { return new o.SecuritySchemeRefImpl(e); }, SecuritySchemeSettings: function (e, t) { return new o.SecuritySchemeSettingsImpl(e, t); }, StatusCodeString: function (e) { return new o.StatusCodeStringImpl(e); }, StringType: function (e) { return new o.StringTypeImpl(e); }, StringTypeDeclaration: function (e, t) { return new o.StringTypeDeclarationImpl(e, t); }, TimeOnlyType: function (e) { return new o.TimeOnlyTypeImpl(e); }, TimeOnlyTypeDeclaration: function (e, t) { return new o.TimeOnlyTypeDeclarationImpl(e, t); }, Trait: function (e, t) { return new o.TraitImpl(e, t); }, TraitRef: function (e) { return new o.TraitRefImpl(e); }, TypeDeclaration: function (e, t) { return new o.TypeDeclarationImpl(e, t); }, UnionTypeDeclaration: function (e, t) { return new o.UnionTypeDeclarationImpl(e, t); }, UriTemplate: function (e) { return new o.UriTemplateImpl(e); }, UsesDeclaration: function (e, t) { return new o.UsesDeclarationImpl(e, t); }, ValueType: function (e) { return new o.ValueTypeImpl(e); }, XMLFacetInfo: function (e, t) { return new o.XMLFacetInfoImpl(e, t); } };
        }, function (e, t, n) {
            "use strict";
            function r(e) { return e.isBuiltIn() ? s[e.nameId()] : null; }
            function i(e, t) { void 0 === t && (t = !0); var n = e.definition(), i = (n.nameId(), r(n)); if (!i) {
                for (var o = a(n), u = n.allSuperTypes().sort(function (e, t) { return o[e.nameId()] - o[t.nameId()]; }), l = null, p = 0; p < u.length; p++) {
                    var c = u[p].nameId();
                    if (i = r(u[p]), "DataElement" != c) {
                        if ("hl.BasicNode" != c && i)
                            break;
                    }
                    else
                        l = c;
                }
                i || (l = c);
            } return i || (i = s["hl.BasicNode"]), i(e, t); }
            function a(e, t, n) { void 0 === t && (t = {}), void 0 === n && (n = {}); var r = e.nameId(); if (!n[r]) {
                n[r] = !0;
                var i = null != t[r] && t[r] + 1 || 0, o = e.superTypes();
                return o.forEach(function (e) { var r = e.nameId(), o = t[r]; (null == o || i > o) && (t[r] = i, a(e, t, n)); }), delete n[r], t;
            } }
            var o = n(50);
            t.buildWrapperNode = i;
            var s = { AbstractSecurityScheme: function (e, t) { return new o.AbstractSecuritySchemeImpl(e, t); }, AnyType: function (e) { return new o.AnyTypeImpl(e); }, Api: function (e, t) { return new o.ApiImpl(e, t); }, BasicSecurityScheme: function (e, t) { return new o.BasicSecuritySchemeImpl(e, t); }, BodyLike: function (e, t) { return new o.BodyLikeImpl(e, t); }, BooleanType: function (e) { return new o.BooleanTypeImpl(e); }, BooleanTypeDeclaration: function (e, t) { return new o.BooleanTypeDeclarationImpl(e, t); }, CustomSecurityScheme: function (e, t) { return new o.CustomSecuritySchemeImpl(e, t); }, DateTypeDeclaration: function (e, t) { return new o.DateTypeDeclarationImpl(e, t); }, DigestSecurityScheme: function (e, t) { return new o.DigestSecuritySchemeImpl(e, t); }, DocumentationItem: function (e, t) { return new o.DocumentationItemImpl(e, t); }, ExampleString: function (e) { return new o.ExampleStringImpl(e); }, FileTypeDeclaration: function (e, t) { return new o.FileTypeDeclarationImpl(e, t); }, FixedUri: function (e) { return new o.FixedUriImpl(e); }, FullUriTemplateString: function (e) { return new o.FullUriTemplateStringImpl(e); }, GlobalSchema: function (e, t) { return new o.GlobalSchemaImpl(e, t); }, IntegerTypeDeclaration: function (e, t) { return new o.IntegerTypeDeclarationImpl(e, t); }, JSONBody: function (e, t) { return new o.JSONBodyImpl(e, t); }, JSONExample: function (e) { return new o.JSONExampleImpl(e); }, JSonSchemaString: function (e) { return new o.JSonSchemaStringImpl(e); }, MarkdownString: function (e) { return new o.MarkdownStringImpl(e); }, Method: function (e, t) { return new o.MethodImpl(e, t); }, MethodBase: function (e, t) { return new o.MethodBaseImpl(e, t); }, MimeType: function (e) { return new o.MimeTypeImpl(e); }, NumberType: function (e) { return new o.NumberTypeImpl(e); }, NumberTypeDeclaration: function (e, t) { return new o.NumberTypeDeclarationImpl(e, t); }, OAuth1SecurityScheme: function (e, t) { return new o.OAuth1SecuritySchemeImpl(e, t); }, OAuth1SecuritySchemeSettings: function (e, t) { return new o.OAuth1SecuritySchemeSettingsImpl(e, t); }, OAuth2SecurityScheme: function (e, t) { return new o.OAuth2SecuritySchemeImpl(e, t); }, OAuth2SecuritySchemeSettings: function (e, t) { return new o.OAuth2SecuritySchemeSettingsImpl(e, t); }, Parameter: function (e, t) { return new o.ParameterImpl(e, t); }, ParameterLocation: function (e) { return new o.ParameterLocationImpl(e); }, RAMLSimpleElement: function (e, t) { return new o.RAMLSimpleElementImpl(e, t); }, Reference: function (e) { return new o.ReferenceImpl(e); }, RelativeUriString: function (e) { return new o.RelativeUriStringImpl(e); }, Resource: function (e, t) { return new o.ResourceImpl(e, t); }, ResourceType: function (e, t) { return new o.ResourceTypeImpl(e, t); }, ResourceTypeRef: function (e) { return new o.ResourceTypeRefImpl(e); }, Response: function (e, t) { return new o.ResponseImpl(e, t); }, SchemaString: function (e) { return new o.SchemaStringImpl(e); }, SecuritySchemePart: function (e, t) { return new o.SecuritySchemePartImpl(e, t); }, SecuritySchemeRef: function (e) { return new o.SecuritySchemeRefImpl(e); }, SecuritySchemeSettings: function (e, t) { return new o.SecuritySchemeSettingsImpl(e, t); }, StatusCodeString: function (e) { return new o.StatusCodeStringImpl(e); }, StringType: function (e) { return new o.StringTypeImpl(e); }, StringTypeDeclaration: function (e, t) { return new o.StringTypeDeclarationImpl(e, t); }, Trait: function (e, t) { return new o.TraitImpl(e, t); }, TraitRef: function (e) { return new o.TraitRefImpl(e); }, UriTemplate: function (e) { return new o.UriTemplateImpl(e); }, ValueType: function (e) { return new o.ValueTypeImpl(e); }, XMLBody: function (e, t) { return new o.XMLBodyImpl(e, t); }, XMLExample: function (e) { return new o.XMLExampleImpl(e); }, XMLSchemaString: function (e) { return new o.XMLSchemaStringImpl(e); } };
        }, function (e, t, n) { }, function (e, t, n) {
            "use strict";
            function r(e) { var t = e.value(); if ("string" == typeof t || null == t) {
                var n = f.createNode(t, null, e.lowLevel().unit());
                n._actualNode().startPosition = e.lowLevel().valueStart(), n._actualNode().endPosition = e.lowLevel().valueEnd();
                var r = new c.StructuredValue(n, e.parent(), e.property());
                return r;
            } return t; }
            function i(e) { var t = e._meta; t.resetPrimitiveValuesMeta(); var n = e.highLevel(); return n.definition().allProperties().forEach(function (r) { var i = r.nameId(), a = n.attributes(i), o = !1, s = !1; if (a.forEach(function (e) { o = o || null != e.value(), s = s || e.optional(); }), !o) {
                var u = e.getDefaultsCalculator(), l = u.attributeDefaultIfEnabled(n, r);
                if (null != l) {
                    var p = u.insertionKind(n, r);
                    p == m.InsertionKind.CALCULATED ? t.registerCalculatedValue(i) : p == m.InsertionKind.BY_DEFAULT && t.registerInsertedAsDefaultValue(i);
                }
            } }), t; }
            function a(e, t) { return t ? e.map(function (e) { return t(e); }) : e.map(function (e) { return e.value(); }); }
            function o(e) { var t = [], n = e.errors(); null != n && (t = t.concat(n)); var r = t.map(function (t) { return u(e, t); }), i = s(r); return i; }
            function s(e) { var t = [], n = {}; e.map(function (e) { n[JSON.stringify(e)] = e; }); for (var r = Object.keys(n), i = 0; i < r.length; i++)
                t.push(n[r[i]]); return t; }
            function u(e, t) { var n; n = t.unit ? t.unit : t.node ? t.node.lowLevel().unit() : h.declRoot(e).lowLevel().unit(); var r = n && n.lineMapper() || e.lowLevel().unit().lineMapper(), i = null; try {
                i = r.position(t.start);
            }
            catch (a) {
                console.warn(a);
            } var o = null; try {
                o = r.position(t.end);
            }
            catch (a) {
                console.warn(a);
            } var s = t.path || n && n.path(), l = { code: t.code, message: t.message, path: s, range: { start: i, end: o }, isWarning: t.isWarning }; return t.extras && t.extras.length > 0 && (l.trace = t.extras.map(function (t) { return u(e, t); })), l; }
            function l(e) { if (e.isScalar())
                return !0; for (var t = e.allSuperTypes().filter(function (e) { return e.isUnion() || e.isIntersection(); }), n = 0, r = t; n < r.length; n++) {
                for (var i = r[n], a = !0, o = 0, s = i.allOptions(); o < s.length; o++) {
                    var u = s[o];
                    if (a = a || l(u), !a)
                        break;
                }
                if (a)
                    return !0;
            } return !1; }
            var p = this && this.__extends || function (e, t) { function n() { this.constructor = e; } for (var r in t)
                t.hasOwnProperty(r) && (e[r] = t[r]); e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype, new n); }, c = n(16), f = n(25), m = (n(39), n(58)), h = n(13), d = n(14), y = n(73), v = n(83), g = function () { function e(e, t) { void 0 === t && (t = !0), this._node = e, this._meta = new _(!1, !1, d.isMethodType(this.highLevel().definition()) && this.optional()), t && e.setWrapperNode(this); } return e.isInstance = function (t) { if (null != t && t.getClassIdentifier && "function" == typeof t.getClassIdentifier)
                for (var n = 0, r = t.getClassIdentifier(); n < r.length; n++) {
                    var i = r[n];
                    if (i == e.CLASS_IDENTIFIER)
                        return !0;
                } return !1; }, e.prototype.getClassIdentifier = function () { var t = []; return t.concat(e.CLASS_IDENTIFIER); }, e.prototype.wrapperClassName = function () { return "BasicNodeImpl"; }, e.prototype.kind = function () { return "BasicNode"; }, e.prototype.allKinds = function () { return ["BasicNode"]; }, e.prototype.allWrapperClassNames = function () { return ["BasicNodeImpl"]; }, e.prototype.parent = function () { var e = this._node.parent(); return e ? e.wrapperNode() : null; }, e.prototype.highLevel = function () { return this._node; }, e.prototype.patchNode = function (e) { this._node = e; }, e.prototype.attributes = function (e, t) { var n = this._node.attributes(e); if (!n || 0 == n.length) {
                var r = this.getDefaultsCalculator().attributeDefaultIfEnabled(this._node, this._node.definition().property(e));
                return null == r ? [] : Array.isArray(r) ? r : [r];
            } return a(n, t); }, e.prototype.attribute = function (e, t) { var n = this._node.attr(e); if (t && t != this.toString && t != this.toBoolean && t != this.toNumber && t != this.toAny)
                return null == n ? null : t(n); var r = n ? n.value() : null; return null == r && (r = this.getDefaultsCalculator().attributeDefaultIfEnabled(this._node, this._node.definition().property(e))), null == r ? null : t ? t(r) : r; }, e.prototype.elements = function (e) { var t = this._node.elementsOfKind(e); return t ? t.map(function (e) { return e.wrapperNode(); }) : null; }, e.prototype.element = function (e) { var t = this._node.element(e); return t ? t.wrapperNode() : null; }, e.prototype.add = function (e) { this.highLevel().add(e.highLevel()); }, e.prototype.addToProp = function (e, t) { var n = e.highLevel(), r = this.highLevel().definition().property(t); n._prop = r, this.highLevel().add(n); }, e.prototype.remove = function (e) { this.highLevel().remove(e.highLevel()); }, e.prototype.dump = function () { return this.highLevel().dump("yaml"); }, e.prototype.toString = function (e) { var t; return t = e && e.lowLevel && e.property ? e.value() : e, null != t ? t.toString() : t; }, e.prototype.toAny = function (e) { var t; if (e.lowLevel && e.property) {
                var n = e, r = n.value();
                t = r ? r : new E(n.lowLevel());
            }
            else
                t = e; return c.StructuredValue.isInstance(t) && (t = new E(t.lowLevel().parent())), t; }, e.prototype.toBoolean = function (e) { var t; return t = e.lowLevel && e.property ? e.value() : e, null != t ? "true" == t.toString() : t; }, e.prototype.toNumber = function (e) { var t; if (t = e.lowLevel && e.property ? e.value() : e, !t)
                return t; try {
                var n = parseFloat(t.toString());
                return n;
            }
            catch (r) { } return Number.MAX_VALUE; }, e.prototype.errors = function () { return o(this._node); }, e.prototype.definition = function () { return this.highLevel().definition(); }, e.prototype.runtimeDefinition = function () { return d.isTypeDeclarationSibling(this.highLevel().definition()) ? this.highLevel().localType() : null; }, e.prototype.toJSON = function (e) { var t = A; A = this.attributeDefaults(); try {
                return new y.TCKDumper(e).dump(this);
            }
            finally {
                A = t;
            } }, e.prototype.optional = function () { var e = this.highLevel(); return null != e ? e.optional() : !1; }, e.prototype.optionalProperties = function () { return this.highLevel() ? this.highLevel().optionalProperties() : []; }, e.prototype.getDefaultsCalculator = function () { return this.defaultsCalculator ? this.defaultsCalculator : (this.parent() && (this.defaultsCalculator = this.parent().getDefaultsCalculator()), this.defaultsCalculator || (this.defaultsCalculator = new m.AttributeDefaultsCalculator(A)), this.defaultsCalculator); }, e.prototype.setAttributeDefaults = function (e) { this.defaultsCalculator = new m.AttributeDefaultsCalculator(e); }, e.prototype.attributeDefaults = function () { return this.getDefaultsCalculator() && this.getDefaultsCalculator().isEnabled(); }, e.prototype.meta = function () { return i(this); }, e.prototype.RAMLVersion = function () { return this.highLevel().definition().universe().version(); }, e.CLASS_IDENTIFIER = "parserCore.BasicNodeImpl", e; }();
            t.BasicNodeImpl = g;
            var A = !0, T = function () { function e(e) { this._meta = new N, this.attr = e; } return e.isInstance = function (t) { if (null != t && t.getClassIdentifier && "function" == typeof t.getClassIdentifier)
                for (var n = 0, r = t.getClassIdentifier(); n < r.length; n++) {
                    var i = r[n];
                    if (i == e.CLASS_IDENTIFIER)
                        return !0;
                } return !1; }, e.prototype.getClassIdentifier = function () { var t = []; return t.concat(e.CLASS_IDENTIFIER); }, e.prototype.highLevel = function () { return this.attr; }, e.prototype.wrapperClassName = function () { return "AttributeNodeImpl"; }, e.prototype.kind = function () { return "AttributeNode"; }, e.prototype.allKinds = function () { return ["AttributeNode"]; }, e.prototype.allWrapperClassNames = function () { return ["AttributeNodeImpl"]; }, e.prototype.optional = function () { var e = this.highLevel(); return null != e ? e.optional() : !1; }, e.prototype.meta = function () { return this._meta; }, e.prototype.RAMLVersion = function () { return this.highLevel().definition().universe().version(); }, e.prototype.parent = function () { var e = this.attr.parent(); return e ? e.wrapperNode() : null; }, e.prototype.toJSON = function (e) { return new y.TCKDumper(e).dump(this); }, e.CLASS_IDENTIFIER = "parserCore.AttributeNodeImpl", e; }();
            t.AttributeNodeImpl = T, t.toStructuredValue = r;
            var E = function () { function e(e, t) { this.type = t, Array.isArray(e) ? this.children = e : this.node = e; } return e.isInstance = function (t) { if (null != t && t.getClassIdentifier && "function" == typeof t.getClassIdentifier)
                for (var n = 0, r = t.getClassIdentifier(); n < r.length; n++) {
                    var i = r[n];
                    if (i == e.CLASS_IDENTIFIER)
                        return !0;
                } return !1; }, e.prototype.getClassIdentifier = function () { var t = []; return t.concat(e.CLASS_IDENTIFIER); }, e.prototype.properties = function () { return this.isArray() ? [] : this.getChildren().map(function (e) { return new S(e); }); }, e.prototype.getChildren = function () { return this.node && this.node.children() || this.children; }, e.prototype.value = function () { return this.node && this.node.value(); }, e.prototype.isScalar = function () { return this.node ? 0 != this.node.children().length ? !1 : this.type ? l(this.type) : !0 : !1; }, e.prototype.toJSON = function () { return (new y.TCKDumper).serializeTypeInstance(this); }, e.prototype.isArray = function () { return this.node ? this.type ? this.type.isArray() : this.node && this.node.valueKind() == v.Kind.SEQ : !1; }, e.prototype.items = function () { return this.isArray() ? this.node.children().map(function (t) { return new e(t); }) : null; }, e.CLASS_IDENTIFIER = "parserCore.TypeInstanceImpl", e; }();
            t.TypeInstanceImpl = E;
            var S = function () {
                function e(e) { this.node = e; }
                return e.isInstance = function (t) { if (null != t && t.getClassIdentifier && "function" == typeof t.getClassIdentifier)
                    for (var n = 0, r = t.getClassIdentifier(); n < r.length; n++) {
                        var i = r[n];
                        if (i == e.CLASS_IDENTIFIER)
                            return !0;
                    } return !1; }, e.prototype.getClassIdentifier = function () { var t = []; return t.concat(e.CLASS_IDENTIFIER); }, e.prototype.name = function () {
                    return this.node.optional() ? this.node.key() + "?" : this.node.key();
                }, e.prototype.value = function () { if (this.isArray()) {
                    var e = this.node.children();
                    return e.length > 0 ? new E(e[0]) : null;
                } return new E(this.node); }, e.prototype.values = function () { return this.isArray() ? this.node.children().map(function (e) { return new E(e); }) : [new E(this.node)]; }, e.prototype.isArray = function () { var e = this.node.children(); if (e.length > 0 && null == e[0].key())
                    return !0; var t = this.node.highLevelNode(); if (t) {
                    var n = t.property();
                    if (n) {
                        var r = n.range();
                        if (r)
                            return r.isArray();
                    }
                } return this.node.valueKind() == v.Kind.SEQ; }, e.CLASS_IDENTIFIER = "parserCore.TypeInstancePropertyImpl", e;
            }();
            t.TypeInstancePropertyImpl = S;
            var N = function () { function e(e, t, n) { void 0 === e && (e = !1), void 0 === t && (t = !1), void 0 === n && (n = !1), this._insertedAsDefault = e, this._calculated = t, this._optional = n; } return e.prototype.calculated = function () { return this._calculated; }, e.prototype.insertedAsDefault = function () { return this._insertedAsDefault; }, e.prototype.setCalculated = function () { this._calculated = !0; }, e.prototype.setInsertedAsDefault = function () { this._insertedAsDefault = !0; }, e.prototype.setOptional = function () { this._optional = !0; }, e.prototype.optional = function () { return this._optional; }, e.prototype.isDefault = function () { return !(this._insertedAsDefault || this._calculated || this._optional); }, e.prototype.toJSON = function () { var e = {}; return this._calculated && (e.calculated = !0), this._insertedAsDefault && (e.insertedAsDefault = !0), this._optional && (e.optional = !0), e; }, e; }();
            t.ValueMetadataImpl = N;
            var _ = function (e) { function t() { e.apply(this, arguments), this.valuesMeta = {}; } return p(t, e), t.prototype.primitiveValuesMeta = function () { return this.valuesMeta; }, t.prototype.registerInsertedAsDefaultValue = function (e) { var t = this.valuesMeta[e]; null == t ? this.valuesMeta[e] = new N(!0) : t.setInsertedAsDefault(); }, t.prototype.registerCalculatedValue = function (e) { var t = this.valuesMeta[e]; null == t ? this.valuesMeta[e] = new N(!1, !0) : t.setCalculated(); }, t.prototype.registerOptionalValue = function (e) { var t = this.valuesMeta[e]; null == t ? this.valuesMeta[e] = new N(!1, !1, !0) : t.setOptional(); }, t.prototype.resetPrimitiveValuesMeta = function () { this.valuesMeta = {}; }, t.prototype.isDefault = function () { return e.prototype.isDefault.call(this) ? 0 == Object.keys(this.valuesMeta).length : !1; }, t.prototype.toJSON = function () { var t = this, n = e.prototype.toJSON.call(this), r = {}, i = Object.keys(this.valuesMeta); return i.length > 0 && (i.forEach(function (e) { var n = t.valuesMeta[e].toJSON(); Object.keys(n).length > 0 && (r[e] = n); }), n.primitiveValuesMeta = r), n; }, t; }(N);
            t.NodeMetadataImpl = _, t.fillElementMeta = i, t.attributesToValues = a, t.errors = o, t.filterErrors = s, t.basicError = u;
        }, function (e, t, n) { }, function (e, t, n) {
            "use strict";
            function r(e) { var t = C.getUniverse("RAML08"), n = t.type("Method"), r = w.createStubNode(n, null, e); return r; }
            function i(e) { var t = C.getUniverse("RAML08"), n = t.type("StringTypeDeclaration"), r = w.createStubNode(n, null, e); return r; }
            function a(e) { var t = C.getUniverse("RAML08"), n = t.type("BooleanTypeDeclaration"), r = w.createStubNode(n, null, e); return r; }
            function o(e) { var t = C.getUniverse("RAML08"), n = t.type("NumberTypeDeclaration"), r = w.createStubNode(n, null, e); return r; }
            function s(e) { var t = C.getUniverse("RAML08"), n = t.type("IntegerTypeDeclaration"), r = w.createStubNode(n, null, e); return r; }
            function u(e) { var t = C.getUniverse("RAML08"), n = t.type("DateTypeDeclaration"), r = w.createStubNode(n, null, e); return r; }
            function l(e) { var t = C.getUniverse("RAML08"), n = t.type("FileTypeDeclaration"), r = w.createStubNode(n, null, e); return r; }
            function p(e) { var t = C.getUniverse("RAML08"), n = t.type("XMLBody"), r = w.createStubNode(n, null, e); return r; }
            function c(e) { var t = C.getUniverse("RAML08"), n = t.type("JSONBody"), r = w.createStubNode(n, null, e); return r; }
            function f(e) { var t = C.getUniverse("RAML08"), n = t.type("SecuritySchemePart"), r = w.createStubNode(n, null, e); return r; }
            function m(e) { var t = C.getUniverse("RAML08"), n = t.type("Trait"), r = w.createStubNode(n, null, e); return r; }
            function h(e) { var t = C.getUniverse("RAML08"), n = t.type("OAuth1SecuritySchemeSettings"), r = w.createStubNode(n, null, e); return r; }
            function d(e) { var t = C.getUniverse("RAML08"), n = t.type("OAuth2SecuritySchemeSettings"), r = w.createStubNode(n, null, e); return r; }
            function y(e) { var t = C.getUniverse("RAML08"), n = t.type("OAuth2SecurityScheme"), r = w.createStubNode(n, null, e); return r; }
            function v(e) { var t = C.getUniverse("RAML08"), n = t.type("OAuth1SecurityScheme"), r = w.createStubNode(n, null, e); return r; }
            function g(e) { var t = C.getUniverse("RAML08"), n = t.type("BasicSecurityScheme"), r = w.createStubNode(n, null, e); return r; }
            function A(e) { var t = C.getUniverse("RAML08"), n = t.type("DigestSecurityScheme"), r = w.createStubNode(n, null, e); return r; }
            function T(e) { var t = C.getUniverse("RAML08"), n = t.type("CustomSecurityScheme"), r = w.createStubNode(n, null, e); return r; }
            function E(e) { var t = C.getUniverse("RAML08"), n = t.type("GlobalSchema"), r = w.createStubNode(n, null, e); return r; }
            function S(e) { var t = C.getUniverse("RAML08"), n = t.type("DocumentationItem"), r = w.createStubNode(n, null, e); return r; }
            function N(e, t, n) { return P.loadApi(e, t, n).getOrElse(null); }
            function _(e, t, n) { return P.loadApi(e, t, n).getOrElse(null); }
            function b(e, t, n) { return P.loadApiAsync(e, t, n); }
            function I(e, t, n) { return P.loadRAMLAsync(e, t, n); }
            function R(e) { return P.getLanguageElementByRuntimeType(e); }
            var M = this && this.__extends || function (e, t) { function n() { this.constructor = e; } for (var r in t)
                t.hasOwnProperty(r) && (e[r] = t[r]); e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype, new n); }, w = n(18), C = n(39), L = n(48), P = n(8), O = n(79), D = function (e) { function t() { e.apply(this, arguments); } return M(t, e), t.prototype.title = function () { return e.prototype.attribute.call(this, "title", this.toString); }, t.prototype.setTitle = function (e) { return this.highLevel().attrOrCreate("title").setValue("" + e), this; }, t.prototype.version = function () { return e.prototype.attribute.call(this, "version", this.toString); }, t.prototype.setVersion = function (e) { return this.highLevel().attrOrCreate("version").setValue("" + e), this; }, t.prototype.baseUri = function () { return e.prototype.attribute.call(this, "baseUri", function (e) { return new Me(e); }); }, t.prototype.baseUriParameters_original = function () { return e.prototype.elements.call(this, "baseUriParameters"); }, t.prototype.uriParameters = function () { return e.prototype.elements.call(this, "uriParameters"); }, t.prototype.protocols = function () { return e.prototype.attributes.call(this, "protocols", this.toString); }, t.prototype.setProtocols = function (e) { return this.highLevel().attrOrCreate("protocols").setValue("" + e), this; }, t.prototype.mediaType = function () { return e.prototype.attribute.call(this, "mediaType", function (e) { return new be(e); }); }, t.prototype.schemas = function () { return e.prototype.elements.call(this, "schemas"); }, t.prototype.traits_original = function () { return e.prototype.elements.call(this, "traits"); }, t.prototype.securedBy = function () { return e.prototype.attributes.call(this, "securedBy", function (e) { return new pe(e); }); }, t.prototype.securitySchemes = function () { return e.prototype.elements.call(this, "securitySchemes"); }, t.prototype.resourceTypes_original = function () { return e.prototype.elements.call(this, "resourceTypes"); }, t.prototype.resources = function () { return e.prototype.elements.call(this, "resources"); }, t.prototype.documentation = function () { return e.prototype.elements.call(this, "documentation"); }, t.prototype.wrapperClassName = function () { return "ApiImpl"; }, t.prototype.kind = function () { return "Api"; }, t.prototype.allKinds = function () { return e.prototype.allKinds.call(this).concat("Api"); }, t.prototype.allWrapperClassNames = function () { return e.prototype.allWrapperClassNames.call(this).concat("RAML08.ApiImpl"); }, t.isInstance = function (e) { if (null != e && e.allWrapperClassNames && "function" == typeof e.allWrapperClassNames)
                for (var t = 0, n = e.allWrapperClassNames(); t < n.length; t++) {
                    var r = n[t];
                    if ("RAML08.ApiImpl" == r)
                        return !0;
                } return !1; }, t.prototype.RAMLVersion_original = function () { return "RAML08"; }, t.prototype.expand = function () { return O.expandTraitsAndResourceTypes(this); }, t.prototype.traits = function () { return O.traitsPrimary(this); }, t.prototype.allTraits = function () { return O.allTraits(this); }, t.prototype.resourceTypes = function () { return O.resourceTypesPrimary(this); }, t.prototype.allResourceTypes = function () { return O.allResourceTypes(this); }, t.prototype.childResource = function (e) { return O.childResource(this, e); }, t.prototype.allResources = function () { return O.allResources(this); }, t.prototype.baseUriParameters = function () { return O.baseUriParametersPrimary(this); }, t.prototype.allBaseUriParameters = function () { return O.baseUriParameters(this); }, t.prototype.allProtocols = function () { return O.allProtocols(this); }, t.prototype.RAMLVersion = function () { return O.RAMLVersion(this); }, t; }(L.BasicNodeImpl);
            t.ApiImpl = D;
            var U = function (e) { function t() { e.apply(this, arguments); } return M(t, e), t.prototype.wrapperClassName = function () { return "ValueTypeImpl"; }, t.prototype.kind = function () { return "ValueType"; }, t.prototype.allKinds = function () { return e.prototype.allKinds.call(this).concat("ValueType"); }, t.prototype.allWrapperClassNames = function () { return e.prototype.allWrapperClassNames.call(this).concat("undefined.ValueTypeImpl"); }, t.isInstance = function (e) { if (null != e && e.allWrapperClassNames && "function" == typeof e.allWrapperClassNames)
                for (var t = 0, n = e.allWrapperClassNames(); t < n.length; t++) {
                    var r = n[t];
                    if ("undefined.ValueTypeImpl" == r)
                        return !0;
                } return !1; }, t.prototype.RAMLVersion = function () { return "undefined"; }, t.prototype.value = function () { return this.attr.value(); }, t; }(L.AttributeNodeImpl);
            t.ValueTypeImpl = U;
            var x = function (e) { function t() { e.apply(this, arguments); } return M(t, e), t.prototype.wrapperClassName = function () { return "AnyTypeImpl"; }, t.prototype.kind = function () { return "AnyType"; }, t.prototype.allKinds = function () { return e.prototype.allKinds.call(this).concat("AnyType"); }, t.prototype.allWrapperClassNames = function () { return e.prototype.allWrapperClassNames.call(this).concat("RAML08.AnyTypeImpl"); }, t.isInstance = function (e) { if (null != e && e.allWrapperClassNames && "function" == typeof e.allWrapperClassNames)
                for (var t = 0, n = e.allWrapperClassNames(); t < n.length; t++) {
                    var r = n[t];
                    if ("RAML08.AnyTypeImpl" == r)
                        return !0;
                } return !1; }, t.prototype.RAMLVersion = function () { return "RAML08"; }, t; }(U);
            t.AnyTypeImpl = x;
            var k = function (e) { function t() { e.apply(this, arguments); } return M(t, e), t.prototype.wrapperClassName = function () { return "NumberTypeImpl"; }, t.prototype.kind = function () { return "NumberType"; }, t.prototype.allKinds = function () { return e.prototype.allKinds.call(this).concat("NumberType"); }, t.prototype.allWrapperClassNames = function () { return e.prototype.allWrapperClassNames.call(this).concat("RAML08.NumberTypeImpl"); }, t.isInstance = function (e) { if (null != e && e.allWrapperClassNames && "function" == typeof e.allWrapperClassNames)
                for (var t = 0, n = e.allWrapperClassNames(); t < n.length; t++) {
                    var r = n[t];
                    if ("RAML08.NumberTypeImpl" == r)
                        return !0;
                } return !1; }, t.prototype.RAMLVersion = function () { return "RAML08"; }, t.prototype.value = function () { return this.attr.value(); }, t; }(U);
            t.NumberTypeImpl = k;
            var F = function (e) { function t() { e.apply(this, arguments); } return M(t, e), t.prototype.wrapperClassName = function () { return "BooleanTypeImpl"; }, t.prototype.kind = function () { return "BooleanType"; }, t.prototype.allKinds = function () { return e.prototype.allKinds.call(this).concat("BooleanType"); }, t.prototype.allWrapperClassNames = function () { return e.prototype.allWrapperClassNames.call(this).concat("RAML08.BooleanTypeImpl"); }, t.isInstance = function (e) { if (null != e && e.allWrapperClassNames && "function" == typeof e.allWrapperClassNames)
                for (var t = 0, n = e.allWrapperClassNames(); t < n.length; t++) {
                    var r = n[t];
                    if ("RAML08.BooleanTypeImpl" == r)
                        return !0;
                } return !1; }, t.prototype.RAMLVersion = function () { return "RAML08"; }, t.prototype.value = function () { return this.attr.value(); }, t; }(U);
            t.BooleanTypeImpl = F;
            var B = function (e) { function t() { e.apply(this, arguments); } return M(t, e), t.prototype.wrapperClassName = function () { return "ReferenceImpl"; }, t.prototype.kind = function () { return "Reference"; }, t.prototype.allKinds = function () { return e.prototype.allKinds.call(this).concat("Reference"); }, t.prototype.allWrapperClassNames = function () { return e.prototype.allWrapperClassNames.call(this).concat("RAML08.ReferenceImpl"); }, t.isInstance = function (e) { if (null != e && e.allWrapperClassNames && "function" == typeof e.allWrapperClassNames)
                for (var t = 0, n = e.allWrapperClassNames(); t < n.length; t++) {
                    var r = n[t];
                    if ("RAML08.ReferenceImpl" == r)
                        return !0;
                } return !1; }, t.prototype.RAMLVersion = function () { return "RAML08"; }, t.prototype.value = function () { return L.toStructuredValue(this.attr); }, t.prototype.structuredValue = function () { return O.structuredValue(this); }, t.prototype.name = function () { return O.referenceName(this); }, t; }(L.AttributeNodeImpl);
            t.ReferenceImpl = B;
            var K = function (e) { function t() { e.apply(this, arguments); } return M(t, e), t.prototype.wrapperClassName = function () { return "ResourceTypeRefImpl"; }, t.prototype.kind = function () { return "ResourceTypeRef"; }, t.prototype.allKinds = function () { return e.prototype.allKinds.call(this).concat("ResourceTypeRef"); }, t.prototype.allWrapperClassNames = function () { return e.prototype.allWrapperClassNames.call(this).concat("RAML08.ResourceTypeRefImpl"); }, t.isInstance = function (e) { if (null != e && e.allWrapperClassNames && "function" == typeof e.allWrapperClassNames)
                for (var t = 0, n = e.allWrapperClassNames(); t < n.length; t++) {
                    var r = n[t];
                    if ("RAML08.ResourceTypeRefImpl" == r)
                        return !0;
                } return !1; }, t.prototype.RAMLVersion = function () { return "RAML08"; }, t.prototype.resourceType = function () { return O.referencedResourceType(this); }, t; }(B);
            t.ResourceTypeRefImpl = K;
            var V = function (e) { function t() { e.apply(this, arguments); } return M(t, e), t.prototype.name = function () { return e.prototype.attribute.call(this, "name", this.toString); }, t.prototype.setName = function (e) { return this.highLevel().attrOrCreate("name").setValue("" + e), this; }, t.prototype.usage = function () { return e.prototype.attribute.call(this, "usage", this.toString); }, t.prototype.setUsage = function (e) { return this.highLevel().attrOrCreate("usage").setValue("" + e), this; }, t.prototype.methods = function () { return e.prototype.elements.call(this, "methods"); }, t.prototype.is = function () { return e.prototype.attributes.call(this, "is", function (e) { return new me(e); }); }, t.prototype.type = function () { return e.prototype.attribute.call(this, "type", function (e) { return new K(e); }); }, t.prototype.securedBy = function () { return e.prototype.attributes.call(this, "securedBy", function (e) { return new pe(e); }); }, t.prototype.uriParameters = function () { return e.prototype.elements.call(this, "uriParameters"); }, t.prototype.displayName = function () { return e.prototype.attribute.call(this, "displayName", this.toString); }, t.prototype.setDisplayName = function (e) { return this.highLevel().attrOrCreate("displayName").setValue("" + e), this; }, t.prototype.baseUriParameters = function () { return e.prototype.elements.call(this, "baseUriParameters"); }, t.prototype.description = function () { return e.prototype.attribute.call(this, "description", function (e) { return new X(e); }); }, t.prototype.wrapperClassName = function () { return "ResourceTypeImpl"; }, t.prototype.kind = function () { return "ResourceType"; }, t.prototype.allKinds = function () { return e.prototype.allKinds.call(this).concat("ResourceType"); }, t.prototype.allWrapperClassNames = function () { return e.prototype.allWrapperClassNames.call(this).concat("RAML08.ResourceTypeImpl"); }, t.isInstance = function (e) { if (null != e && e.allWrapperClassNames && "function" == typeof e.allWrapperClassNames)
                for (var t = 0, n = e.allWrapperClassNames(); t < n.length; t++) {
                    var r = n[t];
                    if ("RAML08.ResourceTypeImpl" == r)
                        return !0;
                } return !1; }, t.prototype.RAMLVersion = function () { return "RAML08"; }, t.prototype.parametrizedProperties = function () { return O.getTemplateParametrizedProperties(this); }, t; }(L.BasicNodeImpl);
            t.ResourceTypeImpl = V;
            var j = function (e) { function t() { e.apply(this, arguments); } return M(t, e), t.prototype.responses = function () { return e.prototype.elements.call(this, "responses"); }, t.prototype.body = function () { return e.prototype.elements.call(this, "body"); }, t.prototype.protocols = function () { return e.prototype.attributes.call(this, "protocols", this.toString); }, t.prototype.setProtocols = function (e) { return this.highLevel().attrOrCreate("protocols").setValue("" + e), this; }, t.prototype.securedBy = function () { return e.prototype.attributes.call(this, "securedBy", function (e) { return new pe(e); }); }, t.prototype.baseUriParameters = function () { return e.prototype.elements.call(this, "baseUriParameters"); }, t.prototype.queryParameters = function () { return e.prototype.elements.call(this, "queryParameters"); }, t.prototype.headers = function () { return e.prototype.elements.call(this, "headers"); }, t.prototype.description = function () { return e.prototype.attribute.call(this, "description", function (e) { return new X(e); }); }, t.prototype.wrapperClassName = function () { return "MethodBaseImpl"; }, t.prototype.kind = function () { return "MethodBase"; }, t.prototype.allKinds = function () { return e.prototype.allKinds.call(this).concat("MethodBase"); }, t.prototype.allWrapperClassNames = function () { return e.prototype.allWrapperClassNames.call(this).concat("RAML08.MethodBaseImpl"); }, t.isInstance = function (e) { if (null != e && e.allWrapperClassNames && "function" == typeof e.allWrapperClassNames)
                for (var t = 0, n = e.allWrapperClassNames(); t < n.length; t++) {
                    var r = n[t];
                    if ("RAML08.MethodBaseImpl" == r)
                        return !0;
                } return !1; }, t.prototype.RAMLVersion = function () { return "RAML08"; }, t; }(L.BasicNodeImpl);
            t.MethodBaseImpl = j;
            var W = function (e) { function t() { e.apply(this, arguments); } return M(t, e), t.prototype.code = function () { return e.prototype.attribute.call(this, "code", function (e) { return new H(e); }); }, t.prototype.headers = function () { return e.prototype.elements.call(this, "headers"); }, t.prototype.body = function () { return e.prototype.elements.call(this, "body"); }, t.prototype.description = function () { return e.prototype.attribute.call(this, "description", function (e) { return new X(e); }); }, t.prototype.wrapperClassName = function () { return "ResponseImpl"; }, t.prototype.kind = function () { return "Response"; }, t.prototype.allKinds = function () { return e.prototype.allKinds.call(this).concat("Response"); }, t.prototype.allWrapperClassNames = function () { return e.prototype.allWrapperClassNames.call(this).concat("RAML08.ResponseImpl"); }, t.isInstance = function (e) { if (null != e && e.allWrapperClassNames && "function" == typeof e.allWrapperClassNames)
                for (var t = 0, n = e.allWrapperClassNames(); t < n.length; t++) {
                    var r = n[t];
                    if ("RAML08.ResponseImpl" == r)
                        return !0;
                } return !1; }, t.prototype.RAMLVersion = function () { return "RAML08"; }, t.prototype.isOkRange = function () { return O.isOkRange(this); }, t.prototype.parametrizedProperties = function () { return O.getTemplateParametrizedProperties(this); }, t; }(L.BasicNodeImpl);
            t.ResponseImpl = W;
            var q = function (e) { function t() { e.apply(this, arguments); } return M(t, e), t.prototype.wrapperClassName = function () { return "StringTypeImpl"; }, t.prototype.kind = function () { return "StringType"; }, t.prototype.allKinds = function () { return e.prototype.allKinds.call(this).concat("StringType"); }, t.prototype.allWrapperClassNames = function () { return e.prototype.allWrapperClassNames.call(this).concat("RAML08.StringTypeImpl"); }, t.isInstance = function (e) { if (null != e && e.allWrapperClassNames && "function" == typeof e.allWrapperClassNames)
                for (var t = 0, n = e.allWrapperClassNames(); t < n.length; t++) {
                    var r = n[t];
                    if ("RAML08.StringTypeImpl" == r)
                        return !0;
                } return !1; }, t.prototype.RAMLVersion = function () { return "RAML08"; }, t.prototype.value = function () { return this.attr.value(); }, t; }(U);
            t.StringTypeImpl = q;
            var H = function (e) { function t() { e.apply(this, arguments); } return M(t, e), t.prototype.wrapperClassName = function () { return "StatusCodeStringImpl"; }, t.prototype.kind = function () { return "StatusCodeString"; }, t.prototype.allKinds = function () { return e.prototype.allKinds.call(this).concat("StatusCodeString"); }, t.prototype.allWrapperClassNames = function () { return e.prototype.allWrapperClassNames.call(this).concat("RAML08.StatusCodeStringImpl"); }, t.isInstance = function (e) { if (null != e && e.allWrapperClassNames && "function" == typeof e.allWrapperClassNames)
                for (var t = 0, n = e.allWrapperClassNames(); t < n.length; t++) {
                    var r = n[t];
                    if ("RAML08.StatusCodeStringImpl" == r)
                        return !0;
                } return !1; }, t.prototype.RAMLVersion = function () { return "RAML08"; }, t; }(q);
            t.StatusCodeStringImpl = H;
            var Y = function (e) { function t() { e.apply(this, arguments); } return M(t, e), t.prototype.name = function () { return e.prototype.attribute.call(this, "name", this.toString); }, t.prototype.setName = function (e) { return this.highLevel().attrOrCreate("name").setValue("" + e), this; }, t.prototype.displayName = function () { return e.prototype.attribute.call(this, "displayName", this.toString); }, t.prototype.setDisplayName = function (e) { return this.highLevel().attrOrCreate("displayName").setValue("" + e), this; }, t.prototype.type = function () { return e.prototype.attribute.call(this, "type", this.toString); }, t.prototype.setType = function (e) { return this.highLevel().attrOrCreate("type").setValue("" + e), this; }, t.prototype.location = function () { return e.prototype.attribute.call(this, "location", function (e) { return new G(e); }); }, t.prototype.required = function () { return e.prototype.attribute.call(this, "required", this.toBoolean); }, t.prototype.setRequired = function (e) { return this.highLevel().attrOrCreate("required").setValue("" + e), this; }, t.prototype["default"] = function () { return e.prototype.attribute.call(this, "default", this.toAny); }, t.prototype.setDefault = function (e) { return this.highLevel().attrOrCreate("default").setValue("" + e), this; }, t.prototype.example = function () { return e.prototype.attribute.call(this, "example", this.toString); }, t.prototype.setExample = function (e) { return this.highLevel().attrOrCreate("example").setValue("" + e), this; }, t.prototype.repeat = function () { return e.prototype.attribute.call(this, "repeat", this.toBoolean); }, t.prototype.setRepeat = function (e) { return this.highLevel().attrOrCreate("repeat").setValue("" + e), this; }, t.prototype.description = function () { return e.prototype.attribute.call(this, "description", function (e) { return new X(e); }); }, t.prototype.wrapperClassName = function () { return "ParameterImpl"; }, t.prototype.kind = function () { return "Parameter"; }, t.prototype.allKinds = function () { return e.prototype.allKinds.call(this).concat("Parameter"); }, t.prototype.allWrapperClassNames = function () { return e.prototype.allWrapperClassNames.call(this).concat("RAML08.ParameterImpl"); }, t.isInstance = function (e) { if (null != e && e.allWrapperClassNames && "function" == typeof e.allWrapperClassNames)
                for (var t = 0, n = e.allWrapperClassNames(); t < n.length; t++) {
                    var r = n[t];
                    if ("RAML08.ParameterImpl" == r)
                        return !0;
                } return !1; }, t.prototype.RAMLVersion = function () { return "RAML08"; }, t.prototype.parametrizedProperties = function () { return O.getTemplateParametrizedProperties(this); }, t; }(L.BasicNodeImpl);
            t.ParameterImpl = Y;
            var G = function () { function e(e) { this.attr = e; } return e.prototype.wrapperClassName = function () { return "ParameterLocationImpl"; }, e.prototype.kind = function () { return "ParameterLocation"; }, e.prototype.allKinds = function () { return ["ParameterLocation"]; }, e.prototype.allWrapperClassNames = function () { return ["RAML08.ParameterLocationImpl"]; }, e.isInstance = function (e) { if (null != e && e.allWrapperClassNames && "function" == typeof e.allWrapperClassNames)
                for (var t = 0, n = e.allWrapperClassNames(); t < n.length; t++) {
                    var r = n[t];
                    if ("RAML08.ParameterLocationImpl" == r)
                        return !0;
                } return !1; }, e.prototype.RAMLVersion = function () { return "RAML08"; }, e; }();
            t.ParameterLocationImpl = G;
            var X = function (e) { function t() { e.apply(this, arguments); } return M(t, e), t.prototype.wrapperClassName = function () { return "MarkdownStringImpl"; }, t.prototype.kind = function () { return "MarkdownString"; }, t.prototype.allKinds = function () { return e.prototype.allKinds.call(this).concat("MarkdownString"); }, t.prototype.allWrapperClassNames = function () { return e.prototype.allWrapperClassNames.call(this).concat("RAML08.MarkdownStringImpl"); }, t.isInstance = function (e) { if (null != e && e.allWrapperClassNames && "function" == typeof e.allWrapperClassNames)
                for (var t = 0, n = e.allWrapperClassNames(); t < n.length; t++) {
                    var r = n[t];
                    if ("RAML08.MarkdownStringImpl" == r)
                        return !0;
                } return !1; }, t.prototype.RAMLVersion = function () { return "RAML08"; }, t; }(q);
            t.MarkdownStringImpl = X;
            var z = function (e) { function t(t, n) { void 0 === n && (n = !0), e.call(this, "string" == typeof t ? i(t) : t, n), this.nodeOrKey = t, this.setAsTopLevel = n; } return M(t, e), t.prototype.pattern = function () { return e.prototype.attribute.call(this, "pattern", this.toString); }, t.prototype.setPattern = function (e) { return this.highLevel().attrOrCreate("pattern").setValue("" + e), this; }, t.prototype["enum"] = function () { return e.prototype.attributes.call(this, "enum", this.toString); }, t.prototype.setEnum = function (e) { return this.highLevel().attrOrCreate("enum").setValue("" + e), this; }, t.prototype.minLength = function () { return e.prototype.attribute.call(this, "minLength", this.toNumber); }, t.prototype.setMinLength = function (e) { return this.highLevel().attrOrCreate("minLength").setValue("" + e), this; }, t.prototype.maxLength = function () { return e.prototype.attribute.call(this, "maxLength", this.toNumber); }, t.prototype.setMaxLength = function (e) { return this.highLevel().attrOrCreate("maxLength").setValue("" + e), this; }, t.prototype.wrapperClassName = function () { return "StringTypeDeclarationImpl"; }, t.prototype.kind = function () { return "StringTypeDeclaration"; }, t.prototype.allKinds = function () { return e.prototype.allKinds.call(this).concat("StringTypeDeclaration"); }, t.prototype.allWrapperClassNames = function () { return e.prototype.allWrapperClassNames.call(this).concat("RAML08.StringTypeDeclarationImpl"); }, t.isInstance = function (e) { if (null != e && e.allWrapperClassNames && "function" == typeof e.allWrapperClassNames)
                for (var t = 0, n = e.allWrapperClassNames(); t < n.length; t++) {
                    var r = n[t];
                    if ("RAML08.StringTypeDeclarationImpl" == r)
                        return !0;
                } return !1; }, t.prototype.RAMLVersion = function () { return "RAML08"; }, t; }(Y);
            t.StringTypeDeclarationImpl = z;
            var $ = function (e) { function t(t, n) { void 0 === n && (n = !0), e.call(this, "string" == typeof t ? a(t) : t, n), this.nodeOrKey = t, this.setAsTopLevel = n; } return M(t, e), t.prototype.wrapperClassName = function () { return "BooleanTypeDeclarationImpl"; }, t.prototype.kind = function () { return "BooleanTypeDeclaration"; }, t.prototype.allKinds = function () { return e.prototype.allKinds.call(this).concat("BooleanTypeDeclaration"); }, t.prototype.allWrapperClassNames = function () { return e.prototype.allWrapperClassNames.call(this).concat("RAML08.BooleanTypeDeclarationImpl"); }, t.isInstance = function (e) { if (null != e && e.allWrapperClassNames && "function" == typeof e.allWrapperClassNames)
                for (var t = 0, n = e.allWrapperClassNames(); t < n.length; t++) {
                    var r = n[t];
                    if ("RAML08.BooleanTypeDeclarationImpl" == r)
                        return !0;
                } return !1; }, t.prototype.RAMLVersion = function () { return "RAML08"; }, t; }(Y);
            t.BooleanTypeDeclarationImpl = $;
            var J = function (e) { function t(t, n) { void 0 === n && (n = !0), e.call(this, "string" == typeof t ? o(t) : t, n), this.nodeOrKey = t, this.setAsTopLevel = n; } return M(t, e), t.prototype.minimum = function () { return e.prototype.attribute.call(this, "minimum", this.toNumber); }, t.prototype.setMinimum = function (e) { return this.highLevel().attrOrCreate("minimum").setValue("" + e), this; }, t.prototype.maximum = function () { return e.prototype.attribute.call(this, "maximum", this.toNumber); }, t.prototype.setMaximum = function (e) { return this.highLevel().attrOrCreate("maximum").setValue("" + e), this; }, t.prototype.wrapperClassName = function () { return "NumberTypeDeclarationImpl"; }, t.prototype.kind = function () { return "NumberTypeDeclaration"; }, t.prototype.allKinds = function () { return e.prototype.allKinds.call(this).concat("NumberTypeDeclaration"); }, t.prototype.allWrapperClassNames = function () { return e.prototype.allWrapperClassNames.call(this).concat("RAML08.NumberTypeDeclarationImpl"); }, t.isInstance = function (e) { if (null != e && e.allWrapperClassNames && "function" == typeof e.allWrapperClassNames)
                for (var t = 0, n = e.allWrapperClassNames(); t < n.length; t++) {
                    var r = n[t];
                    if ("RAML08.NumberTypeDeclarationImpl" == r)
                        return !0;
                } return !1; }, t.prototype.RAMLVersion = function () { return "RAML08"; }, t; }(Y);
            t.NumberTypeDeclarationImpl = J;
            var Q = function (e) { function t(t, n) { void 0 === n && (n = !0), e.call(this, "string" == typeof t ? s(t) : t, n), this.nodeOrKey = t, this.setAsTopLevel = n; } return M(t, e), t.prototype.wrapperClassName = function () { return "IntegerTypeDeclarationImpl"; }, t.prototype.kind = function () { return "IntegerTypeDeclaration"; }, t.prototype.allKinds = function () { return e.prototype.allKinds.call(this).concat("IntegerTypeDeclaration"); }, t.prototype.allWrapperClassNames = function () { return e.prototype.allWrapperClassNames.call(this).concat("RAML08.IntegerTypeDeclarationImpl"); }, t.isInstance = function (e) { if (null != e && e.allWrapperClassNames && "function" == typeof e.allWrapperClassNames)
                for (var t = 0, n = e.allWrapperClassNames(); t < n.length; t++) {
                    var r = n[t];
                    if ("RAML08.IntegerTypeDeclarationImpl" == r)
                        return !0;
                } return !1; }, t.prototype.RAMLVersion = function () { return "RAML08"; }, t; }(J);
            t.IntegerTypeDeclarationImpl = Q;
            var Z = function (e) { function t(t, n) { void 0 === n && (n = !0), e.call(this, "string" == typeof t ? u(t) : t, n), this.nodeOrKey = t, this.setAsTopLevel = n; } return M(t, e), t.prototype.wrapperClassName = function () { return "DateTypeDeclarationImpl"; }, t.prototype.kind = function () { return "DateTypeDeclaration"; }, t.prototype.allKinds = function () { return e.prototype.allKinds.call(this).concat("DateTypeDeclaration"); }, t.prototype.allWrapperClassNames = function () { return e.prototype.allWrapperClassNames.call(this).concat("RAML08.DateTypeDeclarationImpl"); }, t.isInstance = function (e) { if (null != e && e.allWrapperClassNames && "function" == typeof e.allWrapperClassNames)
                for (var t = 0, n = e.allWrapperClassNames(); t < n.length; t++) {
                    var r = n[t];
                    if ("RAML08.DateTypeDeclarationImpl" == r)
                        return !0;
                } return !1; }, t.prototype.RAMLVersion = function () { return "RAML08"; }, t; }(Y);
            t.DateTypeDeclarationImpl = Z;
            var ee = function (e) { function t(t, n) { void 0 === n && (n = !0), e.call(this, "string" == typeof t ? l(t) : t, n), this.nodeOrKey = t, this.setAsTopLevel = n; } return M(t, e), t.prototype.wrapperClassName = function () { return "FileTypeDeclarationImpl"; }, t.prototype.kind = function () { return "FileTypeDeclaration"; }, t.prototype.allKinds = function () { return e.prototype.allKinds.call(this).concat("FileTypeDeclaration"); }, t.prototype.allWrapperClassNames = function () { return e.prototype.allWrapperClassNames.call(this).concat("RAML08.FileTypeDeclarationImpl"); }, t.isInstance = function (e) { if (null != e && e.allWrapperClassNames && "function" == typeof e.allWrapperClassNames)
                for (var t = 0, n = e.allWrapperClassNames(); t < n.length; t++) {
                    var r = n[t];
                    if ("RAML08.FileTypeDeclarationImpl" == r)
                        return !0;
                } return !1; }, t.prototype.RAMLVersion = function () { return "RAML08"; }, t; }(Y);
            t.FileTypeDeclarationImpl = ee;
            var te = function (e) { function t() { e.apply(this, arguments); } return M(t, e), t.prototype.name = function () { return e.prototype.attribute.call(this, "name", this.toString); }, t.prototype.setName = function (e) { return this.highLevel().attrOrCreate("name").setValue("" + e), this; }, t.prototype.schema = function () { return e.prototype.attribute.call(this, "schema", function (e) { return new ne(e); }); }, t.prototype.example = function () { return e.prototype.attribute.call(this, "example", function (e) { return new ae(e); }); }, t.prototype.formParameters = function () { return e.prototype.elements.call(this, "formParameters"); }, t.prototype.description = function () { return e.prototype.attribute.call(this, "description", function (e) { return new X(e); }); }, t.prototype.wrapperClassName = function () { return "BodyLikeImpl"; }, t.prototype.kind = function () { return "BodyLike"; }, t.prototype.allKinds = function () { return e.prototype.allKinds.call(this).concat("BodyLike"); }, t.prototype.allWrapperClassNames = function () { return e.prototype.allWrapperClassNames.call(this).concat("RAML08.BodyLikeImpl"); }, t.isInstance = function (e) { if (null != e && e.allWrapperClassNames && "function" == typeof e.allWrapperClassNames)
                for (var t = 0, n = e.allWrapperClassNames(); t < n.length; t++) {
                    var r = n[t];
                    if ("RAML08.BodyLikeImpl" == r)
                        return !0;
                } return !1; }, t.prototype.RAMLVersion = function () { return "RAML08"; }, t.prototype.schemaContent = function () { return O.schemaContent(this); }, t.prototype.parametrizedProperties = function () { return O.getTemplateParametrizedProperties(this); }, t; }(L.BasicNodeImpl);
            t.BodyLikeImpl = te;
            var ne = function (e) { function t() { e.apply(this, arguments); } return M(t, e), t.prototype.wrapperClassName = function () { return "SchemaStringImpl"; }, t.prototype.kind = function () { return "SchemaString"; }, t.prototype.allKinds = function () { return e.prototype.allKinds.call(this).concat("SchemaString"); }, t.prototype.allWrapperClassNames = function () { return e.prototype.allWrapperClassNames.call(this).concat("RAML08.SchemaStringImpl"); }, t.isInstance = function (e) { if (null != e && e.allWrapperClassNames && "function" == typeof e.allWrapperClassNames)
                for (var t = 0, n = e.allWrapperClassNames(); t < n.length; t++) {
                    var r = n[t];
                    if ("RAML08.SchemaStringImpl" == r)
                        return !0;
                } return !1; }, t.prototype.RAMLVersion = function () { return "RAML08"; }, t; }(q);
            t.SchemaStringImpl = ne;
            var re = function (e) {
                function t() { e.apply(this, arguments); }
                return M(t, e), t.prototype.wrapperClassName = function () { return "JSonSchemaStringImpl"; }, t.prototype.kind = function () { return "JSonSchemaString"; }, t.prototype.allKinds = function () {
                    return e.prototype.allKinds.call(this).concat("JSonSchemaString");
                }, t.prototype.allWrapperClassNames = function () { return e.prototype.allWrapperClassNames.call(this).concat("RAML08.JSonSchemaStringImpl"); }, t.isInstance = function (e) { if (null != e && e.allWrapperClassNames && "function" == typeof e.allWrapperClassNames)
                    for (var t = 0, n = e.allWrapperClassNames(); t < n.length; t++) {
                        var r = n[t];
                        if ("RAML08.JSonSchemaStringImpl" == r)
                            return !0;
                    } return !1; }, t.prototype.RAMLVersion = function () { return "RAML08"; }, t;
            }(ne);
            t.JSonSchemaStringImpl = re;
            var ie = function (e) { function t() { e.apply(this, arguments); } return M(t, e), t.prototype.wrapperClassName = function () { return "XMLSchemaStringImpl"; }, t.prototype.kind = function () { return "XMLSchemaString"; }, t.prototype.allKinds = function () { return e.prototype.allKinds.call(this).concat("XMLSchemaString"); }, t.prototype.allWrapperClassNames = function () { return e.prototype.allWrapperClassNames.call(this).concat("RAML08.XMLSchemaStringImpl"); }, t.isInstance = function (e) { if (null != e && e.allWrapperClassNames && "function" == typeof e.allWrapperClassNames)
                for (var t = 0, n = e.allWrapperClassNames(); t < n.length; t++) {
                    var r = n[t];
                    if ("RAML08.XMLSchemaStringImpl" == r)
                        return !0;
                } return !1; }, t.prototype.RAMLVersion = function () { return "RAML08"; }, t; }(ne);
            t.XMLSchemaStringImpl = ie;
            var ae = function (e) { function t() { e.apply(this, arguments); } return M(t, e), t.prototype.wrapperClassName = function () { return "ExampleStringImpl"; }, t.prototype.kind = function () { return "ExampleString"; }, t.prototype.allKinds = function () { return e.prototype.allKinds.call(this).concat("ExampleString"); }, t.prototype.allWrapperClassNames = function () { return e.prototype.allWrapperClassNames.call(this).concat("RAML08.ExampleStringImpl"); }, t.isInstance = function (e) { if (null != e && e.allWrapperClassNames && "function" == typeof e.allWrapperClassNames)
                for (var t = 0, n = e.allWrapperClassNames(); t < n.length; t++) {
                    var r = n[t];
                    if ("RAML08.ExampleStringImpl" == r)
                        return !0;
                } return !1; }, t.prototype.RAMLVersion = function () { return "RAML08"; }, t; }(q);
            t.ExampleStringImpl = ae;
            var oe = function (e) { function t() { e.apply(this, arguments); } return M(t, e), t.prototype.wrapperClassName = function () { return "JSONExampleImpl"; }, t.prototype.kind = function () { return "JSONExample"; }, t.prototype.allKinds = function () { return e.prototype.allKinds.call(this).concat("JSONExample"); }, t.prototype.allWrapperClassNames = function () { return e.prototype.allWrapperClassNames.call(this).concat("RAML08.JSONExampleImpl"); }, t.isInstance = function (e) { if (null != e && e.allWrapperClassNames && "function" == typeof e.allWrapperClassNames)
                for (var t = 0, n = e.allWrapperClassNames(); t < n.length; t++) {
                    var r = n[t];
                    if ("RAML08.JSONExampleImpl" == r)
                        return !0;
                } return !1; }, t.prototype.RAMLVersion = function () { return "RAML08"; }, t; }(ae);
            t.JSONExampleImpl = oe;
            var se = function (e) { function t() { e.apply(this, arguments); } return M(t, e), t.prototype.wrapperClassName = function () { return "XMLExampleImpl"; }, t.prototype.kind = function () { return "XMLExample"; }, t.prototype.allKinds = function () { return e.prototype.allKinds.call(this).concat("XMLExample"); }, t.prototype.allWrapperClassNames = function () { return e.prototype.allWrapperClassNames.call(this).concat("RAML08.XMLExampleImpl"); }, t.isInstance = function (e) { if (null != e && e.allWrapperClassNames && "function" == typeof e.allWrapperClassNames)
                for (var t = 0, n = e.allWrapperClassNames(); t < n.length; t++) {
                    var r = n[t];
                    if ("RAML08.XMLExampleImpl" == r)
                        return !0;
                } return !1; }, t.prototype.RAMLVersion = function () { return "RAML08"; }, t; }(ae);
            t.XMLExampleImpl = se;
            var ue = function (e) { function t(t, n) { void 0 === n && (n = !0), e.call(this, "string" == typeof t ? p(t) : t, n), this.nodeOrKey = t, this.setAsTopLevel = n; } return M(t, e), t.prototype.schema = function () { return e.prototype.attribute.call(this, "schema", function (e) { return new ie(e); }); }, t.prototype.wrapperClassName = function () { return "XMLBodyImpl"; }, t.prototype.kind = function () { return "XMLBody"; }, t.prototype.allKinds = function () { return e.prototype.allKinds.call(this).concat("XMLBody"); }, t.prototype.allWrapperClassNames = function () { return e.prototype.allWrapperClassNames.call(this).concat("RAML08.XMLBodyImpl"); }, t.isInstance = function (e) { if (null != e && e.allWrapperClassNames && "function" == typeof e.allWrapperClassNames)
                for (var t = 0, n = e.allWrapperClassNames(); t < n.length; t++) {
                    var r = n[t];
                    if ("RAML08.XMLBodyImpl" == r)
                        return !0;
                } return !1; }, t.prototype.RAMLVersion = function () { return "RAML08"; }, t; }(te);
            t.XMLBodyImpl = ue;
            var le = function (e) { function t(t, n) { void 0 === n && (n = !0), e.call(this, "string" == typeof t ? c(t) : t, n), this.nodeOrKey = t, this.setAsTopLevel = n; } return M(t, e), t.prototype.schema = function () { return e.prototype.attribute.call(this, "schema", function (e) { return new re(e); }); }, t.prototype.wrapperClassName = function () { return "JSONBodyImpl"; }, t.prototype.kind = function () { return "JSONBody"; }, t.prototype.allKinds = function () { return e.prototype.allKinds.call(this).concat("JSONBody"); }, t.prototype.allWrapperClassNames = function () { return e.prototype.allWrapperClassNames.call(this).concat("RAML08.JSONBodyImpl"); }, t.isInstance = function (e) { if (null != e && e.allWrapperClassNames && "function" == typeof e.allWrapperClassNames)
                for (var t = 0, n = e.allWrapperClassNames(); t < n.length; t++) {
                    var r = n[t];
                    if ("RAML08.JSONBodyImpl" == r)
                        return !0;
                } return !1; }, t.prototype.RAMLVersion = function () { return "RAML08"; }, t; }(te);
            t.JSONBodyImpl = le;
            var pe = function (e) { function t() { e.apply(this, arguments); } return M(t, e), t.prototype.wrapperClassName = function () { return "SecuritySchemeRefImpl"; }, t.prototype.kind = function () { return "SecuritySchemeRef"; }, t.prototype.allKinds = function () { return e.prototype.allKinds.call(this).concat("SecuritySchemeRef"); }, t.prototype.allWrapperClassNames = function () { return e.prototype.allWrapperClassNames.call(this).concat("RAML08.SecuritySchemeRefImpl"); }, t.isInstance = function (e) { if (null != e && e.allWrapperClassNames && "function" == typeof e.allWrapperClassNames)
                for (var t = 0, n = e.allWrapperClassNames(); t < n.length; t++) {
                    var r = n[t];
                    if ("RAML08.SecuritySchemeRefImpl" == r)
                        return !0;
                } return !1; }, t.prototype.RAMLVersion = function () { return "RAML08"; }, t.prototype.securitySchemeName = function () { return O.securitySchemeName(this); }, t.prototype.securityScheme = function () { return O.securityScheme(this); }, t; }(B);
            t.SecuritySchemeRefImpl = pe;
            var ce = function (e) { function t() { e.apply(this, arguments); } return M(t, e), t.prototype.name = function () { return e.prototype.attribute.call(this, "name", this.toString); }, t.prototype.setName = function (e) { return this.highLevel().attrOrCreate("name").setValue("" + e), this; }, t.prototype.type = function () { return e.prototype.attribute.call(this, "type", this.toString); }, t.prototype.setType = function (e) { return this.highLevel().attrOrCreate("type").setValue("" + e), this; }, t.prototype.description = function () { return e.prototype.attribute.call(this, "description", function (e) { return new X(e); }); }, t.prototype.describedBy = function () { return e.prototype.element.call(this, "describedBy"); }, t.prototype.settings = function () { return e.prototype.element.call(this, "settings"); }, t.prototype.wrapperClassName = function () { return "AbstractSecuritySchemeImpl"; }, t.prototype.kind = function () { return "AbstractSecurityScheme"; }, t.prototype.allKinds = function () { return e.prototype.allKinds.call(this).concat("AbstractSecurityScheme"); }, t.prototype.allWrapperClassNames = function () { return e.prototype.allWrapperClassNames.call(this).concat("RAML08.AbstractSecuritySchemeImpl"); }, t.isInstance = function (e) { if (null != e && e.allWrapperClassNames && "function" == typeof e.allWrapperClassNames)
                for (var t = 0, n = e.allWrapperClassNames(); t < n.length; t++) {
                    var r = n[t];
                    if ("RAML08.AbstractSecuritySchemeImpl" == r)
                        return !0;
                } return !1; }, t.prototype.RAMLVersion = function () { return "RAML08"; }, t; }(L.BasicNodeImpl);
            t.AbstractSecuritySchemeImpl = ce;
            var fe = function (e) { function t(t, n) { void 0 === n && (n = !0), e.call(this, "string" == typeof t ? f(t) : t, n), this.nodeOrKey = t, this.setAsTopLevel = n; } return M(t, e), t.prototype.displayName = function () { return e.prototype.attribute.call(this, "displayName", this.toString); }, t.prototype.setDisplayName = function (e) { return this.highLevel().attrOrCreate("displayName").setValue("" + e), this; }, t.prototype.is = function () { return e.prototype.attributes.call(this, "is", function (e) { return new me(e); }); }, t.prototype.headers = function () { return e.prototype.elements.call(this, "headers"); }, t.prototype.queryParameters = function () { return e.prototype.elements.call(this, "queryParameters"); }, t.prototype.responses = function () { return e.prototype.elements.call(this, "responses"); }, t.prototype.description = function () { return e.prototype.attribute.call(this, "description", function (e) { return new X(e); }); }, t.prototype.wrapperClassName = function () { return "SecuritySchemePartImpl"; }, t.prototype.kind = function () { return "SecuritySchemePart"; }, t.prototype.allKinds = function () { return e.prototype.allKinds.call(this).concat("SecuritySchemePart"); }, t.prototype.allWrapperClassNames = function () { return e.prototype.allWrapperClassNames.call(this).concat("RAML08.SecuritySchemePartImpl"); }, t.isInstance = function (e) { if (null != e && e.allWrapperClassNames && "function" == typeof e.allWrapperClassNames)
                for (var t = 0, n = e.allWrapperClassNames(); t < n.length; t++) {
                    var r = n[t];
                    if ("RAML08.SecuritySchemePartImpl" == r)
                        return !0;
                } return !1; }, t.prototype.RAMLVersion = function () { return "RAML08"; }, t; }(j);
            t.SecuritySchemePartImpl = fe;
            var me = function (e) { function t() { e.apply(this, arguments); } return M(t, e), t.prototype.wrapperClassName = function () { return "TraitRefImpl"; }, t.prototype.kind = function () { return "TraitRef"; }, t.prototype.allKinds = function () { return e.prototype.allKinds.call(this).concat("TraitRef"); }, t.prototype.allWrapperClassNames = function () { return e.prototype.allWrapperClassNames.call(this).concat("RAML08.TraitRefImpl"); }, t.isInstance = function (e) { if (null != e && e.allWrapperClassNames && "function" == typeof e.allWrapperClassNames)
                for (var t = 0, n = e.allWrapperClassNames(); t < n.length; t++) {
                    var r = n[t];
                    if ("RAML08.TraitRefImpl" == r)
                        return !0;
                } return !1; }, t.prototype.RAMLVersion = function () { return "RAML08"; }, t.prototype.trait = function () { return O.referencedTrait(this); }, t; }(B);
            t.TraitRefImpl = me;
            var he = function (e) { function t(t, n) { void 0 === n && (n = !0), e.call(this, "string" == typeof t ? m(t) : t, n), this.nodeOrKey = t, this.setAsTopLevel = n; } return M(t, e), t.prototype.name = function () { return e.prototype.attribute.call(this, "name", this.toString); }, t.prototype.setName = function (e) { return this.highLevel().attrOrCreate("name").setValue("" + e), this; }, t.prototype.usage = function () { return e.prototype.attribute.call(this, "usage", this.toString); }, t.prototype.setUsage = function (e) { return this.highLevel().attrOrCreate("usage").setValue("" + e), this; }, t.prototype.displayName = function () { return e.prototype.attribute.call(this, "displayName", this.toString); }, t.prototype.setDisplayName = function (e) { return this.highLevel().attrOrCreate("displayName").setValue("" + e), this; }, t.prototype.wrapperClassName = function () { return "TraitImpl"; }, t.prototype.kind = function () { return "Trait"; }, t.prototype.allKinds = function () { return e.prototype.allKinds.call(this).concat("Trait"); }, t.prototype.allWrapperClassNames = function () { return e.prototype.allWrapperClassNames.call(this).concat("RAML08.TraitImpl"); }, t.isInstance = function (e) { if (null != e && e.allWrapperClassNames && "function" == typeof e.allWrapperClassNames)
                for (var t = 0, n = e.allWrapperClassNames(); t < n.length; t++) {
                    var r = n[t];
                    if ("RAML08.TraitImpl" == r)
                        return !0;
                } return !1; }, t.prototype.RAMLVersion = function () { return "RAML08"; }, t.prototype.parametrizedProperties = function () { return O.getTemplateParametrizedProperties(this); }, t; }(j);
            t.TraitImpl = he;
            var de = function (e) { function t() { e.apply(this, arguments); } return M(t, e), t.prototype.wrapperClassName = function () { return "SecuritySchemeSettingsImpl"; }, t.prototype.kind = function () { return "SecuritySchemeSettings"; }, t.prototype.allKinds = function () { return e.prototype.allKinds.call(this).concat("SecuritySchemeSettings"); }, t.prototype.allWrapperClassNames = function () { return e.prototype.allWrapperClassNames.call(this).concat("RAML08.SecuritySchemeSettingsImpl"); }, t.isInstance = function (e) { if (null != e && e.allWrapperClassNames && "function" == typeof e.allWrapperClassNames)
                for (var t = 0, n = e.allWrapperClassNames(); t < n.length; t++) {
                    var r = n[t];
                    if ("RAML08.SecuritySchemeSettingsImpl" == r)
                        return !0;
                } return !1; }, t.prototype.RAMLVersion = function () { return "RAML08"; }, t; }(L.BasicNodeImpl);
            t.SecuritySchemeSettingsImpl = de;
            var ye = function (e) { function t(t, n) { void 0 === n && (n = !0), e.call(this, "string" == typeof t ? h(t) : t, n), this.nodeOrKey = t, this.setAsTopLevel = n; } return M(t, e), t.prototype.requestTokenUri = function () { return e.prototype.attribute.call(this, "requestTokenUri", function (e) { return new ve(e); }); }, t.prototype.authorizationUri = function () { return e.prototype.attribute.call(this, "authorizationUri", function (e) { return new ve(e); }); }, t.prototype.tokenCredentialsUri = function () { return e.prototype.attribute.call(this, "tokenCredentialsUri", function (e) { return new ve(e); }); }, t.prototype.wrapperClassName = function () { return "OAuth1SecuritySchemeSettingsImpl"; }, t.prototype.kind = function () { return "OAuth1SecuritySchemeSettings"; }, t.prototype.allKinds = function () { return e.prototype.allKinds.call(this).concat("OAuth1SecuritySchemeSettings"); }, t.prototype.allWrapperClassNames = function () { return e.prototype.allWrapperClassNames.call(this).concat("RAML08.OAuth1SecuritySchemeSettingsImpl"); }, t.isInstance = function (e) { if (null != e && e.allWrapperClassNames && "function" == typeof e.allWrapperClassNames)
                for (var t = 0, n = e.allWrapperClassNames(); t < n.length; t++) {
                    var r = n[t];
                    if ("RAML08.OAuth1SecuritySchemeSettingsImpl" == r)
                        return !0;
                } return !1; }, t.prototype.RAMLVersion = function () { return "RAML08"; }, t; }(de);
            t.OAuth1SecuritySchemeSettingsImpl = ye;
            var ve = function (e) { function t() { e.apply(this, arguments); } return M(t, e), t.prototype.wrapperClassName = function () { return "FixedUriImpl"; }, t.prototype.kind = function () { return "FixedUri"; }, t.prototype.allKinds = function () { return e.prototype.allKinds.call(this).concat("FixedUri"); }, t.prototype.allWrapperClassNames = function () { return e.prototype.allWrapperClassNames.call(this).concat("RAML08.FixedUriImpl"); }, t.isInstance = function (e) { if (null != e && e.allWrapperClassNames && "function" == typeof e.allWrapperClassNames)
                for (var t = 0, n = e.allWrapperClassNames(); t < n.length; t++) {
                    var r = n[t];
                    if ("RAML08.FixedUriImpl" == r)
                        return !0;
                } return !1; }, t.prototype.RAMLVersion = function () { return "RAML08"; }, t; }(q);
            t.FixedUriImpl = ve;
            var ge = function (e) { function t(t, n) { void 0 === n && (n = !0), e.call(this, "string" == typeof t ? d(t) : t, n), this.nodeOrKey = t, this.setAsTopLevel = n; } return M(t, e), t.prototype.accessTokenUri = function () { return e.prototype.attribute.call(this, "accessTokenUri", function (e) { return new ve(e); }); }, t.prototype.authorizationUri = function () { return e.prototype.attribute.call(this, "authorizationUri", function (e) { return new ve(e); }); }, t.prototype.authorizationGrants = function () { return e.prototype.attributes.call(this, "authorizationGrants", this.toString); }, t.prototype.setAuthorizationGrants = function (e) { return this.highLevel().attrOrCreate("authorizationGrants").setValue("" + e), this; }, t.prototype.scopes = function () { return e.prototype.attributes.call(this, "scopes", this.toString); }, t.prototype.setScopes = function (e) { return this.highLevel().attrOrCreate("scopes").setValue("" + e), this; }, t.prototype.wrapperClassName = function () { return "OAuth2SecuritySchemeSettingsImpl"; }, t.prototype.kind = function () { return "OAuth2SecuritySchemeSettings"; }, t.prototype.allKinds = function () { return e.prototype.allKinds.call(this).concat("OAuth2SecuritySchemeSettings"); }, t.prototype.allWrapperClassNames = function () { return e.prototype.allWrapperClassNames.call(this).concat("RAML08.OAuth2SecuritySchemeSettingsImpl"); }, t.isInstance = function (e) { if (null != e && e.allWrapperClassNames && "function" == typeof e.allWrapperClassNames)
                for (var t = 0, n = e.allWrapperClassNames(); t < n.length; t++) {
                    var r = n[t];
                    if ("RAML08.OAuth2SecuritySchemeSettingsImpl" == r)
                        return !0;
                } return !1; }, t.prototype.RAMLVersion = function () { return "RAML08"; }, t; }(de);
            t.OAuth2SecuritySchemeSettingsImpl = ge;
            var Ae = function (e) { function t(t, n) { void 0 === n && (n = !0), e.call(this, "string" == typeof t ? y(t) : t, n), this.nodeOrKey = t, this.setAsTopLevel = n; } return M(t, e), t.prototype.settings = function () { return e.prototype.element.call(this, "settings"); }, t.prototype.wrapperClassName = function () { return "OAuth2SecuritySchemeImpl"; }, t.prototype.kind = function () { return "OAuth2SecurityScheme"; }, t.prototype.allKinds = function () { return e.prototype.allKinds.call(this).concat("OAuth2SecurityScheme"); }, t.prototype.allWrapperClassNames = function () { return e.prototype.allWrapperClassNames.call(this).concat("RAML08.OAuth2SecuritySchemeImpl"); }, t.isInstance = function (e) { if (null != e && e.allWrapperClassNames && "function" == typeof e.allWrapperClassNames)
                for (var t = 0, n = e.allWrapperClassNames(); t < n.length; t++) {
                    var r = n[t];
                    if ("RAML08.OAuth2SecuritySchemeImpl" == r)
                        return !0;
                } return !1; }, t.prototype.RAMLVersion = function () { return "RAML08"; }, t; }(ce);
            t.OAuth2SecuritySchemeImpl = Ae;
            var Te = function (e) { function t(t, n) { void 0 === n && (n = !0), e.call(this, "string" == typeof t ? v(t) : t, n), this.nodeOrKey = t, this.setAsTopLevel = n; } return M(t, e), t.prototype.settings = function () { return e.prototype.element.call(this, "settings"); }, t.prototype.wrapperClassName = function () { return "OAuth1SecuritySchemeImpl"; }, t.prototype.kind = function () { return "OAuth1SecurityScheme"; }, t.prototype.allKinds = function () { return e.prototype.allKinds.call(this).concat("OAuth1SecurityScheme"); }, t.prototype.allWrapperClassNames = function () { return e.prototype.allWrapperClassNames.call(this).concat("RAML08.OAuth1SecuritySchemeImpl"); }, t.isInstance = function (e) { if (null != e && e.allWrapperClassNames && "function" == typeof e.allWrapperClassNames)
                for (var t = 0, n = e.allWrapperClassNames(); t < n.length; t++) {
                    var r = n[t];
                    if ("RAML08.OAuth1SecuritySchemeImpl" == r)
                        return !0;
                } return !1; }, t.prototype.RAMLVersion = function () { return "RAML08"; }, t; }(ce);
            t.OAuth1SecuritySchemeImpl = Te;
            var Ee = function (e) { function t(t, n) { void 0 === n && (n = !0), e.call(this, "string" == typeof t ? g(t) : t, n), this.nodeOrKey = t, this.setAsTopLevel = n; } return M(t, e), t.prototype.wrapperClassName = function () { return "BasicSecuritySchemeImpl"; }, t.prototype.kind = function () { return "BasicSecurityScheme"; }, t.prototype.allKinds = function () { return e.prototype.allKinds.call(this).concat("BasicSecurityScheme"); }, t.prototype.allWrapperClassNames = function () { return e.prototype.allWrapperClassNames.call(this).concat("RAML08.BasicSecuritySchemeImpl"); }, t.isInstance = function (e) { if (null != e && e.allWrapperClassNames && "function" == typeof e.allWrapperClassNames)
                for (var t = 0, n = e.allWrapperClassNames(); t < n.length; t++) {
                    var r = n[t];
                    if ("RAML08.BasicSecuritySchemeImpl" == r)
                        return !0;
                } return !1; }, t.prototype.RAMLVersion = function () { return "RAML08"; }, t; }(ce);
            t.BasicSecuritySchemeImpl = Ee;
            var Se = function (e) { function t(t, n) { void 0 === n && (n = !0), e.call(this, "string" == typeof t ? A(t) : t, n), this.nodeOrKey = t, this.setAsTopLevel = n; } return M(t, e), t.prototype.wrapperClassName = function () { return "DigestSecuritySchemeImpl"; }, t.prototype.kind = function () { return "DigestSecurityScheme"; }, t.prototype.allKinds = function () { return e.prototype.allKinds.call(this).concat("DigestSecurityScheme"); }, t.prototype.allWrapperClassNames = function () { return e.prototype.allWrapperClassNames.call(this).concat("RAML08.DigestSecuritySchemeImpl"); }, t.isInstance = function (e) { if (null != e && e.allWrapperClassNames && "function" == typeof e.allWrapperClassNames)
                for (var t = 0, n = e.allWrapperClassNames(); t < n.length; t++) {
                    var r = n[t];
                    if ("RAML08.DigestSecuritySchemeImpl" == r)
                        return !0;
                } return !1; }, t.prototype.RAMLVersion = function () { return "RAML08"; }, t; }(ce);
            t.DigestSecuritySchemeImpl = Se;
            var Ne = function (e) { function t(t, n) { void 0 === n && (n = !0), e.call(this, "string" == typeof t ? T(t) : t, n), this.nodeOrKey = t, this.setAsTopLevel = n; } return M(t, e), t.prototype.wrapperClassName = function () { return "CustomSecuritySchemeImpl"; }, t.prototype.kind = function () { return "CustomSecurityScheme"; }, t.prototype.allKinds = function () { return e.prototype.allKinds.call(this).concat("CustomSecurityScheme"); }, t.prototype.allWrapperClassNames = function () { return e.prototype.allWrapperClassNames.call(this).concat("RAML08.CustomSecuritySchemeImpl"); }, t.isInstance = function (e) { if (null != e && e.allWrapperClassNames && "function" == typeof e.allWrapperClassNames)
                for (var t = 0, n = e.allWrapperClassNames(); t < n.length; t++) {
                    var r = n[t];
                    if ("RAML08.CustomSecuritySchemeImpl" == r)
                        return !0;
                } return !1; }, t.prototype.RAMLVersion = function () { return "RAML08"; }, t; }(ce);
            t.CustomSecuritySchemeImpl = Ne;
            var _e = function (e) { function t(t, n) { void 0 === n && (n = !0), e.call(this, "string" == typeof t ? r(t) : t, n), this.nodeOrKey = t, this.setAsTopLevel = n; } return M(t, e), t.prototype.method = function () { return e.prototype.attribute.call(this, "method", this.toString); }, t.prototype.setMethod = function (e) { return this.highLevel().attrOrCreate("method").setValue("" + e), this; }, t.prototype.is = function () { return e.prototype.attributes.call(this, "is", function (e) { return new me(e); }); }, t.prototype.wrapperClassName = function () { return "MethodImpl"; }, t.prototype.kind = function () { return "Method"; }, t.prototype.allKinds = function () { return e.prototype.allKinds.call(this).concat("Method"); }, t.prototype.allWrapperClassNames = function () { return e.prototype.allWrapperClassNames.call(this).concat("RAML08.MethodImpl"); }, t.isInstance = function (e) { if (null != e && e.allWrapperClassNames && "function" == typeof e.allWrapperClassNames)
                for (var t = 0, n = e.allWrapperClassNames(); t < n.length; t++) {
                    var r = n[t];
                    if ("RAML08.MethodImpl" == r)
                        return !0;
                } return !1; }, t.prototype.RAMLVersion = function () { return "RAML08"; }, t.prototype.parentResource = function () { return O.parentResource(this); }, t.prototype.ownerApi = function () { return O.ownerApi(this); }, t.prototype.methodId = function () { return O.methodId(this); }, t.prototype.allSecuredBy = function () { return O.allSecuredBy(this); }, t.prototype.parametrizedProperties = function () { return O.getTemplateParametrizedProperties(this); }, t; }(j);
            t.MethodImpl = _e;
            var be = function (e) { function t() { e.apply(this, arguments); } return M(t, e), t.prototype.wrapperClassName = function () { return "MimeTypeImpl"; }, t.prototype.kind = function () { return "MimeType"; }, t.prototype.allKinds = function () { return e.prototype.allKinds.call(this).concat("MimeType"); }, t.prototype.allWrapperClassNames = function () { return e.prototype.allWrapperClassNames.call(this).concat("RAML08.MimeTypeImpl"); }, t.isInstance = function (e) { if (null != e && e.allWrapperClassNames && "function" == typeof e.allWrapperClassNames)
                for (var t = 0, n = e.allWrapperClassNames(); t < n.length; t++) {
                    var r = n[t];
                    if ("RAML08.MimeTypeImpl" == r)
                        return !0;
                } return !1; }, t.prototype.RAMLVersion = function () { return "RAML08"; }, t; }(q);
            t.MimeTypeImpl = be;
            var Ie = function (e) { function t() { e.apply(this, arguments); } return M(t, e), t.prototype.wrapperClassName = function () { return "UriTemplateImpl"; }, t.prototype.kind = function () { return "UriTemplate"; }, t.prototype.allKinds = function () { return e.prototype.allKinds.call(this).concat("UriTemplate"); }, t.prototype.allWrapperClassNames = function () { return e.prototype.allWrapperClassNames.call(this).concat("RAML08.UriTemplateImpl"); }, t.isInstance = function (e) { if (null != e && e.allWrapperClassNames && "function" == typeof e.allWrapperClassNames)
                for (var t = 0, n = e.allWrapperClassNames(); t < n.length; t++) {
                    var r = n[t];
                    if ("RAML08.UriTemplateImpl" == r)
                        return !0;
                } return !1; }, t.prototype.RAMLVersion = function () { return "RAML08"; }, t; }(q);
            t.UriTemplateImpl = Ie;
            var Re = function (e) { function t() { e.apply(this, arguments); } return M(t, e), t.prototype.wrapperClassName = function () { return "RelativeUriStringImpl"; }, t.prototype.kind = function () { return "RelativeUriString"; }, t.prototype.allKinds = function () { return e.prototype.allKinds.call(this).concat("RelativeUriString"); }, t.prototype.allWrapperClassNames = function () { return e.prototype.allWrapperClassNames.call(this).concat("RAML08.RelativeUriStringImpl"); }, t.isInstance = function (e) { if (null != e && e.allWrapperClassNames && "function" == typeof e.allWrapperClassNames)
                for (var t = 0, n = e.allWrapperClassNames(); t < n.length; t++) {
                    var r = n[t];
                    if ("RAML08.RelativeUriStringImpl" == r)
                        return !0;
                } return !1; }, t.prototype.RAMLVersion = function () { return "RAML08"; }, t; }(Ie);
            t.RelativeUriStringImpl = Re;
            var Me = function (e) { function t() { e.apply(this, arguments); } return M(t, e), t.prototype.wrapperClassName = function () { return "FullUriTemplateStringImpl"; }, t.prototype.kind = function () { return "FullUriTemplateString"; }, t.prototype.allKinds = function () { return e.prototype.allKinds.call(this).concat("FullUriTemplateString"); }, t.prototype.allWrapperClassNames = function () { return e.prototype.allWrapperClassNames.call(this).concat("RAML08.FullUriTemplateStringImpl"); }, t.isInstance = function (e) { if (null != e && e.allWrapperClassNames && "function" == typeof e.allWrapperClassNames)
                for (var t = 0, n = e.allWrapperClassNames(); t < n.length; t++) {
                    var r = n[t];
                    if ("RAML08.FullUriTemplateStringImpl" == r)
                        return !0;
                } return !1; }, t.prototype.RAMLVersion = function () { return "RAML08"; }, t; }(Ie);
            t.FullUriTemplateStringImpl = Me;
            var we = function (e) { function t() { e.apply(this, arguments); } return M(t, e), t.prototype.wrapperClassName = function () { return "RAMLSimpleElementImpl"; }, t.prototype.kind = function () { return "RAMLSimpleElement"; }, t.prototype.allKinds = function () { return e.prototype.allKinds.call(this).concat("RAMLSimpleElement"); }, t.prototype.allWrapperClassNames = function () { return e.prototype.allWrapperClassNames.call(this).concat("RAML08.RAMLSimpleElementImpl"); }, t.isInstance = function (e) { if (null != e && e.allWrapperClassNames && "function" == typeof e.allWrapperClassNames)
                for (var t = 0, n = e.allWrapperClassNames(); t < n.length; t++) {
                    var r = n[t];
                    if ("RAML08.RAMLSimpleElementImpl" == r)
                        return !0;
                } return !1; }, t.prototype.RAMLVersion = function () { return "RAML08"; }, t; }(L.BasicNodeImpl);
            t.RAMLSimpleElementImpl = we;
            var Ce = function (e) { function t(t, n) { void 0 === n && (n = !0), e.call(this, "string" == typeof t ? S(t) : t, n), this.nodeOrKey = t, this.setAsTopLevel = n; } return M(t, e), t.prototype.title = function () { return e.prototype.attribute.call(this, "title", this.toString); }, t.prototype.setTitle = function (e) { return this.highLevel().attrOrCreate("title").setValue("" + e), this; }, t.prototype.content = function () { return e.prototype.attribute.call(this, "content", function (e) { return new X(e); }); }, t.prototype.wrapperClassName = function () { return "DocumentationItemImpl"; }, t.prototype.kind = function () { return "DocumentationItem"; }, t.prototype.allKinds = function () { return e.prototype.allKinds.call(this).concat("DocumentationItem"); }, t.prototype.allWrapperClassNames = function () { return e.prototype.allWrapperClassNames.call(this).concat("RAML08.DocumentationItemImpl"); }, t.isInstance = function (e) { if (null != e && e.allWrapperClassNames && "function" == typeof e.allWrapperClassNames)
                for (var t = 0, n = e.allWrapperClassNames(); t < n.length; t++) {
                    var r = n[t];
                    if ("RAML08.DocumentationItemImpl" == r)
                        return !0;
                } return !1; }, t.prototype.RAMLVersion = function () { return "RAML08"; }, t; }(we);
            t.DocumentationItemImpl = Ce;
            var Le = function (e) { function t(t, n) { void 0 === n && (n = !0), e.call(this, "string" == typeof t ? E(t) : t, n), this.nodeOrKey = t, this.setAsTopLevel = n; } return M(t, e), t.prototype.key = function () { return e.prototype.attribute.call(this, "key", this.toString); }, t.prototype.setKey = function (e) { return this.highLevel().attrOrCreate("key").setValue("" + e), this; }, t.prototype.value = function () { return e.prototype.attribute.call(this, "value", function (e) { return new ne(e); }); }, t.prototype.wrapperClassName = function () { return "GlobalSchemaImpl"; }, t.prototype.kind = function () { return "GlobalSchema"; }, t.prototype.allKinds = function () { return e.prototype.allKinds.call(this).concat("GlobalSchema"); }, t.prototype.allWrapperClassNames = function () { return e.prototype.allWrapperClassNames.call(this).concat("RAML08.GlobalSchemaImpl"); }, t.isInstance = function (e) { if (null != e && e.allWrapperClassNames && "function" == typeof e.allWrapperClassNames)
                for (var t = 0, n = e.allWrapperClassNames(); t < n.length; t++) {
                    var r = n[t];
                    if ("RAML08.GlobalSchemaImpl" == r)
                        return !0;
                } return !1; }, t.prototype.RAMLVersion = function () { return "RAML08"; }, t; }(we);
            t.GlobalSchemaImpl = Le;
            var Pe = function (e) { function t() { e.apply(this, arguments); } return M(t, e), t.prototype.relativeUri = function () { return e.prototype.attribute.call(this, "relativeUri", function (e) { return new Re(e); }); }, t.prototype.type = function () { return e.prototype.attribute.call(this, "type", function (e) { return new K(e); }); }, t.prototype.is = function () { return e.prototype.attributes.call(this, "is", function (e) { return new me(e); }); }, t.prototype.securedBy = function () { return e.prototype.attributes.call(this, "securedBy", function (e) { return new pe(e); }); }, t.prototype.uriParameters_original = function () { return e.prototype.elements.call(this, "uriParameters"); }, t.prototype.methods = function () { return e.prototype.elements.call(this, "methods"); }, t.prototype.resources = function () { return e.prototype.elements.call(this, "resources"); }, t.prototype.displayName = function () { return e.prototype.attribute.call(this, "displayName", this.toString); }, t.prototype.setDisplayName = function (e) { return this.highLevel().attrOrCreate("displayName").setValue("" + e), this; }, t.prototype.baseUriParameters = function () { return e.prototype.elements.call(this, "baseUriParameters"); }, t.prototype.description = function () { return e.prototype.attribute.call(this, "description", function (e) { return new X(e); }); }, t.prototype.wrapperClassName = function () { return "ResourceImpl"; }, t.prototype.kind = function () { return "Resource"; }, t.prototype.allKinds = function () { return e.prototype.allKinds.call(this).concat("Resource"); }, t.prototype.allWrapperClassNames = function () { return e.prototype.allWrapperClassNames.call(this).concat("RAML08.ResourceImpl"); }, t.isInstance = function (e) { if (null != e && e.allWrapperClassNames && "function" == typeof e.allWrapperClassNames)
                for (var t = 0, n = e.allWrapperClassNames(); t < n.length; t++) {
                    var r = n[t];
                    if ("RAML08.ResourceImpl" == r)
                        return !0;
                } return !1; }, t.prototype.RAMLVersion = function () { return "RAML08"; }, t.prototype.completeRelativeUri = function () { return O.completeRelativeUri(this); }, t.prototype.absoluteUri = function () { return O.absoluteUri(this); }, t.prototype.parentResource = function () { return O.parent(this); }, t.prototype.childResource = function (e) { return O.childResource(this, e); }, t.prototype.childMethod = function (e) { return O.childMethod(this, e); }, t.prototype.ownerApi = function () { return O.ownerApi(this); }, t.prototype.uriParameters = function () { return O.uriParametersPrimary(this); }, t.prototype.allUriParameters = function () { return O.uriParameters(this); }, t.prototype.absoluteUriParameters = function () { return O.absoluteUriParameters(this); }, t.prototype.allSecuredBy = function () { return O.allSecuredBy(this); }, t; }(L.BasicNodeImpl);
            t.ResourceImpl = Pe, t.loadApiSync = N, t.loadRAMLSync = _, t.loadApi = b, t.loadRAML = I, t.getLanguageElementByRuntimeType = R;
        }, function (e, t, n) {
            "use strict";
            function r(e) { if (null == e || "string" != typeof e)
                return { status: M.NOT_REQUIRED }; for (var t = "", n = {}, r = 0, i = e.indexOf("<<"); i >= 0; i = e.indexOf("<<", r)) {
                if (t += e.substring(r, i), r = e.indexOf(">>", i), 0 > r)
                    return { status: M.ERROR };
                r += ">>".length;
                var a = e.substring(i, r), o = w + i + w;
                n[o] = a, t += o;
            } return 0 == t.length ? { status: M.NOT_REQUIRED } : (t += e.substring(r, e.length), { resultingString: t, substitutions: n, status: M.OK }); }
            function i(e, t) { if (null == e)
                return { status: M.NOT_REQUIRED }; for (var n = "", r = 0, i = e.indexOf(w); i >= 0; i = e.indexOf(w, r)) {
                if (r = e.indexOf(w, i + 1), r += w.length, 0 > r)
                    return { status: M.ERROR };
                var a = e.substring(i, r), o = t[a];
                if (null == o)
                    return { status: M.ERROR };
                n += o;
            } return 0 == n.length ? { status: M.NOT_REQUIRED } : (n += e.substring(r, e.length), { resultingString: n, substitutions: t, status: M.OK }); }
            function a(e) { for (var t = !1, n = 0; n < e.length; n++) {
                var r = e.charAt(n);
                if ("|" == r || "(" == r || "[" == r) {
                    t = !0;
                    break;
                }
            } return t; }
            function o(e) { var t = e.parent && e.parent(); return t = t && t.parent && t.parent(), t = t && t.parent && t.parent(), t = t && t.parent && t.parent(), t && t.key && t.key() === T.Universe10.Api.properties.resourceTypes.name; }
            function s(e, t, n) { var r = e.lowLevel(), i = e.definition().universe().version(), a = l(r), s = o(a), p = T.Universe10.MethodBase.properties.is.name, c = E.find(r.children(), function (e) { return e.key() == p; }), f = c; if (null == f) {
                var m = new y.ASTNode(d.newMapping(d.newScalar(p), d.newItems()), a.unit(), a, null, null);
                f = r.replaceChild(null, m);
            } var v = s ? null : E.find(a.children(), function (e) { return e.key() == p; }), g = null != v && v.unit().absolutePath() == n ? v.children() : [], N = g.concat(t.map(function (e) { var t = u(e.node, f); if (null != t) {
                var n = new A.LowLevelCompositeNode(t, f, e.transformer, i);
                return n;
            } return null; })).filter(function (e) { return null != e; }); if (0 == N.length && t.length <= 1)
                return c; f.setChildren(N), f.filterChildren(), N = f.children(); var _ = e.directChildren(), b = e.definition().property("is"), I = b.range(); _ && (_ = _.filter(function (e) { var t = e.property(); return null == t || !S.isIsProperty(t); }), e._children = _.concat(N.map(function (t) { return new h.ASTPropImpl(t, e, I, b); }))); var R = e.children(); return R && (R = R.filter(function (e) { var t = e.property(); return null == t || !S.isIsProperty(t); }), e._mergedChildren = R.concat(N.map(function (t) { return new h.ASTPropImpl(t, e, I, b); }))), f; }
            function u(e, t) {
                t = l(t), e = l(e);
                var n = e.actual();
                if (null == n)
                    return null;
                if (e.key() == T.Universe10.MethodBase.properties.is.name && (n = e.yamlNode().value), null == n)
                    return null;
                if (n.kind == d.Kind.SEQ && (n = n.items[0]),
                    null == n)
                    return null;
                var r = new y.ASTNode(n, e.unit(), t, null, null);
                return r;
            }
            function l(e) { for (var t = 0; 2 > t && A.LowLevelProxyNode.isInstance(e); t++)
                e = e.originalNode(); return e; }
            function p(e) { return e ? null != e.namespace && "function" == typeof e.namespace && null != e.name && "function" == typeof e.name && null != e.collectionName && "function" == typeof e.collectionName && null != e.referencedUnit && "function" == typeof e.referencedUnit && null != e.mode && "function" == typeof e.mode : !1; }
            function c(e, t, n) { var r = n[0].project().namespaceResolver(); if (!e)
                return null; var i = "", a = e, o = e.lastIndexOf("."); o >= 0 && (i = e.substring(0, o), a = e.substring(o + 1)); for (var s, u = !1, l = n.length; l > 0; l--) {
                var p = n[l - 1], c = p.highLevel();
                if (c.isElement() && S.isLibraryType(c.asElement().definition())) {
                    if (u)
                        break;
                    u = !0;
                }
                var f = p;
                if (i) {
                    f = null;
                    var m = r.nsMap(p);
                    if (m) {
                        var h = m[i];
                        h && (f = h.unit);
                    }
                }
                if (f) {
                    var d = f.highLevel();
                    if (d && d.isElement() && (s = E.find(d.asElement().elementsOfKind(t), function (e) { return e.name() == a; })))
                        break;
                }
            } return s; }
            function f(e) { var t = e.indexOf("<<"); if (0 > t)
                return !1; if (0 != t)
                return !0; var n = e.indexOf(">>", t); return n + ">>".length != e.length ? !0 : !1; }
            var m = n(10), h = n(16), d = n(83), y = n(25), v = n(54), g = n(35), A = n(41), T = n(17), E = n(70), S = n(14), N = n(53), _ = n(39), b = _.rt.typeExpressions;
            !function (e) { e[e.DEFAULT = 0] = "DEFAULT", e[e.PATH = 1] = "PATH"; }(t.PatchMode || (t.PatchMode = {}));
            var I = t.PatchMode, R = function () { function e(e) { void 0 === e && (e = I.DEFAULT), this.mode = e, this._outerDependencies = {}, this._libModels = {}; } return e.prototype.process = function (e, t, n, r) { var i = this; if (void 0 === t && (t = e), void 0 === n && (n = !1), void 0 === r && (r = !1), !e.lowLevel().libProcessed) {
                var a = e.lowLevel().unit().project().namespaceResolver();
                this.patchReferences(e, t, a), r && this.patchNodeName(e, t.lowLevel().unit(), a), n ? this.removeUses(e) : this.patchUses(e, a), e.elements().forEach(function (e) { return i.removeUses(e); }), this.resetTypes(e), e.lowLevel().libProcessed = !0;
            } }, e.prototype.patchReferences = function (e, t, n, r) { if (void 0 === t && (t = e), void 0 === n && (n = new N.NamespaceResolver), void 0 === r && (r = [t.lowLevel().unit()]), !e.isReused()) {
                var i;
                if (null != e.definition().property(T.Universe10.TypeDeclaration.properties.annotations.name)) {
                    var a = e.lowLevel();
                    if (!A.LowLevelCompositeNode.isInstance(a))
                        return;
                    var o = T.Universe10.MethodBase.properties.is.name, u = e.attributes(o);
                    if (0 != u.length) {
                        var l = e.lowLevel().children().filter(function (e) { return e.key() == T.Universe10.MethodBase.properties.is.name; });
                        1 == l.length && l[0].valueKind() == d.Kind.SEQ && (i = s(e, u.map(function (e) { return e.lowLevel(); }).map(function (e) { return A.LowLevelProxyNode.isInstance(e) ? { node: e, transformer: e.transformer() } : { node: e, transformer: null }; }), r[0].absolutePath()));
                    }
                }
                for (var p = e.attrs(), c = 0, f = p; c < f.length; c++) {
                    var m = f[c], h = this.appendUnitIfNeeded(m, r);
                    this.patchReferenceAttr(m, t, n, r), this.popUnitIfNeeded(r, h);
                }
                if (S.isTypeDeclarationDescendant(e.definition())) {
                    var h = this.appendUnitIfNeeded(e, r);
                    this.patchType(e, t, n, r), h && this.removeUses(e), this.popUnitIfNeeded(r, h);
                }
                for (var y = e.elements(), v = 0, g = y; v < g.length; v++) {
                    var E = g[v], h = this.appendUnitIfNeeded(E, r);
                    this.patchReferences(E, t, n, r), this.popUnitIfNeeded(r, h);
                }
                if (i) {
                    i.filterChildren();
                    var _ = e.directChildren();
                    _ && (e._children = this.filterTraitReferences(_));
                    var b = e.children();
                    b && (e._mergedChildren = this.filterTraitReferences(b));
                }
            } }, e.prototype.filterTraitReferences = function (e) { for (var t = [], n = {}, r = 0, i = e; r < i.length; r++) {
                var a = i[r], o = a.property();
                if (o && S.isIsProperty(o)) {
                    var s = JSON.stringify(v.serialize(a.lowLevel()));
                    n[s] || (n[s] = !0, t.push(a));
                }
                else
                    t.push(a);
            } return t; }, e.prototype.patchReferenceAttr = function (e, t, n, r, i) { void 0 === i && (i = !1); var a = e.property(), o = a.range(); if (i || o.isAssignableFrom(T.Universe10.Reference.name)) {
                var s = e.value();
                if (null != s) {
                    var u = e.lowLevel();
                    if (A.LowLevelProxyNode.isInstance(u)) {
                        var p = u.transformer(), c = S.isAnnotationsProperty(a);
                        if (!c && a && _.UserDefinedProp.isInstance(a)) {
                            var f = a.node(), m = f && f.property();
                            c = m && S.isAnnotationsProperty(f.property()), m && c && (o = m.range());
                        }
                        if ("string" == typeof s) {
                            var d = s;
                            if (null != p) {
                                var y = l(u);
                                d = y.value();
                            }
                            var v = c && "(" == d.charAt(0);
                            v && (d = d.substring(1, d.length - 1));
                            var g = this.resolveReferenceValue(d, t.lowLevel().unit(), r, n, p, o);
                            if (null != g) {
                                var E = v ? "(" + g.value() + ")" : g.value();
                                e.lowLevel().setValueOverride(E), e.overrideValue(E), this.registerPatchedReference(g);
                            }
                        }
                        else if (h.StructuredValue.isInstance(s)) {
                            var N = s, b = N.toHighLevel();
                            if (b)
                                for (var I = 0, R = b.attrs(); I < R.length; I++) {
                                    var e = R[I];
                                    S.isSchemaStringType(e.definition()) && this.patchReferenceAttr(e, t, n, r, !0);
                                }
                            var M = N.lowLevel().key(), d = M;
                            if (null != p) {
                                var y = l(N.lowLevel());
                                d = y.key();
                            }
                            if (null != M) {
                                c && (d = d.substring(1, d.length - 1));
                                var w = this.resolveReferenceValue(d, t.lowLevel().unit(), r, n, p, o);
                                if (null != w) {
                                    var E = c ? "(" + w.value() + ")" : w.value();
                                    N.lowLevel().setKeyOverride(E), this.registerPatchedReference(w);
                                }
                            }
                        }
                    }
                }
            } }, e.prototype.patchType = function (e, t, n, o) { var s = this, u = e.definition(), p = e.localType(); if (p.isAnnotationType()) {
                var c = p.superTypes();
                c.length > 0 && (p = c[0]);
            } var m = O(p); if (!m && p.isArray() && (m = O(p.componentType())), !m) {
                var d = t.lowLevel().unit(), y = (d.absolutePath(), e.attributes(T.Universe10.TypeDeclaration.properties.type.name));
                0 == y.length && (y = e.attributes(T.Universe10.TypeDeclaration.properties.schema.name));
                var v = e.attributes(T.Universe10.ArrayTypeDeclaration.properties.items.name);
                y = y.concat(v);
                for (var g = 0, S = y; g < S.length; g++) {
                    var N = S[g], _ = N.lowLevel();
                    if (A.LowLevelProxyNode.isInstance(_)) {
                        var I = N.lowLevel().unit(), R = (I.absolutePath(), N.value());
                        if (null != R)
                            if ("string" == typeof R) {
                                var w = a(R), C = _.transformer(), L = R, P = { status: M.NOT_REQUIRED }, D = C ? C.unitsChain : null;
                                if (null != C || R.indexOf("<<") >= 0) {
                                    var U = l(_), x = U.value();
                                    if (P = r(x), P.status == M.OK)
                                        L = w ? P.resultingString : x;
                                    else {
                                        if (P.status == M.ERROR)
                                            return;
                                        C = null;
                                    }
                                }
                                var k;
                                if (D) {
                                    k = [];
                                    for (var F = 0, B = D; F < B.length; F++) {
                                        var K = B[F];
                                        k.push(this.appendUnitIfNeeded(K, o));
                                    }
                                }
                                var V, j = this.appendUnitIfNeeded(N, o), W = void 0;
                                try {
                                    V = w && b.parse(L);
                                }
                                catch (q) {
                                    V = null;
                                }
                                if (w && null !== V) {
                                    var H = !1, Y = b.parse(L), G = !1;
                                    b.visit(Y, function (e) { if ("name" == e.type) {
                                        var t, r = e, a = r.value, l = { status: M.NOT_REQUIRED };
                                        if (P.status == M.OK)
                                            if (t = P.substitutions[a], null == t) {
                                                if (l = i(a, P.substitutions), l.status == M.OK)
                                                    a = l.resultingString;
                                                else if (l.status == M.ERROR)
                                                    return void (H = !0);
                                            }
                                            else
                                                a = t;
                                        if (null == C && (null != t || l.status == M.OK))
                                            return void (r.value = a);
                                        var p = !0;
                                        a.indexOf("<<") >= 0 && f(a) && (p = !1);
                                        var c = s.resolveReferenceValue(a, d, o, n, C, u, p);
                                        null != c && (r.value = c.value(), G = !0, s.registerPatchedReference(c));
                                    } }), W = G && !H ? b.serializeToString(Y) : R;
                                }
                                else if (P.status != M.OK || null != C) {
                                    L.indexOf("<<") >= 0 && f(L) && (L = R, C = null);
                                    var X = this.resolveReferenceValue(L, d, o, n, C, u);
                                    null != X && (this.registerPatchedReference(X), W = X.value());
                                }
                                if (null != W && (N.lowLevel().setValueOverride(W), N.overrideValue(null)), this.popUnitIfNeeded(o, j), k)
                                    for (var z = 0, $ = k.reverse(); z < $.length; z++) {
                                        var J = $[z];
                                        this.popUnitIfNeeded(o, J);
                                    }
                            }
                            else {
                                var Q = N.lowLevel();
                                if (Q.key() != N.property().nameId() && (Q = E.find(e.lowLevel().children(), function (e) { return e.key() == N.property().nameId(); })), Q) {
                                    var Z = e.definition().universe().type(T.Universe10.TypeDeclaration.name), ee = new h.ASTNodeImpl(Q, null, Z, null), te = this.appendUnitIfNeeded(ee, o);
                                    this.patchReferences(ee, t, n, o), this.popUnitIfNeeded(o, te);
                                }
                            }
                    }
                }
            } }, e.prototype.resolveReferenceValue = function (e, t, n, r, i, a, o) { var s = this; void 0 === o && (o = !0); var u, l = S.isAnnotationRefTypeOrDescendant(a); if (i && e && e.indexOf("<<") >= 0) {
                var c = !0, f = t.highLevel().types(), m = i.transform(e, !0, function () { return c; }, function (e, n) { var i = s.resolveReferenceValueBasic(e, t, r, n.unitsChain, a); return null == i && (i = new C(null, e, s.collectionName(a), t, I.DEFAULT)), c = l ? null != f.getAnnotationType(i.value()) ? !1 : !1 : null != f.getType(i.value()) ? !1 : !1, i; });
                u = m.value;
            } return void 0 !== u && p(u) || (u = this.resolveReferenceValueBasic(e, t, r, n, a)), u; }, e.prototype.patchNodeName = function (e, t, n) { var r = e.lowLevel(), i = r.key(), a = e.definition(); if (S.isTypeDeclarationSibling(a)) {
                var o = e.localType();
                o.isAnnotationType() && (a = o);
            } var s = this.resolveReferenceValueBasic(i, t, n, [r.unit()], a); null != s && (r.setKeyOverride(s.value()), e.resetIDs()); }, e.prototype.resolveReferenceValueBasic = function (e, t, n, r, i) { if (null == e || "string" != typeof e)
                return null; var a = S.isTypeDeclarationDescendant(i), o = a && g.stringEndsWith(e, "?"), s = o ? e.substring(0, e.length - 1) : e; if (!(s.indexOf("<<") >= 0)) {
                var u, l, p = s.lastIndexOf(".");
                if (p >= 0) {
                    var c = s.substring(0, p);
                    l = s.substring(p + 1);
                    for (var f = r.length; f > 0; f--) {
                        var h = r[f - 1], d = n.nsMap(h);
                        if (null != d) {
                            var y = d[c];
                            if (null != y && (u = y.unit, null != u))
                                break;
                        }
                    }
                }
                else {
                    if (a && null != _.rt.builtInTypes().get(s))
                        return null;
                    l = s, u = r[r.length - 1];
                }
                var v = this.collectionName(i);
                if (!u)
                    return null;
                if (u.absolutePath() == t.absolutePath())
                    return null != c ? new C(null, l, v, u, this.mode) : null;
                var A = n.resolveNamespace(t, u);
                if (null == A)
                    return null;
                var T = A.namespace();
                if (null == T)
                    return null;
                if (this.mode == I.PATH) {
                    var E = u.absolutePath().replace(/\\/g, "/");
                    m.isWebPath(E) || (E = "file://" + E), T = E + "#/" + v;
                }
                return o && (l += "?"), new C(T, l, v, u, this.mode);
            } }, e.prototype.patchUses = function (e, t) { var n = e.lowLevel(); if (e.children(), A.LowLevelCompositeNode.isInstance(n)) {
                var r = n.unit(), i = t.expandedPathMap(r);
                if (null != i) {
                    var a = t.pathMap(r);
                    a || (a = {});
                    for (var o = n, s = n.children(), u = T.Universe10.FragmentDeclaration.properties.uses.name, p = s.filter(function (e) { return e.key() == u; }), c = l(n), f = c; A.LowLevelProxyNode.isInstance(f);)
                        f = f.originalNode();
                    var m, d = Object.keys(a).map(function (e) { return i[e]; }), v = Object.keys(i).map(function (e) { return i[e]; }).filter(function (e) { return !a[e.absolutePath()]; }), g = r.absolutePath(), E = {};
                    if (p.length > 0)
                        m = p[0], m.children().forEach(function (e) { return E[e.key()] = !0; });
                    else {
                        var N = y.createMapNode("uses");
                        N._parent = f, N.setUnit(f.unit()), m = o.replaceChild(null, N);
                    }
                    for (var _ = e.definition().property(u), b = _.range(), I = e._children.filter(function (e) { if (e.lowLevel().unit().absolutePath() == g)
                        return !0; var t = e.property(); return !t || !S.isUsesProperty(t); }), R = e._mergedChildren.filter(function (e) { if (e.lowLevel().unit().absolutePath() == g)
                        return !0; var t = e.property(); return !t || !S.isUsesProperty(t); }), M = 0, w = d.concat(v); M < w.length; M++) {
                        var C = w[M];
                        C.absolutePath();
                        if (!E[C.namespace()]) {
                            var L = C.includePath, P = y.createMapping(C.namespace(), L);
                            P.setUnit(f.unit());
                            var O = new h.ASTNodeImpl(P, e, b, _);
                            I.push(O), R.push(O), m.replaceChild(null, P);
                        }
                    }
                    e._children = I, e._mergedChildren = R;
                }
            } }, e.prototype.removeUses = function (e) { var t = e.lowLevel(); if (A.LowLevelCompositeNode.isInstance(t)) {
                var n = t, r = t.children(), i = r.filter(function (e) { return e.key() == T.Universe10.FragmentDeclaration.properties.uses.name; });
                i.length > 0 && n.removeChild(i[0]), e._children = e.directChildren().filter(function (e) { var t = e.property(); return null == t || !S.isUsesProperty(t); }), e._mergedChildren = e.children().filter(function (e) { var t = e.property(); return null == t || !S.isUsesProperty(t); });
            } }, e.prototype.resetTypes = function (e) { for (var t = 0, n = e.elements(); t < n.length; t++) {
                var r = n[t];
                this.resetTypes(r);
            } for (var i = 0, a = e.attrs(); i < a.length; i++) {
                var o = a[i], s = o.value();
                h.StructuredValue.isInstance(s) && s.resetHighLevelNode();
            } delete e.lowLevel().actual().types, delete e._ptype, delete e._types, e.setAssociatedType(null); }, e.prototype.appendUnitIfNeeded = function (e, t) { if (y.CompilationUnit.isInstance(e)) {
                var n = e;
                return n.absolutePath() != t[t.length - 1].absolutePath() ? (t.push(n), !0) : !1;
            } var r = l(e.lowLevel()), i = r.unit(); if (r.valueKind() == d.Kind.INCLUDE_REF) {
                var a = r.includePath(), o = i.resolve(a);
                return o ? (t.push(o), !0) : !1;
            } return i.absolutePath() != t[t.length - 1].absolutePath() ? (t.push(i), !0) : !1; }, e.prototype.popUnitIfNeeded = function (e, t) { t && e.pop(); }, e.prototype.registerPatchedReference = function (e) { var t = e.collectionName(); if (t) {
                var n = e.referencedUnit().absolutePath(), r = this._outerDependencies[n];
                null == r && (r = {}, this._outerDependencies[n] = r);
                var i = r[t];
                null == i && (i = {}, r[t] = i), i[e.name()] = e;
            } }, e.prototype.collectionName = function (e) { var t; return S.isResourceTypeRefType(e) || S.isResourceTypeType(e) ? t = _.universesInfo.Universe10.LibraryBase.properties.resourceTypes.name : S.isTraitRefType(e) || S.isTraitType(e) ? t = _.universesInfo.Universe10.LibraryBase.properties.traits.name : S.isSecuritySchemeRefType(e) || S.isSecuritySchemaTypeDescendant(e) ? t = _.universesInfo.Universe10.LibraryBase.properties.securitySchemes.name : S.isAnnotationRefTypeOrDescendant(e) || e.isAnnotationType() ? t = _.universesInfo.Universe10.LibraryBase.properties.annotationTypes.name : (S.isTypeDeclarationDescendant(e) || S.isSchemaStringType(e)) && (t = _.universesInfo.Universe10.LibraryBase.properties.types.name), t; }, e.prototype.expandLibraries = function (e, t) { if (void 0 === t && (t = !1), !e.lowLevel().actual().libExpanded) {
                var n = e.lowLevel(), r = n.unit(), i = (r.absolutePath(), r.project()), a = [], o = n.unit().project().namespaceResolver(), s = o.expandedPathMap(r);
                if (null != s) {
                    for (var u = Object.keys(s).sort(), l = 0, p = u; l < p.length; l++) {
                        var c = p[l], f = this._libModels[c];
                        if (null == f) {
                            var m = i.unit(c, !0), h = o.resolveNamespace(r, m);
                            m && null != h && null != h.namespace() && (f = this.extractLibModel(m, r));
                        }
                        f && a.push(f);
                    }
                    for (var d = !1, y = 0, v = a; y < v.length; y++)
                        for (var f = v[y], g = 0, A = Object.keys(f); g < A.length; g++) {
                            var T = A[g], E = f[T];
                            L.isInstance(E) && (d = this.contributeCollection(e, E) || d);
                        }
                    if (d) {
                        var S = !1;
                        do
                            S = this.patchDependencies(e, t);
                        while (S);
                        t || this.removeUnusedDependencies(e);
                    }
                }
                this.removeUses(e), e.lowLevel().actual().libExpanded = !0, this.resetTypes(e);
            } }, e.prototype.patchDependencies = function (e, t) { for (var n = !1, r = e.lowLevel().unit().absolutePath(), i = 0, a = e.children(); i < a.length; i++) {
                var o = a[i];
                if (o.isElement() && !o.lowLevel().libProcessed) {
                    var s = o.asElement();
                    this.removeUses(s);
                    var u = s.property().nameId();
                    if (u == T.Universe10.LibraryBase.properties.types.name || u == T.Universe10.LibraryBase.properties.annotationTypes.name || u == T.Universe10.LibraryBase.properties.resourceTypes.name || u == T.Universe10.LibraryBase.properties.traits.name || u == T.Universe10.LibraryBase.properties.securitySchemes.name) {
                        if (!t) {
                            var l = o.lowLevel().unit().absolutePath();
                            if (l == r && null == o.lowLevel().includePath())
                                continue;
                            var p = this._outerDependencies[l];
                            if (null == p)
                                continue;
                            var c = p[u];
                            if (null == c)
                                continue;
                            var f = s.name();
                            if (null == c[f])
                                continue;
                        }
                        this.process(s, e, !0, !0), n = !0;
                    }
                }
            } return n; }, e.prototype.removeUnusedDependencies = function (e) { for (var t = e.lowLevel(), n = t.unit().absolutePath(), r = e._children, i = [], a = 0, o = r; a < o.length; a++) {
                var s = o[a], u = s.lowLevel();
                if (s.isElement() && u.libProcessed)
                    i.push(s);
                else {
                    var l = u.unit().absolutePath();
                    l != n ? u.parent().removeChild(u) : i.push(s);
                }
            } e._children = i, e._mergedChildren = null; }, e.prototype.contributeCollection = function (e, t) { var n = e.lowLevel(); if (0 == t.array.length)
                return !1; var r = t.name, i = e.definition().property(r), a = i.range(), o = E.find(n.children(), function (e) { return e.key() == r; }); if (null == o) {
                var s = y.createMapNode(r);
                o = n.replaceChild(null, s);
            } for (var u = !1, p = e._children, c = e._mergedChildren, f = 0, m = t.array; f < m.length; f++) {
                var d = m[f];
                if (!o.children().some(function (e) { var t = l(e); return t.unit().absolutePath() != d.lowLevel().unit().absolutePath() ? !1 : d.lowLevel().key() == t.key() && d.lowLevel().unit().absolutePath() == t.unit().absolutePath(); })) {
                    var v = o.replaceChild(null, d.lowLevel()), g = d.isElement() && d.asElement().definition() || a, A = new h.ASTNodeImpl(v, e, g, i);
                    p.push(A), c && c.push(A), u = !0;
                }
            } return u; }, e.prototype.extractLibModel = function (e, t) { var n = this._libModels[e.absolutePath()]; if (null != n)
                return n; n = new P(e), this._libModels[e.absolutePath()] = n; var r = e.highLevel(); if (r && r.isElement()) {
                for (var i = r.asElement(), a = 0, o = ["resourceTypes", "traits", "types", "annotationTypes", "securitySchemes"]; a < o.length; a++) {
                    for (var s = o[a], u = new L(s), l = 0, p = i.elementsOfKind(s); l < p.length; l++) {
                        var c = p[l];
                        u.array.push(c);
                    }
                    n[s] = u;
                }
                var f = i.attributes(_.universesInfo.Universe10.Annotable.properties.annotations.name);
                if (f.length > 0)
                    for (var m = t.project().namespaceResolver(), h = 0, d = f; h < d.length; h++) {
                        var y = d[h], v = y.lowLevel().key(), g = v.length;
                        "(" == v.charAt(0) && ")" == v.charAt(g - 1) && (v = v.substring(1, g - 1));
                        var A = y.property().range(), T = this.resolveReferenceValueBasic(v, t, m, [t, e], A);
                        T && this.registerPatchedReference(T);
                    }
            } return n; }, e; }();
            t.ReferencePatcher = R, function (e) { e[e.OK = 0] = "OK", e[e.NOT_REQUIRED = 1] = "NOT_REQUIRED", e[e.ERROR = 2] = "ERROR"; }(t.ParametersEscapingStatus || (t.ParametersEscapingStatus = {}));
            var M = t.ParametersEscapingStatus, w = "__P_A_R_A_M_E_T_E_R__";
            t.escapeTemplateParameters = r, t.unescapeTemplateParameters = i, t.checkExpression = a, t.patchMethodIs = s, t.prepareTraitRefNode = u, t.toOriginal = l;
            var C = function () { function e(e, t, n, r, i) { this._namespace = e, this._name = t, this._collectionName = n, this._referencedUnit = r, this._mode = i, this.gotQuestion = !1; var a = this._name.length; "?" == this._name.charAt(a - 1) && (this.gotQuestion = !0, this._name = this._name.substring(0, a - 1)); } return e.isInstance = function (t) { return null != t && t.getClassIdentifier && "function" == typeof t.getClassIdentifier && E.contains(t.getClassIdentifier(), e.CLASS_IDENTIFIER_PatchedReference); }, e.prototype.getClassIdentifier = function () { return [e.CLASS_IDENTIFIER_PatchedReference]; }, e.prototype.namespace = function () { return this._namespace; }, e.prototype.name = function () { return this._name; }, e.prototype.collectionName = function () { return this._collectionName; }, e.prototype.referencedUnit = function () { return this._referencedUnit; }, e.prototype.mode = function () { return this._mode; }, e.prototype.value = function () { if (null == this._namespace)
                return this._name; var e = this._mode == I.PATH ? "/" : "."; return this._namespace + e + this._name + (this.gotQuestion ? "?" : ""); }, e.CLASS_IDENTIFIER_PatchedReference = "referencePatcher.PatchedReference", e; }();
            t.PatchedReference = C, t.instanceOfPatchedReference = p;
            var L = function () { function e(e) { this.name = e, this.array = []; } return e.isInstance = function (t) { return null != t && t.getClassIdentifier && "function" == typeof t.getClassIdentifier && E.contains(t.getClassIdentifier(), e.CLASS_IDENTIFIER); }, e.prototype.getClassIdentifier = function () { var t = []; return t.concat(e.CLASS_IDENTIFIER); }, e.CLASS_IDENTIFIER = "referencePatcher.ElementsCollection", e; }(), P = function () { function e(e) { this.unit = e; } return e; }();
            t.getDeclaration = c, t.isCompoundValue = f;
            var O = function (e) { var t = !e || e.isExternal(); if (!t)
                for (var n = 0, r = e.superTypes(); n < r.length; n++) {
                    var i = r[n];
                    if (t = i.isExternal())
                        break;
                } return t; };
        }, function (e, t, n) {
            "use strict";
            function r(e) { try {
                var t = JSON.parse(e);
                return t.$schema;
            }
            catch (n) {
                return s.isXmlScheme(e);
            } }
            function i(e, t) { if (s.isXmlScheme(e))
                return p.getXMLSchema(e, new u.ContentProvider(t)).loadSchemaReferencesAsync().then(function () { return t; }); var n = p.getJSONSchema(e, new u.ContentProvider(t)), r = n.getMissingReferences([]).map(function (e) { return n.contentAsync(e); }); if (0 === r.length)
                return Promise.resolve(t); var i = Promise.all(r), a = o(i, n); return a.then(function () { return t; }); }
            function a(e, t) { var n = p.createSchema(e, new u.ContentProvider(t)); return n.getMissingReferences([], !0); }
            function o(e, t) { return e.then(function (e) { if (e.length > 0) {
                var n = t.getMissingReferences(e);
                if (0 === n.length)
                    return [];
                var r = [];
                return n.forEach(function (e) { r.push(t.contentAsync(e)); }), o(Promise.all(r.concat(e)), t);
            } return Promise.resolve([]); }); }
            var s = n(56), u = n(33), l = n(39), p = l.getSchemaUtils();
            t.isScheme = r, t.startDownloadingReferencesAsync = i, t.getReferences = a;
        }, function (e, t, n) {
            "use strict";
            function r(e) { var t = e.ast(), n = c.find(t.children(), function (e) { return e.key() == o.Universe10.Extension.properties["extends"].name; }); return n && n.value(); }
            var i = n(10), a = n(15), o = n(17), s = n(83), u = n(24), l = n(16), p = n(39), c = n(70), f = function () { function e() { this.expandedAbsToNsMap = {}, this._expandedNSMap = {}, this.byPathMap = {}, this.byNsMap = {}, this._hasFragments = {}, this._unitModels = {}; } return e.prototype.hasTemplates = function (e) { var t = this.unitModel(e); if (!t.traits.isEmpty() || !t.resourceTypes.isEmpty())
                return !0; var n = this.expandedPathMap(e); if (n)
                for (var i = 0, a = Object.keys(n); i < a.length; i++) {
                    var o = a[i], s = n[o].unit, u = this.unitModel(s);
                    if (!u.traits.isEmpty() || !u.resourceTypes.isEmpty())
                        return !0;
                } for (var l = r(e); l;)
                if (e = e.resolve(l)) {
                    if (t = this.unitModel(e), !t.traits.isEmpty() || !t.resourceTypes.isEmpty())
                        return !0;
                    l = r(e);
                }
                else
                    l = null; return !1; }, e.prototype.resolveNamespace = function (e, t) { if (null == t)
                return null; var n = t.absolutePath(), r = this.expandedPathMap(e); if (!r)
                return null; var i = r[n]; return i; }, e.prototype.expandedNSMap = function (e) { var t = e.absolutePath(), n = this._expandedNSMap[t]; if (void 0 === n) {
                var r = this.expandedPathMap(e);
                if (r) {
                    n = {};
                    for (var i = 0, a = Object.keys(r); i < a.length; i++) {
                        var o = a[i], s = r[o];
                        n[s.namespace()] = s;
                    }
                }
                else
                    n = null;
                this._expandedNSMap[t] = n;
            } return n; }, e.prototype.expandedPathMap = function (e) { var t = e.absolutePath(), n = this.expandedAbsToNsMap[t]; return void 0 === n && (n = this.calculateExpandedNamespaces(e), 0 == Object.keys(n).length && (n = null), this.expandedAbsToNsMap[t] = n), n; }, e.prototype.calculateExpandedNamespaces = function (e) { for (var t = this, n = a.dirname(e.absolutePath()), o = {}, c = []; e;) {
                c.push(new m([], e, ""));
                var f = e;
                e = null;
                var h = f.ast();
                if (h && h.kind() != s.Kind.SCALAR) {
                    var d = l.ramlFirstLine(f.contents());
                    if (d && 3 == d.length && (d[2] == p.universesInfo.Universe10.Overlay.name || d[2] == p.universesInfo.Universe10.Extension.name)) {
                        var y = r(f);
                        y && (e = f.resolve(y), e && u.isWaitingFor(e.absolutePath()) && (e = null));
                    }
                }
            } for (var v, g, A, T, h, E, S, N = function () { v = {}, g = {}, A = c[_], T = A.unit; var e = T.absolutePath(); return h = T.ast(), h && h.kind() != s.Kind.SCALAR ? (E = A.steps() + 1, S = function (r) { if (r) {
                var u = r.children(), p = r.unit(), f = p.absolutePath();
                if (null == r.parent()) {
                    if (v[f])
                        return;
                    if (v[f] = !0, f != e) {
                        var h = l.ramlFirstLine(p.contents());
                        h && 3 == h.length && "1.0" == h[1] && (t._hasFragments[e] = !0);
                    }
                    var d = t.pathMap(p);
                    if (d)
                        for (var y = 0, T = Object.keys(d); y < T.length; y++) {
                            var N = T[y], _ = d[N], b = A.namespaceSegments.concat(_.namespaceSegments), I = A.usesNodes.concat(_.usesNodes), R = o[N];
                            if (R) {
                                if (R.steps() < E)
                                    continue;
                                if (R.steps() == E && t.lexLessEq(R.namespaceSegments, b))
                                    continue;
                            }
                            var M, w = _.includePath, C = _.absolutePath();
                            M = a.isAbsolute(A.includePath) || i.isWebPath(A.includePath) ? C : a.isAbsolute(w) || i.isWebPath(w) ? C : i.isWebPath(n) != i.isWebPath(C) ? C : n.length > 0 && C.length > 0 && n.charAt(0).toLowerCase() != C.charAt(0).toLowerCase() ? C : a.relative(n, C), M = M.replace(/\\/g, "/");
                            var L = new m(I, _.unit, M);
                            g[L.absolutePath()] || (o[N] = L, c.push(L), g[L.absolutePath()] = !0);
                        }
                }
                u.forEach(function (e) { if (e.valueKind() == s.Kind.INCLUDE_REF) {
                    var t = p.resolve(e.includePath());
                    if (t) {
                        if (!t.isRAMLUnit())
                            return;
                        S(t.ast());
                    }
                }
                else
                    S(e); }), null == r.parent() && (v[f] = !1);
            } }, void S(h)) : "continue"; }, _ = 0; _ < c.length; _++) {
                N();
            } for (var b = {}, I = 0, R = Object.keys(o); I < R.length; I++) {
                for (var M = R[I], A = o[M], w = A.namespace(), _ = 0; b[w];)
                    w = A.namespace() + _++;
                w != A.namespace() && (A.namespaceSegments = w.split(".")), b[w] = !0;
            } return o; }, e.prototype.pathMap = function (e) { var t = e.absolutePath(), n = this.byPathMap[t]; return void 0 === n && (n = this.calculateNamespaces(e), 0 == Object.keys(n).length && (n = null), this.byPathMap[t] = n), n; }, e.prototype.nsMap = function (e) { var t = e.absolutePath(), n = this.byNsMap[t]; if (void 0 === n) {
                var r = this.pathMap(e);
                if (null == r)
                    n = null;
                else {
                    n = {};
                    for (var i = 0, a = Object.keys(r); i < a.length; i++) {
                        var o = a[i], s = r[o];
                        n[s.namespace()] = s;
                    }
                }
                this.byNsMap[t] = n;
            } return n; }, e.prototype.calculateNamespaces = function (e) { var t = a.dirname(e.absolutePath()), n = {}, r = e.ast(), u = r.children().filter(function (e) { return e.key() == o.Universe10.FragmentDeclaration.properties.uses.name; }); if (r.actual() && r.actual().usesNode && (u = [r.actual().usesNode]), 0 == u.length)
                return n; for (var f = [], h = 0, d = u; h < d.length; h++) {
                var y = d[h];
                f = f.concat(y.children());
            } if (0 == f.length)
                return n; for (var v = 0, g = f; v < g.length; v++) {
                var y = g[v], A = y.value(), T = e.resolve(A);
                if (null != T) {
                    var E, u = [y], S = T.absolutePath();
                    E = a.isAbsolute(A) || i.isWebPath(A) ? T.absolutePath() : a.relative(t, T.absolutePath()), E = E.replace(/\\/g, "/");
                    var N = new m(u, T, E);
                    n[S] = N;
                }
            } var _ = e.ast(); if (_ && _.kind() != s.Kind.SCALAR) {
                var b = l.ramlFirstLine(e.contents());
                if (3 == b.length && (b[2] == p.universesInfo.Universe10.Overlay.name || b[2] == p.universesInfo.Universe10.Extension.name)) {
                    var I = c.find(_.children(), function (e) { return e.key() == o.Universe10.Extension.properties["extends"].name; });
                    if (I) {
                        var R, M = I.value(!0);
                        try {
                            R = e.resolve(M);
                        }
                        catch (w) { }
                        if (R) {
                            var C = this.pathMap(R);
                            if (C)
                                for (var L = 0, P = Object.keys(C); L < P.length; L++) {
                                    var O = P[L];
                                    n[O] = C[O];
                                }
                        }
                    }
                }
            } return n; }, e.prototype.lexLessEq = function (e, t) { if (e.length > t.length)
                return !1; if (e.length < t.length)
                return !0; for (var n = 0; n < e.length; n++) {
                var r = e[n], i = t[n];
                if (i > r)
                    return !0;
                if (r > i)
                    return !1;
            } return !0; }, e.prototype.hasFragments = function (e) { if (!e.isRAMLUnit())
                return !1; var t = l.ramlFirstLine(e.contents()); return !t || t.length < 2 || "1.0" != t[1] ? !1 : (this.expandedPathMap(e), this._hasFragments[e.absolutePath()] ? !0 : !1); }, e.prototype.unitModel = function (e) { var t = e.absolutePath(), n = this._unitModels[t]; if (n || (n = new d(e), this._unitModels[t] = n), n.isOverlayOrExtension()) {
                var r = e.ast(), i = r.children().filter(function (e) { return e.key() == p.universesInfo.Universe10.Overlay.properties["extends"].name; });
                if (i.length > 0) {
                    var a = i[0], o = a.value();
                    if (o) {
                        var s = e.resolve(o);
                        if (s) {
                            var u = this.unitModel(s);
                            n.master = u;
                        }
                    }
                }
            } return n; }, e; }();
            t.NamespaceResolver = f;
            var m = function () { function e(e, t, n) { this.usesNodes = e, this.unit = t, this.includePath = n, this.namespaceSegments = this.usesNodes.map(function (e) { return e.key(); }); } return e.prototype.steps = function () { return this.namespaceSegments.length; }, e.prototype.namespace = function () { return this.namespaceSegments.join("."); }, e.prototype.absolutePath = function () { return this.unit.absolutePath(); }, e; }();
            t.UsesInfo = m;
            var h = function () { function e(e) { this.name = e, this.array = [], this.map = {}; } return e.isInstance = function (t) { return null != t && t.getClassIdentifier && "function" == typeof t.getClassIdentifier && c.contains(t.getClassIdentifier(), e.CLASS_IDENTIFIER); }, e.prototype.getClassIdentifier = function () { var t = []; return t.concat(e.CLASS_IDENTIFIER); }, e.prototype.addElement = function (e) { this.array.push(e), this.map[e.key()] = e; }, e.prototype.hasElement = function (e) { return null != this.map[e]; }, e.prototype.getElement = function (e) { return this.map[e]; }, e.prototype.isEmpty = function () { return 0 == this.array.length; }, e.CLASS_IDENTIFIER = "namespaceResolver.ElementsCollection", e; }();
            t.ElementsCollection = h;
            var d = function () { function e(e) { this.unit = e, this.initCollections(); } return e.prototype.initCollections = function () { this.types = new h(p.universesInfo.Universe10.LibraryBase.properties.types.name), this.annotationTypes = new h(p.universesInfo.Universe10.LibraryBase.properties.annotationTypes.name), this.securitySchemes = new h(p.universesInfo.Universe10.LibraryBase.properties.securitySchemes.name), this.traits = new h(p.universesInfo.Universe10.LibraryBase.properties.traits.name), this.resourceTypes = new h(p.universesInfo.Universe10.LibraryBase.properties.resourceTypes.name); var e = this.unit.ast(); if (e && this.isLibraryBaseDescendant(this.unit))
                for (var t = "0.8" == l.ramlFirstLine(this.unit.contents())[1], n = 0, r = e.children(); n < r.length; n++) {
                    var i = r[n], a = i.key();
                    a == p.universesInfo.Universe10.LibraryBase.properties.types.name ? this.contributeCollection(this.types, i.children()) : a == p.universesInfo.Universe10.LibraryBase.properties.annotationTypes.name ? this.contributeCollection(this.annotationTypes, i.children()) : a == p.universesInfo.Universe10.LibraryBase.properties.securitySchemes.name ? this.contributeCollection(this.securitySchemes, i.children(), t) : a == p.universesInfo.Universe10.LibraryBase.properties.traits.name ? this.contributeCollection(this.traits, i.children(), t) : a == p.universesInfo.Universe10.LibraryBase.properties.resourceTypes.name && this.contributeCollection(this.resourceTypes, i.children(), t);
                } }, e.prototype.contributeCollection = function (e, t, n) { void 0 === n && (n = !1); var r; n ? (r = [], t.forEach(function (e) { var t = e.children(); t.length > 0 && r.push(t[0]); })) : r = t, r.forEach(function (t) { return e.addElement(t); }); }, e.prototype.isLibraryBaseDescendant = function (e) { var t = this, n = l.ramlFirstLine(e.contents()); if (!n)
                return !1; if (n.length < 3 || !n[2])
                return !0; var r = n[2]; if (!this.libTypeDescendants) {
                this.libTypeDescendants = {};
                var i = p.getUniverse("RAML10"), a = i.type(p.universesInfo.Universe10.LibraryBase.name);
                [a].concat(a.allSubTypes()).forEach(function (e) { return t.libTypeDescendants[e.nameId()] = !0; });
            } return this.libTypeDescendants[r]; }, e.prototype.isOverlayOrExtension = function () { var e = l.ramlFirstLine(this.unit.contents()); if (!e)
                return !1; if (e.length < 3 || !e[2])
                return !0; var t = e[2]; return t == p.universesInfo.Universe10.Overlay.name || t == p.universesInfo.Universe10.Extension.name; }, e.prototype.extensionSet = function () { if (!this._extensionSet) {
                this._extensionSet = {}, this._extensionChain = [];
                for (var e = this; e;) {
                    var t = e.unit.absolutePath();
                    if (this._extensionSet[t])
                        break;
                    this._extensionSet[t] = e, this._extensionChain.push(e), e = e.master;
                }
            } return this._extensionSet; }, e.prototype.extensionChain = function () { return this._extensionChain || this.extensionSet(), this._extensionChain; }, e; }();
            t.UnitModel = d;
        }, function (e, t, n) {
            "use strict";
            function r(e, t) { if (void 0 === t && (t = !1), !e)
                return null; var n = e.kind(); if (n == u.Kind.ANCHOR_REF && (n = e.anchorValueKind()), n == u.Kind.INCLUDE_REF) {
                if (null != e.unit()) {
                    var i = e.includePath(), a = null;
                    try {
                        a = e.unit().resolve(i);
                    }
                    catch (o) { }
                    if (null == a)
                        return null;
                    if (!a.isRAMLUnit())
                        return f.ASTNode.isInstance(e) && !e.canInclude(a) ? null : a.contents();
                    if (f.ASTNode.isInstance(e) && !e.canInclude(a))
                        return null;
                    var s = a.ast();
                    if (s)
                        return r(s, t);
                }
                return null;
            } if (n == u.Kind.SEQ) {
                for (var l = [], p = 0, c = e.children(); p < c.length; p++) {
                    var m = c[p];
                    l.push(r(m, t));
                }
                return l;
            } if (n == u.Kind.ANCHOR_REF)
                return r(e.anchoredFrom(), t); if (n == u.Kind.MAPPING) {
                var h = {}, d = "" + e.key(!0), y = e.valueKind();
                if (y == u.Kind.ANCHOR_REF && (y = e.anchorValueKind()), y == u.Kind.INCLUDE_REF) {
                    var v = e.children();
                    0 == v.length ? h[d] = e.value() : y = null == v[0].key() ? u.Kind.SEQ : u.Kind.MAP;
                }
                if (y == u.Kind.SCALAR)
                    h[d] = e.value();
                else if (y == u.Kind.SEQ) {
                    var l = [];
                    h[d] = l;
                    for (var g = 0, A = e.children(); g < A.length; g++) {
                        var m = A[g];
                        l.push(r(m, t));
                    }
                }
                else if (y == u.Kind.MAP) {
                    var T = {};
                    h[d] = T;
                    for (var E = 0, S = e.children(); E < S.length; E++) {
                        var m = S[E], N = "" + m.key(!0), _ = r(m, t);
                        void 0 === _ && (_ = t ? "!$$$novalue" : null), T[N] = _;
                    }
                }
                return h[d];
            } if (n == u.Kind.SCALAR) {
                var b = e.value(!1);
                return b;
            } if (n == u.Kind.MAP) {
                for (var T = {}, I = 0, R = e.children(); I < R.length; I++) {
                    var m = R[I], N = "" + m.key(!0), _ = r(m, !0);
                    T[N] = void 0 === _ ? null : _;
                }
                return T;
            } }
            function i(e, t) { if (void 0 === t && (t = {}), t = t || {}, 0 == e.children().length)
                return e.value(); if (e.children()[0].key()) {
                var n = {};
                if (e.children().forEach(function (e) { n[o(e.key(t.rawKey), t)] = i(e, t); }), t && t.writeErrors) {
                    var r = a(e);
                    null != r && r.length > 0 && (n.__$errors__ = r);
                }
                return n;
            } var s = []; return e.children().forEach(function (e) { s.push(i(e, t)); }), s; }
            function a(e) { var t = [].concat(e.errors()); return e.children().forEach(function (e) { var n = e.children(); return 0 == n.length ? void e.errors().forEach(function (e) { return t.push(e); }) : void (n[0].key() || n.forEach(function (e) { 0 == e.children().length && e.errors().forEach(function (e) { return t.push(e); }); })); }), t; }
            function o(e, t) { return t && e && t.escapeNumericKeys && 0 == e.replace(/\d/g, "").trim().length ? "__$EscapedKey$__" + e : e; }
            function s(e, t) { return e ? (t = t || {}, t.escapeNumericKeys && c.stringStartsWith(e, "__$EscapedKey$__") && 0 == e.substring("__$EscapedKey$__".length).replace(/\d/g, "").trim().length ? e.substring("__$EscapedKey$__".length) : e) : e; }
            var u = n(83), l = n(10), p = n(16), c = n(35), f = n(25), m = n(60), h = u.YAMLException, d = function () { function e(e, t, n, r, i, a) { void 0 === a && (a = {}), this._absolutePath = e, this._path = t, this._content = n, this._project = r, this._isTopoLevel = i, this.serializeOptions = a, this._node = new y(this, JSON.parse(this._content), null, a); } return e.prototype.highLevel = function () { return p.fromUnit(this); }, e.prototype.absolutePath = function () { return this._absolutePath; }, e.prototype.clone = function () { return null; }, e.prototype.contents = function () { return this._content; }, e.prototype.lexerErrors = function () { return []; }, e.prototype.path = function () { return this._content; }, e.prototype.isTopLevel = function () { return this._isTopoLevel; }, e.prototype.ast = function () { return this._node; }, e.prototype.expandedHighLevel = function () { return this.highLevel(); }, e.prototype.isDirty = function () { return !0; }, e.prototype.getIncludeNodes = function () { return []; }, e.prototype.resolveAsync = function (e) { return null; }, e.prototype.isRAMLUnit = function () { return !0; }, e.prototype.project = function () { return this._project; }, e.prototype.updateContent = function (e) { }, e.prototype.ramlVersion = function () { throw new h(m.NOT_IMPLEMENTED.message); }, e.prototype.lineMapper = function () { return new l.LineMapperImpl(this.contents(), this.absolutePath()); }, e.prototype.resolve = function (e) { return null; }, e.prototype.isOverlayOrExtension = function () { return !1; }, e.prototype.getMasterReferenceNode = function () { return null; }, e; }();
            t.CompilationUnit = d;
            var y = function () {
                function e(e, t, n, r, i) {
                    var a = this;
                    void 0 === r && (r = {}), this._unit = e, this._object = t, this._parent = n, this.options = r, this._key = i, this._isOptional = !1, this._object instanceof Object && Object.keys(this._object).forEach(function (e) {
                        var t = s(e, a.options);
                        if (t != e) {
                            var n = a._object[e];
                            delete a._object[e], a._object[t] = n;
                        }
                    }), this._key && c.stringEndsWith(this._key, "?") && (this._isOptional = !0, this._key = this._key.substring(0, this._key.length - 1));
                }
                return e.prototype.keyKind = function () { return null; }, e.prototype.isAnnotatedScalar = function () { return !1; }, e.prototype.hasInnerIncludeError = function () { return !1; }, e.prototype.start = function () { return -1; }, e.prototype.end = function () { return -1; }, e.prototype.value = function () { return this._object; }, e.prototype.actual = function () { return this._object; }, e.prototype.includeErrors = function () { return []; }, e.prototype.includePath = function () { return null; }, e.prototype.includeReference = function () { return null; }, e.prototype.key = function () { return this._key; }, e.prototype.optional = function () { return this._isOptional; }, e.prototype.children = function () { var t = this; return this._object ? Array.isArray(this._object) ? this._object.map(function (n) { return new e(t._unit, n, t, t.options); }) : this._object instanceof Object ? Object.keys(this._object).map(function (n) { return new e(t._unit, t._object[n], t, t.options, n); }) : [] : []; }, e.prototype.parent = function () { return this._parent; }, e.prototype.unit = function () { return this._unit; }, e.prototype.containingUnit = function () { return this._unit; }, e.prototype.includeBaseUnit = function () { return this._unit; }, e.prototype.anchorId = function () { return null; }, e.prototype.errors = function () { return []; }, e.prototype.anchoredFrom = function () { return this; }, e.prototype.includedFrom = function () { return this; }, e.prototype.visit = function (e) { e(this) && this.children().forEach(function (t) { return t.visit(e); }); }, e.prototype.dumpToObject = function () { return this._object; }, e.prototype.addChild = function (e) { }, e.prototype.execute = function (e) { }, e.prototype.dump = function () { return JSON.stringify(this._object); }, e.prototype.keyStart = function () { return -1; }, e.prototype.keyEnd = function () { return -1; }, e.prototype.valueStart = function () { return -1; }, e.prototype.valueEnd = function () { return -1; }, e.prototype.isValueLocal = function () { return !0; }, e.prototype.kind = function () { return Array.isArray(this._object) ? u.Kind.SEQ : this._object instanceof Object ? u.Kind.MAP : u.Kind.SCALAR; }, e.prototype.valueKind = function () { if (!this._object)
                    return null; var e = typeof this._object; return Array.isArray(this._object) ? u.Kind.SEQ : "object" == e ? u.Kind.MAP : "string" == e || "number" == e || "boolean" == e ? u.Kind.SCALAR : null; }, e.prototype.anchorValueKind = function () { return null; }, e.prototype.resolvedValueKind = function () { return this.valueKind(); }, e.prototype.show = function (e) { }, e.prototype.setHighLevelParseResult = function (e) { this._highLevelParseResult = e; }, e.prototype.highLevelParseResult = function () { return this._highLevelParseResult; }, e.prototype.setHighLevelNode = function (e) { this._highLevelNode = e; }, e.prototype.highLevelNode = function () { return this._highLevelNode; }, e.prototype.text = function (e) { throw new h(m.NOT_IMPLEMENTED.message); }, e.prototype.copy = function () { throw new h(m.NOT_IMPLEMENTED.message); }, e.prototype.markup = function (e) { throw new h(m.NOT_IMPLEMENTED.message); }, e.prototype.nodeDefinition = function () { return f.getDefinitionForLowLevelNode(this); }, e.prototype.includesContents = function () { return !1; }, e;
            }();
            t.AstNode = y, t.serialize2 = r, t.serialize = i;
        }, function (e, t, n) {
            "use strict";
            var r = n(28), i = n(60), a = function () { function e() { this.uriToResources = {}, this.conflictingUriToResources = {}; } return e.prototype.validateApi = function (e, t) { var n = this, a = e.resources(); a.forEach(function (e) { n.acceptResource(e); var t = e.resources(); t.forEach(function (e) { return n.acceptResource(e); }); }); for (var o in this.conflictingUriToResources) {
                var a = this.conflictingUriToResources[o];
                if (a.length > 1) {
                    var s = {};
                    a.forEach(function (e) { var t = e.highLevel(), n = ""; null != t.parent() && (n += t.parent().id() + "."), n += t.localId(); var r = s[n]; null == r && (r = [], s[n] = r), r.push(e); });
                    var u = Object.keys(s);
                    u.length > 1 && a.forEach(function (e) { t.accept(r.createIssue1(i.RESOURCES_SHARE_SAME_URI, {}, e.highLevel(), !1)); });
                }
            } }, e.prototype.acceptResource = function (e) { var t = e.absoluteUri(), n = this.uriToResources[t]; n || (n = [], this.uriToResources[t] = n), n.push(e), n.length > 1 && (this.conflictingUriToResources[t] = n); }, e; }();
            e.exports = a;
        }, function (e, t, n) {
            "use strict";
            function r(e, t, n) { null == n && (n = i(e)), n.length > 0 && (n += ":"); for (var r = e.getElementsByTagName(n + t), a = [], o = 0; o < r.length; o++) {
                var s = r[o];
                s.parentNode === e && a.push(s);
            } return a; }
            function i(e) { var t = ""; if (e) {
                var n = e;
                if (e.ownerDocument && (n = e.ownerDocument), n) {
                    var r = n.documentElement;
                    r && (t = r.prefix);
                }
            } return t; }
            function a(e) { try {
                if (e = e.trim(), !c.stringStartsWith(e, "<") && c.stringEndsWith(e, ">"))
                    return !1;
                var t = new p.DOMParser(f).parseFromString(e), n = r(t, "schema", i(t));
                return n.length > 0;
            }
            catch (a) {
                return !1;
            } }
            function o(e) { var t = {}; if (1 == e.nodeType) {
                if (e.attributes.length > 0)
                    for (var n = 0; n < e.attributes.length; n++) {
                        var r = e.attributes.item(n);
                        t["@" + r.nodeName] = r.nodeValue;
                    }
            }
            else
                3 == e.nodeType && (t = e.nodeValue); if (e.hasChildNodes())
                for (var i = 0; i < e.childNodes.length; i++) {
                    var a = e.childNodes.item(i), s = a.nodeName;
                    if (void 0 != s)
                        if ("undefined" == typeof t[s])
                            t[s] = o(a);
                        else {
                            if ("undefined" == typeof t[s].push) {
                                var u = t[s];
                                t[s] = [], t[s].push(u);
                            }
                            t[s].push(o(a));
                        }
                } return t; }
            function s(e) { if ("object" == typeof e)
                for (var t in e)
                    if ("object" == typeof e[t]) {
                        for (var n in e[t])
                            if ("#text" == n) {
                                var r = e[t]["#text"];
                                "string" != typeof r && (r = r.join("")), r = r.trim(), 0 == r.length && delete e[t]["#text"];
                            }
                        s(e[t]);
                    } return e; }
            function u(e) { if ("object" == typeof e)
                for (var t in e)
                    if ("object" == typeof e[t]) {
                        var n = Object.keys(e[t]);
                        1 == n.length && "#text" == n[0] && (e[t] = e[t]["#text"]), u(e[t]);
                    } return e; }
            function l(e) { var t = new p.DOMParser(f); if (!e || 0 == e.trim().indexOf("<<"))
                return null; var n = t.parseFromString(e); return u(s(o(n))); }
            var p = n(76), c = n(35), f = { errorHandler: { warning: function () { return null; }, error: function () { return null; }, fatalError: function () { return null; } } };
            t.isXmlScheme = a, t.parseXML = l;
        }, function (e, t, n) {
            "use strict";
            function r(e, t, n, r) { var i = r.end !== !1, a = r.strict, o = ""; r.sensitive || (o += "i"); var s = e.replace(c, function (e, r, i, a) { if (a)
                return "\\" + a; n.push({ name: i, prefix: r || "/" }), r = r ? "\\" + r : ""; var o = t[i], s = o && l[o.type] || "[^" + (r || "\\/") + "]+", u = o && o.required === !1; return Array.isArray(o["enum"]) && o["enum"].length && (s = "(?:" + o["enum"].map(function (e) { return String(e).replace(p, "\\$1"); }).join("|") + ")"), r + "(" + s + ")" + (u ? "?" : ""); }), u = "/" === e.charAt(e.length - 1); return a || (s = (u ? s.slice(0, -2) : s) + "(?:\\/(?=$))?"), s += i ? "$" : a && u ? "" : "(?=\\/|$)", new RegExp("^" + s + (i ? "$" : ""), o); }
            function i(e) { try {
                return decodeURIComponent(e);
            }
            catch (t) {
                var n = new Error('Failed to decode param "' + e + '"');
                throw n.status = 400, n;
            } }
            function a(e, t, n) { if (n = n || {}, "/" === e && n.end === !1)
                return o; t = t || {}; var a = [], l = r(e, t, a, n), p = s.sanitize()(t), c = u.validate()(t); return function (e) { var n = l.exec(e); if (!n)
                return !1; if (t.mediaTypeExtension && n.length > 1 && !n[n.length - 1]) {
                var r = n[n.length - 2], o = r.lastIndexOf(".");
                o >= 0 && (n[n.length - 2] = r.substring(0, o), n[n.length - 1] = r.substring(o));
            } for (var s = n[0], u = {}, f = 1; f < n.length; f++) {
                var m = a[f - 1], h = n[f];
                u[m.name] = null == h ? h : i(h);
            } return u = p(u), c(u).valid ? { path: s, params: u } : !1; }; }
            function o(e) { return { path: "", params: {} }; }
            var s = n(80), u = n(81), l = { number: "[-+]?\\d+(?:\\.\\d+)?", integer: "[-+]?\\d+", date: "(?:Mon|Tue|Wed|Thu|Fri|Sat|Sun), \\d{2} (?:Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \\d{4} (?:[0-1]\\d|2[0-3]):[0-5]\\d:[0-5]\\d GMT", "boolean": "(?:true|false)" }, p = /([.*+?=^!:${}()|[\]\/\\])/g, c = new RegExp(["([.\\/])?\\{([^}]+)\\}", p.source].join("|"), "g");
            t.ramlPathMatch = a;
        }, function (e, t, n) {
            "use strict";
            var r = n(39), i = n(17), a = n(14), o = r, s = n(13), u = function () { function e(e, t) { void 0 === t && (t = !1), this.enabled = e, this.toHighLevel = t, this.unconditionalValueCalculators = [new v], this.valueCalculators = [new m, new f, new c, new p, new h(this.toHighLevel), new d, new y]; } return e.prototype.attributeDefaultIfEnabled = function (e, t) { return this.enabled ? this.getAttributeDefault(e, t) : this.getUnconditionalAttributeDefault(t, e); }, e.prototype.getUnconditionalAttributeDefault = function (e, t) { if (!t || !e)
                return null; for (var n = 0; n < this.unconditionalValueCalculators.length; n++) {
                var r = this.unconditionalValueCalculators[n];
                if (r.matches(e, t)) {
                    var i = r.calculate(e, t);
                    if (null != i)
                        return i;
                }
            } return null; }, e.prototype.getAttributeDefault = function (e, t) { if (!e || !t)
                return null; try {
                return this.getAttributeDefault2(t, e);
            }
            catch (n) {
                return console.log(n), null;
            } }, e.prototype.getWrapperAttributeDefault = function (e, t) { var n = e.highLevel(); if (null == n)
                return null; var r = n.definition().property(t); return null == r ? null : this.getAttributeDefault(n, r); }, e.prototype.getAttributeDefault2 = function (e, t) { for (var n = 0; n < this.valueCalculators.length; n++) {
                var r = this.valueCalculators[n];
                if (r.matches(e, t)) {
                    var i = r.calculate(e, t);
                    if (null != i)
                        return i;
                }
            } return null != e.defaultValue() ? e.defaultValue() : null; }, e.prototype.isEnabled = function () { return this.enabled; }, e.prototype.insertionKind = function (e, t) { for (var n = 0; n < this.valueCalculators.length; n++) {
                var r = this.valueCalculators[n];
                if (r.matches(t, e))
                    return r.kind();
            } return null != t.defaultValue() ? l.BY_DEFAULT : null; }, e; }();
            t.AttributeDefaultsCalculator = u, function (e) { e[e.CALCULATED = 0] = "CALCULATED", e[e.BY_DEFAULT = 1] = "BY_DEFAULT"; }(t.InsertionKind || (t.InsertionKind = {}));
            var l = t.InsertionKind, p = function () { function e() { } return e.prototype.calculate = function (e, t) { var n = s.declRoot(t); if (n && a.isApiSibling(n.definition())) {
                var r = n.attr(i.Universe10.Api.properties.mediaType.name);
                if (r)
                    return r.value();
            } return null; }, e.prototype.matches = function (e, t) { if (!a.isNameProperty(e))
                return !1; var n = t.definition(); if (!n)
                return !1; if (!a.isBodyLikeType(n) && !a.isTypeDeclarationSibling(n))
                return !1; var r = t.parent(); if (null == r)
                return !1; var i = r.definition(); if (null == i)
                return !1; if (!a.isResponseType(i) && !a.isMethodBaseSibling(i))
                return !1; for (var o = r; o;) {
                var s = o.definition();
                if (a.isTraitType(s))
                    return !1;
                if (a.isResourceTypeType(s))
                    return !1;
                o = o.parent();
            } return !0; }, e.prototype.kind = function () { return l.CALCULATED; }, e; }(), c = function () { function e() { } return e.prototype.calculate = function (e, t) { var n = t.definition(); if (null == n)
                return null; var r = n.getAdapter(o.RAMLService), i = r.getKeyProp(); if (null != i) {
                var a = t.attrValue(i.nameId());
                return null != a ? a : new u(!0).getAttributeDefault(t, i);
            } return null; }, e.prototype.matches = function (e, t) { var n = t.definition(); return null == n ? !1 : (a.isTypeDeclarationSibling(n) || n.isAssignableFrom(i.Universe08.Parameter.name) || a.isResourceType(n)) && a.isDisplayNameProperty(e); }, e.prototype.kind = function () { return l.CALCULATED; }, e; }(), f = function () { function e() { } return e.prototype.calculate = function (e, t) { return "object"; }, e.prototype.matches = function (e, t) { return a.isTypeProperty(e) && null != t.definition() && a.isObjectTypeDeclarationSibling(t.definition()); }, e.prototype.kind = function () { return l.BY_DEFAULT; }, e; }(), m = function () { function e() { } return e.prototype.calculate = function (e, t) { var n = t.definition(), r = t.property(); if (null == n)
                return null; var i = n.getAdapter(o.RAMLService), s = i.getKeyProp(); if (null != s) {
                var u = t.attr(s.nameId());
                if (null != u && u.optional())
                    return !1;
            } if (null != r) {
                if (a.isHeadersProperty(r) || a.isFormParametersProperty(r) || a.isQueryParametersProperty(r))
                    return "RAML08" == e.domain().universe().version() ? !1 : !0;
                if (a.isUriParametersProperty(r) || a.isBaseUriParametersProperty(r))
                    return !0;
            } return null != e.defaultValue() ? e.defaultValue() : null; }, e.prototype.matches = function (e, t) { return a.isRequiredProperty(e); }, e.prototype.kind = function () { return l.BY_DEFAULT; }, e; }(), h = function () { function e(e) { void 0 === e && (e = !1), this.toHighLevel = e; } return e.prototype.calculate = function (e, t) { if (a.isApiSibling(t.definition()))
                return null; var n, r = t.definition(); if (a.isMethodType(r)) {
                var i = t.parent();
                if (i) {
                    var o = i.getLastSlaveCounterPart();
                    o && (i = o), n = this.toHighLevel ? i.attributes("securedBy") : i.wrapperNode().securedBy();
                }
            } if (!n || 0 == n.length) {
                for (; null != t && !a.isApiSibling(t.definition());)
                    t = t.parent();
                if (t) {
                    var s = t.getLastSlaveCounterPart();
                    s && (t = s), n = this.toHighLevel ? t.attributes("securedBy") : t.wrapperNode().securedBy();
                }
            } return n && n.length > 0 ? n : null; }, e.prototype.matches = function (e, t) { var n = t.definition(); return null == n ? !1 : a.isSecuredByProperty(e); }, e.prototype.kind = function () { return l.CALCULATED; }, e; }(), d = function () { function e() { } return e.prototype.calculate = function (e, t) { for (; null != t && !a.isApiSibling(t.definition());)
                t = t.parent(); var n, r = t.attr(i.Universe10.Api.properties.baseUri.name); if (r) {
                var o = r.value();
                if (o && "string" == typeof o) {
                    var s = o.indexOf("://");
                    s >= 0 && (n = [o.substring(0, s).toUpperCase()]), n || (n = ["HTTP"]);
                }
            } return n; }, e.prototype.matches = function (e, t) { if (!a.isProtocolsProperty(e))
                return !1; var n = t.definition(), r = !1; if (a.isApiSibling(n))
                r = !0;
            else if (a.isResourceType(n))
                r = !0;
            else if (a.isMethodType(n)) {
                var i = t.parent();
                r = i && a.isResourceType(i.definition());
            } return r; }, e.prototype.kind = function () { return l.CALCULATED; }, e; }(), y = function () { function e() { } return e.prototype.calculate = function (e, t) { for (; null != t && !a.isApiSibling(t.definition());)
                t = t.parent(); var n = t.attr(i.Universe10.Api.properties.version.name); if (n) {
                var r = n.value();
                if (r && r.trim())
                    return [r];
            } return null; }, e.prototype.matches = function (e, t) { if (!a.isEnumProperty(e))
                return !1; var n = t.property(); if (!n)
                return !1; if (!a.isBaseUriParametersProperty(n))
                return !1; var r = t.attr(i.Universe10.TypeDeclaration.properties.name.name), o = r && r.value(); return "version" != o ? !1 : !0; }, e.prototype.kind = function () { return l.CALCULATED; }, e; }(), v = function () { function e() { } return e.prototype.calculate = function (e, t) { var n = t.definition(); if (null == n)
                return null; var r = n.getAdapter(o.RAMLService); if (null == r)
                return null; var i = r.getKeyProp(); if (null == i)
                return null; var a = t.attr(i.nameId()); return null == a ? null : a.optional() ? !1 : null; }, e.prototype.matches = function (e, t) { return a.isRequiredProperty(e); }, e.prototype.kind = function () { return l.BY_DEFAULT; }, e; }();
        }, function (e, t, n) {
            "use strict";
            function r(e, t) { void 0 === t && (t = !1); var n = _.Universe10.ResourceBase.properties.uriParameters.name, r = e.elementsOfKind(n); if (!C.isResourceType(e.definition()))
                return r; var i = e.attr(_.Universe10.Resource.properties.relativeUri.name).value(); return a(r, i, e, n, t); }
            function i(e, t) { void 0 === t && (t = !0); var n = e.attr(_.Universe10.Api.properties.baseUri.name), r = n ? n.value() : "", i = _.Universe10.Api.properties.baseUriParameters.name, o = e.elementsOfKind(i); return a(o, r, e, i, t); }
            function a(e, t, n, r, i) { if ("string" != typeof t)
                return []; var a = n.definition(), o = a.property(r); if (!t)
                return []; var s = {}; e.forEach(function (e) { var t = s[e.name()]; t || (t = [], s[e.name()] = t), t.push(e); }); for (var u = [], l = 0, p = {}, c = t.indexOf("{"); c >= 0 && (l = t.indexOf("}", ++c), !(0 > l)); c = t.indexOf("{", l)) {
                var f = t.substring(c, l);
                if (p[f] = !0, s[f])
                    s[f].forEach(function (e) { return u.push(e); });
                else {
                    var m = a.universe(), h = m.type(N.Universe10.StringTypeDeclaration.name), d = E.createStubNode(h, null, f, n.lowLevel().unit());
                    d.setParent(n), i && d.wrapperNode().meta().setCalculated(), d.attrOrCreate("name").setValue(f), d.patchProp(o), u.push(d);
                }
            } return Object.keys(s).filter(function (e) { return !p[e]; }).forEach(function (e) { return s[e].forEach(function (e) { return u.push(e); }); }), u; }
            function o(e) { var t = "", n = e; do
                e = n, t = e.attr(N.Universe10.Resource.properties.relativeUri.name).value() + t, n = e.parent();
            while (C.isResourceType(n.definition())); return t; }
            function s(e) { if (!C.isResourceType(e.definition()))
                return null; var t = "", n = e; do
                e = n, t = e.attr(N.Universe10.Resource.properties.relativeUri.name).value() + t, n = e.parent();
            while (C.isResourceType(n.definition())); t = t.replace(/\/\//g, "/"); var r = ""; n = n.getSlaveCounterPart() || n; var i = n.attr(N.Universe10.Api.properties.baseUri.name); return i && (r = i ? i.value() : ""), r = r ? r : "", b.stringEndsWith(r, "/") && (t = t.substring(1)), t = r + t; }
            function u(e, t) { void 0 === t && (t = !1); var n = c(e, !0, t); return n.length > 0 ? n[0] : null; }
            function l(e, t) { return void 0 === t && (t = !1), c(e, !1, t); }
            function p(e, t) { void 0 === t && (t = !1); var n; n = e.isJSONString() || e.isYAML() ? e.asJSON() : e.original(); var r = { value: n, strict: e.strict(), name: e.name() }; if (e.hasAnnotations()) {
                var i = e.annotations(), a = f(i);
                Object.keys(a).length > 0 && (r.annotations = a);
            } if (e.hasScalarAnnotations()) {
                var o = e.scalarsAnnotations(), s = {};
                Object.keys(o).forEach(function (e) { var t = f(o[e]); Object.keys(t).length > 0 && (s[e] = Object.keys(t).map(function (e) { return t[e]; })); }), Object.keys(s).length > 0 && (r.scalarsAnnotations = s);
            } var u = e.displayName(); u && (r.displayName = u); var l = e.description(); return null != l && (r.description = l), t && (r.asXMLString = e.asXMLString()), r; }
            function c(e, t, n) { void 0 === n && (n = !1); var r = e.localType(); r.isAnnotationType() && (r = S.find(r.superTypes(), function (e) { return e.nameId() == r.nameId(); })); var i = r.examples().filter(function (e) { return null != e && !e.isEmpty() && e.isSingle() == t; }).map(function (e) { return p(e, n); }); return i; }
            function f(e) { var t = {}; return e && Object.keys(e).forEach(function (n) { t[n] = { structuredValue: e[n].value(), name: n }; }), t; }
            function m(e, t) { return void 0 === t && (t = !0), e.lowLevel().actual().libExpanded ? [] : d(e, function (e) { return C.isTraitType(e); }, t); }
            function h(e, t) { return void 0 === t && (t = !0), e.lowLevel().actual().libExpanded ? [] : d(e, function (e) { return C.isResourceTypeType(e); }, t); }
            function d(e, t, n) { var r = w.globalDeclarations(e).filter(function (e) { return t(e.definition()); }), i = e.lowLevel(), a = i.includePath(); a || (a = i.unit().path()); for (var o = "RAML10" == e.definition().universe().version() && !C.isOverlayType(e.definition()), s = o ? new I.TraitsAndResourceTypesExpander : null, u = [], l = new M.ReferencePatcher, p = 0, c = r; p < c.length; p++) {
                var f = c[p], m = f.lowLevel().unit().path();
                o && (R.LowLevelProxyNode.isInstance(f.lowLevel()) || (f = s.createHighLevelNode(f, !1)), l.process(f, e, !0, !0)), n && m != a && f.wrapperNode().meta().setCalculated(), u.push(f);
            } return u; }
            function y(e) { return v(e); }
            function v(e, t) { var n = e.attr(_.Universe08.BodyLike.properties.schema.name); if (!n)
                return null; var r = n.value(); if (!r)
                return null; if (b.stringStartsWith(r, "{") || b.stringStartsWith(r, "[") || b.stringStartsWith(r, "<"))
                return n; var i; if (t)
                i = t[r];
            else {
                var a = e.root(), o = a.elementsOfKind(_.Universe08.Api.properties.schemas.name);
                i = S.find(o, function (e) { return e.name() == r; });
            } if (!i)
                return n; if (!i)
                return n; if (!i.getKind || i.getKind() != T.NodeKind.NODE)
                return n; if (i.definition().key() != _.Universe08.GlobalSchema)
                return n; var s = i.attr(_.Universe08.GlobalSchema.properties.value.name); return null == s ? null : s; }
            function g(e) { var t = e.definition(); if (C.isMethodType(t) || C.isTypeDeclarationDescendant(t)) {
                for (var n = !1, r = e.parent(); null != r;) {
                    var i = r.definition();
                    if (C.isResourceTypeType(i) || C.isTraitType(i)) {
                        n = !0;
                        break;
                    }
                    r = r.parent();
                }
                if (!n)
                    return null;
            } if (null == e)
                return null; var a = e.lowLevel(); if (null == a)
                return null; var o = a.children().filter(function (e) { var t = e.key(); return t ? "(" == t.charAt(0) && ")" == t.charAt(t.length - 1) ? !1 : t.indexOf("<<") >= 0 : !1; }); if (0 == o.length)
                return null; var s = {}; return o.forEach(function (e) { var t = e.dumpToObject(); Object.keys(t).forEach(function (e) { return s[e] = t[e]; }); }), s; }
            function A(e) { var t = e.localType(), n = t.fixedFacets(), r = Object.keys(n); if (!t.hasUnionInHierarchy())
                for (var i = 0, a = r; i < a.length; i++) {
                    var o = a[i];
                    null == t.facet(o) && delete n[o];
                } return 0 == Object.keys(n).length ? null : n; }
            var T = n(9), E = n(18), S = n(70), N = n(17), _ = n(17), b = n(35), I = n(30), R = n(41), M = n(51), w = n(13), C = n(14);
            t.uriParameters = r, t.baseUriParameters = i, t.completeRelativeUri = o, t.absoluteUri = s, t.typeExample = u, t.typeExamples = l, t.dumpExpandableExample = p, t.allTraits = m, t.allResourceTypes = h, t.schemaContent08 = y, t.schemaContent08Internal = v, t.getTemplateParametrizedProperties = g, t.typeFixedFacets = A;
        }, function (e, t, n) {
            e.exports = { 34: { code: "34", message: "" }, INVALID_PARAMETER_NAME: { code: "INVALID_PARAMETER_NAME", message: "Invalid parameter name: '{{paramName}}' is reserved" }, UNUSED_PARAMETER: { code: "UNUSED_PARAMETER", message: "Unused parameter: '{{paramName}}'" }, INVALID_PROPERTY_OWNER_TYPE: { code: "INVALID_PROPERTY_OWNER_TYPE", message: "Property '{{propName}}' can only be used if type is {{namesStr}}" }, NODE_KEY_IS_A_MAP: { code: "NODE_KEY_IS_A_MAP", message: "Node key can not be a map" }, NODE_KEY_IS_A_SEQUENCE: { code: "NODE_KEY_IS_A_SEQUENCE", message: "Node key can not be a sequence" }, SEQUENCE_REQUIRED: { code: "SEQUENCE_REQUIRED", message: "Node: '{{name}}' should be wrapped in sequence" }, PROPERTY_MUST_BE_A_MAP_10: { code: "PROPERTY_MUST_BE_A_MAP_10", message: "'{{propName}}' should be a map in RAML 1.0" }, PROPERTY_MUST_BE_A_MAP: { code: "PROPERTY_MUST_BE_A_MAP", message: "Property '{{propName}}' should be a map" }, PROPERTY_MUST_BE_A_SEQUENCE: { code: "PROPERTY_MUST_BE_A_SEQUENCE", message: "Property '{{propName}}' should be a sequence" }, INVALID_PROPERTY_RANGE: { code: "INVALID_PROPERTY_RANGE", message: "Property '{{propName}}' must be a {{range}}" }, MAP_REQUIRED: { code: "MAP_REQUIRED", message: "should be a map in RAML 1.0" }, UNRESOLVED_REFERENCE: { code: "UNRESOLVED_REFERENCE", message: "Reference: '{{ref}}' can not be resolved" }, SCALAR_PROHIBITED: { code: "SCALAR_PROHIBITED", message: "Property '{{propName}}' can not have scalar value" }, UNKNOWN_NODE: { code: "UNKNOWN_NODE", message: "Unknown node: '{{name}}'" }, RECURSIVE_DEFINITION: { code: "RECURSIVE_DEFINITION", message: "Recursive definition: '{{name}}'" }, QUERY_STRING_AND_QUERY_PARAMETERS_ARE_MUTUALLY_EXCLUSIVE: { code: "QUERY_STRING_AND_QUERY_PARAMETERS_ARE_MUTUALLY_EXCLUSIVE", message: "'queryString' and 'queryParameters' properties are mutually exclusive. '{{propName}}' is already specified." }, ISSUES_IN_THE_LIBRARY: { code: "ISSUES_IN_THE_LIBRARY", message: "Issues in the used library: '{{value}}'" }, INVALID_LIBRARY_PATH: { code: "INVALID_LIBRARY_PATH", message: "Can not resolve library from path: '{{path}}'" }, EMPTY_FILE: { code: "EMPTY_FILE", message: "Empty file: {{path}}" }, SPACES_IN_KEY: { code: "SPACES_IN_KEY", message: "Keys should not have spaces '{{value}}'" }, INCLUDE_ERROR: { code: "INCLUDE_ERROR", message: "{{msg}}" }, PATH_EXCEEDS_ROOT: { code: "PATH_EXCEEDS_ROOT", message: "Resolved include path exceeds file system root" }, ILLEGAL_PATTERN: { code: "ILLEGAL_PATTERN", message: "Illegal pattern: '{{value}}'" }, UNKNOWN_FUNCTION: { code: "UNKNOWN_FUNCTION", message: "Unknown function applied to parameter: '{{transformerName}}'" }, REQUEST_BODY_DISABLED: { code: "REQUEST_BODY_DISABLED", message: "Request body is disabled for '{{methodName}}' method." }, SCALAR_EXPECTED: { code: "SCALAR_EXPECTED", message: "Scalar is expected here" }, STRING_EXPECTED: { code: "STRING_EXPECTED", message: "Property '{{propName}}' must be a string" }, UNKNOWN_ANNOTATION: { code: "UNKNOWN_ANNOTATION", message: "Unknown annotation: '{{aName}}'" }, STRING_EXPECTED_2: { code: "STRING_EXPECTED_2", message: "{{propName}} value should be a string" }, SECUREDBY_LIST_08: { code: "SECUREDBY_LIST_08", message: "'securedBy' should be a list in RAML08" }, INVALID_ANNOTATION_LOCATION: { code: "INVALID_ANNOTATION_LOCATION", message: "Annotation '{{aName}}' can not be placed at this location, allowed targets are: {{aValues}}" }, BOOLEAN_EXPECTED: { code: "BOOLEAN_EXPECTED", message: "'true' or 'false' is expected here" }, NUMBER_EXPECTED: { code: "NUMBER_EXPECTED", message: "Value of '{{propName}}' must be a number" }, STRING_EXPECTED_3: { code: "STRING_EXPECTED_3", message: "'{{propName}}' must be a string" }, STATUS_MUST_BE_3NUMBER: { code: "STATUS_MUST_BE_3NUMBER", message: "Status code should be 3 digits number." }, EMPTY_VALUE_NOT_ALLOWED: { code: "EMPTY_VALUE_NOT_ALLOWED", message: "Empty value is not allowed here" }, INVALID_VALUE_SCHEMA: { code: "INVALID_VALUE_SCHEMA", message: "Invalid value schema: '{{iValue}}'" }, INVALID_VALUE: { code: "INVALID_VALUE", message: "Invalid value: '{{iValue}}'. Allowed values are: {{aValues}}" }, SCHEMA_EXCEPTION: { code: "SCHEMA_EXCEPTION", message: "Schema exception: {{msg}}" }, SCHEMA_ERROR: { code: "SCHEMA_ERROR", message: "{{msg}}" }, MISSING_VERSION: { code: "MISSING_VERSION", message: "Missing 'version'" }, URI_PARAMETER_NAME_MISSING: { code: "URI_PARAMETER_NAME_MISSING", message: "URI parameter must have name specified" }, URI_EXCEPTION: { code: "URI_EXCEPTION", message: "{{msg}}" }, INVALID_MEDIATYPE: { code: "INVALID_MEDIATYPE", message: "Invalid media type '{{mediaType}}'" }, MEDIATYPE_EXCEPTION: { code: "MEDIATYPE_EXCEPTION", message: "{{msg}}" }, FORM_IN_RESPONSE: { code: "FORM_IN_RESPONSE", message: "Form related media types can not be used in responses" }, UNUSED_URL_PARAMETER: { code: "UNUSED_URL_PARAMETER", message: "Unused url parameter {{paramName}}" }, UNRECOGNIZED_ELEMENT: { code: "UNRECOGNIZED_ELEMENT", message: "Unrecognized {{referencedToName}}: '{{ref}}'." }, TYPES_VARIETY_RESTRICTION: { code: "TYPES_VARIETY_RESTRICTION", message: "Type can be either of: string, number, integer, file, date or boolean" }, UNRECOGNIZED_SECURITY_SCHEME: { code: "UNRECOGNIZED_SECURITY_SCHEME", message: "Unrecognized security scheme type: '{{ref}}'. Allowed values are: 'OAuth 1.0', 'OAuth 2.0', 'Basic Authentication', 'DigestSecurityScheme Authentication', 'x-{other}'" }, DUPLICATE_TRAIT_REFERENCE: { code: "DUPLICATE_TRAIT_REFERENCE", message: "Duplicate trait reference: '{{refValue}}'." }, IS_IS_ARRAY: { code: "IS_IS_ARRAY", message: "Property 'is' must be an array" }, RESOURCE_TYPE_NAME: { code: "RESOURCE_TYPE_NAME", message: "Resource type name must be provided" }, MULTIPLE_RESOURCE_TYPES: { code: "MULTIPLE_RESOURCE_TYPES", message: "A resource or resourceType can inherit from a single resourceType" }, UNKNOWN_RAML_VERSION: { code: "UNKNOWN_RAML_VERSION", message: "Unknown version of RAML expected to see one of '#%RAML 0.8' or '#%RAML 1.0'" }, UNKNOWN_TOPL_LEVEL_TYPE: { code: "UNKNOWN_TOPL_LEVEL_TYPE", message: "Unknown top level type: '{{typeName}}'" }, REDUNDANT_FRAGMENT_NAME: { code: "REDUNDANT_FRAGMENT_NAME", message: "Redundant fragment name: '{{typeName}}'" }, CONTEXT_REQUIREMENT_VIOLATION: { code: "CONTEXT_REQUIREMENT_VIOLATION", message: "{{v1}} should be {{v2}} to use type {{v3}}" }, WEB_FORMS: { code: "WEB_FORMS", message: "File type can be only used in web forms" }, MISSING_REQUIRED_PROPERTY: { code: "MISSING_REQUIRED_PROPERTY", message: "Missing required property '{{propName}}'" }, VALUE_NOT_PROVIDED: { code: "VALUE_NOT_PROVIDED", message: "Value is not provided for parameter: '{{propName}}'" }, SUSPICIOUS_DOUBLEQUOTE: { code: "SUSPICIOUS_DOUBLEQUOTE", message: 'Suspicious double quoted multiline scalar, it is likely that you forgot closing "{{value}}' }, ANNOTATION_TARGET_MUST_BE_A_STRING: { code: "ANNOTATION_TARGET_MUST_BE_A_STRING", message: "Annotation target must be set by a string" }, ALLOWED_TARGETS_MUST_BE_ARRAY: { code: "ALLOWED_TARGETS_MUST_BE_ARRAY", message: "'allowedTargets' property value must be an array of type names or a single type name" }, UNSUPPORTED_ANNOTATION_TARGET: { code: "UNSUPPORTED_ANNOTATION_TARGET", message: "Unsupported annotation target: '{{aTarget}}'" }, SCHEMA_NAME_MUST_BE_STRING: { code: "SCHEMA_NAME_MUST_BE_STRING", message: "Schema '{{name}}' must be a string" }, FORM_PARAMS_IN_RESPONSE: { code: "FORM_PARAMS_IN_RESPONSE", message: "Form parameters can not be used in response" }, FORM_PARAMS_WITH_EXAMPLE: { code: "FORM_PARAMS_WITH_EXAMPLE", message: "'formParameters' property cannot be used together with the 'example' or 'schema' properties" }, AUTHORIZATION_GRANTS_ENUM: { code: "AUTHORIZATION_GRANTS_ENUM", message: "'authorizationGrants' value should be one of 'authorization_code', 'implicit', 'password', 'client_credentials' or to be an abolute URI" }, AUTHORIZATION_URI_REQUIRED: { code: "AUTHORIZATION_URI_REQUIRED", message: "'authorizationUri' is required when `authorization_code` or `implicit` grant type are used " }, REPEATING_COMPONENTS_IN_ENUM: { code: "REPEATING_COMPONENTS_IN_ENUM", message: "'enum' value contains repeating components" }, INTEGER_EXPECTED: { code: "INTEGER_EXPECTED", message: "Integer is expected" }, NUMBER_EXPECTED_2: { code: "NUMBER_EXPECTED_2", message: "Number is expected" }, RESOURCE_TYPE_NULL: { code: "RESOURCE_TYPE_NULL", message: "Resource type can not be null" }, SCALAR_PROHIBITED_2: { code: "SCALAR_PROHIBITED_2", message: "Node '{{name}}' can not be a scalar" }, VERSION_NOT_ALLOWED: { code: "VERSION_NOT_ALLOWED", message: "'version' parameter not allowed here", comment: "I dont like the message, but its coming from JS 0.8 parser @Denis" }, INVALID_OVERLAY_NODE: { code: "INVALID_OVERLAY_NODE", message: "The '{{nodeId}}' node does not match any node of the master api." }, INVALID_OVERRIDE_IN_OVERLAY: { code: "INVALID_OVERRIDE_IN_OVERLAY", message: "Property '{{propName}}' is not allowed to be overriden or added in overlays" }, KEYS_SHOULD_BE_UNIQUE: { code: "KEYS_SHOULD_BE_UNIQUE", message: "Keys should be unique" }, ALREADY_EXISTS: { code: "ALREADY_EXISTS", message: "{{capitalized}} '{{name}}' already exists" }, ALREADY_EXISTS_IN_CONTEXT: { code: "ALREADY_EXISTS_IN_CONTEXT", message: "{{name}}' already exists in this context" }, PROPERTY_USED: { code: "PROPERTY_USED", message: "Property already used: '{{propName}}'" }, PARENT_PROPERTY_USED: { code: "PARENT_PROPERTY_USED", message: "{{parent}} property already used: '{{propName}}'" }, INVALID_JSON_SCHEMA: { code: "INVALID_JSON_SCHEMA", message: "Invalid JSON schema. Unexpected value '{{propName}}'" }, EXAMPLE_SCHEMA_FAILURE: { code: "EXAMPLE_SCHEMA_FAILURE", message: "Example does not conform to schema: {{msg}}" }, CAN_NOT_PARSE_JSON: { code: "CAN_NOT_PARSE_JSON", message: "Can not parse JSON: {{msg}}" }, CAN_NOT_PARSE_XML: { code: "CAN_NOT_PARSE_XML", message: "Can not parse XML: {{msg}}" }, OPTIONAL_SCLARAR_PROPERTIES_10: { code: "OPTIONAL_SCLARAR_PROPERTIES_10", message: "Optional scalar properties are not allowed in {{templateNamePlural}} and their descendants: '{{propName}}?'" }, OPTIONAL_PROPERTIES_10: { code: "OPTIONAL_PROPERTIES_10", message: "Optional properties are not allowed in '{{propName}}': '{{oPropName}}'" }, ONLY_METHODS_CAN_BE_OPTIONAL: { code: "ONLY_METHODS_CAN_BE_OPTIONAL", message: "Only method nodes can be optional" }, PROPERTY_UNUSED: { code: "PROPERTY_UNUSED", message: "{{propName}} unused" }, CYCLE_IN_DEFINITION: { code: "CYCLE_IN_DEFINITION", message: "{{typeName}} definition contains cycle: {{cycle}}" }, SEQUENCE_NOT_ALLOWED_10: { code: "SEQUENCE_NOT_ALLOWED_10", message: "In RAML 1.0 {{propName}} is not allowed to have sequence as definition" }, MAP_EXPECTED: { code: "MAP_EXPECTED", message: "Map is expected here" }, ERROR_IN_INCLUDED_FILE: { code: "ERROR_IN_INCLUDED_FILE", message: "Error in the included file: {{msg}}" }, NODE_SHOULD_HAVE_VALUE: { code: "NODE_SHOULD_HAVE_VALUE", message: "node should have at least one member value" }, NAMED_PARAMETER_NEEDS_TYPE: { code: "NAMED_PARAMETER_NEEDS_TYPE", message: "named parameter needs at least one type" }, ENUM_IS_EMPTY: { code: "ENUM_IS_EMPTY", message: "enum is empty" }, ENUM_MUST_BE_AN_ARRAY: { code: "ENUM_MUST_BE_AN_ARRAY", message: "the value of enum must be an array" }, DEFINITION_SHOULD_BE_A_MAP: { code: "DEFINITION_SHOULD_BE_A_MAP", message: "{{typeName}} definition should be a map" }, RESOURCES_SHARE_SAME_URI: { code: "RESOURCES_SHARE_SAME_URI", message: "Resources share same URI" }, TYPES_AND_SCHEMAS_ARE_EXCLUSIVE: { code: "TYPES_AND_SCHEMAS_ARE_EXCLUSIVE", message: "'types' and 'schemas' are mutually exclusive" }, TEMPLATE_PARAMETER_NAME_MUST_CONTAIN_NONWHITESPACE_CHARACTERS: { code: "TEMPLATE_PARAMETER_NAME_MUST_CONTAIN_NONWHITESPACE_CHARACTERS", message: "Trait or resource type parameter name must contain non whitespace characters" }, INVALID_SECURITY_SCHEME_SCOPE: { code: "INVALID_SECURITY_SCHEME_SCOPE", message: "The '{{invalidScope}}' scope is not allowed for the '{{securityScheme}}' security scheme. Allowed scopes are: {{allowedScopes}}." }, INCLUDE_TAG_MISSING: { code: "INCLUDE_TAG_MISSING", message: "The '!include' tag is missing" }, LIBRARY_PATH_MUST_BE_A_STRING: { code: "LIBRARY_PATH_MUST_BE_A_STRING", message: "Library path must be string" }, INVALID_RESOURCE_NAME_UNMATCHED_SYMBOL: { code: "INVALID_RESOURCE_NAME_UNMATCHED_SYMBOL", message: "Invalid resource name: unmatched '{{symbol}}'" }, MESSAGE_PARAMETER_NO_VALUE: { code: "MESSAGE_PARAMETER_NO_VALUE", message: "Message parameter '{{paramName}}' has no value specified." }, SETVALUE_ONLY_MULTI_VALUES_PROPERTIES: { code: "SETVALUE_ONLY_MULTI_VALUES_PROPERTIES", message: "setValue(string) only apply to multi-values properties" }, ISEMPTY_ONLY_MULTI_VALUES_ATTRIBUTES: { code: "ISEMPTY_ONLY_MULTI_VALUES_ATTRIBUTES", message: "isEmpty() only apply to multi-values attributes" }, PLUGIN_REPORTS_AN_ERROR: { code: "PLUGIN_REPORTS_AN_ERROR", message: "The {{pluginId}} plugin reports an error" }, PROPERTIES_SHOULD_HAVE_SAME_GRAMMAR_KIND: { code: "PROPERTIES_SHOULD_HAVE_SAME_GRAMMAR_KIND", message: "Different properties with same name should have same grammar kind at this moment" }, MISSING_TITLE: { code: "MISSING_TITLE", message: "missing title" }, INVALID_ARGUMENT: { code: "INVALID_ARGUMENT", message: "Invalid Argument" }, METHOD_OWNED_BY: { code: "METHOD_OWNED_BY", message: "Method is supposed to be owned by Resource or ResourceType. Here the method is owned by {{owner}}" }, POSITION_EXCEEDS_TEXT_LENGTH: { code: "POSITION_EXCEEDS_TEXT_LENGTH", message: "Character position exceeds text length: {{pos}} > + {{length}}. Unit path: {{absPath}}" }, LINE_MAPPER_HAS_NULL_CONTENT: { code: "LINE_MAPPER_HAS_NULL_CONTENT",
                    message: "Line Mapper has been given null content{{path}}" }, EXTENSIONS_AND_OVERLAYS_LEGAL_FILE_PATHS: { code: "EXTENSIONS_AND_OVERLAYS_LEGAL_FILE_PATHS", message: "Extensions and overlays list should contain legal file paths" }, CAN_NOT_RESOLVE: { code: "CAN_NOT_RESOLVE", message: "Can not resolve {{path}}" }, CAN_NOT_RESOLVE_REASON: { code: "CAN_NOT_RESOLVE_REASON", message: "Can not resolve {{path}} due to: {{reason}}" }, INVALID_FIRST_LINE: { code: "INVALID_FIRST_LINE", message: "Invalid first line. A RAML document is expected to start with '#%RAML <version> <?fragment type>'." }, EXTENSIONS_AND_OVERLAYS_NOT_SUPPORTED_0_8: { code: "EXTENSIONS_AND_OVERLAYS_NOT_SUPPORTED_0_8", message: "Extensions and overlays are not supported in RAML 0.8." }, API_CONTAINS_ERROR: { code: "API_CONTAINS_ERROR", message: "Api contains errors." }, COULD_NOT_SET_STRUCTURED_VALUE: { code: "COULD_NOT_SET_STRUCTURED_VALUE", message: "couldn't set structured value to a key: {{key}}" }, NOT_IMPLEMENTED: { code: "NOT_IMPLEMENTED", message: "not implemented" }, COULD_NOT_MIX_TYPES_INHERITANCE: { code: "COULD_NOT_MIX_TYPES_INHERITANCE", message: "couldn't mix user defined and basic types in inheritance" }, SPECIFY_APIPATH: { code: "SPECIFY_APIPATH", message: "Please, specify -apiPath parameter" }, UNABLE_TO_EXECUTE_GET: { code: "UNABLE_TO_EXECUTE_GET", message: "Unable to execute GET {{url}}" }, UNIT_PATH_IS_NULL: { code: "UNIT_PATH_IS_NULL", message: "Unit path is null" }, FSRESOLVER_IS_UNABLE_USE_EXTENDEDFSRESOLVER: { code: "FSRESOLVER_IS_UNABLE_USE_EXTENDEDFSRESOLVER", message: "Provided FSResolver is unable to list files. Please, use ExtendedFSResolver." }, NOT_IMPLEMENTED_INSERT_INTO_EMPTY_REF: { code: "NOT_IMPLEMENTED_INSERT_INTO_EMPTY_REF", message: "not implemented: insert into empty include ref" }, ATTR_SETVALUE_NOT_RESOLVE: { code: "ATTR_SETVALUE_NOT_RESOLVE", message: "attr.setValue: couldn't resolve: {{path}}" }, ONLY_MAP_NODES_ALLOWED: { code: "ONLY_MAP_NODES_ALLOWED", message: "only MAP/MAPPING nodes allowed as values" }, UNSUPPORTED_CHANGE_VALUE_CASE: { code: "UNSUPPORTED_CHANGE_VALUE_CASE", message: "Unsupported change value case: {{name}}" }, UNSUPPORTED_CASE_ATTRIBUTE_VALUE_CONVERSION: { code: "UNSUPPORTED_CASE_ATTRIBUTE_VALUE_CONVERSION", message: "Unsupported case: attribute value conversion: {{curval}} ==> {{newval}} not supported" }, UNSUPPORTED_COMMAND: { code: "UNSUPPORTED_COMMAND", message: "UNSUPPORTED_COMMAND: {{name}}" }, NEW_NODE_CONTENTS_ERROR_BELOW: { code: "NEW_NODE_CONTENTS_ERROR_BELOW", message: "New node contents (causes error below): \n {{content}}" }, REPARSE_ERROR: { code: "REPARSE_ERROR", message: "Reparse error {{content}}" }, INSERT_INTO_MAPPING_VALUE_NOT_SUPPORTED: { code: "INSERT_INTO_MAPPING_VALUE_NOT_SUPPORTED", message: "Insert into mapping with {{value}} value not supported" }, INSERT_INTO_NOT_SUPPORTED: { code: "INSERT_INTO_NOT_SUPPORTED", message: "Insert into {{name}} unsupported" }, DELETE_FROM_NOT_SUPPORTED: { code: "DELETE_FROM_NOT_SUPPORTED", message: "Delete from {{name}} unsupported" }, CAN_NOT_BE_PARSED: { code: "CAN_NOT_BE_PARSED", message: "{path} can not be parsed" }, RECURSIVE_DEFINITION_EMPTY: { code: "RECURSIVE_DEFINITION_EMPTY", message: "Recursive definition" }, SHOULD_NEVER_HAPPEN_KIND: { code: "SHOULD_NEVER_HAPPEN_KIND", message: "Should never happen; kind : {{kind}}" }, UNKNOWN_NODE_KIND: { code: "UNKNOWN_NODE_KIND", message: "Unknown node kind: '{{kind}}'" }, NOT_IMPLEMENTED_KIND: { code: "NOT_IMPLEMENTED_KIND", message: "markup not implemented: {{kind}}" }, EXPECTED_INSTEAD_OF: { code: "EXPECTED_INSTEAD_OF", message: "{{expected}} expected instead of {{received}}" }, INSERTION_POINT_TYPE: { code: "INSERTION_POINT_TYPE", message: "insertion point type: {{type}}" }, UNSUPPORTED_OPERATION_EXCEPTION: { code: "UNSUPPORTED_OPERATION_EXCEPTION", message: "Unsupported operation exception" }, UNABLE_TO_FIND_CHILD: { code: "UNABLE_TO_FIND_CHILD", message: "Unable to find correct child" }, NETWORK_ERROR: { code: "NETWORK_ERROR", message: "Network Error" }, COULD_NOT_LOAD_API_FROM: { code: "COULD_NOT_LOAD_API_FROM", message: "couldn't load api from {{path}}" }, METHOD_MUST_BE_OVERRIDDEN: { code: "METHOD_MUST_BE_OVERRIDDEN", message: "The method must be overridden" } };
        }, function (e, t, n) {
            "use strict";
            function r(e) { var t = e[0], n = {}; return e.forEach(function (e) { return n[e.name] = e; }), e.forEach(function (e) { var t = e.imports; Object.keys(t).forEach(function (e) { var r = t[e]; t[e] = n[r]; }); }), t; }
            t.universeDumps = { RAML08: r(n(85)), RAML10: r(n(86)) };
        }, function (e, t, n) {
            "use strict";
            function r(e, t) { var n = new s.Universe(t, ""), r = {}; return S(e, n, {}, r), Object.keys(r).forEach(function (e) { A(r[e], n); }), Object.keys(r).forEach(function (e) { T(r[e], n); }), Object.keys(r).forEach(function (e) { E(r[e], n); }), n.types().forEach(function (e) { if (e instanceof s.NodeClass) {
                var t = e;
                if (t.properties().forEach(function (e) { var t = e.range(), n = e; t.hasValueTypeInHierarchy() || t.properties().forEach(function (e) { if (e.getAdapter(p.RAMLPropertyService).isKey()) {
                    var t = e.keyPrefix();
                    t && (n.withKeyRestriction(t), n.merge());
                    var r = e.enumOptions();
                    r && (n.withEnumOptions(r), n.merge());
                } }); }), t.getAdapter(p.RAMLService).isGlobalDeclaration()) {
                    if (t.getAdapter(p.RAMLService).getActuallyExports() && "$self" != t.getAdapter(p.RAMLService).getActuallyExports()) {
                        var r = t.property(t.getAdapter(p.RAMLService).getActuallyExports()).range();
                        if (r.hasValueTypeInHierarchy()) {
                            var i = r.getAdapter(p.RAMLService);
                            i.setGloballyDeclaredBy(t);
                        }
                    }
                    if (t.getAdapter(p.RAMLService).getConvertsToGlobal()) {
                        var r = n.type(t.getAdapter(p.RAMLService).getConvertsToGlobal());
                        if (r.hasValueTypeInHierarchy()) {
                            var i = r.getAdapter(p.RAMLService);
                            i.setGloballyDeclaredBy(t);
                        }
                    }
                }
            } }), n; }
            function i(e, t, n, r, i) { var a = s.prop(e.name(), "", t, n, r); e.isMultiValue() && a.withMultiValue(!0), a.unmerge(), n || console.log(e.name() + ":" + t.nameId() + " has undefined type"), n.hasValueTypeInHierarchy() || n.properties().forEach(function (e) { if (e.getAdapter(p.RAMLPropertyService).isKey()) {
                var t = e.keyPrefix();
                t && (a.withKeyRestriction(t), a.merge());
                var n = e.enumOptions();
                n && (a.withEnumOptions(n), a.merge());
            } }), N(e, a, i); }
            var a = this && this.__extends || function (e, t) { function n() { this.constructor = e; } for (var r in t)
                t.hasOwnProperty(r) && (e[r] = t[r]); e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype, new n); }, o = n(98), s = n(39), u = n(70), l = n(82), p = s, c = function () { function e(e, t) { this._field = e, this._clazz = t; } return e.prototype.name = function () { return this._field.name; }, e.prototype.range = function () { return this._clazz.getModule().typeFor(this._field.type, this._clazz); }, e.prototype.isMultiValue = function () { return this._field.type.typeKind == o.TypeKind.ARRAY; }, e.prototype.isKey = function () { return null != u.find(this._field.annotations, function (e) { return "MetaModel.key" == e.name; }); }, e.prototype.isSimpleValue = function () { return null != u.find(this._field.annotations, function (e) { return "MetaModel.value" == e.name; }); }, e.prototype.annotations = function () { return this._field.annotations; }, e; }(), f = function () { function e(e, t) { this._field = e, this._clazz = t; } return e.prototype.name = function () { return this._field.name; }, e.prototype.value = function () { return this._field.valueConstraint; }, e; }(), m = function () { function e(e, t) { this._clazz = e, this.mw = t; } return e.prototype.typeMeta = function () { return this._clazz.annotations; }, e.prototype.path = function () { return this.mw.path(); }, e.prototype.getModule = function () { return this.mw; }, e.prototype.typeArgs = function () { return this._clazz.typeParameters; }, e.prototype.typConstraints = function () { var e = this; return this._clazz.typeParameterConstraint.map(function (t) { return t ? e.mw.classForName(t) : null; }); }, e.prototype.methods = function () { return this._clazz.methods; }, e.prototype.name = function () { return this._clazz.name; }, e.prototype.members = function () { var e = this; return this._clazz.fields.filter(function (e) { return null == e.valueConstraint; }).map(function (t) { return new c(t, e); }); }, e.prototype.constraints = function () { var e = this; return this._clazz.fields.filter(function (e) { return null != e.valueConstraint; }).map(function (t) { return new f(t, e); }); }, e.prototype.isSubTypeOf = function (e) { if (this == e)
                return !0; var t = !1; return this.getAllSuperTypes().forEach(function (n) { t || (t = t || n.isSubTypeOf(e)); }), t; }, e.prototype.getExtendsClauses = function () { return this._clazz["extends"]; }, e.prototype.getSuperTypes = function () { var e = this, t = []; return this._clazz["extends"].forEach(function (n) { var r = e.mw.classForName(n.typeName); r && t.push(r); }), t; }, e.prototype.getAllSuperTypes = function () { var e = this, t = []; return this._clazz["extends"].forEach(function (n) { var r = e.mw.classForName(n.typeName); if (r) {
                var i = r.getAllSuperTypes();
                t.push(r), t.concat(i);
            } }), u.unique(t); }, e.prototype.annotationOverridings = function () { return this._clazz.annotationOverridings; }, e; }(), h = function () { function e() { } return e.prototype.members = function () { return []; }, e.prototype.methods = function () { return []; }, e.prototype.isSubTypeOf = function (e) { return !1; }, e.prototype.getSuperTypes = function () { return []; }, e.prototype.getAllSuperTypes = function () { return []; }, e.prototype.name = function () { return null; }, e.prototype.constraints = function () { return []; }, e.prototype.typeMeta = function () { return []; }, e.prototype.getModule = function () { throw new Error("Not implemented"); }, e.prototype.annotationOverridings = function () { return {}; }, e; }(), d = function (e) { function t(t, n) { e.call(this), this._clazz = t, this.mw = n; } return a(t, e), t.prototype.getModule = function () { return this.mw; }, t.prototype.values = function () { return this._clazz.members; }, t.prototype.name = function () { return this._clazz.name; }, t; }(h), y = function (e) { function t(t, n) { e.call(this), this._clazz = t, this.mw = n; } return a(t, e), t.prototype.elements = function () { return this._clazz; }, t.prototype.name = function () { return this._clazz.map(function (e) { return e.name(); }).join("|"); }, t; }(h), v = function () { function e(e) { var t = this; this._univers = e, this.name2Class = {}, this.namespaceToMod = {}, this._classes = [], e.classes.forEach(function (e) { var n = new m(e, t); t._classes.push(n), t.name2Class[e.name] = n, e.moduleName && (t.name2Class[e.moduleName + "." + e.name] = n); }), e.enumDeclarations.forEach(function (e) { var n = new d(e, t); t._classes.push(n), t.name2Class[e.name] = n; }); } return e.prototype.typeFor = function (e, t) { var n = this; switch (e.typeKind) {
                case o.TypeKind.BASIC:
                    var r = e, i = r.typeName;
                    "string" == i && (i = "StringType"), "number" == i && (i = "NumberType"), "boolean" == i && (i = "BooleanType"), "any" == i && (i = "AnyType");
                    var a = u.indexOf(t.typeArgs(), i);
                    if (-1 != a) {
                        var s = t.typConstraints()[a];
                        return s ? s : this.classForName("ValueType");
                    }
                    return this.classForName(i);
                case o.TypeKind.UNION:
                    var l = e;
                    return new y(l.options.map(function (e) { return n.typeFor(e, t); }), this);
                case o.TypeKind.ARRAY:
                    var p = e;
                    return this.typeFor(p.base, t);
            } return null; }, e.prototype.path = function () { return this._univers.name; }, e.prototype.classForName = function (e, t) { var n = this; if (void 0 === t && (t = {}), !e)
                return null; var r = this.name2Class[e]; if (!r && !t[this.path()]) {
                t[this.path()] = this;
                var i = e.indexOf(".");
                if (-1 != i) {
                    var a = this.namespaceToMod[e.substring(0, i)];
                    if (!a)
                        throw new Error;
                    return a.classForName(e.substring(i + 1), t);
                }
                Object.keys(this.namespaceToMod).forEach(function (i) { if ("MetaModel" != i) {
                    var a = n.namespaceToMod[i].classForName(e, t);
                    a && (r = a);
                } });
            } return r; }, e.prototype.classes = function () { return this._classes; }, e; }(), g = function (e, t) { if (e) {
                var n;
                if (e instanceof y) {
                    throw new Error("Union type support was removed from definition system");
                }
                return n = t.type(e.name());
            } }, A = function (e, t) { var n = e.classForName("ValueType"); e.classes().forEach(function (e) { if (e instanceof d) {
                var r = new s.EnumType(e.name(), t, e.getModule().path());
                return r.values = e.values(), void t.register(r);
            } if (e.isSubTypeOf(n)) {
                var i = e.getAllSuperTypes();
                i.push(e);
                var a = null;
                if (i.forEach(function (e) { var t = e.getExtendsClauses(); t.forEach(function (e) { if (e.typeKind == o.TypeKind.BASIC) {
                    var t = e;
                    if ("Reference" == t.basicName) {
                        var n = t.typeArguments[0];
                        a = n.typeName;
                        var r = a.indexOf(".");
                        -1 != r && (a = a.substring(r + 1));
                    }
                } }); }), a) {
                    var u = new s.ReferenceType(e.name(), e.getModule().path(), a, t);
                    u.setBuiltIn(!0), t.register(u);
                }
                else {
                    var l = new s.ValueType(e.name(), t, e.getModule().path());
                    l.setBuiltIn(!0), t.register(l);
                }
            }
            else {
                var p = new s.NodeClass(e.name(), t, e.getModule().path());
                p.setBuiltIn(!0), t.register(p);
            } }); }, T = function (e, t) { e.classes().forEach(function (e) { e.getSuperTypes().forEach(function (n) { var r = t.type(e.name()), i = t.type(n.name()); if (!r || !i) {
                var r = t.type(e.name()), i = t.type(n.name());
                throw new Error;
            } t.registerSuperClass(r, i); }); }); }, E = function (e, t) { e.classes().forEach(function (e) { var n = t.type(e.name()); e.typeMeta().forEach(function (n) { var r = g(e, t); l.handleTypeAnnotation(n, r); }), e.members().forEach(function (e) { var r = e.range(), a = g(r, t); null == a && console.log(r + ":" + e.name()); var o = e.annotations().map(function (e) { return e.name; }).indexOf("MetaModel.customHandling") >= 0; i(e, n, a, o); }), Object.keys(e.annotationOverridings()).forEach(function (r) { var a = [].concat(e.annotationOverridings()[r]), o = {}; a.forEach(function (e) { return o[e.name] = !0; }); for (var s, u = e.getSuperTypes(), l = {}, p = 0; p < u.length; p++) {
                var c = u[p];
                if (!l[c.name()]) {
                    l[c.name()] = !0, c.getSuperTypes().forEach(function (e) { return u.push(e); });
                    var f = c.annotationOverridings()[r];
                    if (f)
                        f.filter(function (e) { return !o[e.name]; }).forEach(function (e) { o[e.name] = !0, a.push(e); });
                    else
                        for (var m = c.members(), h = 0; h < m.length; h++) {
                            var d = m[h];
                            if (d.name() == r) {
                                s = d;
                                break;
                            }
                        }
                    if (s) {
                        var y = s.annotations();
                        y.filter(function (e) { return !o[e.name]; }).forEach(function (e) { o[e.name] = !0, a.push(e); });
                        break;
                    }
                }
            } if (s) {
                var v = s.range(), A = g(v, t);
                null == A && console.log(v + ":" + e.name()), i(s, n, A, !1, a);
            } }), e.methods().forEach(function (e) { }), e.constraints().forEach(function (e) { if (e.value().isCallConstraint)
                throw new Error; var t = e.value(); n.addRequirement(e.name(), "" + t.value); }); }), t.types().forEach(function (e) { var n = e; n.getAdapter(p.RAMLService).getAliases().forEach(function (e) { return t.registerAlias(e, n); }); }); }, S = function (e, t, n, r) { if (-1 == e.name.indexOf("metamodel.ts")) {
                if (r[e.name])
                    return r[e.name];
                var i = new v(e);
                return n[e.name] = i, r[e.name] = i, Object.keys(e.imports).forEach(function (a) { var o = e.imports[a]; if (n[o.name])
                    return void (i.namespaceToMod[a] = n[o.name]); var s = S(o, t, n, r); i.namespaceToMod[a] = s; }), n[e.name] = null, i;
            } };
            t.toDefSystem = r;
            var N = function (e, t, n) { n || (n = e.annotations()), n.forEach(function (e) { var n = e.name.substring(e.name.lastIndexOf(".") + 1); l.annotationHandlers[n] || console.log("Can not find handler for:"), l.annotationHandlers[n](e, t); }); };
        }, function (e, t, n) {
            "use strict";
            var r = { Universe08: { GlobalSchema: { name: "GlobalSchema", properties: { key: { name: "key", range: "StringType", domain: "GlobalSchema" }, value: { name: "value", range: "SchemaString", domain: "GlobalSchema" } } }, Api: { name: "Api", properties: { title: { name: "title", range: "StringType", domain: "Api" }, version: { name: "version", range: "StringType", domain: "Api" }, baseUri: { name: "baseUri", range: "FullUriTemplateString", domain: "Api" }, baseUriParameters: { name: "baseUriParameters", range: "Parameter", domain: "Api" }, uriParameters: { name: "uriParameters", range: "Parameter", domain: "Api" }, protocols: { name: "protocols", range: "StringType", domain: "Api" }, mediaType: { name: "mediaType", range: "MimeType", domain: "Api" }, schemas: { name: "schemas", range: "GlobalSchema", domain: "Api" }, traits: { name: "traits", range: "Trait", domain: "Api" }, securedBy: { name: "securedBy", range: "SecuritySchemeRef", domain: "Api" }, securitySchemes: { name: "securitySchemes", range: "AbstractSecurityScheme", domain: "Api" }, resourceTypes: { name: "resourceTypes", range: "ResourceType", domain: "Api" }, resources: { name: "resources", range: "Resource", domain: "Api" }, documentation: { name: "documentation", range: "DocumentationItem", domain: "Api" }, RAMLVersion: { name: "RAMLVersion" } } }, DocumentationItem: { name: "DocumentationItem", properties: { title: { name: "title", range: "StringType", domain: "DocumentationItem" }, content: { name: "content", range: "MarkdownString", domain: "DocumentationItem" } } }, ValueType: { name: "ValueType", properties: {} }, StringType: { name: "StringType", properties: {} }, AnyType: { name: "AnyType", properties: {} }, NumberType: { name: "NumberType", properties: {} }, BooleanType: { name: "BooleanType", properties: {} }, Referencable: { name: "Referencable", properties: {} }, Reference: { name: "Reference", properties: { structuredValue: { name: "structuredValue" }, name: { name: "name" } } }, DeclaresDynamicType: { name: "DeclaresDynamicType", properties: {} }, UriTemplate: { name: "UriTemplate", properties: {} }, RelativeUriString: { name: "RelativeUriString", properties: {} }, FullUriTemplateString: { name: "FullUriTemplateString", properties: {} }, FixedUri: { name: "FixedUri", properties: {} }, MarkdownString: { name: "MarkdownString", properties: {} }, SchemaString: { name: "SchemaString", properties: {} }, JSonSchemaString: { name: "JSonSchemaString", properties: {} }, XMLSchemaString: { name: "XMLSchemaString", properties: {} }, ExampleString: { name: "ExampleString", properties: {} }, StatusCodeString: { name: "StatusCodeString", properties: {} }, JSONExample: { name: "JSONExample", properties: {} }, XMLExample: { name: "XMLExample", properties: {} }, TypeInstance: { name: "TypeInstance", properties: { properties: { name: "properties", range: "TypeInstanceProperty", domain: "TypeInstance" }, isScalar: { name: "isScalar", range: "BooleanType", domain: "TypeInstance" }, value: { name: "value", range: "AnyType", domain: "TypeInstance" } } }, TypeInstanceProperty: { name: "TypeInstanceProperty", properties: { name: { name: "name", range: "StringType", domain: "TypeInstanceProperty" }, value: { name: "value", range: "TypeInstance", domain: "TypeInstanceProperty" }, values: { name: "values", range: "TypeInstance", domain: "TypeInstanceProperty" }, isArray: { name: "isArray", range: "BooleanType", domain: "TypeInstanceProperty" } } }, RAMLSimpleElement: { name: "RAMLSimpleElement", properties: {} }, Parameter: { name: "Parameter", properties: { name: { name: "name", range: "StringType", domain: "Parameter" }, displayName: { name: "displayName", range: "StringType", domain: "Parameter" }, type: { name: "type", range: "StringType", domain: "Parameter" }, location: { name: "location", range: "ParameterLocation", domain: "Parameter" }, required: { name: "required", range: "BooleanType", domain: "Parameter" }, "default": { name: "default", range: "AnyType", domain: "Parameter" }, example: { name: "example", range: "StringType", domain: "Parameter" }, repeat: { name: "repeat", range: "BooleanType", domain: "Parameter" }, description: { name: "description", range: "MarkdownString", domain: "Parameter" }, parametrizedProperties: { name: "parametrizedProperties" } } }, StringTypeDeclaration: { name: "StringTypeDeclaration", properties: { name: { name: "name", range: "StringType", domain: "Parameter" }, displayName: { name: "displayName", range: "StringType", domain: "Parameter" }, type: { name: "type", range: "StringType", domain: "Parameter" }, location: { name: "location", range: "ParameterLocation", domain: "Parameter" }, required: { name: "required", range: "BooleanType", domain: "Parameter" }, "default": { name: "default", range: "AnyType", domain: "Parameter" }, example: { name: "example", range: "StringType", domain: "Parameter" }, repeat: { name: "repeat", range: "BooleanType", domain: "Parameter" }, description: { name: "description", range: "MarkdownString", domain: "Parameter" }, pattern: { name: "pattern", range: "StringType", domain: "StringTypeDeclaration" }, "enum": { name: "enum", range: "StringType", domain: "StringTypeDeclaration" }, minLength: { name: "minLength", range: "NumberType", domain: "StringTypeDeclaration" }, maxLength: { name: "maxLength", range: "NumberType", domain: "StringTypeDeclaration" } } }, BooleanTypeDeclaration: { name: "BooleanTypeDeclaration", properties: { name: { name: "name", range: "StringType", domain: "Parameter" }, displayName: { name: "displayName", range: "StringType", domain: "Parameter" }, type: { name: "type", range: "StringType", domain: "Parameter" }, location: { name: "location", range: "ParameterLocation", domain: "Parameter" }, required: { name: "required", range: "BooleanType", domain: "Parameter" }, "default": { name: "default", range: "AnyType", domain: "Parameter" }, example: { name: "example", range: "StringType", domain: "Parameter" }, repeat: { name: "repeat", range: "BooleanType", domain: "Parameter" }, description: { name: "description", range: "MarkdownString", domain: "Parameter" } } }, NumberTypeDeclaration: { name: "NumberTypeDeclaration", properties: { name: { name: "name", range: "StringType", domain: "Parameter" }, displayName: { name: "displayName", range: "StringType", domain: "Parameter" }, type: { name: "type", range: "StringType", domain: "Parameter" }, location: { name: "location", range: "ParameterLocation", domain: "Parameter" }, required: { name: "required", range: "BooleanType", domain: "Parameter" }, "default": { name: "default", range: "AnyType", domain: "Parameter" }, example: { name: "example", range: "StringType", domain: "Parameter" }, repeat: { name: "repeat", range: "BooleanType", domain: "Parameter" }, description: { name: "description", range: "MarkdownString", domain: "Parameter" }, minimum: { name: "minimum", range: "NumberType", domain: "NumberTypeDeclaration" }, maximum: { name: "maximum", range: "NumberType", domain: "NumberTypeDeclaration" } } }, IntegerTypeDeclaration: { name: "IntegerTypeDeclaration", properties: { name: { name: "name", range: "StringType", domain: "Parameter" }, displayName: { name: "displayName", range: "StringType", domain: "Parameter" }, type: { name: "type", range: "StringType", domain: "Parameter" }, location: { name: "location", range: "ParameterLocation", domain: "Parameter" }, required: { name: "required", range: "BooleanType", domain: "Parameter" }, "default": { name: "default", range: "AnyType", domain: "Parameter" }, example: { name: "example", range: "StringType", domain: "Parameter" }, repeat: { name: "repeat", range: "BooleanType", domain: "Parameter" }, description: { name: "description", range: "MarkdownString", domain: "Parameter" }, minimum: { name: "minimum", range: "NumberType", domain: "NumberTypeDeclaration" }, maximum: { name: "maximum", range: "NumberType", domain: "NumberTypeDeclaration" } } }, DateTypeDeclaration: { name: "DateTypeDeclaration", properties: { name: { name: "name", range: "StringType", domain: "Parameter" }, displayName: { name: "displayName", range: "StringType", domain: "Parameter" }, type: { name: "type", range: "StringType", domain: "Parameter" }, location: { name: "location", range: "ParameterLocation", domain: "Parameter" }, required: { name: "required", range: "BooleanType", domain: "Parameter" }, "default": { name: "default", range: "AnyType", domain: "Parameter" }, example: { name: "example", range: "StringType", domain: "Parameter" }, repeat: { name: "repeat", range: "BooleanType", domain: "Parameter" }, description: { name: "description", range: "MarkdownString", domain: "Parameter" } } }, FileTypeDeclaration: { name: "FileTypeDeclaration", properties: { name: { name: "name", range: "StringType", domain: "Parameter" }, displayName: { name: "displayName", range: "StringType", domain: "Parameter" }, type: { name: "type", range: "StringType", domain: "Parameter" }, location: { name: "location", range: "ParameterLocation", domain: "Parameter" }, required: { name: "required", range: "BooleanType", domain: "Parameter" }, "default": { name: "default", range: "AnyType", domain: "Parameter" }, example: { name: "example", range: "StringType", domain: "Parameter" }, repeat: { name: "repeat", range: "BooleanType", domain: "Parameter" }, description: { name: "description", range: "MarkdownString", domain: "Parameter" } } }, ParameterLocation: { name: "ParameterLocation", properties: {} }, MimeType: { name: "MimeType", properties: {} }, BodyLike: { name: "BodyLike", properties: { name: { name: "name", range: "StringType", domain: "BodyLike" }, schema: { name: "schema", range: "SchemaString", domain: "BodyLike" }, example: { name: "example", range: "ExampleString", domain: "BodyLike" }, formParameters: { name: "formParameters", range: "Parameter", domain: "BodyLike" }, description: { name: "description", range: "MarkdownString", domain: "BodyLike" }, schemaContent: { name: "schemaContent" }, parametrizedProperties: { name: "parametrizedProperties" } } }, XMLBody: { name: "XMLBody", properties: { name: { name: "name", range: "StringType", domain: "BodyLike" }, schema: { name: "schema", range: "XMLSchemaString", domain: "XMLBody" }, example: { name: "example", range: "ExampleString", domain: "BodyLike" }, formParameters: { name: "formParameters", range: "Parameter", domain: "BodyLike" }, description: { name: "description", range: "MarkdownString", domain: "BodyLike" } } }, JSONBody: { name: "JSONBody", properties: { name: { name: "name", range: "StringType", domain: "BodyLike" }, schema: { name: "schema", range: "JSonSchemaString", domain: "JSONBody" }, example: { name: "example", range: "ExampleString", domain: "BodyLike" }, formParameters: { name: "formParameters", range: "Parameter", domain: "BodyLike" }, description: { name: "description", range: "MarkdownString", domain: "BodyLike" } } }, Response: { name: "Response", properties: { code: { name: "code", range: "StatusCodeString", domain: "Response" }, headers: { name: "headers", range: "Parameter", domain: "Response" }, body: { name: "body", range: "BodyLike", domain: "Response" }, description: { name: "description", range: "MarkdownString", domain: "Response" }, parametrizedProperties: { name: "parametrizedProperties" } } }, Resource: { name: "Resource", properties: { relativeUri: { name: "relativeUri", range: "RelativeUriString", domain: "Resource" }, type: { name: "type", range: "ResourceTypeRef", domain: "Resource" }, is: { name: "is", range: "TraitRef", domain: "Resource" }, securedBy: { name: "securedBy", range: "SecuritySchemeRef", domain: "Resource" }, uriParameters: { name: "uriParameters", range: "Parameter", domain: "Resource" }, methods: { name: "methods", range: "Method", domain: "Resource" }, resources: { name: "resources", range: "Resource", domain: "Resource" }, displayName: { name: "displayName", range: "StringType", domain: "Resource" }, baseUriParameters: { name: "baseUriParameters", range: "Parameter", domain: "Resource" }, description: { name: "description", range: "MarkdownString", domain: "Resource" } } }, ResourceTypeRef: { name: "ResourceTypeRef", properties: { resourceType: { name: "resourceType" } } }, ResourceType: { name: "ResourceType", properties: { name: { name: "name", range: "StringType", domain: "ResourceType" }, usage: { name: "usage", range: "StringType", domain: "ResourceType" }, methods: { name: "methods", range: "Method", domain: "ResourceType" }, is: { name: "is", range: "TraitRef", domain: "ResourceType" }, type: { name: "type", range: "ResourceTypeRef", domain: "ResourceType" }, securedBy: { name: "securedBy", range: "SecuritySchemeRef", domain: "ResourceType" }, uriParameters: { name: "uriParameters", range: "Parameter", domain: "ResourceType" }, displayName: { name: "displayName", range: "StringType", domain: "ResourceType" }, baseUriParameters: { name: "baseUriParameters", range: "Parameter", domain: "ResourceType" }, description: { name: "description", range: "MarkdownString", domain: "ResourceType" }, parametrizedProperties: { name: "parametrizedProperties" } } }, MethodBase: { name: "MethodBase", properties: { responses: { name: "responses", range: "Response", domain: "MethodBase" }, body: { name: "body", range: "BodyLike", domain: "MethodBase" }, protocols: { name: "protocols", range: "StringType", domain: "MethodBase" }, securedBy: { name: "securedBy", range: "SecuritySchemeRef", domain: "MethodBase" }, baseUriParameters: { name: "baseUriParameters", range: "Parameter", domain: "MethodBase" }, queryParameters: { name: "queryParameters", range: "Parameter", domain: "MethodBase" }, headers: { name: "headers", range: "Parameter", domain: "MethodBase" }, description: { name: "description", range: "MarkdownString", domain: "MethodBase" } } }, Method: { name: "Method", properties: { responses: { name: "responses", range: "Response", domain: "MethodBase" }, body: { name: "body", range: "BodyLike", domain: "MethodBase" }, protocols: { name: "protocols", range: "StringType", domain: "MethodBase" }, securedBy: { name: "securedBy", range: "SecuritySchemeRef", domain: "MethodBase" }, baseUriParameters: { name: "baseUriParameters", range: "Parameter", domain: "MethodBase" }, queryParameters: { name: "queryParameters", range: "Parameter", domain: "MethodBase" }, headers: { name: "headers", range: "Parameter", domain: "MethodBase" }, description: { name: "description", range: "MarkdownString", domain: "MethodBase" }, method: { name: "method", range: "StringType", domain: "Method" }, is: { name: "is", range: "TraitRef", domain: "Method" }, parametrizedProperties: { name: "parametrizedProperties" } } }, Trait: { name: "Trait", properties: { responses: { name: "responses", range: "Response", domain: "MethodBase" }, body: { name: "body", range: "BodyLike", domain: "MethodBase" }, protocols: { name: "protocols", range: "StringType", domain: "MethodBase" }, securedBy: { name: "securedBy", range: "SecuritySchemeRef", domain: "MethodBase" }, baseUriParameters: { name: "baseUriParameters", range: "Parameter", domain: "MethodBase" }, queryParameters: { name: "queryParameters", range: "Parameter", domain: "MethodBase" }, headers: { name: "headers", range: "Parameter", domain: "MethodBase" }, description: { name: "description", range: "MarkdownString", domain: "MethodBase" }, name: { name: "name", range: "StringType", domain: "Trait" }, usage: { name: "usage", range: "StringType", domain: "Trait" }, displayName: { name: "displayName", range: "StringType", domain: "Trait" }, parametrizedProperties: { name: "parametrizedProperties" } } }, TraitRef: { name: "TraitRef", properties: { trait: { name: "trait" } } }, SecuritySchemePart: { name: "SecuritySchemePart", properties: { responses: { name: "responses", range: "Response", domain: "SecuritySchemePart" }, body: { name: "body", range: "BodyLike", domain: "MethodBase" }, protocols: { name: "protocols", range: "StringType", domain: "MethodBase" }, securedBy: { name: "securedBy", range: "SecuritySchemeRef", domain: "MethodBase" }, baseUriParameters: { name: "baseUriParameters", range: "Parameter", domain: "MethodBase" }, queryParameters: { name: "queryParameters", range: "Parameter", domain: "SecuritySchemePart" }, headers: { name: "headers", range: "Parameter", domain: "SecuritySchemePart" }, description: { name: "description", range: "MarkdownString", domain: "SecuritySchemePart" }, displayName: { name: "displayName", range: "StringType", domain: "SecuritySchemePart" }, is: { name: "is", range: "TraitRef", domain: "SecuritySchemePart" } } }, SecuritySchemeSettings: { name: "SecuritySchemeSettings", properties: {} }, AbstractSecurityScheme: { name: "AbstractSecurityScheme", properties: { name: { name: "name", range: "StringType", domain: "AbstractSecurityScheme" }, type: { name: "type", range: "StringType", domain: "AbstractSecurityScheme" }, description: { name: "description", range: "MarkdownString", domain: "AbstractSecurityScheme" }, describedBy: { name: "describedBy", range: "SecuritySchemePart", domain: "AbstractSecurityScheme" }, settings: { name: "settings", range: "SecuritySchemeSettings", domain: "AbstractSecurityScheme" } } }, SecuritySchemeRef: { name: "SecuritySchemeRef", properties: { securitySchemeName: { name: "securitySchemeName" }, securityScheme: { name: "securityScheme" } } }, OAuth1SecuritySchemeSettings: { name: "OAuth1SecuritySchemeSettings", properties: { requestTokenUri: { name: "requestTokenUri", range: "FixedUri", domain: "OAuth1SecuritySchemeSettings" }, authorizationUri: { name: "authorizationUri", range: "FixedUri", domain: "OAuth1SecuritySchemeSettings" }, tokenCredentialsUri: { name: "tokenCredentialsUri", range: "FixedUri", domain: "OAuth1SecuritySchemeSettings" } } }, OAuth2SecuritySchemeSettings: { name: "OAuth2SecuritySchemeSettings", properties: { accessTokenUri: { name: "accessTokenUri", range: "FixedUri", domain: "OAuth2SecuritySchemeSettings" }, authorizationUri: { name: "authorizationUri", range: "FixedUri", domain: "OAuth2SecuritySchemeSettings" }, authorizationGrants: { name: "authorizationGrants", range: "StringType", domain: "OAuth2SecuritySchemeSettings" }, scopes: { name: "scopes", range: "StringType", domain: "OAuth2SecuritySchemeSettings" } } }, OAuth2SecurityScheme: { name: "OAuth2SecurityScheme", properties: { name: { name: "name", range: "StringType", domain: "AbstractSecurityScheme" }, type: { name: "type", range: "StringType", domain: "AbstractSecurityScheme" }, description: { name: "description", range: "MarkdownString", domain: "AbstractSecurityScheme" }, describedBy: { name: "describedBy", range: "SecuritySchemePart", domain: "AbstractSecurityScheme" }, settings: { name: "settings", range: "OAuth2SecuritySchemeSettings", domain: "OAuth2SecurityScheme" } } }, OAuth1SecurityScheme: { name: "OAuth1SecurityScheme", properties: { name: { name: "name", range: "StringType", domain: "AbstractSecurityScheme" }, type: { name: "type", range: "StringType", domain: "AbstractSecurityScheme" }, description: { name: "description", range: "MarkdownString", domain: "AbstractSecurityScheme" }, describedBy: { name: "describedBy", range: "SecuritySchemePart", domain: "AbstractSecurityScheme" }, settings: { name: "settings", range: "OAuth1SecuritySchemeSettings", domain: "OAuth1SecurityScheme" } } }, BasicSecurityScheme: { name: "BasicSecurityScheme", properties: { name: { name: "name", range: "StringType", domain: "AbstractSecurityScheme" }, type: { name: "type", range: "StringType", domain: "AbstractSecurityScheme" }, description: { name: "description", range: "MarkdownString", domain: "AbstractSecurityScheme" }, describedBy: { name: "describedBy", range: "SecuritySchemePart", domain: "AbstractSecurityScheme" }, settings: { name: "settings", range: "SecuritySchemeSettings", domain: "AbstractSecurityScheme" } } }, DigestSecurityScheme: { name: "DigestSecurityScheme", properties: { name: { name: "name", range: "StringType", domain: "AbstractSecurityScheme" }, type: { name: "type", range: "StringType", domain: "AbstractSecurityScheme" }, description: { name: "description", range: "MarkdownString", domain: "AbstractSecurityScheme" }, describedBy: { name: "describedBy", range: "SecuritySchemePart", domain: "AbstractSecurityScheme" }, settings: { name: "settings", range: "SecuritySchemeSettings", domain: "AbstractSecurityScheme"
                            } } }, CustomSecurityScheme: { name: "CustomSecurityScheme", properties: { name: { name: "name", range: "StringType", domain: "AbstractSecurityScheme" }, type: { name: "type", range: "StringType", domain: "AbstractSecurityScheme" }, description: { name: "description", range: "MarkdownString", domain: "AbstractSecurityScheme" }, describedBy: { name: "describedBy", range: "SecuritySchemePart", domain: "AbstractSecurityScheme" }, settings: { name: "settings", range: "SecuritySchemeSettings", domain: "AbstractSecurityScheme" } } } }, Universe10: { Library: { name: "Library", properties: { annotations: { name: "annotations" }, uses: { name: "uses" }, schemas: { name: "schemas" }, types: { name: "types" }, traits: { name: "traits" }, resourceTypes: { name: "resourceTypes" }, annotationTypes: { name: "annotationTypes" }, securitySchemes: { name: "securitySchemes" }, usage: { name: "usage" }, name: { name: "name" } } }, LibraryBase: { name: "LibraryBase", properties: { annotations: { name: "annotations" }, uses: { name: "uses" }, schemas: { name: "schemas" }, types: { name: "types" }, traits: { name: "traits" }, resourceTypes: { name: "resourceTypes" }, annotationTypes: { name: "annotationTypes" }, securitySchemes: { name: "securitySchemes" } } }, Api: { name: "Api", properties: { annotations: { name: "annotations" }, uses: { name: "uses" }, schemas: { name: "schemas" }, types: { name: "types" }, traits: { name: "traits" }, resourceTypes: { name: "resourceTypes" }, annotationTypes: { name: "annotationTypes" }, securitySchemes: { name: "securitySchemes" }, title: { name: "title" }, description: { name: "description" }, version: { name: "version" }, baseUri: { name: "baseUri" }, baseUriParameters: { name: "baseUriParameters" }, protocols: { name: "protocols" }, mediaType: { name: "mediaType" }, securedBy: { name: "securedBy" }, resources: { name: "resources" }, documentation: { name: "documentation" }, RAMLVersion: { name: "RAMLVersion", range: "StringType", domain: "Api" } } }, Overlay: { name: "Overlay", properties: { annotations: { name: "annotations" }, uses: { name: "uses" }, schemas: { name: "schemas" }, types: { name: "types" }, traits: { name: "traits" }, resourceTypes: { name: "resourceTypes" }, annotationTypes: { name: "annotationTypes" }, securitySchemes: { name: "securitySchemes" }, title: { name: "title" }, description: { name: "description" }, version: { name: "version" }, baseUri: { name: "baseUri" }, baseUriParameters: { name: "baseUriParameters" }, protocols: { name: "protocols" }, mediaType: { name: "mediaType" }, securedBy: { name: "securedBy" }, resources: { name: "resources" }, documentation: { name: "documentation" }, usage: { name: "usage" }, "extends": { name: "extends" } } }, Extension: { name: "Extension", properties: { annotations: { name: "annotations" }, uses: { name: "uses" }, schemas: { name: "schemas" }, types: { name: "types" }, traits: { name: "traits" }, resourceTypes: { name: "resourceTypes" }, annotationTypes: { name: "annotationTypes" }, securitySchemes: { name: "securitySchemes" }, title: { name: "title" }, description: { name: "description" }, version: { name: "version" }, baseUri: { name: "baseUri" }, baseUriParameters: { name: "baseUriParameters" }, protocols: { name: "protocols" }, mediaType: { name: "mediaType" }, securedBy: { name: "securedBy" }, resources: { name: "resources" }, documentation: { name: "documentation" }, usage: { name: "usage" }, "extends": { name: "extends" } } }, UsesDeclaration: { name: "UsesDeclaration", properties: { annotations: { name: "annotations" }, key: { name: "key" }, value: { name: "value" } } }, FragmentDeclaration: { name: "FragmentDeclaration", properties: { annotations: { name: "annotations" }, uses: { name: "uses" } } }, DocumentationItem: { name: "DocumentationItem", properties: { annotations: { name: "annotations" }, title: { name: "title" }, content: { name: "content" } } }, ValueType: { name: "ValueType", properties: { annotations: { name: "annotations" } } }, StringType: { name: "StringType", properties: { annotations: { name: "annotations" } } }, AnyType: { name: "AnyType", properties: { annotations: { name: "annotations" } } }, NumberType: { name: "NumberType", properties: { annotations: { name: "annotations" } } }, IntegerType: { name: "IntegerType", properties: { annotations: { name: "annotations" } } }, NullType: { name: "NullType", properties: { annotations: { name: "annotations" } } }, TimeOnlyType: { name: "TimeOnlyType", properties: { annotations: { name: "annotations" } } }, DateOnlyType: { name: "DateOnlyType", properties: { annotations: { name: "annotations" } } }, DateTimeOnlyType: { name: "DateTimeOnlyType", properties: { annotations: { name: "annotations" } } }, DateTimeType: { name: "DateTimeType", properties: { annotations: { name: "annotations" } } }, FileType: { name: "FileType", properties: { annotations: { name: "annotations" } } }, BooleanType: { name: "BooleanType", properties: { annotations: { name: "annotations" } } }, Reference: { name: "Reference", properties: { annotations: { name: "annotations" }, structuredValue: { name: "structuredValue", range: "TypeInstance", domain: "Reference" }, name: { name: "name", range: "StringType", domain: "Reference" } } }, UriTemplate: { name: "UriTemplate", properties: { annotations: { name: "annotations" } } }, StatusCodeString: { name: "StatusCodeString", properties: { annotations: { name: "annotations" } } }, RelativeUriString: { name: "RelativeUriString", properties: { annotations: { name: "annotations" } } }, FullUriTemplateString: { name: "FullUriTemplateString", properties: { annotations: { name: "annotations" } } }, FixedUriString: { name: "FixedUriString", properties: { annotations: { name: "annotations" } } }, ContentType: { name: "ContentType", properties: { annotations: { name: "annotations" } } }, MarkdownString: { name: "MarkdownString", properties: { annotations: { name: "annotations" } } }, SchemaString: { name: "SchemaString", properties: { annotations: { name: "annotations" } } }, ExampleSpec: { name: "ExampleSpec", properties: { annotations: { name: "annotations" }, value: { name: "value" }, strict: { name: "strict" }, name: { name: "name" }, displayName: { name: "displayName" }, description: { name: "description" }, structuredValue: { name: "structuredValue", range: "TypeInstance", domain: "ExampleSpec" } } }, TypeDeclaration: { name: "TypeDeclaration", properties: { annotations: { name: "annotations" }, name: { name: "name" }, displayName: { name: "displayName" }, facets: { name: "facets" }, schema: { name: "schema" }, type: { name: "type" }, location: { name: "location" }, locationKind: { name: "locationKind" }, "default": { name: "default" }, example: { name: "example" }, examples: { name: "examples" }, required: { name: "required" }, description: { name: "description" }, xml: { name: "xml" }, allowedTargets: { name: "allowedTargets" }, isAnnotation: { name: "isAnnotation" }, fixedFacets: { name: "fixedFacets", range: "TypeInstance", domain: "TypeDeclaration" }, structuredType: { name: "structuredType", range: "TypeInstance", domain: "TypeDeclaration" }, parametrizedProperties: { name: "parametrizedProperties", range: "TypeInstance", domain: "TypeDeclaration" } } }, XMLFacetInfo: { name: "XMLFacetInfo", properties: { annotations: { name: "annotations" }, attribute: { name: "attribute" }, wrapped: { name: "wrapped" }, name: { name: "name" }, namespace: { name: "namespace" }, prefix: { name: "prefix" } } }, ArrayTypeDeclaration: { name: "ArrayTypeDeclaration", properties: { annotations: { name: "annotations" }, name: { name: "name" }, displayName: { name: "displayName" }, facets: { name: "facets" }, schema: { name: "schema" }, type: { name: "type" }, location: { name: "location" }, locationKind: { name: "locationKind" }, "default": { name: "default" }, example: { name: "example" }, examples: { name: "examples" }, required: { name: "required" }, description: { name: "description" }, xml: { name: "xml" }, allowedTargets: { name: "allowedTargets" }, isAnnotation: { name: "isAnnotation" }, uniqueItems: { name: "uniqueItems" }, items: { name: "items" }, minItems: { name: "minItems" }, maxItems: { name: "maxItems" }, structuredItems: { name: "structuredItems", range: "TypeInstance", domain: "ArrayTypeDeclaration" } } }, UnionTypeDeclaration: { name: "UnionTypeDeclaration", properties: { annotations: { name: "annotations" }, name: { name: "name" }, displayName: { name: "displayName" }, facets: { name: "facets" }, schema: { name: "schema" }, type: { name: "type" }, location: { name: "location" }, locationKind: { name: "locationKind" }, "default": { name: "default" }, example: { name: "example" }, examples: { name: "examples" }, required: { name: "required" }, description: { name: "description" }, xml: { name: "xml" }, allowedTargets: { name: "allowedTargets" }, isAnnotation: { name: "isAnnotation" } } }, ObjectTypeDeclaration: { name: "ObjectTypeDeclaration", properties: { annotations: { name: "annotations" }, name: { name: "name" }, displayName: { name: "displayName" }, facets: { name: "facets" }, schema: { name: "schema" }, type: { name: "type" }, location: { name: "location" }, locationKind: { name: "locationKind" }, "default": { name: "default" }, example: { name: "example" }, examples: { name: "examples" }, required: { name: "required" }, description: { name: "description" }, xml: { name: "xml" }, allowedTargets: { name: "allowedTargets" }, isAnnotation: { name: "isAnnotation" }, properties: { name: "properties" }, minProperties: { name: "minProperties" }, maxProperties: { name: "maxProperties" }, additionalProperties: { name: "additionalProperties" }, discriminator: { name: "discriminator" }, discriminatorValue: { name: "discriminatorValue" }, "enum": { name: "enum" } } }, StringTypeDeclaration: { name: "StringTypeDeclaration", properties: { annotations: { name: "annotations" }, name: { name: "name" }, displayName: { name: "displayName" }, facets: { name: "facets" }, schema: { name: "schema" }, type: { name: "type" }, location: { name: "location" }, locationKind: { name: "locationKind" }, "default": { name: "default" }, example: { name: "example" }, examples: { name: "examples" }, required: { name: "required" }, description: { name: "description" }, xml: { name: "xml" }, allowedTargets: { name: "allowedTargets" }, isAnnotation: { name: "isAnnotation" }, pattern: { name: "pattern" }, minLength: { name: "minLength" }, maxLength: { name: "maxLength" }, "enum": { name: "enum" } } }, BooleanTypeDeclaration: { name: "BooleanTypeDeclaration", properties: { annotations: { name: "annotations" }, name: { name: "name" }, displayName: { name: "displayName" }, facets: { name: "facets" }, schema: { name: "schema" }, type: { name: "type" }, location: { name: "location" }, locationKind: { name: "locationKind" }, "default": { name: "default" }, example: { name: "example" }, examples: { name: "examples" }, required: { name: "required" }, description: { name: "description" }, xml: { name: "xml" }, allowedTargets: { name: "allowedTargets" }, isAnnotation: { name: "isAnnotation" }, "enum": { name: "enum" } } }, NumberTypeDeclaration: { name: "NumberTypeDeclaration", properties: { annotations: { name: "annotations" }, name: { name: "name" }, displayName: { name: "displayName" }, facets: { name: "facets" }, schema: { name: "schema" }, type: { name: "type" }, location: { name: "location" }, locationKind: { name: "locationKind" }, "default": { name: "default" }, example: { name: "example" }, examples: { name: "examples" }, required: { name: "required" }, description: { name: "description" }, xml: { name: "xml" }, allowedTargets: { name: "allowedTargets" }, isAnnotation: { name: "isAnnotation" }, minimum: { name: "minimum" }, maximum: { name: "maximum" }, "enum": { name: "enum" }, format: { name: "format" }, multipleOf: { name: "multipleOf" } } }, IntegerTypeDeclaration: { name: "IntegerTypeDeclaration", properties: { annotations: { name: "annotations" }, name: { name: "name" }, displayName: { name: "displayName" }, facets: { name: "facets" }, schema: { name: "schema" }, type: { name: "type" }, location: { name: "location" }, locationKind: { name: "locationKind" }, "default": { name: "default" }, example: { name: "example" }, examples: { name: "examples" }, required: { name: "required" }, description: { name: "description" }, xml: { name: "xml" }, allowedTargets: { name: "allowedTargets" }, isAnnotation: { name: "isAnnotation" }, minimum: { name: "minimum" }, maximum: { name: "maximum" }, "enum": { name: "enum" }, format: { name: "format" }, multipleOf: { name: "multipleOf" } } }, DateOnlyTypeDeclaration: { name: "DateOnlyTypeDeclaration", properties: { annotations: { name: "annotations" }, name: { name: "name" }, displayName: { name: "displayName" }, facets: { name: "facets" }, schema: { name: "schema" }, type: { name: "type" }, location: { name: "location" }, locationKind: { name: "locationKind" }, "default": { name: "default" }, example: { name: "example" }, examples: { name: "examples" }, required: { name: "required" }, description: { name: "description" }, xml: { name: "xml" }, allowedTargets: { name: "allowedTargets" }, isAnnotation: { name: "isAnnotation" } } }, TimeOnlyTypeDeclaration: { name: "TimeOnlyTypeDeclaration", properties: { annotations: { name: "annotations" }, name: { name: "name" }, displayName: { name: "displayName" }, facets: { name: "facets" }, schema: { name: "schema" }, type: { name: "type" }, location: { name: "location" }, locationKind: { name: "locationKind" }, "default": { name: "default" }, example: { name: "example" }, examples: { name: "examples" }, required: { name: "required" }, description: { name: "description" }, xml: { name: "xml" }, allowedTargets: { name: "allowedTargets" }, isAnnotation: { name: "isAnnotation" } } }, DateTimeOnlyTypeDeclaration: { name: "DateTimeOnlyTypeDeclaration", properties: { annotations: { name: "annotations" }, name: { name: "name" }, displayName: { name: "displayName" }, facets: { name: "facets" }, schema: { name: "schema" }, type: { name: "type" }, location: { name: "location" }, locationKind: { name: "locationKind" }, "default": { name: "default" }, example: { name: "example" }, examples: { name: "examples" }, required: { name: "required" }, description: { name: "description" }, xml: { name: "xml" }, allowedTargets: { name: "allowedTargets" }, isAnnotation: { name: "isAnnotation" } } }, DateTimeTypeDeclaration: { name: "DateTimeTypeDeclaration", properties: { annotations: { name: "annotations" }, name: { name: "name" }, displayName: { name: "displayName" }, facets: { name: "facets" }, schema: { name: "schema" }, type: { name: "type" }, location: { name: "location" }, locationKind: { name: "locationKind" }, "default": { name: "default" }, example: { name: "example" }, examples: { name: "examples" }, required: { name: "required" }, description: { name: "description" }, xml: { name: "xml" }, allowedTargets: { name: "allowedTargets" }, isAnnotation: { name: "isAnnotation" }, format: { name: "format" } } }, TypeInstance: { name: "TypeInstance", properties: { properties: { name: "properties" }, isScalar: { name: "isScalar" }, value: { name: "value" }, isArray: { name: "isArray" }, items: { name: "items" } } }, TypeInstanceProperty: { name: "TypeInstanceProperty", properties: { name: { name: "name" }, value: { name: "value" }, values: { name: "values" }, isArray: { name: "isArray" } } }, ModelLocation: { name: "ModelLocation", properties: {} }, LocationKind: { name: "LocationKind", properties: {} }, MimeType: { name: "MimeType", properties: { annotations: { name: "annotations" } } }, Response: { name: "Response", properties: { annotations: { name: "annotations" }, code: { name: "code" }, headers: { name: "headers" }, body: { name: "body" }, description: { name: "description" }, parametrizedProperties: { name: "parametrizedProperties", range: "TypeInstance", domain: "Response" } } }, Annotable: { name: "Annotable", properties: { annotations: { name: "annotations" } } }, AnnotationRef: { name: "AnnotationRef", properties: { annotations: { name: "annotations" }, annotation: { name: "annotation", range: "TypeDeclaration", domain: "AnnotationRef" } } }, AnnotationTarget: { name: "AnnotationTarget", properties: { annotations: { name: "annotations" } } }, TraitRef: { name: "TraitRef", properties: { annotations: { name: "annotations" }, trait: { name: "trait", range: "Trait", domain: "TraitRef" } } }, Trait: { name: "Trait", properties: { annotations: { name: "annotations" }, queryParameters: { name: "queryParameters" }, headers: { name: "headers" }, queryString: { name: "queryString" }, responses: { name: "responses" }, body: { name: "body" }, protocols: { name: "protocols" }, is: { name: "is" }, securedBy: { name: "securedBy" }, description: { name: "description" }, displayName: { name: "displayName" }, name: { name: "name" }, usage: { name: "usage" }, parametrizedProperties: { name: "parametrizedProperties", range: "TypeInstance", domain: "Trait" } } }, MethodBase: { name: "MethodBase", properties: { annotations: { name: "annotations" }, queryParameters: { name: "queryParameters" }, headers: { name: "headers" }, queryString: { name: "queryString" }, responses: { name: "responses" }, body: { name: "body" }, protocols: { name: "protocols" }, is: { name: "is" }, securedBy: { name: "securedBy" }, description: { name: "description" }, displayName: { name: "displayName" } } }, Method: { name: "Method", properties: { annotations: { name: "annotations" }, queryParameters: { name: "queryParameters" }, headers: { name: "headers" }, queryString: { name: "queryString" }, responses: { name: "responses" }, body: { name: "body" }, protocols: { name: "protocols" }, is: { name: "is" }, securedBy: { name: "securedBy" }, description: { name: "description" }, displayName: { name: "displayName" }, method: { name: "method" }, parametrizedProperties: { name: "parametrizedProperties", range: "TypeInstance", domain: "Method" } } }, Operation: { name: "Operation", properties: { annotations: { name: "annotations" }, queryParameters: { name: "queryParameters" }, headers: { name: "headers" }, queryString: { name: "queryString" }, responses: { name: "responses" } } }, SecuritySchemePart: { name: "SecuritySchemePart", properties: { annotations: { name: "annotations" }, queryParameters: { name: "queryParameters" }, headers: { name: "headers" }, queryString: { name: "queryString" }, responses: { name: "responses" } } }, SecuritySchemeSettings: { name: "SecuritySchemeSettings", properties: { annotations: { name: "annotations" } } }, OAuth1SecuritySchemeSettings: { name: "OAuth1SecuritySchemeSettings", properties: { annotations: { name: "annotations" }, requestTokenUri: { name: "requestTokenUri" }, authorizationUri: { name: "authorizationUri" }, tokenCredentialsUri: { name: "tokenCredentialsUri" }, signatures: { name: "signatures" } } }, OAuth2SecuritySchemeSettings: { name: "OAuth2SecuritySchemeSettings", properties: { annotations: { name: "annotations" }, accessTokenUri: { name: "accessTokenUri" }, authorizationUri: { name: "authorizationUri" }, authorizationGrants: { name: "authorizationGrants" }, scopes: { name: "scopes" } } }, SecuritySchemeRef: { name: "SecuritySchemeRef", properties: { annotations: { name: "annotations" }, securitySchemeName: { name: "securitySchemeName", range: "StringType", domain: "SecuritySchemeRef" }, securityScheme: { name: "securityScheme", range: "AbstractSecurityScheme", domain: "SecuritySchemeRef" } } }, AbstractSecurityScheme: { name: "AbstractSecurityScheme", properties: { annotations: { name: "annotations" }, name: { name: "name" }, type: { name: "type" }, description: { name: "description" }, describedBy: { name: "describedBy" }, displayName: { name: "displayName" }, settings: { name: "settings" } } }, OAuth2SecurityScheme: { name: "OAuth2SecurityScheme", properties: { annotations: { name: "annotations" }, name: { name: "name" }, type: { name: "type" }, description: { name: "description" }, describedBy: { name: "describedBy" }, displayName: { name: "displayName" }, settings: { name: "settings" } } }, OAuth1SecurityScheme: { name: "OAuth1SecurityScheme", properties: { annotations: { name: "annotations" }, name: { name: "name" }, type: { name: "type" }, description: { name: "description" }, describedBy: { name: "describedBy" }, displayName: { name: "displayName" }, settings: { name: "settings" } } }, PassThroughSecurityScheme: { name: "PassThroughSecurityScheme", properties: { annotations: { name: "annotations" }, name: { name: "name" }, type: { name: "type" }, description: { name: "description" }, describedBy: { name: "describedBy" }, displayName: { name: "displayName" }, settings: { name: "settings" } } }, BasicSecurityScheme: { name: "BasicSecurityScheme", properties: { annotations: { name: "annotations" }, name: { name: "name" }, type: { name: "type" }, description: { name: "description" }, describedBy: { name: "describedBy" }, displayName: { name: "displayName" }, settings: { name: "settings" } } }, DigestSecurityScheme: { name: "DigestSecurityScheme", properties: { annotations: { name: "annotations" }, name: { name: "name" }, type: { name: "type" }, description: { name: "description" }, describedBy: { name: "describedBy" }, displayName: { name: "displayName" }, settings: { name: "settings" } } }, CustomSecurityScheme: { name: "CustomSecurityScheme", properties: { annotations: { name: "annotations" }, name: { name: "name" }, type: { name: "type" }, description: { name: "description" }, describedBy: { name: "describedBy" }, displayName: { name: "displayName" }, settings: { name: "settings" } } }, ResourceTypeRef: { name: "ResourceTypeRef", properties: { annotations: { name: "annotations" }, resourceType: { name: "resourceType", range: "ResourceType", domain: "ResourceTypeRef" } } }, ResourceType: { name: "ResourceType", properties: { annotations: { name: "annotations" }, methods: { name: "methods" }, is: { name: "is" }, type: { name: "type" }, description: { name: "description" }, securedBy: { name: "securedBy" }, uriParameters: { name: "uriParameters" }, displayName: { name: "displayName" }, name: { name: "name" }, usage: { name: "usage" }, parametrizedProperties: { name: "parametrizedProperties", range: "TypeInstance", domain: "ResourceType" } } }, ResourceBase: { name: "ResourceBase", properties: { annotations: { name: "annotations" }, methods: { name: "methods" }, is: { name: "is" }, type: { name: "type" }, description: { name: "description" }, securedBy: { name: "securedBy" }, uriParameters: { name: "uriParameters" } } }, Resource: { name: "Resource", properties: { annotations: { name: "annotations" }, methods: { name: "methods" }, is: { name: "is" }, type: { name: "type" }, description: { name: "description" }, securedBy: { name: "securedBy" }, uriParameters: { name: "uriParameters" }, relativeUri: { name: "relativeUri" }, displayName: { name: "displayName" }, resources: { name: "resources" } } }, FileTypeDeclaration: { name: "FileTypeDeclaration", properties: { annotations: { name: "annotations" }, name: { name: "name" }, displayName: { name: "displayName" }, facets: { name: "facets" }, schema: { name: "schema" }, type: { name: "type" }, location: { name: "location" }, locationKind: { name: "locationKind" }, "default": { name: "default" }, example: { name: "example" }, examples: { name: "examples" }, required: { name: "required" }, description: { name: "description" }, xml: { name: "xml" }, allowedTargets: { name: "allowedTargets" }, isAnnotation: { name: "isAnnotation" }, fileTypes: { name: "fileTypes" }, minLength: { name: "minLength" }, maxLength: { name: "maxLength" } } } } };
            e.exports = r;
        }, function (e, t, n) { function r() { if (!s) {
            s = !0;
            for (var e, t = o.length; t;) {
                e = o, o = [];
                for (var n = -1; ++n < t;)
                    e[n]();
                t = o.length;
            }
            s = !1;
        } } function i() { } var a = e.exports = {}, o = [], s = !1; a.nextTick = function (e) { o.push(e), s || setTimeout(r, 0); }, a.title = "browser", a.browser = !0, a.env = {}, a.argv = [], a.version = "", a.versions = {}, a.on = i, a.addListener = i, a.once = i, a.off = i, a.removeListener = i, a.removeAllListeners = i, a.emit = i, a.binding = function (e) { throw new Error("process.binding is not supported"); }, a.cwd = function () { return "/"; }, a.chdir = function (e) { throw new Error("process.chdir is not supported"); }, a.umask = function () { return 0; }; }, function (e, t, n) { t.XMLHttpRequest = XMLHttpRequest; }, function (e, t, n) {
            "use strict";
            function r(e, t, n, r) { if ("number" != typeof e)
                throw new TypeError("statusCode must be a number but was " + typeof e); if (null === t)
                throw new TypeError("headers cannot be null"); if ("object" != typeof t)
                throw new TypeError("headers must be an object but was " + typeof t); this.statusCode = e, this.headers = {}; for (var i in t)
                this.headers[i.toLowerCase()] = t[i]; this.body = n, this.url = r; }
            e.exports = r, r.prototype.getBody = function (e) { if (this.statusCode >= 300) {
                var t = new Error("Server responded with status code " + this.statusCode + ":\n" + this.body.toString());
                throw t.statusCode = this.statusCode, t.headers = this.headers, t.body = this.body, t.url = this.url, t;
            } return e ? this.body.toString(e) : this.body; };
        }, function (e, t, n) { (function (t) { function r(e, t) { if (!(this instanceof r))
            return new r(e, t); "function" == typeof e && (t = e, e = {}), e || (e = {}); var n = e.encoding, i = !1; n ? (n = String(n).toLowerCase(), ("u8" === n || "uint8" === n) && (n = "uint8array")) : i = !0, p.call(this, { objectMode: !0 }), this.encoding = n, this.shouldInferEncoding = i, t && this.on("finish", function () { t(this.getBody()); }), this.body = []; } function i(e) { return /Array\]$/.test(Object.prototype.toString.call(e)); } function a(e) { return "string" == typeof e || i(e) || e && "function" == typeof e.subarray; } function o(e) { for (var n = [], r = 0; r < e.length; r++) {
            var i = e[r];
            "string" == typeof i ? n.push(i) : t.isBuffer(i) ? n.push(i) : a(i) ? n.push(new t(i)) : n.push(new t(String(i)));
        } return t.isBuffer(e[0]) ? (n = t.concat(n), n = n.toString("utf8")) : n = n.join(""), n; } function s(e) { for (var n = [], r = 0; r < e.length; r++) {
            var i = e[r];
            t.isBuffer(i) ? n.push(i) : a(i) ? n.push(new t(i)) : n.push(new t(String(i)));
        } return t.concat(n); } function u(e) { for (var t = [], n = 0; n < e.length; n++)
            t.push.apply(t, e[n]); return t; } function l(e) { for (var n = 0, r = 0; r < e.length; r++)
            "string" == typeof e[r] && (e[r] = new t(e[r])), n += e[r].length; for (var i = new f(n), r = 0, a = 0; r < e.length; r++)
            for (var o = e[r], s = 0; s < o.length; s++)
                i[a++] = o[s]; return i; } var p = n(134).Writable, c = n(115); if ("undefined" == typeof Uint8Array)
            var f = n(112).Uint8Array;
        else
            var f = Uint8Array; e.exports = r, c(r, p), r.prototype._write = function (e, t, n) { this.body.push(e), n(); }, r.prototype.inferEncoding = function (e) { var n = void 0 === e ? this.body[0] : e; return t.isBuffer(n) ? "buffer" : "undefined" != typeof Uint8Array && n instanceof Uint8Array ? "uint8array" : Array.isArray(n) ? "array" : "string" == typeof n ? "string" : "[object Object]" === Object.prototype.toString.call(n) ? "object" : "buffer"; }, r.prototype.getBody = function () { return this.encoding || 0 !== this.body.length ? (this.shouldInferEncoding && (this.encoding = this.inferEncoding()), "array" === this.encoding ? u(this.body) : "string" === this.encoding ? o(this.body) : "buffer" === this.encoding ? s(this.body) : "uint8array" === this.encoding ? l(this.body) : this.body) : []; }; Array.isArray || function (e) { return "[object Array]" == Object.prototype.toString.call(e); }; }).call(t, n(113).Buffer); }, function (e, t, n) { (function (t) { function n(e) { return e.replace(/=/g, "").replace(/\+/g, "-").replace(/\//g, "_"); } function r(e) { t.isBuffer(e) && (e = e.toString()); var n = i(e).replace(/\-/g, "+").replace(/_/g, "/"); return n; } function i(e) { var n = 4, r = e.length, i = e.length % n; if (!i)
            return e; var a = r, o = n - i, s = r + o, u = t(s); for (u.write(e); o--;)
            u.write("=", a++); return u.toString(); } function a(e, n) { return t(r(e), "base64").toString(n); } function o(e, r) { return n(t(e, r).toString("base64")); } function s(e) { return t(r(e), "base64"); } o.toBase64 = r, o.fromBase64 = n, o.decode = a, o.encode = o, o.toBuffer = s, e.exports = o; }).call(t, n(113).Buffer); }, function (e, t, n) {
            function r(e) { if (!e || "object" != typeof e)
                throw new TypeError("argument obj is required"); var t = e.parameters, n = e.subtype, r = e.suffix, i = e.type; if (!i || !h.test(i))
                throw new TypeError("invalid type"); if (!n || !m.test(n))
                throw new TypeError("invalid subtype"); var a = i + "/" + n; if (r) {
                if (!h.test(r))
                    throw new TypeError("invalid suffix");
                a += "+" + r;
            } if (t && "object" == typeof t)
                for (var s, u = Object.keys(t).sort(), l = 0; l < u.length; l++) {
                    if (s = u[l], !p.test(s))
                        throw new TypeError("invalid parameter name");
                    a += "; " + s + "=" + o(t[s]);
                } return a; }
            function i(e) { if (!e)
                throw new TypeError("argument string is required"); if ("object" == typeof e && (e = a(e)), "string" != typeof e)
                throw new TypeError("argument string is required to be a string"); var t, n, r, i = e.indexOf(";"), o = -1 !== i ? e.substr(0, i) : e, l = s(o), p = {}; for (u.lastIndex = i; n = u.exec(e);) {
                if (n.index !== i)
                    throw new TypeError("invalid parameter format");
                i += n[0].length, t = n[1].toLowerCase(), r = n[2], '"' === r[0] && (r = r.substr(1, r.length - 2).replace(c, "$1")), p[t] = r;
            } if (-1 !== i && i !== e.length)
                throw new TypeError("invalid parameter format"); return l.parameters = p, l; }
            function a(e) { return "function" == typeof e.getHeader ? e.getHeader("content-type") : "object" == typeof e.headers ? e.headers && e.headers["content-type"] : void 0; }
            function o(e) { var t = String(e); if (p.test(t))
                return t; if (t.length > 0 && !l.test(t))
                throw new TypeError("invalid parameter value"); return '"' + t.replace(f, "\\$1") + '"'; }
            function s(e) { var t = d.exec(e.toLowerCase()); if (!t)
                throw new TypeError("invalid media type"); var n, r = t[1], i = t[2], a = i.lastIndexOf("+"); -1 !== a && (n = i.substr(a + 1), i = i.substr(0, a)); var o = { type: r, subtype: i, suffix: n }; return o; } /*!
                 * media-typer
                 * Copyright(c) 2014 Douglas Christopher Wilson
                 * MIT Licensed
                 */
            var u = /; *([!#$%&'\*\+\-\.0-9A-Z\^_`a-z\|~]+) *= *("(?:[ !\u0023-\u005b\u005d-\u007e\u0080-\u00ff]|\\[\u0020-\u007e])*"|[!#$%&'\*\+\-\.0-9A-Z\^_`a-z\|~]+) */g, l = /^[\u0020-\u007e\u0080-\u00ff]+$/, p = /^[!#$%&'\*\+\-\.0-9A-Z\^_`a-z\|~]+$/, c = /\\([\u0000-\u007f])/g, f = /([\\"])/g, m = /^[A-Za-z0-9][A-Za-z0-9!#$&^_.-]{0,126}$/, h = /^[A-Za-z0-9][A-Za-z0-9!#$&^_-]{0,126}$/, d = /^ *([A-Za-z0-9][A-Za-z0-9!#$&^_-]{0,126})\/([A-Za-z0-9][A-Za-z0-9!#$&^_.+-]{0,126}) *$/;
            t.format = r, t.parse = i;
        }, function (e, t, n) { var r, i; (function () { function n(e) { function t(t, n, r, i, a, o) { for (; a >= 0 && o > a; a += e) {
            var s = i ? i[a] : a;
            r = n(r, t[s], s, t);
        } return r; } return function (n, r, i, a) { r = N(r, a, 4); var o = !C(n) && S.keys(n), s = (o || n).length, u = e > 0 ? 0 : s - 1; return arguments.length < 3 && (i = n[o ? o[u] : u], u += e), t(n, r, i, o, u, s); }; } function a(e) { return function (t, n, r) { n = _(n, r); for (var i = w(t), a = e > 0 ? 0 : i - 1; a >= 0 && i > a; a += e)
            if (n(t[a], a, t))
                return a; return -1; }; } function o(e, t, n) { return function (r, i, a) { var o = 0, s = w(r); if ("number" == typeof a)
            e > 0 ? o = a >= 0 ? a : Math.max(a + s, o) : s = a >= 0 ? Math.min(a + 1, s) : a + s + 1;
        else if (n && a && s)
            return a = n(r, i), r[a] === i ? a : -1; if (i !== i)
            return a = t(h.call(r, o, s), S.isNaN), a >= 0 ? a + o : -1; for (a = e > 0 ? o : s - 1; a >= 0 && s > a; a += e)
            if (r[a] === i)
                return a; return -1; }; } function s(e, t) { var n = U.length, r = e.constructor, i = S.isFunction(r) && r.prototype || c, a = "constructor"; for (S.has(e, a) && !S.contains(t, a) && t.push(a); n--;)
            a = U[n], a in e && e[a] !== i[a] && !S.contains(t, a) && t.push(a); } var u = this, l = u._, p = Array.prototype, c = Object.prototype, f = Function.prototype, m = p.push, h = p.slice, d = c.toString, y = c.hasOwnProperty, v = Array.isArray, g = Object.keys, A = f.bind, T = Object.create, E = function () { }, S = function (e) { return e instanceof S ? e : this instanceof S ? void (this._wrapped = e) : new S(e); }; "undefined" != typeof e && e.exports && (t = e.exports = S), t._ = S, S.VERSION = "1.8.3"; var N = function (e, t, n) { if (void 0 === t)
            return e; switch (null == n ? 3 : n) {
            case 1: return function (n) { return e.call(t, n); };
            case 2: return function (n, r) { return e.call(t, n, r); };
            case 3: return function (n, r, i) { return e.call(t, n, r, i); };
            case 4: return function (n, r, i, a) { return e.call(t, n, r, i, a); };
        } return function () { return e.apply(t, arguments); }; }, _ = function (e, t, n) { return null == e ? S.identity : S.isFunction(e) ? N(e, t, n) : S.isObject(e) ? S.matcher(e) : S.property(e); }; S.iteratee = function (e, t) { return _(e, t, 1 / 0); }; var b = function (e, t) { return function (n) { var r = arguments.length; if (2 > r || null == n)
            return n; for (var i = 1; r > i; i++)
            for (var a = arguments[i], o = e(a), s = o.length, u = 0; s > u; u++) {
                var l = o[u];
                t && void 0 !== n[l] || (n[l] = a[l]);
            } return n; }; }, I = function (e) { if (!S.isObject(e))
            return {}; if (T)
            return T(e); E.prototype = e; var t = new E; return E.prototype = null, t; }, R = function (e) { return function (t) { return null == t ? void 0 : t[e]; }; }, M = Math.pow(2, 53) - 1, w = R("length"), C = function (e) { var t = w(e); return "number" == typeof t && t >= 0 && M >= t; }; S.each = S.forEach = function (e, t, n) { t = N(t, n); var r, i; if (C(e))
            for (r = 0, i = e.length; i > r; r++)
                t(e[r], r, e);
        else {
            var a = S.keys(e);
            for (r = 0, i = a.length; i > r; r++)
                t(e[a[r]], a[r], e);
        } return e; }, S.map = S.collect = function (e, t, n) { t = _(t, n); for (var r = !C(e) && S.keys(e), i = (r || e).length, a = Array(i), o = 0; i > o; o++) {
            var s = r ? r[o] : o;
            a[o] = t(e[s], s, e);
        } return a; }, S.reduce = S.foldl = S.inject = n(1), S.reduceRight = S.foldr = n(-1), S.find = S.detect = function (e, t, n) { var r; return r = C(e) ? S.findIndex(e, t, n) : S.findKey(e, t, n), void 0 !== r && -1 !== r ? e[r] : void 0; }, S.filter = S.select = function (e, t, n) { var r = []; return t = _(t, n), S.each(e, function (e, n, i) { t(e, n, i) && r.push(e); }), r; }, S.reject = function (e, t, n) { return S.filter(e, S.negate(_(t)), n); }, S.every = S.all = function (e, t, n) { t = _(t, n); for (var r = !C(e) && S.keys(e), i = (r || e).length, a = 0; i > a; a++) {
            var o = r ? r[a] : a;
            if (!t(e[o], o, e))
                return !1;
        } return !0; }, S.some = S.any = function (e, t, n) { t = _(t, n); for (var r = !C(e) && S.keys(e), i = (r || e).length, a = 0; i > a; a++) {
            var o = r ? r[a] : a;
            if (t(e[o], o, e))
                return !0;
        } return !1; }, S.contains = S.includes = S.include = function (e, t, n, r) { return C(e) || (e = S.values(e)), ("number" != typeof n || r) && (n = 0), S.indexOf(e, t, n) >= 0; }, S.invoke = function (e, t) { var n = h.call(arguments, 2), r = S.isFunction(t); return S.map(e, function (e) { var i = r ? t : e[t]; return null == i ? i : i.apply(e, n); }); }, S.pluck = function (e, t) { return S.map(e, S.property(t)); }, S.where = function (e, t) { return S.filter(e, S.matcher(t)); }, S.findWhere = function (e, t) { return S.find(e, S.matcher(t)); }, S.max = function (e, t, n) { var r, i, a = -(1 / 0), o = -(1 / 0); if (null == t && null != e) {
            e = C(e) ? e : S.values(e);
            for (var s = 0, u = e.length; u > s; s++)
                r = e[s], r > a && (a = r);
        }
        else
            t = _(t, n), S.each(e, function (e, n, r) { i = t(e, n, r), (i > o || i === -(1 / 0) && a === -(1 / 0)) && (a = e, o = i); }); return a; }, S.min = function (e, t, n) { var r, i, a = 1 / 0, o = 1 / 0; if (null == t && null != e) {
            e = C(e) ? e : S.values(e);
            for (var s = 0, u = e.length; u > s; s++)
                r = e[s], a > r && (a = r);
        }
        else
            t = _(t, n), S.each(e, function (e, n, r) { i = t(e, n, r), (o > i || i === 1 / 0 && a === 1 / 0) && (a = e, o = i); }); return a; }, S.shuffle = function (e) { for (var t, n = C(e) ? e : S.values(e), r = n.length, i = Array(r), a = 0; r > a; a++)
            t = S.random(0, a), t !== a && (i[a] = i[t]), i[t] = n[a]; return i; }, S.sample = function (e, t, n) { return null == t || n ? (C(e) || (e = S.values(e)), e[S.random(e.length - 1)]) : S.shuffle(e).slice(0, Math.max(0, t)); }, S.sortBy = function (e, t, n) { return t = _(t, n), S.pluck(S.map(e, function (e, n, r) { return { value: e, index: n, criteria: t(e, n, r) }; }).sort(function (e, t) { var n = e.criteria, r = t.criteria; if (n !== r) {
            if (n > r || void 0 === n)
                return 1;
            if (r > n || void 0 === r)
                return -1;
        } return e.index - t.index; }), "value"); }; var L = function (e) { return function (t, n, r) { var i = {}; return n = _(n, r), S.each(t, function (r, a) { var o = n(r, a, t); e(i, r, o); }), i; }; }; S.groupBy = L(function (e, t, n) { S.has(e, n) ? e[n].push(t) : e[n] = [t]; }), S.indexBy = L(function (e, t, n) { e[n] = t; }), S.countBy = L(function (e, t, n) { S.has(e, n) ? e[n]++ : e[n] = 1; }), S.toArray = function (e) { return e ? S.isArray(e) ? h.call(e) : C(e) ? S.map(e, S.identity) : S.values(e) : []; }, S.size = function (e) { return null == e ? 0 : C(e) ? e.length : S.keys(e).length; }, S.partition = function (e, t, n) { t = _(t, n); var r = [], i = []; return S.each(e, function (e, n, a) { (t(e, n, a) ? r : i).push(e); }), [r, i]; }, S.first = S.head = S.take = function (e, t, n) { return null == e ? void 0 : null == t || n ? e[0] : S.initial(e, e.length - t); }, S.initial = function (e, t, n) { return h.call(e, 0, Math.max(0, e.length - (null == t || n ? 1 : t))); }, S.last = function (e, t, n) { return null == e ? void 0 : null == t || n ? e[e.length - 1] : S.rest(e, Math.max(0, e.length - t)); }, S.rest = S.tail = S.drop = function (e, t, n) { return h.call(e, null == t || n ? 1 : t); }, S.compact = function (e) { return S.filter(e, S.identity); }; var P = function (e, t, n, r) { for (var i = [], a = 0, o = r || 0, s = w(e); s > o; o++) {
            var u = e[o];
            if (C(u) && (S.isArray(u) || S.isArguments(u))) {
                t || (u = P(u, t, n));
                var l = 0, p = u.length;
                for (i.length += p; p > l;)
                    i[a++] = u[l++];
            }
            else
                n || (i[a++] = u);
        } return i; }; S.flatten = function (e, t) { return P(e, t, !1); }, S.without = function (e) { return S.difference(e, h.call(arguments, 1)); }, S.uniq = S.unique = function (e, t, n, r) { S.isBoolean(t) || (r = n, n = t, t = !1), null != n && (n = _(n, r)); for (var i = [], a = [], o = 0, s = w(e); s > o; o++) {
            var u = e[o], l = n ? n(u, o, e) : u;
            t ? (o && a === l || i.push(u), a = l) : n ? S.contains(a, l) || (a.push(l), i.push(u)) : S.contains(i, u) || i.push(u);
        } return i; }, S.union = function () { return S.uniq(P(arguments, !0, !0)); }, S.intersection = function (e) { for (var t = [], n = arguments.length, r = 0, i = w(e); i > r; r++) {
            var a = e[r];
            if (!S.contains(t, a)) {
                for (var o = 1; n > o && S.contains(arguments[o], a); o++)
                    ;
                o === n && t.push(a);
            }
        } return t; }, S.difference = function (e) { var t = P(arguments, !0, !0, 1); return S.filter(e, function (e) { return !S.contains(t, e); }); }, S.zip = function () { return S.unzip(arguments); }, S.unzip = function (e) { for (var t = e && S.max(e, w).length || 0, n = Array(t), r = 0; t > r; r++)
            n[r] = S.pluck(e, r); return n; }, S.object = function (e, t) { for (var n = {}, r = 0, i = w(e); i > r; r++)
            t ? n[e[r]] = t[r] : n[e[r][0]] = e[r][1]; return n; }, S.findIndex = a(1), S.findLastIndex = a(-1), S.sortedIndex = function (e, t, n, r) { n = _(n, r, 1); for (var i = n(t), a = 0, o = w(e); o > a;) {
            var s = Math.floor((a + o) / 2);
            n(e[s]) < i ? a = s + 1 : o = s;
        } return a; }, S.indexOf = o(1, S.findIndex, S.sortedIndex), S.lastIndexOf = o(-1, S.findLastIndex), S.range = function (e, t, n) { null == t && (t = e || 0, e = 0), n = n || 1; for (var r = Math.max(Math.ceil((t - e) / n), 0), i = Array(r), a = 0; r > a; a++, e += n)
            i[a] = e; return i; }; var O = function (e, t, n, r, i) { if (!(r instanceof t))
            return e.apply(n, i); var a = I(e.prototype), o = e.apply(a, i); return S.isObject(o) ? o : a; }; S.bind = function (e, t) { if (A && e.bind === A)
            return A.apply(e, h.call(arguments, 1)); if (!S.isFunction(e))
            throw new TypeError("Bind must be called on a function"); var n = h.call(arguments, 2), r = function () { return O(e, r, t, this, n.concat(h.call(arguments))); }; return r; }, S.partial = function (e) { var t = h.call(arguments, 1), n = function () { for (var r = 0, i = t.length, a = Array(i), o = 0; i > o; o++)
            a[o] = t[o] === S ? arguments[r++] : t[o]; for (; r < arguments.length;)
            a.push(arguments[r++]); return O(e, n, this, this, a); }; return n; }, S.bindAll = function (e) { var t, n, r = arguments.length; if (1 >= r)
            throw new Error("bindAll must be passed function names"); for (t = 1; r > t; t++)
            n = arguments[t], e[n] = S.bind(e[n], e); return e; }, S.memoize = function (e, t) { var n = function (r) { var i = n.cache, a = "" + (t ? t.apply(this, arguments) : r); return S.has(i, a) || (i[a] = e.apply(this, arguments)), i[a]; }; return n.cache = {}, n; }, S.delay = function (e, t) { var n = h.call(arguments, 2); return setTimeout(function () { return e.apply(null, n); }, t); }, S.defer = S.partial(S.delay, S, 1), S.throttle = function (e, t, n) { var r, i, a, o = null, s = 0; n || (n = {}); var u = function () { s = n.leading === !1 ? 0 : S.now(), o = null, a = e.apply(r, i), o || (r = i = null); }; return function () { var l = S.now(); s || n.leading !== !1 || (s = l); var p = t - (l - s); return r = this, i = arguments, 0 >= p || p > t ? (o && (clearTimeout(o), o = null), s = l, a = e.apply(r, i), o || (r = i = null)) : o || n.trailing === !1 || (o = setTimeout(u, p)), a; }; }, S.debounce = function (e, t, n) { var r, i, a, o, s, u = function () { var l = S.now() - o; t > l && l >= 0 ? r = setTimeout(u, t - l) : (r = null, n || (s = e.apply(a, i), r || (a = i = null))); }; return function () { a = this, i = arguments, o = S.now(); var l = n && !r; return r || (r = setTimeout(u, t)), l && (s = e.apply(a, i), a = i = null), s; }; }, S.wrap = function (e, t) { return S.partial(t, e); }, S.negate = function (e) { return function () { return !e.apply(this, arguments); }; }, S.compose = function () { var e = arguments, t = e.length - 1; return function () { for (var n = t, r = e[t].apply(this, arguments); n--;)
            r = e[n].call(this, r); return r; }; }, S.after = function (e, t) { return function () { return --e < 1 ? t.apply(this, arguments) : void 0; }; }, S.before = function (e, t) { var n; return function () { return --e > 0 && (n = t.apply(this, arguments)), 1 >= e && (t = null), n; }; }, S.once = S.partial(S.before, 2); var D = !{ toString: null }.propertyIsEnumerable("toString"), U = ["valueOf", "isPrototypeOf", "toString", "propertyIsEnumerable", "hasOwnProperty", "toLocaleString"]; S.keys = function (e) { if (!S.isObject(e))
            return []; if (g)
            return g(e); var t = []; for (var n in e)
            S.has(e, n) && t.push(n); return D && s(e, t), t; }, S.allKeys = function (e) { if (!S.isObject(e))
            return []; var t = []; for (var n in e)
            t.push(n); return D && s(e, t), t; }, S.values = function (e) { for (var t = S.keys(e), n = t.length, r = Array(n), i = 0; n > i; i++)
            r[i] = e[t[i]]; return r; }, S.mapObject = function (e, t, n) { t = _(t, n); for (var r, i = S.keys(e), a = i.length, o = {}, s = 0; a > s; s++)
            r = i[s], o[r] = t(e[r], r, e); return o; }, S.pairs = function (e) { for (var t = S.keys(e), n = t.length, r = Array(n), i = 0; n > i; i++)
            r[i] = [t[i], e[t[i]]]; return r; }, S.invert = function (e) { for (var t = {}, n = S.keys(e), r = 0, i = n.length; i > r; r++)
            t[e[n[r]]] = n[r]; return t; }, S.functions = S.methods = function (e) { var t = []; for (var n in e)
            S.isFunction(e[n]) && t.push(n); return t.sort(); }, S.extend = b(S.allKeys), S.extendOwn = S.assign = b(S.keys), S.findKey = function (e, t, n) { t = _(t, n); for (var r, i = S.keys(e), a = 0, o = i.length; o > a; a++)
            if (r = i[a], t(e[r], r, e))
                return r; }, S.pick = function (e, t, n) { var r, i, a = {}, o = e; if (null == o)
            return a; S.isFunction(t) ? (i = S.allKeys(o), r = N(t, n)) : (i = P(arguments, !1, !1, 1), r = function (e, t, n) { return t in n; }, o = Object(o)); for (var s = 0, u = i.length; u > s; s++) {
            var l = i[s], p = o[l];
            r(p, l, o) && (a[l] = p);
        } return a; }, S.omit = function (e, t, n) { if (S.isFunction(t))
            t = S.negate(t);
        else {
            var r = S.map(P(arguments, !1, !1, 1), String);
            t = function (e, t) { return !S.contains(r, t); };
        } return S.pick(e, t, n); }, S.defaults = b(S.allKeys, !0), S.create = function (e, t) { var n = I(e); return t && S.extendOwn(n, t), n; }, S.clone = function (e) { return S.isObject(e) ? S.isArray(e) ? e.slice() : S.extend({}, e) : e; }, S.tap = function (e, t) { return t(e), e; }, S.isMatch = function (e, t) { var n = S.keys(t), r = n.length; if (null == e)
            return !r; for (var i = Object(e), a = 0; r > a; a++) {
            var o = n[a];
            if (t[o] !== i[o] || !(o in i))
                return !1;
        } return !0; }; var x = function (e, t, n, r) { if (e === t)
            return 0 !== e || 1 / e === 1 / t; if (null == e || null == t)
            return e === t; e instanceof S && (e = e._wrapped), t instanceof S && (t = t._wrapped); var i = d.call(e); if (i !== d.call(t))
            return !1; switch (i) {
            case "[object RegExp]":
            case "[object String]": return "" + e == "" + t;
            case "[object Number]": return +e !== +e ? +t !== +t : 0 === +e ? 1 / +e === 1 / t : +e === +t;
            case "[object Date]":
            case "[object Boolean]": return +e === +t;
        } var a = "[object Array]" === i; if (!a) {
            if ("object" != typeof e || "object" != typeof t)
                return !1;
            var o = e.constructor, s = t.constructor;
            if (o !== s && !(S.isFunction(o) && o instanceof o && S.isFunction(s) && s instanceof s) && "constructor" in e && "constructor" in t)
                return !1;
        } n = n || [], r = r || []; for (var u = n.length; u--;)
            if (n[u] === e)
                return r[u] === t; if (n.push(e), r.push(t), a) {
            if (u = e.length, u !== t.length)
                return !1;
            for (; u--;)
                if (!x(e[u], t[u], n, r))
                    return !1;
        }
        else {
            var l, p = S.keys(e);
            if (u = p.length, S.keys(t).length !== u)
                return !1;
            for (; u--;)
                if (l = p[u], !S.has(t, l) || !x(e[l], t[l], n, r))
                    return !1;
        } return n.pop(), r.pop(), !0; }; S.isEqual = function (e, t) { return x(e, t); }, S.isEmpty = function (e) { return null == e ? !0 : C(e) && (S.isArray(e) || S.isString(e) || S.isArguments(e)) ? 0 === e.length : 0 === S.keys(e).length; }, S.isElement = function (e) { return !(!e || 1 !== e.nodeType); }, S.isArray = v || function (e) { return "[object Array]" === d.call(e); }, S.isObject = function (e) { var t = typeof e; return "function" === t || "object" === t && !!e; }, S.each(["Arguments", "Function", "String", "Number", "Date", "RegExp", "Error"], function (e) { S["is" + e] = function (t) { return d.call(t) === "[object " + e + "]"; }; }), S.isArguments(arguments) || (S.isArguments = function (e) { return S.has(e, "callee"); }), "function" != typeof /./ && "object" != typeof Int8Array && (S.isFunction = function (e) { return "function" == typeof e || !1; }), S.isFinite = function (e) { return isFinite(e) && !isNaN(parseFloat(e)); }, S.isNaN = function (e) { return S.isNumber(e) && e !== +e; }, S.isBoolean = function (e) { return e === !0 || e === !1 || "[object Boolean]" === d.call(e); }, S.isNull = function (e) { return null === e; }, S.isUndefined = function (e) { return void 0 === e; }, S.has = function (e, t) { return null != e && y.call(e, t); }, S.noConflict = function () { return u._ = l, this; }, S.identity = function (e) { return e; }, S.constant = function (e) { return function () { return e; }; }, S.noop = function () { }, S.property = R, S.propertyOf = function (e) { return null == e ? function () { } : function (t) { return e[t]; }; }, S.matcher = S.matches = function (e) { return e = S.extendOwn({}, e), function (t) { return S.isMatch(t, e); }; }, S.times = function (e, t, n) { var r = Array(Math.max(0, e)); t = N(t, n, 1); for (var i = 0; e > i; i++)
            r[i] = t(i); return r; }, S.random = function (e, t) { return null == t && (t = e, e = 0), e + Math.floor(Math.random() * (t - e + 1)); }, S.now = Date.now || function () { return (new Date).getTime(); }; var k = { "&": "&amp;", "<": "&lt;", ">": "&gt;", '"': "&quot;", "'": "&#x27;", "`": "&#x60;" }, F = S.invert(k), B = function (e) { var t = function (t) { return e[t]; }, n = "(?:" + S.keys(e).join("|") + ")", r = RegExp(n), i = RegExp(n, "g"); return function (e) { return e = null == e ? "" : "" + e, r.test(e) ? e.replace(i, t) : e; }; }; S.escape = B(k), S.unescape = B(F), S.result = function (e, t, n) { var r = null == e ? void 0 : e[t]; return void 0 === r && (r = n), S.isFunction(r) ? r.call(e) : r; }; var K = 0; S.uniqueId = function (e) { var t = ++K + ""; return e ? e + t : t; }, S.templateSettings = { evaluate: /<%([\s\S]+?)%>/g, interpolate: /<%=([\s\S]+?)%>/g, escape: /<%-([\s\S]+?)%>/g }; var V = /(.)^/, j = { "'": "'", "\\": "\\", "\r": "r", "\n": "n", "\u2028": "u2028", "\u2029": "u2029" }, W = /\\|'|\r|\n|\u2028|\u2029/g, q = function (e) { return "\\" + j[e]; }; S.template = function (e, t, n) { !t && n && (t = n), t = S.defaults({}, t, S.templateSettings); var r = RegExp([(t.escape || V).source, (t.interpolate || V).source, (t.evaluate || V).source].join("|") + "|$", "g"), i = 0, a = "__p+='"; e.replace(r, function (t, n, r, o, s) { return a += e.slice(i, s).replace(W, q), i = s + t.length, n ? a += "'+\n((__t=(" + n + "))==null?'':_.escape(__t))+\n'" : r ? a += "'+\n((__t=(" + r + "))==null?'':__t)+\n'" : o && (a += "';\n" + o + "\n__p+='"), t; }), a += "';\n", t.variable || (a = "with(obj||{}){\n" + a + "}\n"), a = "var __t,__p='',__j=Array.prototype.join,print=function(){__p+=__j.call(arguments,'');};\n" + a + "return __p;\n"; try {
            var o = new Function(t.variable || "obj", "_", a);
        }
        catch (s) {
            throw s.source = a, s;
        } var u = function (e) { return o.call(this, e, S); }, l = t.variable || "obj"; return u.source = "function(" + l + "){\n" + a + "}", u; }, S.chain = function (e) { var t = S(e); return t._chain = !0, t; }; var H = function (e, t) { return e._chain ? S(t).chain() : t; }; S.mixin = function (e) { S.each(S.functions(e), function (t) { var n = S[t] = e[t]; S.prototype[t] = function () { var e = [this._wrapped]; return m.apply(e, arguments), H(this, n.apply(S, e)); }; }); }, S.mixin(S), S.each(["pop", "push", "reverse", "shift", "sort", "splice", "unshift"], function (e) { var t = p[e]; S.prototype[e] = function () { var n = this._wrapped; return t.apply(n, arguments), "shift" !== e && "splice" !== e || 0 !== n.length || delete n[0], H(this, n); }; }), S.each(["concat", "join", "slice"], function (e) { var t = p[e]; S.prototype[e] = function () { return H(this, t.apply(this._wrapped, arguments)); }; }), S.prototype.value = function () { return this._wrapped; }, S.prototype.valueOf = S.prototype.toJSON = S.prototype.value, S.prototype.toString = function () { return "" + this._wrapped; }, r = [], i = function () { return S; }.apply(t, r), !(void 0 !== i && (e.exports = i)); }).call(this); }, function (e, t, n) { (function (t) {
            "use strict";
            var n = function (e, n, r, i, a, o, s, u) { if ("production" !== t.env.NODE_ENV && void 0 === n)
                throw new Error("invariant requires an error message argument"); if (!e) {
                var l;
                if (void 0 === n)
                    l = new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");
                else {
                    var p = [r, i, a, o, s, u], c = 0;
                    l = new Error(n.replace(/%s/g, function () { return p[c++]; })), l.name = "Invariant Violation";
                }
                throw l.framesToPop = 1, l;
            } };
            e.exports = n;
        }).call(t, n(64)); }, function (e, t, n) { var r = "undefined" != typeof JSON ? JSON : n(114); e.exports = function (e, t) { t || (t = {}), "function" == typeof t && (t = { cmp: t }); var n = t.space || ""; "number" == typeof n && (n = Array(n + 1).join(" ")); var o = "boolean" == typeof t.cycles ? t.cycles : !1, s = t.replacer || function (e, t) { return t; }, u = t.cmp && function (e) { return function (t) { return function (n, r) { var i = { key: n, value: t[n] }, a = { key: r, value: t[r] }; return e(i, a); }; }; }(t.cmp), l = []; return function p(e, t, c, f) { var m = n ? "\n" + new Array(f + 1).join(n) : "", h = n ? ": " : ":"; if (c && c.toJSON && "function" == typeof c.toJSON && (c = c.toJSON()), c = s.call(e, t, c), void 0 !== c) {
            if ("object" != typeof c || null === c)
                return r.stringify(c);
            if (i(c)) {
                for (var d = [], y = 0; y < c.length; y++) {
                    var v = p(c, y, c[y], f + 1) || r.stringify(null);
                    d.push(m + n + v);
                }
                return "[" + d.join(",") + m + "]";
            }
            if (-1 !== l.indexOf(c)) {
                if (o)
                    return r.stringify("__cycle__");
                throw new TypeError("Converting circular structure to JSON");
            }
            l.push(c);
            for (var g = a(c).sort(u && u(c)), d = [], y = 0; y < g.length; y++) {
                var t = g[y], A = p(c, t, c[t], f + 1);
                if (A) {
                    var T = r.stringify(t) + h + A;
                    d.push(m + n + T);
                }
            }
            return l.splice(l.indexOf(c), 1), "{" + d.join(",") + m + "}";
        } }({ "": e }, "", e, 0); }; var i = Array.isArray || function (e) { return "[object Array]" === {}.toString.call(e); }, a = Object.keys || function (e) { var t = Object.prototype.hasOwnProperty || function () { return !0; }, n = []; for (var r in e)
            t.call(e, r) && n.push(r); return n; }; }, function (e, t, n) {
            "use strict";
            function r(e, t) { return void 0 === t && (t = !0), new v({ rootNodeDetails: !0, serializeMetadata: t }).dump(e); }
            var i = this && this.__extends || function (e, t) { function n() { this.constructor = e; } for (var r in t)
                t.hasOwnProperty(r) && (e[r] = t[r]); e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype, new n); }, a = n(17), o = n(48), s = n(41), u = n(39), l = n(16), p = n(29), c = n(14), f = n(17), m = n(35), h = n(70), d = n(11), y = n(15);
            t.dump = r;
            var v = function () { function e(e) { this.options = e, this.nodeTransformers = [new V, new k, new H, new N, new L, new P, new W, new M, new w, new F, new B, new O, new q, new j], this.nodePropertyTransformers = [new S, new _, new b, new R, new I, new C, new K], this.ignore = new A([new g(c.isResponseType, c.isDisplayNameProperty), new g(c.isApiSibling, c.isDisplayNameProperty), new g(c.isAnnotationRefTypeOrDescendant, c.isAnnotationProperty), new g(c.isSecuritySchemeRefType, c.isSecuritySchemeProperty), new g(c.isTraitRefType, c.isTraitProperty), new g(c.isResourceTypeRefType, c.isResourceTypeProperty), new g(c.isApiSibling, c.isRAMLVersionProperty), new g(c.isTypeDeclarationDescendant, c.isStructuredItemsProperty)]), this.missingProperties = new Y, this.options = this.options || {}, null == this.options.serializeMetadata && (this.options.serializeMetadata = !0); } return e.prototype.printMissingProperties = function () { return this.missingProperties.print(); }, e.prototype.dump = function (e) { var t = e.highLevel(), n = t && t.parent(), r = !n && this.options.rootNodeDetails, i = this.dumpInternal(e, r); return i; }, e.prototype.dumpInternal = function (e, t, n) { var r = this; if (void 0 === t && (t = !1), null == e)
                return null; if (o.BasicNodeImpl.isInstance(e)) {
                var i = {}, s = e, u = s.highLevel().definition();
                u.allProperties().filter(function (e) { return !r.ignore.match(s.definition(), e); }).forEach(function (e) { i[e.nameId()] = e; }), u.allCustomProperties().filter(function (e) { return !r.ignore.match(s.definition(), e); }).forEach(function (e) { i[e.nameId()] = e; });
                var p = this.dumpProperties(i, e);
                if (i.schema && this.options.dumpSchemaContents && i.schema.range().key() == f.Universe08.SchemaString) {
                    var m = s.highLevel().root().elementsOfKind("schemas");
                    m.forEach(function (e) { if (e.name() == p.schema) {
                        var t = e.attr("value");
                        t && (p.schema = t.value(), p.schemaContent = t.value());
                    } });
                }
                if (this.serializeScalarsAnnotations(p, s, i), this.serializeMeta(p, s), this.canBeFragment(e) && d.isFragment(e)) {
                    var h = d.asFragment(e), y = h.uses();
                    y.length > 0 && (p.uses = y.map(function (e) { return e.toJSON(); }));
                }
                if (c.isTypeDeclarationDescendant(u)) {
                    var v = s.highLevel().property();
                    if (v && !(c.isHeadersProperty(v) || c.isQueryParametersProperty(v) || c.isUriParametersProperty(v) || c.isPropertiesProperty(v) || c.isBaseUriParametersProperty(v))) {
                        delete p.required;
                        var g = p.__METADATA__;
                        if (g) {
                            var A = g.primitiveValuesMeta;
                            A && delete A.required;
                        }
                    }
                }
                this.nodeTransformers.forEach(function (t) { t.match(e, n || e.highLevel().property()) && (p = t.transform(p, e)); });
                var T = {};
                if (t) {
                    if (u) {
                        var E = u.universe().version();
                        T.ramlVersion = E, T.type = u.nameId();
                    }
                    T.specification = p, T.errors = this.dumpErrors(s.errors());
                }
                else
                    T = p;
                return T;
            } if (o.AttributeNodeImpl.isInstance(e)) {
                var i = {}, S = e, u = S.highLevel().definition(), N = S.highLevel().property().range();
                N.isArray() && (N = N.array().componentType()), u.allCustomProperties().filter(function (e) { return !r.ignore.match(N, e); }).forEach(function (e) { i[e.nameId()] = e; });
                var _ = N.isValueType();
                if (_ && S.value) {
                    var b = S.value();
                    if (null == b || "number" == typeof b || "string" == typeof b || "boolean" == typeof b)
                        return b;
                    if (N.isAssignableFrom(a.Universe08.StringType.name) && l.StructuredValue.isInstance(b)) {
                        var I = b, R = I.lowLevel();
                        return b = R ? R.dumpToObject() : null;
                    }
                }
                var p = this.dumpProperties(i, e);
                return this.nodeTransformers.forEach(function (t) { t.match(e, e.highLevel().property()) && (p = t.transform(p, e)); }), this.serializeScalarsAnnotations(p, e, i), this.serializeMeta(p, S), p;
            } return o.TypeInstanceImpl.isInstance(e) ? this.serializeTypeInstance(e) : o.TypeInstancePropertyImpl.isInstance(e) ? this.serializeTypeInstanceProperty(e) : e; }, e.prototype.canBeFragment = function (e) { var t = e.definition(), n = [t].concat(t.allSubTypes()), r = n.filter(function (e) { return e.getAdapter(u.RAMLService).possibleInterfaces().filter(function (e) { return e.nameId() == u.universesInfo.Universe10.FragmentDeclaration.name; }).length > 0; }); return r.length > 0; }, e.prototype.dumpErrors = function (e) { var t = this; return e.map(function (e) { var n = t.dumpErrorBasic(e); return e.trace && e.trace.length > 0 && (n.trace = t.dumpErrors(e.trace)), n; }).sort(function (e, t) { return e.path != t.path ? e.path.localeCompare(t.path) : e.range.start.position != t.range.start.position ? e.range.start.position - t.range.start.position : e.code - t.code; }); }, e.prototype.dumpErrorBasic = function (e) { var t = { code: e.code, message: e.message, path: e.path, line: e.line, column: e.column, position: e.start, range: e.range }; return e.isWarning === !0 && (t.isWarning = !0), t; }, e.prototype.stringLooksLikeXML = function (e) { return "<" === e[0] && ">" === e[e.length - 1]; }, e.prototype.stringLooksLikeJSON = function (e) { return "{" === e[0] && "}" === e[e.length - 1]; }, e.prototype.dumpProperties = function (e, t) { var n, r = this, i = {}; return t.highLevel().isElement() && (n = t.highLevel().definition()), Object.keys(e).forEach(function (s) { var u; if (n && (u = n.property(s), u || (u = h.find(n.allCustomProperties(), function (e) { return e.nameId() == s; }))), !t[s])
                return void r.missingProperties.addProperty(e[s], t.kind()); var f = e[s], m = t[s](); if (m && "structuredType" == s && "object" == typeof m) {
                m = null;
                var d = t.highLevel(), v = d.lowLevel();
                v.children().forEach(function (e) { if ("type" == e.key() || "schema" == e.key()) {
                    var t = d.definition().universe().type(a.Universe10.TypeDeclaration.name), n = d.definition().universe().type(a.Universe10.LibraryBase.name), i = new l.ASTNodeImpl(e, d, t, n.property(a.Universe10.LibraryBase.properties.types.name));
                    i.patchType(p.doDescrimination(i)), m = r.dumpInternal(i.wrapperNode(), !1, u), s = e.key();
                } });
            }
            else if ("items" == s && "object" == typeof m) {
                var g = Array.isArray(m), A = !g;
                if (g && (A = null != h.find(m, function (e) { return "object" == typeof e; })), A) {
                    m = null;
                    var d = t.highLevel(), v = d.lowLevel();
                    v.children().forEach(function (e) { if ("items" == e.key()) {
                        var t = d.definition().universe().type(a.Universe10.TypeDeclaration.name), n = d.definition().universe().type(a.Universe10.LibraryBase.name), i = new l.ASTNodeImpl(e, d, t, n.property(a.Universe10.LibraryBase.properties.types.name));
                        i.patchType(p.doDescrimination(i)), m = r.dumpInternal(i.wrapperNode(), !1, u), s = e.key();
                    } });
                }
            } if (n && n.isAssignableFrom("TypeDeclaration") && ("type" === s || "schema" == s) && m)
                if (m.forEach && "string" == typeof m[0]) {
                    var d = t.highLevel(), T = d.localType();
                    if (T && T.hasExternalInHierarchy()) {
                        var E = m[0].trim(), S = "{" === E[0] && "}" === E[E.length - 1], N = "<" === E[0] && ">" === E[E.length - 1];
                        S ? i.typePropertyKind = "JSON" : N && (i.typePropertyKind = "XML");
                    }
                    else
                        i.typePropertyKind = "TYPE_EXPRESSION";
                }
                else
                    "object" == typeof m && (i.typePropertyKind = "INPLACE"); if (("type" === s || "schema" == s) && m && m.forEach && "string" == typeof m[0]) {
                var E = m[0].trim(), S = r.stringLooksLikeJSON(E), N = r.stringLooksLikeXML(E);
                if (S || N) {
                    var _ = t.highLevel().lowLevel().includePath && t.highLevel().lowLevel().includePath();
                    if (!_ && t.highLevel().isElement()) {
                        var b = t.highLevel().asElement().attr("type");
                        b || (b = t.highLevel().asElement().attr("schema")), b && (_ = b.lowLevel().includePath && b.lowLevel().includePath());
                    }
                    if (_) {
                        var I = _.indexOf("#"), R = "";
                        I >= 0 && (R = _.substring(I), _ = _.substring(0, I));
                        var M, w = t.highLevel().lowLevel().unit().resolve(_).absolutePath();
                        M = 0 === w.indexOf("http://") || 0 === w.indexOf("https://") ? w : y.relative(t.highLevel().lowLevel().unit().project().getRootPath(), w), M = M.replace(/\\/g, "/"), i.schemaPath = M + R;
                    }
                }
            } if ((m || "type" != s) && (m || "schema" != s) && (m || "items" != s)) {
                if (t.definition && c.isTypeDeclarationSibling(t.definition()) && c.isTypeProperty(f)) {
                    var C = t[a.Universe10.TypeDeclaration.properties.schema.name]();
                    if (null != C && (!Array.isArray(C) || 0 != C.length))
                        return;
                    var d = t.highLevel(), v = d.lowLevel(), L = !1;
                    if (v.children().forEach(function (e) { return "schema" == e.key() ? void (L = !0) : void 0; }), L)
                        return;
                }
                if (Array.isArray(m)) {
                    for (var P = [], O = 0, D = m; O < D.length; O++) {
                        var U = D[O], x = r.dumpInternal(U);
                        "examples" === s && r.options && r.options.dumpXMLRepresentationOfExamples && U.expandable && U.expandable._owner && (x.asXMLString = U.expandable.asXMLString()), P.push(x);
                    }
                    if (0 == P.length && o.BasicNodeImpl.isInstance(t) && !r.isDefined(t, s))
                        return;
                    for (var k = 0, F = r.nodePropertyTransformers; k < F.length; k++) {
                        var B = F[k];
                        B.match(t, f) && (P = B.transform(P, t));
                    }
                    i[s] = P;
                }
                else {
                    var U = r.dumpInternal(m);
                    if (null == U && o.BasicNodeImpl.isInstance(t) && !r.isDefined(t, s))
                        return;
                    o.BasicNodeImpl.isInstance(t) && r.nodePropertyTransformers.forEach(function (e) { e.match(t, f) && (U = e.transform(U, t)); }), i[s] = U, "example" === s && r.options && r.options.dumpXMLRepresentationOfExamples && m.expandable && m.expandable._owner && (U.asXMLString = m.expandable.asXMLString());
                }
            } }), i; }, e.prototype.serializeScalarsAnnotations = function (e, t, n) { var r = this; if (t.scalarsAnnotations) {
                for (var i = {}, a = t.scalarsAnnotations(), o = 0, s = Object.keys(n); o < s.length; o++) {
                    var u = s[o];
                    if (a[u]) {
                        var l = a[u]();
                        if (l.length > 0)
                            if (Array.isArray(l[0])) {
                                var p = [];
                                l.forEach(function (e, t) { p.push(e.map(function (e) { return r.dumpInternal(e); })); }), p.filter(function (e) { return e.length > 0; }).length > 0 && (i[u] = p);
                            }
                            else
                                i[u] = l.map(function (e) { return r.dumpInternal(e); });
                    }
                }
                Object.keys(i).length > 0 && (e.scalarsAnnotations = i);
            } }, e.prototype.serializeMeta = function (e, t) { if (this.options.serializeMetadata) {
                var n = t.meta();
                n.isDefault() || (e.__METADATA__ = n.toJSON());
            } }, e.prototype.serializeTypeInstance = function (e) { var t = this; if (e.isScalar())
                return e.value(); if (e.isArray())
                return e.items().map(function (e) { return t.serializeTypeInstance(e); }); var n = e.properties(); if (0 == n.length)
                return null; var r = {}; return n.forEach(function (e) { return r[e.name()] = t.serializeTypeInstanceProperty(e); }), r; }, e.prototype.serializeTypeInstanceProperty = function (e) { var t = this; if (e.isArray()) {
                var n = e.values(), r = [];
                return n.forEach(function (e) { return r.push(t.serializeTypeInstance(e)); }), r;
            } return this.serializeTypeInstance(e.value()); }, e.prototype.isDefined = function (e, t) { var n = e.highLevel(); return n.elementsOfKind(t).length > 0 ? !0 : n.attributes(t).length > 0 ? !0 : !1; }, e; }();
            t.TCKDumper = v;
            var g = function () { function e(e, t) { this.typeMatcher = e, this.propMatcher = t; } return e.prototype.match = function (e, t) { return (null == e || this.typeMatcher(e)) && (null == t || this.propMatcher(t)); }, e; }(), A = function () { function e(e) { this.matchers = e; } return e.prototype.match = function (e, t) { for (var n = this.matchers.length, r = 0; n > r; r++)
                if (this.matchers[r].match(e, t))
                    return !0; return !1; }, e; }(), T = function () { function e(e, t) { this.matcher = e, this.propName = t; } return e.prototype.match = function (e, t) { return this.matcher.match(e.definition(), t); }, e.prototype.transform = function (e) { var t = this; if (Array.isArray(e) && e.length > 0 && e[0][this.propName]) {
                var n = {};
                return e.forEach(function (e) { var r = e[t.propName], i = n[r]; i ? Array.isArray(i) ? i.push(e) : n[r] = [i, e] : n[r] = e; }), n;
            } return e; }, e; }(), E = function () { function e(e, t) { this.matcher = e, this.propName = t; } return e.prototype.match = function (e, t) { return this.matcher.match(e.definition ? e.definition() : null, t); }, e.prototype.transform = function (e) { if (Array.isArray(e))
                return e; var t = {}; return t[e[this.propName]] = e, t; }, e; }(), S = function (e) { function t() { e.call(this, new A([new g(c.isApiSibling, c.isBaseUriParametersProperty), new g(c.isResourceBaseSibling, c.isUriParametersProperty), new g(c.isResourceBaseSibling, c.isQueryParametersProperty), new g(c.isTraitType, c.isQueryParametersProperty), new g(c.isMethodType, c.isQueryParametersProperty), new g(c.isSecuritySchemePartType, c.isQueryParametersProperty), new g(c.isTraitType, c.isHeadersProperty), new g(c.isMethodType, c.isHeadersProperty), new g(c.isSecuritySchemePartType, c.isHeadersProperty), new g(c.isBodyLikeType, c.isFormParametersProperty)]), "name"); } return i(t, e), t; }(T), N = function (e) { function t() { e.call(this, new A([new g(c.isLibraryBaseSibling, c.isTypesProperty), new g(function (e) { return c.isLibraryBaseSibling(e) && c.isRAML10Type(e); }, c.isSchemasProperty)]), "name"); } return i(t, e), t.prototype.match = function (e, t) { var n = null != e.parent() && this.matcher.match(e.parent().definition(), t); return n ? !0 : !1; }, t; }(E), _ = (function (e) { function t() { e.call(this, new A([new g(c.isLibraryBaseSibling, c.isUsesProperty)]), "name"); } return i(t, e), t; }(T), function (e) { function t() { e.call(this, new A([new g(c.isObjectTypeDeclarationSibling, c.isPropertiesProperty)]), "name"); } return i(t, e), t; }(T)), b = function (e) { function t() { e.call(this, new A([new g(c.isMethodBaseSibling, c.isResponsesProperty)]), "code"); } return i(t, e), t; }(T), I = function (e) { function t() { e.call(this, new A([new g(function (e) { return !0; }, c.isAnnotationsProperty)]), "name"); } return i(t, e), t; }(T), R = function (e) { function t() { e.call(this, new A([new g(c.isResponseType, c.isBodyProperty), new g(c.isMethodBaseSibling, c.isBodyProperty)]), "name"); } return i(t, e), t; }(T), M = function (e) { function t() { e.call(this, new A([new g(c.isTraitType, c.isTraitsProperty)]), "name"); } return i(t, e), t; }(E), w = function (e) { function t() { e.call(this, new A([new g(c.isResourceTypeType, c.isResourceTypesProperty)]), "name"); } return i(t, e), t.prototype.transform = function (t) { var n = f.Universe10.ResourceBase.properties.methods.name; if (Array.isArray(t))
                return t; var r = t[n]; return r && r.forEach(function (e) { var n = Object.keys(e); if (n.length > 0) {
                var r = n[0];
                t[r] = e[r];
            } }), delete t[n], e.prototype.transform.call(this, t); }, t; }(E), C = function (e) { function t() { e.call(this, new A([new g(c.isTypeDeclarationSibling, c.isFacetsProperty)]), "name"); } return i(t, e), t; }(T), L = function (e) { function t() { e.call(this, null, "name"); } return i(t, e), t.prototype.match = function (e, t) { return null != t && c.isSecuritySchemesProperty(t); }, t; }(E), P = function (e) { function t() { e.call(this, new A([new g(c.isLibraryBaseSibling, c.isAnnotationTypesProperty)]), "name"); } return i(t, e), t.prototype.match = function (e, t) { return null != e.parent() && this.matcher.match(e.parent().definition(), t); }, t; }(E), O = function (e) {
                function t() {
                    e.call(this, null, "method");
                }
                return i(t, e), t.prototype.match = function (e, t) { return null != e.parent() && c.isResourceTypeType(e.parent().definition()) && c.isMethodsProperty(t); }, t;
            }(E), D = a.Universe10.ExampleSpec.properties.name.name, U = a.Universe10.ExampleSpec.properties.value.name, x = "structuredContent", k = (function () { function e() { } return e.prototype.match = function (e, t) { return c.isExampleSpecType(e.definition()); }, e.prototype.transform = function (e) { var t = this; if (Array.isArray(e) && e.length > 0) {
                if (e[0][D]) {
                    var n = {};
                    return e.forEach(function (e) { return n[e[D]] = t.getActualExample(e); }), n;
                }
                var r = e.map(function (e) { return t.getActualExample(e); });
                return r;
            } return e; }, e.prototype.getActualExample = function (e) { return e[x] ? e[x] : e[U]; }, e; }(), function () { function e() { } return e.prototype.match = function (e, t) { return e.definition && c.isTypeDeclarationSibling(e.definition()); }, e.prototype.transform = function (e) { var t = Array.isArray(e), n = t ? e : [e]; return n.forEach(function (e) { var t = e.example; t && (e.example = t.structuredValue, e.structuredExample = t); }), t ? n : n[0]; }, e; }()), F = function () { function e() { this.matcher = new g(function (e) { return c.isApiType(e) && c.isRAML08Type(e); }, c.isSchemasProperty); } return e.prototype.match = function (e, t) { return null != e.parent() && this.matcher.match(e.parent().definition(), t); }, e.prototype.transform = function (e) { if (Array.isArray(e))
                return e; var t = {}; return t[e.key] = e.value, t; }, e.prototype.getActualExample = function (e) { return e[x] ? e[x] : e[U]; }, e; }(), B = function () { function e() { } return e.prototype.match = function (e, t) { return null != t && c.isProtocolsProperty(t); }, e.prototype.transform = function (e) { return "string" == typeof e ? e.toUpperCase() : Array.isArray(e) ? e.map(function (e) { return e.toUpperCase(); }) : e; }, e; }(), K = function () { function e() { this.usecases = new A([new g(c.isApiSibling, c.isMediaTypeProperty)]); } return e.prototype.match = function (e, t) { return this.usecases.match(e.definition(), t); }, e.prototype.transform = function (e) { return Array.isArray(e) && 1 == e.length ? e[0] : e; }, e; }(), V = function () { function e() { } return e.prototype.match = function (e, t) { return null != t && c.isResourcesProperty(t); }, e.prototype.transform = function (e, t) { if (Array.isArray(e))
                return e; var n = e[f.Universe10.Resource.properties.relativeUri.name]; if (n) {
                for (var r = n.trim().split("/"); r.length > 0 && 0 == r[0].length;)
                    r.shift();
                e.relativeUriPathSegments = r, e.absoluteUri = t.absoluteUri();
            } return e; }, e; }(), j = function () { function e() { } return e.prototype.match = function (e, t) { return e.parent() && e.parent().highLevel().lowLevel().libProcessed ? c.isAnnotationTypesProperty(t) || c.isTypesProperty(t) || c.isResourceTypesProperty(t) || c.isTraitsProperty(t) || c.isSecuritySchemesProperty(t) : !1; }, e.prototype.transform = function (e, t) { for (var n = t.highLevel().lowLevel(), r = n.key(), i = n; s.LowLevelProxyNode.isInstance(i);)
                i = i.originalNode(); var a = i.key(), o = e[Object.keys(e)[0]]; return o.name = a, o.displayName == r && (o.displayName = a), e; }, e; }(), W = function () { function e() { } return e.prototype.match = function (e, t) { var n = e.highLevel(); if (!n)
                return !1; var r = n.definition(); return r ? c.isResourceTypeType(r) || c.isTraitType(r) || c.isMethodType(r) || c.isResponseType(r) || c.isParameterDescendant(r) || c.isBodyLikeType(r) || c.isTypeDeclarationDescendant(r) : !1; }, e.prototype.transform = function (e) { if (Array.isArray(e))
                return e; var t = a.Universe10.Trait.properties.parametrizedProperties.name, n = e[t]; return n && (Object.keys(n).forEach(function (t) { e[t] = n[t]; }), delete e[t]), e; }, e; }(), q = function () { function e() { } return e.prototype.match = function (e, t) { return null != t && (c.isSecuredByProperty(t) || c.isIsProperty(t) || null != e.parent() && (c.isResourceType(e.parent().highLevel().definition()) || c.isResourceTypeType(e.parent().highLevel().definition())) && c.isTypeProperty(t)); }, e.prototype.transform = function (e) { return e ? Array.isArray(e) ? e : this.toSimpleValue(e) : null; }, e.prototype.toSimpleValue = function (e) { var t = e.name, n = e.structuredValue; if (n) {
                var r = {};
                return r[t] = n, r;
            } return t; }, e; }(), H = function () { function e() { } return e.prototype.match = function (e, t) { if (!o.BasicNodeImpl.isInstance(e))
                return !1; var n = e.highLevel(), r = n.definition(); if (!c.isTypeDeclarationDescendant(r))
                return !1; var i = n.localType(); return i && i.isArray() ? !0 : !1; }, e.prototype.transform = function (e) { var t = f.Universe10.TypeDeclaration.properties.type.name, n = f.Universe10.TypeDeclaration.properties.schema.name, r = f.Universe10.ArrayTypeDeclaration.properties.items.name, i = e[t]; return i || (i = e[n]), 1 == i.length && m.stringEndsWith(i[0], "[]") && (null == e[r] && (e[r] = i[0].substring(0, i[0].length - 2)), i[0] = "array"), e; }, e; }(), Y = function () { function e() { this.map = {}; } return e.prototype.addProperty = function (e, t) { var n = this.map[t]; n || (n = new G(t), this.map[t] = n), n.addProperty(e); }, e.prototype.print = function () { var e = this; return Object.keys(this.map).map(function (t) { return e.map[t].print(); }).join("\n") + "\n"; }, e; }(), G = function () { function e(e) { this.typeName = e, this.map = {}; } return e.prototype.addProperty = function (e) { var t = e.domain().nameId(), n = this.map[t]; n || (n = new X(t), this.map[t] = n), n.addProperty(e); }, e.prototype.print = function () { var e = this; return this.typeName + ":\n" + Object.keys(this.map).map(function (t) { return "    " + e.map[t].print(); }).join("\n"); }, e; }(), X = function () { function e(e) { this.typeName = e, this.map = {}; } return e.prototype.addProperty = function (e) { var t = e.nameId(); this.map[t] = e; }, e.prototype.print = function () { return this.typeName + ": " + Object.keys(this.map).sort().join(", "); }, e; }();
        }, function (e, t, n) {
            "use strict";
            function r(e, t, n, s) { var u = new i(function (i, u) { function l(a) { r(e, t, { qs: n.qs, headers: n.headers, timeout: n.timeout }).nodeify(function (e, t) { var r = e || t.statusCode >= 400; if ("function" == typeof n.retry && (r = n.retry(e, t, a + 1)), a >= (5 | n.maxRetries) && (r = !1), r) {
                var o = n.retryDelay;
                "function" == typeof n.retryDelay && (o = n.retryDelay(e, t, a + 1)), o = o || 200, setTimeout(function () { l(a + 1); }, o);
            }
            else
                e ? u(e) : i(t); }); } var p = new window.XMLHttpRequest; if ("string" != typeof e)
                throw new TypeError("The method must be a string."); if ("string" != typeof t)
                throw new TypeError("The URL/path must be a string."); if ("function" == typeof n && (s = n, n = {}), (null === n || void 0 === n) && (n = {}), "object" != typeof n)
                throw new TypeError("Options must be an object (or null)."); if ("function" != typeof s && (s = void 0), e = e.toUpperCase(), n.headers = n.headers || {}, n.retry && "GET" === e)
                return l(0); var c, f = !(!(c = /^([\w-]+:)?\/\/([^\/]+)/.exec(t)) || c[2] == window.location.host); if (f || (n.headers["X-Requested-With"] = "XMLHttpRequest"), n.qs && (t = o(t, n.qs)), n.json && (n.body = JSON.stringify(n.json), n.headers["Content-Type"] = "application/json"), n.timeout) {
                p.timeout = n.timeout;
                var m = Date.now();
                p.ontimeout = function () { var e = Date.now() - m, t = new Error("Request timed out after " + e + "ms"); t.timeout = !0, t.duration = e, u(t); };
            } p.onreadystatechange = function () { if (4 === p.readyState) {
                var e = {};
                p.getAllResponseHeaders().split("\r\n").forEach(function (t) { var n = t.split(":"); n.length > 1 && (e[n[0].toLowerCase()] = n.slice(1).join(":").trim()); });
                var n = new a(p.status, e, p.responseText);
                n.url = t, i(n);
            } }, p.open(e, t, !0); for (var h in n.headers)
                p.setRequestHeader(h, n.headers[h]); p.send(n.body ? n.body : null); }); return u.getBody = function () { return u.then(function (e) { return e.getBody(); }); }, u.nodeify(s); }
            var i = n(116), a = n(66), o = n(92);
            e.exports = r;
        }, function (e, t, n) { var r, i, a; !function (n, o) {
            "use strict";
            "object" == typeof e && "object" == typeof e.exports ? e.exports = o() : (i = [], r = o, a = "function" == typeof r ? r.apply(t, i) : r, !(void 0 !== a && (e.exports = a)));
        }("object" == typeof window ? window : this, function () {
            "use strict";
            function e(e) { this.capacity = e > 0 ? +e : Number.MAX_VALUE, this.data = Object.create ? Object.create(null) : {}, this.hash = Object.create ? Object.create(null) : {}, this.linkedList = { length: 0, head: null, end: null }; }
            function t(n) { return this instanceof t ? void (this._LRUCacheState = new e(n)) : new t(n); }
            function n(e, t) { t !== e.head && (e.end ? e.end === t && (e.end = t.n) : e.end = t, r(t.n, t.p), r(t, e.head), e.head = t, e.head.n = null); }
            function r(e, t) { e !== t && (e && (e.p = t), t && (t.n = e)); }
            var i = t.prototype;
            return i.get = function (e) { var t = this._LRUCacheState, r = t.hash[e]; return r ? (n(t.linkedList, r), t.data[e]) : void 0; }, i.set = function (e, t) { var r = this._LRUCacheState, i = r.hash[e]; return void 0 === t ? this : (i || (r.hash[e] = { key: e }, r.linkedList.length += 1, i = r.hash[e]), n(r.linkedList, i), r.data[e] = t, r.linkedList.length > r.capacity && this.remove(r.linkedList.end.key), this); }, i.update = function (e, t) { this._LRUCacheState; if (this.has(e)) {
                var n = this.get(e);
                this.set(e, t(n));
            } return this; }, i.remove = function (e) { var t = this._LRUCacheState, n = t.hash[e]; return n ? (n === t.linkedList.head && (t.linkedList.head = n.p), n === t.linkedList.end && (t.linkedList.end = n.n), r(n.n, n.p), delete t.hash[e], delete t.data[e], t.linkedList.length -= 1, this) : this; }, i.removeAll = function () { return this._LRUCacheState = new e(this._LRUCacheState.capacity), this; }, i.info = function () { var e = this._LRUCacheState; return { capacity: e.capacity, length: e.linkedList.length }; }, i.keys = function () { for (var e = this._LRUCacheState, t = [], n = e.linkedList.head; n;)
                t.push(n.key), n = n.p; return t; }, i.has = function (e) { return !!this._LRUCacheState.hash[e]; }, i.staleKey = function () { return this._LRUCacheState.linkedList.end && this._LRUCacheState.linkedList.end.key; }, i.popStale = function () { var e = this.staleKey(); if (!e)
                return null; var t = [e, this._LRUCacheState.data[e]]; return this.remove(e), t; }, t.NAME = "LRUCache", t.VERSION = "v0.2.0", t;
        }); }, function (e, t, n) { function r(e) { this.options = e || { locator: {} }; } function i(e, t, n) { function r(t) { var r = e[t]; !r && o && (r = 2 == e.length ? function (n) { e(t, n); } : e), i[t] = r && function (e) { r("[xmldom " + t + "]	" + e + s(n)); } || function () { }; } if (!e) {
            if (t instanceof a)
                return t;
            e = t;
        } var i = {}, o = e instanceof Function; return n = n || {}, r("warning"), r("error"), r("fatalError"), i; } function a() { this.cdata = !1; } function o(e, t) { t.lineNumber = e.lineNumber, t.columnNumber = e.columnNumber; } function s(e) { return e ? "\n@" + (e.systemId || "") + "#[line:" + e.lineNumber + ",col:" + e.columnNumber + "]" : void 0; } function u(e, t, n) { return "string" == typeof e ? e.substr(t, n) : e.length >= t + n || t ? new java.lang.String(e, t, n) + "" : e; } function l(e, t) { e.currentElement ? e.currentElement.appendChild(t) : e.doc.appendChild(t); } r.prototype.parseFromString = function (e, t) { var n = this.options, r = new p, o = n.domBuilder || new a, s = n.errorHandler, u = n.locator, l = n.xmlns || {}, c = { lt: "<", gt: ">", amp: "&", quot: '"', apos: "'" }; return u && o.setDocumentLocator(u), r.errorHandler = i(s, o, u), r.domBuilder = n.domBuilder || o, /\/x?html?$/.test(t) && (c.nbsp = " ", c.copy = "©", l[""] = "http://www.w3.org/1999/xhtml"), l.xml = l.xml || "http://www.w3.org/XML/1998/namespace", e ? r.parse(e, l, c) : r.errorHandler.error("invalid doc source"), o.doc; }, a.prototype = { startDocument: function () { this.doc = (new c).createDocument(null, null, null), this.locator && (this.doc.documentURI = this.locator.systemId); }, startElement: function (e, t, n, r) { var i = this.doc, a = i.createElementNS(e, n || t), s = r.length; l(this, a), this.currentElement = a, this.locator && o(this.locator, a); for (var u = 0; s > u; u++) {
                var e = r.getURI(u), p = r.getValue(u), n = r.getQName(u), c = i.createAttributeNS(e, n);
                this.locator && o(r.getLocator(u), c), c.value = c.nodeValue = p, a.setAttributeNode(c);
            } }, endElement: function (e, t, n) { var r = this.currentElement; r.tagName; this.currentElement = r.parentNode; }, startPrefixMapping: function (e, t) { }, endPrefixMapping: function (e) { }, processingInstruction: function (e, t) { var n = this.doc.createProcessingInstruction(e, t); this.locator && o(this.locator, n), l(this, n); }, ignorableWhitespace: function (e, t, n) { }, characters: function (e, t, n) { if (e = u.apply(this, arguments)) {
                if (this.cdata)
                    var r = this.doc.createCDATASection(e);
                else
                    var r = this.doc.createTextNode(e);
                this.currentElement ? this.currentElement.appendChild(r) : /^\s*$/.test(e) && this.doc.appendChild(r), this.locator && o(this.locator, r);
            } }, skippedEntity: function (e) { }, endDocument: function () { this.doc.normalize(); }, setDocumentLocator: function (e) { (this.locator = e) && (e.lineNumber = 0); }, comment: function (e, t, n) { e = u.apply(this, arguments); var r = this.doc.createComment(e); this.locator && o(this.locator, r), l(this, r); }, startCDATA: function () { this.cdata = !0; }, endCDATA: function () { this.cdata = !1; }, startDTD: function (e, t, n) { var r = this.doc.implementation; if (r && r.createDocumentType) {
                var i = r.createDocumentType(e, t, n);
                this.locator && o(this.locator, i), l(this, i);
            } }, warning: function (e) { console.warn("[xmldom warning]	" + e, s(this.locator)); }, error: function (e) { console.error("[xmldom error]	" + e, s(this.locator)); }, fatalError: function (e) { throw console.error("[xmldom fatalError]	" + e, s(this.locator)), e; } }, "endDTD,startEntity,endEntity,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,resolveEntity,getExternalSubset,notationDecl,unparsedEntityDecl".replace(/\w+/g, function (e) { a.prototype[e] = function () { return null; }; }); var p = n(90).XMLReader, c = t.DOMImplementation = n(91).DOMImplementation; t.XMLSerializer = n(91).XMLSerializer, t.DOMParser = r; }, function (e, t, n) { !function (t, n) { e.exports = n(); }(this, function () { function e(e) { return e.charAt(0).toUpperCase() + e.substr(1).toLowerCase(); } function t(e) { return "string" == typeof e ? new RegExp("^" + e + "$", "i") : e; } function n(t, n) { return t === t.toUpperCase() ? n.toUpperCase() : t[0] === t[0].toUpperCase() ? e(n) : n.toLowerCase(); } function r(e, t) { return e.replace(/\$(\d{1,2})/g, function (e, n) { return t[n] || ""; }); } function i(e, t, i) { if (!e.length || l.hasOwnProperty(e))
            return t; for (var a = i.length; a--;) {
            var o = i[a];
            if (o[0].test(t))
                return t.replace(o[0], function (e, t, i) { var a = r(o[1], arguments); return "" === e ? n(i[t - 1], a) : n(e, a); });
        } return t; } function a(e, t, r) { return function (a) { var o = a.toLowerCase(); return t.hasOwnProperty(o) ? n(a, o) : e.hasOwnProperty(o) ? n(a, e[o]) : i(o, a, r); }; } function o(e, t, n) { var r = 1 === t ? o.singular(e) : o.plural(e); return (n ? t + " " : "") + r; } var s = [], u = [], l = {}, p = {}, c = {}; return o.plural = a(c, p, s), o.singular = a(p, c, u), o.addPluralRule = function (e, n) { s.push([t(e), n]); }, o.addSingularRule = function (e, n) { u.push([t(e), n]); }, o.addUncountableRule = function (e) { return "string" == typeof e ? void (l[e.toLowerCase()] = !0) : (o.addPluralRule(e, "$0"), void o.addSingularRule(e, "$0")); }, o.addIrregularRule = function (e, t) { t = t.toLowerCase(), e = e.toLowerCase(), c[e] = t, p[t] = e; }, [["I", "we"], ["me", "us"], ["he", "they"], ["she", "they"], ["them", "them"], ["myself", "ourselves"], ["yourself", "yourselves"], ["itself", "themselves"], ["herself", "themselves"], ["himself", "themselves"], ["themself", "themselves"], ["is", "are"], ["this", "these"], ["that", "those"], ["echo", "echoes"], ["dingo", "dingoes"], ["volcano", "volcanoes"], ["tornado", "tornadoes"], ["torpedo", "torpedoes"], ["genus", "genera"], ["viscus", "viscera"], ["stigma", "stigmata"], ["stoma", "stomata"], ["dogma", "dogmata"], ["lemma", "lemmata"], ["schema", "schemata"], ["anathema", "anathemata"], ["ox", "oxen"], ["axe", "axes"], ["die", "dice"], ["yes", "yeses"], ["foot", "feet"], ["eave", "eaves"], ["goose", "geese"], ["tooth", "teeth"], ["quiz", "quizzes"], ["human", "humans"], ["proof", "proofs"], ["carve", "carves"], ["valve", "valves"], ["thief", "thieves"], ["genie", "genies"], ["groove", "grooves"], ["pickaxe", "pickaxes"], ["whiskey", "whiskies"]].forEach(function (e) { return o.addIrregularRule(e[0], e[1]); }), [[/s?$/i, "s"], [/([^aeiou]ese)$/i, "$1"], [/(ax|test)is$/i, "$1es"], [/(alias|[^aou]us|tlas|gas|ris)$/i, "$1es"], [/(e[mn]u)s?$/i, "$1s"], [/([^l]ias|[aeiou]las|[emjzr]as|[iu]am)$/i, "$1"], [/(alumn|syllab|octop|vir|radi|nucle|fung|cact|stimul|termin|bacill|foc|uter|loc|strat)(?:us|i)$/i, "$1i"], [/(alumn|alg|vertebr)(?:a|ae)$/i, "$1ae"], [/(seraph|cherub)(?:im)?$/i, "$1im"], [/(her|at|gr)o$/i, "$1oes"], [/(agend|addend|millenni|dat|extrem|bacteri|desiderat|strat|candelabr|errat|ov|symposi|curricul|automat|quor)(?:a|um)$/i, "$1a"], [/(apheli|hyperbat|periheli|asyndet|noumen|phenomen|criteri|organ|prolegomen|hedr|automat)(?:a|on)$/i, "$1a"], [/sis$/i, "ses"], [/(?:(kni|wi|li)fe|(ar|l|ea|eo|oa|hoo)f)$/i, "$1$2ves"], [/([^aeiouy]|qu)y$/i, "$1ies"], [/([^ch][ieo][ln])ey$/i, "$1ies"], [/(x|ch|ss|sh|zz)$/i, "$1es"], [/(matr|cod|mur|sil|vert|ind|append)(?:ix|ex)$/i, "$1ices"], [/(m|l)(?:ice|ouse)$/i, "$1ice"], [/(pe)(?:rson|ople)$/i, "$1ople"], [/(child)(?:ren)?$/i, "$1ren"], [/eaux$/i, "$0"], [/m[ae]n$/i, "men"], ["thou", "you"]].forEach(function (e) { return o.addPluralRule(e[0], e[1]); }), [[/s$/i, ""], [/(ss)$/i, "$1"], [/((a)naly|(b)a|(d)iagno|(p)arenthe|(p)rogno|(s)ynop|(t)he)(?:sis|ses)$/i, "$1sis"], [/(^analy)(?:sis|ses)$/i, "$1sis"], [/(wi|kni|(?:after|half|high|low|mid|non|night|[^\w]|^)li)ves$/i, "$1fe"], [/(ar|(?:wo|[ae])l|[eo][ao])ves$/i, "$1f"], [/([^aeiouy]|qu)ies$/i, "$1y"], [/(^[pl]|zomb|^(?:neck)?t|[aeo][lt]|cut)ies$/i, "$1ie"], [/(\b(?:mon|smil))ies$/i, "$1ey"], [/(m|l)ice$/i, "$1ouse"], [/(seraph|cherub)im$/i, "$1"], [/(x|ch|ss|sh|zz|tto|go|cho|alias|[^aou]us|tlas|gas|(?:her|at|gr)o|ris)(?:es)?$/i, "$1"], [/(e[mn]u)s?$/i, "$1"], [/(movie|twelve)s$/i, "$1"], [/(cris|test|diagnos)(?:is|es)$/i, "$1is"], [/(alumn|syllab|octop|vir|radi|nucle|fung|cact|stimul|termin|bacill|foc|uter|loc|strat)(?:us|i)$/i, "$1us"], [/(agend|addend|millenni|dat|extrem|bacteri|desiderat|strat|candelabr|errat|ov|symposi|curricul|quor)a$/i, "$1um"], [/(apheli|hyperbat|periheli|asyndet|noumen|phenomen|criteri|organ|prolegomen|hedr|automat)a$/i, "$1on"], [/(alumn|alg|vertebr)ae$/i, "$1a"], [/(cod|mur|sil|vert|ind)ices$/i, "$1ex"], [/(matr|append)ices$/i, "$1ix"], [/(pe)(rson|ople)$/i, "$1rson"], [/(child)ren$/i, "$1"], [/(eau)x?$/i, "$1"], [/men$/i, "man"]].forEach(function (e) { return o.addSingularRule(e[0], e[1]); }), ["advice", "agenda", "bison", "bream", "buffalo", "carp", "chassis", "cod", "cooperation", "corps", "digestion", "debris", "diabetes", "energy", "equipment", "elk", "excretion", "expertise", "flounder", "gallows", "garbage", "graffiti", "headquarters", "health", "herpes", "highjinks", "homework", "information", "jeans", "justice", "kudos", "labour", "machinery", "mackerel", "media", "mews", "moose", "news", "pike", "plankton", "pliers", "pollution", "premises", "rain", "rice", "salmon", "scissors", "series", "sewage", "shambles", "shrimp", "species", "staff", "swine", "trout", "tuna", "whiting", "wildebeest", "wildlife", "you", /pox$/i, /ois$/i, /deer$/i, /fish$/i, /sheep$/i, /measles$/i, /[^aeiou]ese$/i].forEach(o.addUncountableRule), o; }); }, function (e, t, n) { t.dot = t.dotCase = n(117), t.swap = t.swapCase = n(118), t.path = t.pathCase = n(119), t.upper = t.upperCase = n(120), t.lower = t.lowerCase = n(121), t.camel = t.camelCase = n(122), t.snake = t.snakeCase = n(123), t.title = t.titleCase = n(124), t.param = t.paramCase = n(125), t.pascal = t.pascalCase = n(126), t.constant = t.constantCase = n(127), t.sentence = t.sentenceCase = n(128), t.isUpper = t.isUpperCase = n(129), t.isLower = t.isLowerCase = n(130), t.ucFirst = t.upperCaseFirst = n(131), t.lcFirst = t.lowerCaseFirst = n(132); }, function (e, t, n) {
            "use strict";
            function r(e) { var t = new ie.Project(ae.dirname(e)), n = t.unit(ae.basename(e)); return n && n.isRAMLUnit() ? z.fromUnit(n).wrapperNode() : null; }
            function i(e) { var t = e.highLevel().lowLevel(); if (Z.LowLevelProxyNode.isInstance(t))
                return e; var n = null != e.highLevel().reusedNode() ? Q : J; return n.expandTraitsAndResourceTypes(e); }
            function a(e) { var t = "", n = e; do
                e = n, t = e.relativeUri().value() + t, n = e.parent();
            while (n.definition().key().name == $.Universe08.Resource.name); return t; }
            function o(e) { var t = "", n = e; do
                e = n, t = e.relativeUri().value() + t, n = e.parent();
            while (n.definition().key().name == $.Universe08.Resource.name); t = t.replace(/\/\//g, "/"); var r = n.baseUri(), i = r ? r.value() : ""; return i = i ? i : "", te.stringEndsWith(i, "/") && (t = t.substring(1)), t = i + t; }
            function s(e) { return z.qName(e.highLevel(), e.highLevel().root()); }
            function u(e) { return l(e); }
            function l(e) { return f(e, function (e) { return re.isTraitType(e); }); }
            function p(e) { return c(e); }
            function c(e) { return f(e, function (e) { return re.isResourceTypeType(e); }); }
            function f(e, t) { var n = ne.globalDeclarations(e.highLevel()).filter(function (e) { return t(e.definition()); }), r = e.highLevel().lowLevel(); if (!r)
                return []; var i = r.includePath(); i || (i = r.unit().path()); var a = n.map(function (e) { var t, n = e.lowLevel().unit().path(); return n != i ? (t = Y.buildWrapperNode(e, !1), t.meta().setCalculated()) : t = e.wrapperNode(), t; }); return a; }
            function m(e) { var t = [], n = e; do
                e = n, t.push(e.relativeUri().value()), n = e.parent();
            while (n.definition().key().name == $.Universe08.Resource.name); return t.reverse(); }
            function h(e) { return H.ResourceImpl.isInstance(e.parent()) ? e.parent() : null; }
            function d(e) { var t = e.parent(); return t.definition().key().name == $.Universe08.Resource.name, null; }
            function y(e, t) { if (null == e)
                return null; var n = e.resources(); return n ? (n = n.filter(function (e) { return e.relativeUri().value() == t; }), 0 == n.length ? null : n[0]) : null; }
            function v(e, t) { if (!e)
                return null; for (var n = null, r = 0; r < t.length; r++) {
                if (n = y(e, t[r]), !n)
                    return null;
                e = n;
            } return n; }
            function g(e, t) { return e ? e.methods().filter(function (e) { return e.method() == t; }) : null; }
            function A(e, t, n) { var r = v(e, t); return null == r ? null : g(r, n); }
            function T(e) { return e.definition().key().name == $.Universe08.Api.name; }
            function E(e) { for (var t = e; !T(t);)
                t = t.parent(); return t; }
            function S(e) { var t = e.parent(); if (H.ResourceImpl.isInstance(t))
                return a(t) + " " + e.method().toLowerCase(); if (H.ResourceTypeImpl.isInstance(t))
                return t.name() + " " + e.method().toLowerCase(); throw new Error(ee.applyTemplate(se.METHOD_OWNED_BY, { owner: e.definition().key().name })); }
            function N(e) { var t = e.code().value(), n = ee.validateResponseString(t); if (null != n)
                return !1; try {
                if (parseInt(t.charAt(0)) < 4)
                    return !0;
            }
            catch (r) { } return !1; }
            function _(e) { var t = [], n = function (e) { t.push(e), e.resources().forEach(function (e) { return n(e); }); }; return e.resources().forEach(function (e) { return n(e); }), t; }
            function b(e) { return I(e); }
            function I(e) { var t = e.relativeUri().value(), n = e.uriParameters_original(), r = $.Universe08.Resource.properties.uriParameters.name; return j(n, t, e, r); }
            function R(e) { return M(e); }
            function M(e) { var t = e.baseUri() ? e.baseUri().value() : "", n = e.baseUriParameters_original(), r = $.Universe08.Api.properties.baseUriParameters.name; return j(n, t, e, r); }
            function w(e) { var t = [], n = e; do
                e = n, t = I(e).concat(t), n = e.parent();
            while (n.definition().key().name == $.Universe10.Resource.name); var r = n; r.baseUriParameters(); return t = M(r).concat(t); }
            function C(e) { return L(e); }
            function L(e) { return e.protocols().map(function (e) { return e.toUpperCase(); }); }
            function P(e) { return O(e); }
            function O(e) { return e.securedBy(); }
            function D(e) { var t = e.highLevel(); if (!t)
                return ""; var n = t.value(); return n ? n.toString() : ""; }
            function U(e) { var t = e.highLevel(); if (!t)
                return null; var n = ne.findDeclarationByNode(t, ne.LocationKind.VALUE_COMPLETION); if (!n)
                return null; if (!n.getKind || n.getKind() != X.NodeKind.NODE)
                return null; var r = n.wrapperNode(); return H.AbstractSecuritySchemeImpl.isInstance(r) ? r : null; }
            function x(e) { return e.highLevel().definition().universe().version(); }
            function k(e) { var t = e.value().lowLevel(); return new G.TypeInstanceImpl(t); }
            function F(e) { var t = e.highLevel().value(); return "string" == typeof t || null == t ? t : t.valueName(); }
            function B(e) { return V(e); }
            function K(e) { return V(e); }
            function V(e) { var t = e.highLevel(), n = t.parent(), r = e.name(), i = ne.referenceTargets(t.property(), n).filter(function (e) { return z.qName(e, n) == r; }); return 0 == i.length ? null : i[0].wrapperNode(); }
            function j(e, t, n, r) { var i = n.highLevel(), a = i.definition().property(r); if (!t)
                return []; var o = {}; e.forEach(function (e) { var t = o[e.name()]; t || (t = [], o[e.name()] = t), t.push(e); }); for (var s = [], u = 0, l = {}, p = t.indexOf("{"); p >= 0 && (u = t.indexOf("}", ++p), !(0 > u)); p = t.indexOf("{", u)) {
                var c = t.substring(p, u);
                if (l[c] = !0, o[c])
                    o[c].forEach(function (e) { return s.push(e); });
                else {
                    var f = new H.StringTypeDeclarationImpl(c);
                    f.setName(c);
                    var m = f.highLevel();
                    m.setParent(i), f.meta().setCalculated(), m.patchProp(a), s.push(f);
                }
            } return Object.keys(o).filter(function (e) { return !l[e]; }).forEach(function (e) { return o[e].forEach(function (e) { return s.push(e); }); }), s; }
            function W(e) { var t = e.schema(); if (null == t)
                return null; var n = t.value(); if (!n)
                return null; if (te.stringStartsWith(n, "{") || te.stringStartsWith(n, "[") || te.stringStartsWith(n, "<"))
                return n; var r = e.highLevel(), i = r.root(), a = i.elementsOfKind($.Universe08.Api.properties.schemas.name), o = oe.find(a, function (e) { return e.name() == n; }); if (!o)
                return n; if (!o.getKind || o.getKind() != X.NodeKind.NODE)
                return n; if (o.definition().key() != $.Universe08.GlobalSchema)
                return n; var s = o.attr($.Universe08.GlobalSchema.properties.value.name); return null == s ? null : s.value(); }
            function q(e) { var t = e.highLevel(); if (null == t)
                return null; var n = t.lowLevel(); if (null == n)
                return null; var r = n.children().filter(function (e) { return e.key().indexOf("<<") >= 0; }); if (0 == r.length)
                return null; var i = new G.TypeInstanceImpl(r); return i; }
            var H = n(50), Y = n(46), G = n(48), X = n(9), z = n(16), $ = n(17), J = n(27), Q = n(30), Z = n(41), ee = n(28), te = n(35), ne = n(13), re = n(14), ie = n(25), ae = n(15), oe = n(70), se = n(60);
            t.load = r, t.expandTraitsAndResourceTypes = i, t.completeRelativeUri = a, t.absoluteUri = o, t.qName = s, t.traitsPrimary = u, t.allTraits = l, t.resourceTypesPrimary = p, t.allResourceTypes = c, t.relativeUriSegments = m, t.parentResource = h, t.parent = d, t.childResource = y, t.getResource = v, t.childMethod = g, t.getMethod = A, t.ownerApi = E, t.methodId = S, t.isOkRange = N, t.allResources = _;
            t.uriParametersPrimary = b, t.uriParameters = I, t.baseUriParametersPrimary = R, t.baseUriParameters = M, t.absoluteUriParameters = w, t.protocolsPrimary = C, t.allProtocols = L, t.securedByPrimary = P, t.allSecuredBy = O, t.securitySchemeName = D, t.securityScheme = U, t.RAMLVersion = x, t.structuredValue = k, t.referenceName = F, t.referencedTrait = B, t.referencedResourceType = K, t.schemaContent = W, t.getTemplateParametrizedProperties = q;
        }, function (e, t, n) {
            "use strict";
            function r(e) { return null == e; }
            function i(e) { return r(e) ? "" : String(e); }
            function a(e) { return -1 === [0, !1, "", "0", "false"].indexOf(e); }
            function o(e) { return isFinite(e) ? Number(e) : null; }
            function s(e) { return e % 1 === 0 ? Number(e) : null; }
            function u(e) { return isNaN(Date.parse(e)) ? null : new Date(e); }
            function l(e, t, n) { var i = Array.isArray(e) ? e : [e], a = i.map(function (e) { function i(e, t, n) { for (var r = 0; r < a.length; r++) {
                var i = a[r], e = i(e, t, n);
                if (null != e)
                    return e;
            } return null; } var a = [], o = n[e.type]; return "function" == typeof o && a.push(o), Object.keys(e).filter(function (e) { return "type" !== e && "repeat" !== e && "default" !== e; }).forEach(function (n) { var r = t[n]; "function" == typeof r && a.push(r(e[n], n)); }), function (t, n, a) { if (r(t))
                return null != e["default"] ? i(e["default"], n, a) : e.repeat && !e.required ? [] : t; if (e.repeat) {
                var o = Array.isArray(t) ? t : [t];
                return o = o.map(function (e) { return i(e, n, a); }), o.some(r) ? null : t;
            } if (Array.isArray(t)) {
                if (t.length > 1)
                    return null;
                t = t[0];
            } return i(t, n, a); }; }); return function (e, t, n) { for (var r = 0; r < a.length; r++) {
                var i = a[r], o = i(e, t, n);
                if (null != o)
                    return o;
            } return e; }; }
            function p() { function e(e) { return l(e, n, r); } var t, n = {}, r = { string: i, number: o, integer: s, "boolean": a, date: u }, p = function (e) { if (!e)
                return function () { return {}; }; var t = {}; return Object.keys(e).forEach(function (n) { t[n] = p.rule(e[n]); }), function (e) { e = e || {}; var n = {}; return Object.keys(t).forEach(function (r) { var i = e[r], a = t[r]; Object.prototype.hasOwnProperty.call(e, r) && (n[r] = a(i, r, e)); }), n; }; }; return t = p, t.rule = e, t.TYPES = r, t.RULES = n, t; }
            t.sanitize = p;
        }, function (e, t, n) { (function (e) {
            "use strict";
            function n(e) { return "[object Date]" === v.call(e) && !isNaN(e.getTime()); }
            function r(e) { return "boolean" == typeof e; }
            function i(e) { return "string" == typeof e; }
            function a(e) { return "number" == typeof e && e % 1 === 0; }
            function o(e) { return "number" == typeof e && isFinite(e); }
            function s(e) { return function (t) { return t >= e; }; }
            function u(e) { return function (t) { return e >= t; }; }
            function l(t) { return function (n) { return e.byteLength(n) >= t; }; }
            function p(t) { return function (n) { return e.byteLength(n) <= t; }; }
            function c(e) { return e && 0 != e.length ? function (t) { return e.indexOf(t) > -1; } : function (e) { return !0; }; }
            function f(e) { var t = "string" == typeof e ? new RegExp(e) : e; return t.test.bind(t); }
            function m(e, t, n, r, i) { return { valid: e, rule: r, attr: i, value: n, key: t }; }
            function h(e, t) { var n = []; return Object.keys(e).forEach(function (r) { var i = t[r]; if (i) {
                var a = e[r];
                n.push([r, i(a, r), a]);
            } }), function (e, t, r) { for (var i = 0; i < n.length; i++) {
                var a = n[i], o = a[0], s = a[1], u = a[2], l = s(e, t, r);
                if (!l)
                    return m(!1, t, e, o, u);
            } return m(!0, t, e); }; }
            function d(e, t, n) { var r = Array.isArray(e) ? e : [e], i = !r.length, a = [], o = []; return r.forEach(function (e) { var n = [e.type || "string", h(e, t)]; e.required || (i = !0), e.repeat ? o.push(n) : a.push(n); }), function (e, t, r) { if (null == e)
                return m(i, t, e, "required", !i); var s = Array.isArray(e), u = s ? e : [e], l = s ? o : a; if (!l.length)
                return m(!1, t, e, "repeat", !s); var p = null, c = e; return l.some(function (e) { var i = u.every(function (i) { var a = e[0], o = n[a] && n[a](i, t, r); return o || (p = m(!1, t, c, "type", a)), o; }); return i ? (u.every(function (n) { var r = e[1]; return p = r(n, t), p.valid; }), !0) : !1; }), p; }; }
            function y() { function e(e) { return d(e, h, m); } var t, m = { date: n, number: o, integer: a, "boolean": r, string: i }, h = { minimum: s, maximum: u, minLength: l, maxLength: p, "enum": c, pattern: f }, y = function (t) { if (!t)
                return function (e) { return { valid: !0, errors: [] }; }; var n = {}; return Object.keys(t).forEach(function (r) { n[r] = e(t[r]); }), function (e) { e = e || {}; var t = Object.keys(n).map(function (t) { var r = e[t], i = n[t]; return i(r, t, e); }).filter(function (e) { return !e.valid; }); return { valid: 0 === t.length, errors: t }; }; }; return t = y, t.rule = e, t.TYPES = m, t.RULES = h, t; }
            var v = Object.prototype.toString;
            t.validate = y;
        }).call(t, n(113).Buffer); }, function (e, t, n) {
            "use strict";
            function r(e, t) { "MetaModel.declaresSubTypeOf" == e.name && t.getAdapter(u.RAMLService).setExtendedTypeName(e.arguments[0]), "MetaModel.nameAtRuntime" == e.name && t.setNameAtRuntime(e.arguments[0]), "MetaModel.description" == e.name && t.withDescription(e.arguments[0]), "MetaModel.inlinedTemplates" == e.name && t.getAdapter(u.RAMLService).setInlinedTemplates(!0), "MetaModel.requireValue" == e.name && t.getAdapter(u.RAMLService).withContextRequirement("" + e.arguments[0], "" + e.arguments[1]), "MetaModel.referenceIs" == e.name && t.getAdapter(u.RAMLService).withReferenceIs("" + e.arguments[0]), "MetaModel.actuallyExports" == e.name && t.getAdapter(u.RAMLService).withActuallyExports("" + e.arguments[0]), "MetaModel.convertsToGlobalOfType" == e.name && t.getAdapter(u.RAMLService).withConvertsToGlobal("" + e.arguments[0]), "MetaModel.allowAny" == e.name && t.getAdapter(u.RAMLService).withAllowAny(), "MetaModel.allowQuestion" == e.name && t.getAdapter(u.RAMLService).withAllowQuestion(), "MetaModel.alias" == e.name && t.getAdapter(u.RAMLService).addAlias("" + e.arguments[0]), "MetaModel.consumesRefs" == e.name && t.getAdapter(u.RAMLService).setConsumesRefs(!0), "MetaModel.canInherit" == e.name && t.getAdapter(u.RAMLService).withCanInherit("" + e.arguments[0]), "MetaModel.definingPropertyIsEnough" == e.name && t.getAdapter(u.RAMLService).definingPropertyIsEnough("" + e.arguments[0]), "MetaModel.customHandling" == e.name && t.setCustom(!0), "MetaModel.superclasses" == e.name && t.getAdapter(u.RAMLService).registerSupertypes(e.arguments[0]), "MetaModel.possibleInterfaces" == e.name && t.getAdapter(u.RAMLService).registerPossibleInterfaces(e.arguments[0]); }
            function i(e, n) { t.annotationHandlers[n.name](n, e); }
            var a = n(39), o = n(139), s = n(70), u = a;
            t.handleTypeAnnotation = r, t.annotationHandlers = { key: function (e, t) { t.withFromParentKey(), t.withKey(!0); }, value: function (e, t) { t.withFromParentValue(); }, canBeValue: function (e, t) { t.withCanBeValue(); }, unmerged: function (e, t) { t.unmerge(); }, startFrom: function (e, t) { t.withKeyRestriction(e.arguments[0]), t.merge(); }, oneOf: function (e, t) { t.withEnumOptions(e.arguments[0]); }, oftenKeys: function (e, t) { t.withOftenKeys(e.arguments[0]); }, embeddedInMaps: function (e, t) { t.getAdapter(u.RAMLPropertyParserService).withEmbedMap(); }, system: function (e, t) { t.getAdapter(u.RAMLPropertyParserService).withSystem(!0); }, required: function (e, t) { "false" != e.arguments[0] && e.arguments[0] !== !1 && t.withRequired(!0); }, noDirectParse: function (e, t) { "false" != e.arguments[0] && e.arguments[0] !== !1 && t.withNoDirectParse(); }, setsContextValue: function (e, t) { t.addChildValueConstraint(new a.ChildValueConstraint("" + e.arguments[0], "" + e.arguments[1])); }, defaultValue: function (e, t) { t.setDefaultVal("" + e.arguments[0]); }, defaultIntegerValue: function (e, t) { t.setDefaultIntegerVal(e.arguments[0]); }, defaultBooleanValue: function (e, t) { t.setDefaultBooleanVal(e.arguments[0]); }, facetId: function (e, t) {
                    "minItems" == e.arguments[0] && t.setFacetValidator(function (e, t) { if (e instanceof Array) {
                        var n = Number.parseInt("" + t.value());
                        if (n > e.length)
                            return "array should contain at least " + t.value() + " items";
                    } return null; }), "enum" == e.arguments[0] && t.setFacetValidator(function (e, t) { var n = e + "", r = t; try {
                        if (!r.some(function (e) { return e == n; }))
                            return "value should be one of :" + r.join(",");
                    }
                    catch (i) {
                        return;
                    } return null; }), "maxItems" == e.arguments[0] && t.setFacetValidator(function (e, t) { if (e instanceof Array) {
                        var n = Number.parseInt("" + t);
                        if (n < e.length)
                            return "array should contain not more then " + t.value() + " items";
                    } return null; }), "minProperties" == e.arguments[0] && t.setFacetValidator(function (e, t) { if (e instanceof Object) {
                        var n = Number.parseInt("" + t);
                        if (n > Object.keys(e).length)
                            return "object should contain at least " + t.value() + " properties";
                    } return null; }), "maxProperties" == e.arguments[0] && t.setFacetValidator(function (e, t) { if (e instanceof Object) {
                        var n = Number.parseInt("" + t);
                        if (n < Object.keys(e).length)
                            return "object should contain not more then " + t.value() + " properties";
                    } return null; }), "uniqueItems" == e.arguments[0] && t.setFacetValidator(function (e, t) {
                        if (t instanceof Array) {
                            var n = s.unique(t).length;
                            if (n < t.length)
                                return "array should contain only unique items";
                        }
                        return null;
                    }), "minLength" == e.arguments[0] && t.setFacetValidator(function (e, t) { if (("number" == typeof e || "boolean" == typeof e) && (e = "" + e), "string" == typeof e) {
                        var n = Number.parseInt("" + t);
                        if (n > e.length)
                            return "string length should be at least " + n;
                    } return null; }), "maxLength" == e.arguments[0] && t.setFacetValidator(function (e, t) { if (("number" == typeof e || "boolean" == typeof e) && (e = "" + e), "string" == typeof e) {
                        var n = Number.parseInt("" + t);
                        if (n < e.length)
                            return "string length should be not more then " + n;
                    } return null; }), "minimum" == e.arguments[0] && t.setFacetValidator(function (e, t) { if ("string" == typeof e && (e = parseFloat(e)), "number" == typeof e) {
                        var n = parseFloat(t);
                        if (n > e)
                            return "value should be not less then " + n;
                    } return null; }), "maximum" == e.arguments[0] && t.setFacetValidator(function (e, t) { if ("string" == typeof e && (e = parseFloat(e)), "number" == typeof e) {
                        var n = parseFloat(t);
                        if (e > n)
                            return "value should be not more then " + n;
                    } return null; }), "pattern" == e.arguments[0] && t.setFacetValidator(function (e, t) { if (("number" == typeof e || "boolean" == typeof e) && (e = "" + e), "string" == typeof e) {
                        var n = new RegExp(t);
                        if (!n.test(e))
                            return "string should match to " + t;
                    } return null; });
                }, extraMetaKey: function (e, t) { "statusCodes" == e.arguments[0] && (t.withOftenKeys(o.statusCodes.filter(function (e) { return e.code.indexOf("x") < 0; }).map(function (e) { return e.code; })), t.setValueDocProvider(function (e) { var t = s.find(o.statusCodes, function (t) { return t.code == e; }); return t ? e + ":" + t.description : null; })), "headers" == e.arguments[0] && (t.setValueSuggester(function (e) { if (e.property()) {
                    var t = e.property().getChildValueConstraints();
                    if (s.find(t, function (e) { return "location" == e.name && "Params.ParameterLocation.HEADERS" == e.value; }))
                        return o.headers.map(function (e) { return e.header; });
                    if (e.property() && "headers" == e.property().nameId())
                        return o.headers.map(function (e) { return e.header; });
                } return null; }), t.setValueDocProvider(function (e) { var t = s.find(o.headers, function (t) { return t.header == e; }); return t ? e + ":" + t.description : null; })), "methods" == e.arguments[0] && t.setValueDocProvider(function (e) { var t = s.find(o.methods, function (t) { return t.method == e.toUpperCase(); }); return t ? e + ":" + t.description : null; }); }, requireValue: function (e, t) { t.withContextRequirement("" + e.arguments[0], "" + e.arguments[1]); }, allowMultiple: function (e, t) { t.withMultiValue(!0); }, constraint: function (e, t) { }, newInstanceName: function (e, t) { t.withNewInstanceName("" + e.arguments[0]); }, declaringFields: function (e, t) { t.withThisPropertyDeclaresFields(); }, describesAnnotation: function (e, t) { t.withDescribes(e.arguments[0]); }, allowNull: function (e, t) { t.withAllowNull(); }, descriminatingProperty: function (e, t) { t.withDescriminating(!0); }, description: function (e, t) { t.withDescription("" + e.arguments[0]); }, inherited: function (e, t) { t.withInherited(!0); }, selfNode: function (e, t) { t.withSelfNode(); }, grammarTokenKind: function (e, t) { t.getAdapter(u.RAMLPropertyService).withPropertyGrammarType("" + e.arguments[0]); }, canInherit: function (e, t) { t.withInheritedContextValue("" + e.arguments[0]); }, canBeDuplicator: function (e, t) { t.setCanBeDuplicator(); }, example: function (e, t) { t.getAdapter(u.RAMLPropertyService).setExample(!0); }, typeExpression: function (e, t) { t.getAdapter(u.RAMLPropertyService).setTypeExpression(!0); }, hide: function (e, t) { 0 == e.arguments.length ? t.getAdapter(u.RAMLPropertyDocumentationService).setHidden(!0) : t.getAdapter(u.RAMLPropertyDocumentationService).setHidden(e.arguments[0]); }, documentationTableLabel: function (e, t) { t.getAdapter(u.RAMLPropertyDocumentationService).setDocTableName("" + e.arguments[0]); }, markdownDescription: function (e, t) { t.getAdapter(u.RAMLPropertyDocumentationService).setMarkdownDescription("" + e.arguments[0]); }, valueDescription: function (e, t) { t.getAdapter(u.RAMLPropertyDocumentationService).setValueDescription(null != e.arguments[0] ? "" + e.arguments[0] : null); }, customHandling: function (e, t) { } }, t.recordAnnotation = i;
        }, function (e, t, n) {
            "use strict";
            function r(e) { for (var n in e)
                t.hasOwnProperty(n) || (t[n] = e[n]); }
            Object.defineProperty(t, "__esModule", { value: !0 });
            var i = n(93);
            t.load = i.load, t.loadAll = i.loadAll, t.safeLoad = i.safeLoad, t.safeLoadAll = i.safeLoadAll;
            var a = n(94);
            t.dump = a.dump, t.safeDump = a.safeDump, t.YAMLException = n(95), r(n(96)), r(n(97));
        }, function (e, t, n) { (function (e) { (function () { var r, i = [].slice; r = n(133), t.allowUnsafeEval = function (t) { var n; n = e.eval; try {
            return e.eval = function (e) { return r.runInThisContext(e); }, t();
        }
        finally {
            e.eval = n;
        } }, t.allowUnsafeNewFunction = function (n) { var r; r = e.Function; try {
            return e.Function = t.Function, n();
        }
        finally {
            e.Function = r;
        } }, t.Function = function () { var e, t, n, a, o, s, u; for (n = 2 <= arguments.length ? i.call(arguments, 0, o = arguments.length - 1) : (o = 0, []), e = arguments[o++], a = [], s = 0, u = n.length; u > s; s++)
            t = n[s], "string" == typeof t && (t = t.split(/\s*,\s*/)), a.push.apply(a, t); return r.runInThisContext("(function(" + a.join(", ") + ") {\n  " + e + "\n})"); }, t.Function.prototype = e.Function.prototype; }).call(this); }).call(t, function () { return this; }()); }, function (e, t, n) {
            e.exports = [{ classes: [{ name: "GlobalSchema", methods: [], typeParameters: [], typeParameterConstraint: [], "implements": [{ typeName: "Referencable", nameSpace: "", basicName: "Referencable", typeKind: 0, typeArguments: [{ typeName: "Sys.SchemaString", nameSpace: "Sys", basicName: "SchemaString", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/api.ts" }], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/api.ts" }], fields: [{ name: "key", type: { typeName: "string", nameSpace: "", basicName: "string", typeKind: 0, typeArguments: [], modulePath: null }, annotations: [{ name: "MetaModel.key", arguments: [] }, { name: "MetaModel.description", arguments: ["Name of the global schema, used to refer on schema content"] }], valueConstraint: null, optional: !1 }, { name: "value", type: { typeName: "Sys.SchemaString", nameSpace: "Sys", basicName: "SchemaString", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/api.ts" }, annotations: [{ name: "MetaModel.description", arguments: ["Content of the schema"] }, { name: "MetaModel.value", arguments: [] }], valueConstraint: null, optional: !1 }], isInterface: !1, annotations: [{ name: "MetaModel.actuallyExports", arguments: ["value"] }, { name: "MetaModel.description", arguments: ["Content of the schema"] }], "extends": [{ typeName: "RAMLSimpleElement", nameSpace: "", basicName: "RAMLSimpleElement", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/api.ts" }], moduleName: "RAMLSpec", annotationOverridings: {} }, { name: "Api", methods: [], typeParameters: [], typeParameterConstraint: [], "implements": [], fields: [{ name: "title", type: { typeName: "string", nameSpace: "", basicName: "string", typeKind: 0, typeArguments: [], modulePath: null }, annotations: [{ name: "MetaModel.required", arguments: [] }, { name: "MetaModel.description", arguments: ["The title property is a short plain text description of the RESTful API. The value SHOULD be suitable for use as a title for the contained user documentation."] }], valueConstraint: null, optional: !1 }, { name: "version", type: { typeName: "string", nameSpace: "", basicName: "string", typeKind: 0, typeArguments: [], modulePath: null }, annotations: [{ name: "MetaModel.description", arguments: ["If the RAML API definition is targeted to a specific API version, the API definition MUST contain a version property. The version property is OPTIONAL and should not be used if: The API itself is not versioned. The API definition does not change between versions. The API architect can decide whether a change to user documentation elements, but no change to the API's resources, constitutes a version change. The API architect MAY use any versioning scheme so long as version numbers retain the same format. For example, 'v3', 'v3.0', and 'V3' are all allowed, but are not considered to be equal."] }], valueConstraint: null, optional: !1 }, { name: "baseUri", type: { typeName: "Sys.FullUriTemplateString", nameSpace: "Sys", basicName: "FullUriTemplateString", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/api.ts" }, annotations: [{ name: "MetaModel.description", arguments: ["(Optional during development; Required after implementation) A RESTful API's resources are defined relative to the API's base URI. The use of the baseUri field is OPTIONAL to allow describing APIs that have not yet been implemented. After the API is implemented (even a mock implementation) and can be accessed at a service endpoint, the API definition MUST contain a baseUri property. The baseUri property's value MUST conform to the URI specification RFC2396 or a Level 1 Template URI as defined in RFC6570. The baseUri property SHOULD only be used as a reference value."] }], valueConstraint: null, optional: !1 }, { name: "baseUriParameters", type: { base: { typeName: "Params.Parameter", nameSpace: "Params", basicName: "Parameter", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/api.ts" }, typeKind: 1 }, annotations: [{ name: "MetaModel.setsContextValue", arguments: ["location", "Params.ParameterLocation.BURI"] }, { name: "MetaModel.description", arguments: ["Base uri parameters are named parameters which described template parameters in the base uri"] }], valueConstraint: null, optional: !1 }, { name: "uriParameters", type: { base: { typeName: "Params.Parameter", nameSpace: "Params", basicName: "Parameter", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/api.ts" }, typeKind: 1 }, annotations: [{ name: "MetaModel.setsContextValue", arguments: ["location", "Params.ParameterLocation.BURI"] }, { name: "MetaModel.description", arguments: ["URI parameters can be further defined by using the uriParameters property. The use of uriParameters is OPTIONAL. The uriParameters property MUST be a map in which each key MUST be the name of the URI parameter as defined in the baseUri property. The uriParameters CANNOT contain a key named version because it is a reserved URI parameter name. The value of the uriParameters property is itself a map that specifies  the property's attributes as named parameters"] }], valueConstraint: null, optional: !1 }, { name: "protocols", type: { base: { typeName: "string", nameSpace: "", basicName: "string", typeKind: 0, typeArguments: [], modulePath: null }, typeKind: 1 }, annotations: [{ name: "MetaModel.oneOf", arguments: [["HTTP", "HTTPS"]] }, { name: "MetaModel.description", arguments: ["A RESTful API can be reached HTTP, HTTPS, or both. The protocols property MAY be used to specify the protocols that an API supports. If the protocols property is not specified, the protocol specified at the baseUri property is used. The protocols property MUST be an array of strings, of values `HTTP` and/or `HTTPS`."] }], valueConstraint: null, optional: !1 }, { name: "mediaType", type: { typeName: "Bodies.MimeType", nameSpace: "Bodies", basicName: "MimeType", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/api.ts" }, annotations: [{ name: "MetaModel.oftenKeys", arguments: [["application/json", "application/xml", "application/x-www-form-urlencoded", "multipart/formdata"]] }, { name: "MetaModel.description", arguments: ["(Optional) The media types returned by API responses, and expected from API requests that accept a body, MAY be defaulted by specifying the mediaType property. This property is specified at the root level of the API definition. The property's value MAY be a single string with a valid media type described in the specification."] }, { name: "MetaModel.inherited", arguments: [] }], valueConstraint: null, optional: !1 }, { name: "schemas", type: { base: { typeName: "GlobalSchema", nameSpace: "", basicName: "GlobalSchema", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/api.ts" }, typeKind: 1 }, annotations: [{ name: "MetaModel.embeddedInMaps", arguments: [] }, { name: "MetaModel.description", arguments: ["To better achieve consistency and simplicity, the API definition SHOULD include an OPTIONAL schemas property in the root section. The schemas property specifies collections of schemas that could be used anywhere in the API definition. The value of the schemas property is an array of maps; in each map, the keys are the schema name, and the values are schema definitions. The schema definitions MAY be included inline or by using the RAML !include user-defined data type."] }], valueConstraint: null, optional: !1 }, { name: "traits", type: { base: { typeName: "Methods.Trait", nameSpace: "Methods", basicName: "Trait", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/api.ts" }, typeKind: 1 }, annotations: [{ name: "MetaModel.embeddedInMaps", arguments: [] }, { name: "MetaModel.description", arguments: ["Declarations of traits used in this API"] }], valueConstraint: null, optional: !1 }, { name: "securedBy", type: { base: { typeName: "Security.SecuritySchemeRef", nameSpace: "Security", basicName: "SecuritySchemeRef", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/api.ts" }, typeKind: 1 }, annotations: [{ name: "MetaModel.allowNull", arguments: [] }, { name: "MetaModel.description", arguments: ["A list of the security schemes to apply to all methods, these must be defined in the securitySchemes declaration."] }], valueConstraint: null, optional: !1 }, { name: "securitySchemes", type: { base: { typeName: "Security.AbstractSecurityScheme", nameSpace: "Security", basicName: "AbstractSecurityScheme", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/api.ts" }, typeKind: 1 }, annotations: [{ name: "MetaModel.embeddedInMaps", arguments: [] }, { name: "MetaModel.description", arguments: ["Security schemes that can be applied using securedBy"] }], valueConstraint: null, optional: !1 }, { name: "resourceTypes", type: { base: { typeName: "Resources.ResourceType", nameSpace: "Resources", basicName: "ResourceType", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/api.ts" }, typeKind: 1 }, annotations: [{ name: "MetaModel.embeddedInMaps", arguments: [] }, { name: "MetaModel.description", arguments: ["Declaration of resource types used in this API"] }], valueConstraint: null, optional: !1 }, { name: "resources", type: { base: { typeName: "Resources.Resource", nameSpace: "Resources", basicName: "Resource", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/api.ts" }, typeKind: 1 }, annotations: [{ name: "MetaModel.newInstanceName", arguments: ["New Resource"] }, { name: "MetaModel.description", arguments: ["Resources are identified by their relative URI, which MUST begin with a slash (/). A resource defined as a root-level property is called a top-level resource. Its property's key is the resource's URI relative to the baseUri. A resource defined as a child property of another resource is called a nested resource, and its property's key is its URI relative to its parent resource's URI. Every property whose key begins with a slash (/), and is either at the root of the API definition or is the child property of a resource property, is a resource property. The key of a resource, i.e. its relative URI, MAY consist of multiple URI path fragments separated by slashes; e.g. `/bom/items` may indicate the collection of items in a bill of materials as a single resource. However, if the individual URI path fragments are themselves resources, the API definition SHOULD use nested resources to describe this structure; e.g. if `/bom` is itself a resource then `/items` should be a nested resource of `/bom`, while `/bom/items` should not be used."] }], valueConstraint: null, optional: !1 }, { name: "documentation", type: { base: { typeName: "DocumentationItem", nameSpace: "", basicName: "DocumentationItem", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/api.ts" }, typeKind: 1 }, annotations: [{ name: "MetaModel.description", arguments: ["The API definition can include a variety of documents that serve as a user guides and reference documentation for the API. Such documents can clarify how the API works or provide business context. Documentation-generators MUST include all the sections in an API definition's documentation property in the documentation output, and they MUST preserve the order in which the documentation is declared. To add user documentation to the API, include the documentation property at the root of the API definition. The documentation property MUST be an array of documents. Each document MUST contain title and content attributes, both of which are REQUIRED. If the documentation property is specified, it MUST include at least one document. Documentation-generators MUST process the content field as if it was defined using Markdown."] }], valueConstraint: null, optional: !1 }, { name: "RAMLVersion", type: { typeName: "string", nameSpace: "", basicName: "string", typeKind: 0, typeArguments: [], modulePath: null }, annotations: [{ name: "MetaModel.customHandling", arguments: [] }, { name: "MetaModel.description", arguments: ["Returns AST node of security scheme, this reference refers to, or null."] }], valueConstraint: null, optional: !1 }], isInterface: !1, annotations: [], "extends": [], moduleName: "RAMLSpec", annotationOverridings: {} }, { name: "DocumentationItem", methods: [], typeParameters: [], typeParameterConstraint: [], "implements": [], fields: [{ name: "title", type: { typeName: "string", nameSpace: "", basicName: "string", typeKind: 0, typeArguments: [], modulePath: null }, annotations: [{ name: "MetaModel.description", arguments: ["title of documentation section"] }, { name: "MetaModel.required", arguments: [] }], valueConstraint: null, optional: !1 }, { name: "content", type: { typeName: "Sys.MarkdownString", nameSpace: "Sys", basicName: "MarkdownString", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/api.ts" }, annotations: [{ name: "MetaModel.description", arguments: ["Content of documentation section"] }, { name: "MetaModel.required", arguments: [] }], valueConstraint: null, optional: !1 }], isInterface: !1, annotations: [], "extends": [{ typeName: "RAMLSimpleElement", nameSpace: "", basicName: "RAMLSimpleElement", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/api.ts" }], moduleName: "RAMLSpec", annotationOverridings: {} }], aliases: [], enumDeclarations: [], imports: { MetaModel: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/metamodel.ts", Sys: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/systemTypes.ts", Params: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/parameters.ts", Common: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/common.ts", Bodies: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/bodies.ts", Resources: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/resources.ts", Methods: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/methods.ts", Security: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/security.ts" }, name: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/api.ts" }, { classes: [{ name: "SpecPartMetaData", methods: [], typeParameters: [], typeParameterConstraint: [], "implements": [], fields: [], isInterface: !0, annotations: [], "extends": [], moduleName: null, annotationOverridings: {} }], aliases: [], enumDeclarations: [], imports: {}, name: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/metamodel.ts" }, { classes: [{ name: "ValueType", methods: [], typeParameters: [], typeParameterConstraint: [], "implements": [], fields: [], isInterface: !1, annotations: [], "extends": [], moduleName: null, annotationOverridings: {} }, { name: "StringType", methods: [], typeParameters: [], typeParameterConstraint: [], "implements": [], fields: [], isInterface: !1, annotations: [{ name: "MetaModel.nameAtRuntime", arguments: ["string"] }], "extends": [{ typeName: "ValueType", nameSpace: "", basicName: "ValueType", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/systemTypes.ts" }], moduleName: null, annotationOverridings: {} }, { name: "AnyType", methods: [], typeParameters: [], typeParameterConstraint: [], "implements": [], fields: [], isInterface: !1, annotations: [{ name: "MetaModel.nameAtRuntime", arguments: ["any"] }], "extends": [{ typeName: "ValueType", nameSpace: "", basicName: "ValueType", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/systemTypes.ts" }], moduleName: null, annotationOverridings: {} }, { name: "NumberType", methods: [], typeParameters: [], typeParameterConstraint: [], "implements": [], fields: [], isInterface: !1, annotations: [{ name: "MetaModel.nameAtRuntime", arguments: ["number"] }], "extends": [{ typeName: "ValueType", nameSpace: "", basicName: "ValueType", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/systemTypes.ts" }], moduleName: null, annotationOverridings: {} }, { name: "BooleanType", methods: [], typeParameters: [], typeParameterConstraint: [], "implements": [], fields: [], isInterface: !1, annotations: [{ name: "MetaModel.nameAtRuntime", arguments: ["boolean"] }], "extends": [{ typeName: "ValueType", nameSpace: "", basicName: "ValueType", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/systemTypes.ts" }], moduleName: null, annotationOverridings: {} }, { name: "Referencable", methods: [], typeParameters: ["T"], typeParameterConstraint: [null], "implements": [], fields: [], isInterface: !0, annotations: [], "extends": [], moduleName: null, annotationOverridings: {} }, { name: "Reference", methods: [], typeParameters: ["T"], typeParameterConstraint: [null], "implements": [], fields: [{ name: "structuredValue", type: { typeName: "TypeInstance", nameSpace: "", basicName: "TypeInstance", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/systemTypes.ts" }, annotations: [{ name: "MetaModel.customHandling", arguments: [] }, { name: "MetaModel.description", arguments: ["Returns a structured object if the reference point to one."] }], valueConstraint: null, optional: !1 }, { name: "name", type: { typeName: "string", nameSpace: "", basicName: "string", typeKind: 0, typeArguments: [], modulePath: null }, annotations: [{ name: "MetaModel.customHandling", arguments: [] }, { name: "MetaModel.description", arguments: ["Returns name of referenced object"] }], valueConstraint: null, optional: !1 }], isInterface: !1, annotations: [], "extends": [{ typeName: "ValueType", nameSpace: "", basicName: "ValueType", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/systemTypes.ts" }], moduleName: null, annotationOverridings: {} }, { name: "DeclaresDynamicType", methods: [], typeParameters: ["T"], typeParameterConstraint: [null], "implements": [], fields: [], isInterface: !0, annotations: [], "extends": [{ typeName: "Referencable", nameSpace: "", basicName: "Referencable", typeKind: 0, typeArguments: [{ typeName: "T", nameSpace: "", basicName: "T", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/systemTypes.ts" }], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/systemTypes.ts" }], moduleName: null, annotationOverridings: {} }, { name: "UriTemplate", methods: [], typeParameters: [], typeParameterConstraint: [], "implements": [], fields: [], isInterface: !1, annotations: [{ name: "MetaModel.description", arguments: ["This type currently serves both for absolute and relative urls"] }], "extends": [{ typeName: "StringType", nameSpace: "", basicName: "StringType", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/systemTypes.ts" }], moduleName: null, annotationOverridings: {} }, { name: "RelativeUriString", methods: [], typeParameters: [], typeParameterConstraint: [], "implements": [], fields: [], isInterface: !1, annotations: [{ name: "MetaModel.description", arguments: ["This  type describes relative uri templates"] }], "extends": [{ typeName: "UriTemplate", nameSpace: "", basicName: "UriTemplate", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/systemTypes.ts" }], moduleName: null, annotationOverridings: {} }, { name: "FullUriTemplateString", methods: [], typeParameters: [], typeParameterConstraint: [], "implements": [], fields: [], isInterface: !1, annotations: [{ name: "MetaModel.description", arguments: ["This  type describes absolute uri templates"] }], "extends": [{ typeName: "UriTemplate", nameSpace: "", basicName: "UriTemplate", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/systemTypes.ts" }], moduleName: null, annotationOverridings: {} }, { name: "FixedUri", methods: [], typeParameters: [], typeParameterConstraint: [], "implements": [], fields: [], isInterface: !1, annotations: [{ name: "MetaModel.description", arguments: ["This  type describes fixed uris"] }], "extends": [{ typeName: "StringType", nameSpace: "", basicName: "StringType", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/systemTypes.ts" }], moduleName: null, annotationOverridings: {} }, { name: "MarkdownString", methods: [], typeParameters: [], typeParameterConstraint: [], "implements": [], fields: [], isInterface: !1, annotations: [{ name: "MetaModel.innerType", arguments: ["markdown"] }, { name: "MetaModel.description", arguments: ["Mardown string is a string which can contain markdown as an extension this markdown should support links with RAML Pointers since 1.0"] }], "extends": [{ typeName: "StringType", nameSpace: "", basicName: "StringType", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/systemTypes.ts" }], moduleName: null, annotationOverridings: {} }, { name: "SchemaString", methods: [], typeParameters: [], typeParameterConstraint: [], "implements": [], fields: [], isInterface: !1, annotations: [{ name: "MetaModel.description", arguments: ["Schema at this moment only two subtypes are supported (json schema and xsd)"] }], "extends": [{ typeName: "StringType", nameSpace: "", basicName: "StringType", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/systemTypes.ts" }], moduleName: null, annotationOverridings: {} }, { name: "JSonSchemaString", methods: [], typeParameters: [], typeParameterConstraint: [], "implements": [], fields: [], isInterface: !1, annotations: [{ name: "MetaModel.functionalDescriminator", arguments: ["this.mediaType&&this.mediaType.isJSON()"] }, { name: "MetaModel.description", arguments: ["JSON schema"] }], "extends": [{ typeName: "SchemaString", nameSpace: "", basicName: "SchemaString", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/systemTypes.ts" }], moduleName: null, annotationOverridings: {} }, { name: "XMLSchemaString", methods: [], typeParameters: [], typeParameterConstraint: [], "implements": [], fields: [], isInterface: !1, annotations: [{ name: "MetaModel.innerType", arguments: ["xml"] }, { name: "MetaModel.description", arguments: ["XSD schema"] }], "extends": [{ typeName: "SchemaString", nameSpace: "", basicName: "SchemaString", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/systemTypes.ts" }], moduleName: null, annotationOverridings: {} }, { name: "ExampleString", methods: [], typeParameters: [], typeParameterConstraint: [], "implements": [], fields: [], isInterface: !1, annotations: [], "extends": [{ typeName: "StringType", nameSpace: "", basicName: "StringType", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/systemTypes.ts" }], moduleName: null, annotationOverridings: {} }, { name: "StatusCodeString", methods: [], typeParameters: [], typeParameterConstraint: [], "implements": [], fields: [], isInterface: !1, annotations: [], "extends": [{ typeName: "StringType", nameSpace: "", basicName: "StringType", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/systemTypes.ts" }], moduleName: null, annotationOverridings: {} }, { name: "JSONExample", methods: [], typeParameters: [], typeParameterConstraint: [], "implements": [], fields: [], isInterface: !1, annotations: [{ name: "MetaModel.functionalDescriminator", arguments: ["this.mediaType.isJSON()"] }], "extends": [{ typeName: "ExampleString", nameSpace: "", basicName: "ExampleString", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/systemTypes.ts" }], moduleName: null, annotationOverridings: {} }, { name: "XMLExample", methods: [], typeParameters: [], typeParameterConstraint: [], "implements": [], fields: [], isInterface: !1, annotations: [{ name: "MetaModel.functionalDescriminator", arguments: ["this.mediaType.isXML()"] }], "extends": [{ typeName: "ExampleString", nameSpace: "", basicName: "ExampleString", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/systemTypes.ts" }], moduleName: null, annotationOverridings: {} }, { name: "TypeInstance", methods: [], typeParameters: [], typeParameterConstraint: [], "implements": [], fields: [{ name: "properties", type: { base: { typeName: "TypeInstanceProperty", nameSpace: "", basicName: "TypeInstanceProperty", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/systemTypes.ts" }, typeKind: 1 }, annotations: [{ name: "MetaModel.description", arguments: ["Array of instance properties"] }], valueConstraint: null, optional: !1 }, { name: "isScalar", type: { typeName: "boolean", nameSpace: "", basicName: "boolean", typeKind: 0, typeArguments: [], modulePath: null }, annotations: [{ name: "MetaModel.description", arguments: ["Whether the type is scalar"] }], valueConstraint: null, optional: !1 }, { name: "value", type: { typeName: "any", nameSpace: "", basicName: "any", typeKind: 0, typeArguments: [], modulePath: null }, annotations: [{ name: "MetaModel.description", arguments: ["For instances of scalar types returns scalar value"] }], valueConstraint: null, optional: !1 }], isInterface: !1, annotations: [{ name: "MetaModel.customHandling", arguments: [] }], "extends": [], moduleName: null, annotationOverridings: {} }, { name: "TypeInstanceProperty", methods: [], typeParameters: [], typeParameterConstraint: [], "implements": [], fields: [{ name: "name", type: { typeName: "string", nameSpace: "", basicName: "string", typeKind: 0, typeArguments: [], modulePath: null }, annotations: [{ name: "MetaModel.description", arguments: ["Property name"] }], valueConstraint: null, optional: !1 }, { name: "value", type: { typeName: "TypeInstance", nameSpace: "", basicName: "TypeInstance", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/systemTypes.ts" }, annotations: [{ name: "MetaModel.description", arguments: ["Property value"] }], valueConstraint: null, optional: !1 }, { name: "values", type: { base: { typeName: "TypeInstance", nameSpace: "", basicName: "TypeInstance", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/systemTypes.ts" }, typeKind: 1 }, annotations: [{ name: "MetaModel.description", arguments: ["Array of values if property value is array"] }], valueConstraint: null, optional: !1 }, { name: "isArray", type: { typeName: "boolean", nameSpace: "", basicName: "boolean", typeKind: 0, typeArguments: [], modulePath: null }, annotations: [{ name: "MetaModel.description", arguments: ["Whether property has array as value"] }], valueConstraint: null, optional: !1 }], isInterface: !1, annotations: [{ name: "MetaModel.customHandling",
                                    arguments: [] }], "extends": [], moduleName: null, annotationOverridings: {} }], aliases: [], enumDeclarations: [], imports: { MetaModel: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/metamodel.ts", Common: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/common.ts" }, name: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/systemTypes.ts" }, { classes: [{ name: "RAMLSimpleElement", methods: [], typeParameters: [], typeParameterConstraint: [], "implements": [], fields: [], isInterface: !1, annotations: [], "extends": [], moduleName: null, annotationOverridings: {} }], aliases: [], enumDeclarations: [], imports: { MetaModel: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/metamodel.ts", Sys: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/systemTypes.ts" }, name: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/common.ts" }, { classes: [{ name: "Parameter", methods: [], typeParameters: [], typeParameterConstraint: [], "implements": [], fields: [{ name: "name", type: { typeName: "string", nameSpace: "", basicName: "string", typeKind: 0, typeArguments: [], modulePath: null }, annotations: [{ name: "MetaModel.key", arguments: [] }, { name: "MetaModel.description", arguments: ["name of the parameter"] }, { name: "MetaModel.extraMetaKey", arguments: ["headers"] }], valueConstraint: null, optional: !1 }, { name: "displayName", type: { typeName: "string", nameSpace: "", basicName: "string", typeKind: 0, typeArguments: [], modulePath: null }, annotations: [{ name: "MetaModel.description", arguments: ["An alternate, human-friendly name for the parameter"] }], valueConstraint: null, optional: !1 }, { name: "type", type: { typeName: "string", nameSpace: "", basicName: "string", typeKind: 0, typeArguments: [], modulePath: null }, annotations: [{ name: "MetaModel.defaultValue", arguments: ["string"] }, { name: "MetaModel.descriminatingProperty", arguments: [] }, { name: "MetaModel.description", arguments: ["The type attribute specifies the primitive type of the parameter's resolved value. API clients MUST return/throw an error if the parameter's resolved value does not match the specified type. If type is not specified, it defaults to string."] }, { name: "MetaModel.canBeDuplicator", arguments: [] }], valueConstraint: null, optional: !1 }, { name: "location", type: { typeName: "ParameterLocation", nameSpace: "", basicName: "ParameterLocation", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/parameters.ts" }, annotations: [{ name: "MetaModel.system", arguments: [] }, { name: "MetaModel.description", arguments: ["Location of the parameter (can not be edited by user)"] }], valueConstraint: null, optional: !1 }, { name: "required", type: { typeName: "boolean", nameSpace: "", basicName: "boolean", typeKind: 0, typeArguments: [], modulePath: null }, annotations: [{ name: "MetaModel.description", arguments: ["Set to true if parameter is required"] }, { name: "MetaModel.defaultBooleanValue", arguments: [!0] }], valueConstraint: null, optional: !1 }, { name: "default", type: { typeName: "any", nameSpace: "", basicName: "any", typeKind: 0, typeArguments: [], modulePath: null }, annotations: [{ name: "MetaModel.description", arguments: ["The default attribute specifies the default value to use for the property if the property is omitted or its value is not specified. This SHOULD NOT be interpreted as a requirement for the client to send the default attribute's value if there is no other value to send. Instead, the default attribute's value is the value the server uses if the client does not send a value."] }], valueConstraint: null, optional: !1 }, { name: "example", type: { typeName: "string", nameSpace: "", basicName: "string", typeKind: 0, typeArguments: [], modulePath: null }, annotations: [{ name: "MetaModel.description", arguments: ["(Optional) The example attribute shows an example value for the property. This can be used, e.g., by documentation generators to generate sample values for the property."] }], valueConstraint: null, optional: !1 }, { name: "repeat", type: { typeName: "boolean", nameSpace: "", basicName: "boolean", typeKind: 0, typeArguments: [], modulePath: null }, annotations: [{ name: "MetaModel.description", arguments: ["The repeat attribute specifies that the parameter can be repeated. If the parameter can be used multiple times, the repeat parameter value MUST be set to 'true'. Otherwise, the default value is 'false' and the parameter may not be repeated."] }, { name: "MetaModel.defaultBooleanValue", arguments: [!1] }], valueConstraint: null, optional: !1 }, { name: "description", type: { typeName: "Sys.MarkdownString", nameSpace: "Sys", basicName: "MarkdownString", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/parameters.ts" }, annotations: [{ name: "MetaModel.description", arguments: ["The description attribute describes the intended use or meaning of the $self. This value MAY be formatted using Markdown."] }], valueConstraint: null, optional: !1 }, { name: "parametrizedProperties", type: { typeName: "Sys.TypeInstance", nameSpace: "Sys", basicName: "TypeInstance", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/parameters.ts" }, annotations: [{ name: "MetaModel.customHandling", arguments: [] }, { name: "MetaModel.description", arguments: ["For parameters defined inside traits and resource types returns object representation of parametrized properties"] }], valueConstraint: null, optional: !1 }], isInterface: !1, annotations: [], "extends": [], moduleName: null, annotationOverridings: {} }, { name: "StringTypeDeclaration", methods: [], typeParameters: [], typeParameterConstraint: [], "implements": [], fields: [{ name: "type", type: null, annotations: [], valueConstraint: { isCallConstraint: !1, value: "string" }, optional: !1 }, { name: "pattern", type: { typeName: "string", nameSpace: "", basicName: "string", typeKind: 0, typeArguments: [], modulePath: null }, annotations: [{ name: "MetaModel.description", arguments: ["(Optional, applicable only for parameters of type string) The pattern attribute is a regular expression that a parameter of type string MUST match. Regular expressions MUST follow the regular expression specification from ECMA 262/Perl 5. The pattern MAY be enclosed in double quotes for readability and clarity."] }], valueConstraint: null, optional: !1 }, { name: "enum", type: { base: { typeName: "string", nameSpace: "", basicName: "string", typeKind: 0, typeArguments: [], modulePath: null }, typeKind: 1 }, annotations: [{ name: "MetaModel.description", arguments: ["(Optional, applicable only for parameters of type string) The enum attribute provides an enumeration of the parameter's valid values. This MUST be an array. If the enum attribute is defined, API clients and servers MUST verify that a parameter's value matches a value in the enum array. If there is no matching value, the clients and servers MUST treat this as an error."] }], valueConstraint: null, optional: !1 }, { name: "minLength", type: { typeName: "number", nameSpace: "", basicName: "number", typeKind: 0, typeArguments: [], modulePath: null }, annotations: [{ name: "MetaModel.description", arguments: ["(Optional, applicable only for parameters of type string) The minLength attribute specifies the parameter value's minimum number of characters."] }], valueConstraint: null, optional: !1 }, { name: "maxLength", type: { typeName: "number", nameSpace: "", basicName: "number", typeKind: 0, typeArguments: [], modulePath: null }, annotations: [{ name: "MetaModel.description", arguments: ["(Optional, applicable only for parameters of type string) The maxLength attribute specifies the parameter value's maximum number of characters."] }], valueConstraint: null, optional: !1 }], isInterface: !1, annotations: [{ name: "MetaModel.description", arguments: ["Value must be a string"] }], "extends": [{ typeName: "Parameter", nameSpace: "", basicName: "Parameter", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/parameters.ts" }], moduleName: null, annotationOverridings: {} }, { name: "BooleanTypeDeclaration", methods: [], typeParameters: [], typeParameterConstraint: [], "implements": [], fields: [{ name: "type", type: null, annotations: [], valueConstraint: { isCallConstraint: !1, value: "boolean" }, optional: !1 }], isInterface: !1, annotations: [{ name: "MetaModel.description", arguments: ["Value must be a boolean"] }], "extends": [{ typeName: "Parameter", nameSpace: "", basicName: "Parameter", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/parameters.ts" }], moduleName: null, annotationOverridings: {} }, { name: "NumberTypeDeclaration", methods: [], typeParameters: [], typeParameterConstraint: [], "implements": [], fields: [{ name: "type", type: null, annotations: [], valueConstraint: { isCallConstraint: !1, value: "number" }, optional: !1 }, { name: "minimum", type: { typeName: "number", nameSpace: "", basicName: "number", typeKind: 0, typeArguments: [], modulePath: null }, annotations: [{ name: "MetaModel.description", arguments: ["(Optional, applicable only for parameters of type number or integer) The minimum attribute specifies the parameter's minimum value."] }], valueConstraint: null, optional: !1 }, { name: "maximum", type: { typeName: "number", nameSpace: "", basicName: "number", typeKind: 0, typeArguments: [], modulePath: null }, annotations: [{ name: "MetaModel.description", arguments: ["(Optional, applicable only for parameters of type number or integer) The maximum attribute specifies the parameter's maximum value."] }], valueConstraint: null, optional: !1 }], isInterface: !1, annotations: [{ name: "MetaModel.description", arguments: ["Value MUST be a number. Indicate floating point numbers as defined by YAML."] }], "extends": [{ typeName: "Parameter", nameSpace: "", basicName: "Parameter", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/parameters.ts" }], moduleName: null, annotationOverridings: {} }, { name: "IntegerTypeDeclaration", methods: [], typeParameters: [], typeParameterConstraint: [], "implements": [], fields: [{ name: "type", type: null, annotations: [], valueConstraint: { isCallConstraint: !1, value: "integer" }, optional: !1 }], isInterface: !1, annotations: [{ name: "MetaModel.description", arguments: ["Value MUST be a integer."] }], "extends": [{ typeName: "NumberTypeDeclaration", nameSpace: "", basicName: "NumberTypeDeclaration", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/parameters.ts" }], moduleName: null, annotationOverridings: {} }, { name: "DateTypeDeclaration", methods: [], typeParameters: [], typeParameterConstraint: [], "implements": [], fields: [{ name: "type", type: null, annotations: [], valueConstraint: { isCallConstraint: !1, value: "date" }, optional: !1 }], isInterface: !1, annotations: [{ name: "MetaModel.description", arguments: ["Value MUST be a string representation of a date as defined in RFC2616 Section 3.3. "] }], "extends": [{ typeName: "Parameter", nameSpace: "", basicName: "Parameter", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/parameters.ts" }], moduleName: null, annotationOverridings: {} }, { name: "FileTypeDeclaration", methods: [], typeParameters: [], typeParameterConstraint: [], "implements": [], fields: [{ name: "type", type: null, annotations: [], valueConstraint: { isCallConstraint: !1, value: "file" }, optional: !1 }], isInterface: !1, annotations: [{ name: "MetaModel.requireValue", arguments: ["location", "ParameterLocation.FORM"] }, { name: "MetaModel.description", arguments: ["(Applicable only to Form properties) Value is a file. Client generators SHOULD use this type to handle file uploads correctly."] }], "extends": [{ typeName: "Parameter", nameSpace: "", basicName: "Parameter", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/parameters.ts" }], moduleName: null, annotationOverridings: {} }], aliases: [], enumDeclarations: [{ name: "ParameterLocation", members: ["QUERY", "HEADERS", "URI", "FORM", "BURI"] }], imports: { MetaModel: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/metamodel.ts", Sys: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/systemTypes.ts", Common: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/common.ts" }, name: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/parameters.ts" }, { classes: [{ name: "MimeType", methods: [], typeParameters: [], typeParameterConstraint: [], "implements": [], fields: [], isInterface: !1, annotations: [{ name: "MetaModel.description", arguments: ["This sub type of the string represents mime types"] }], "extends": [{ typeName: "StringType", nameSpace: "", basicName: "StringType", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/bodies.ts" }], moduleName: null, annotationOverridings: {} }, { name: "BodyLike", methods: [], typeParameters: [], typeParameterConstraint: [], "implements": [], fields: [{ name: "name", type: { typeName: "string", nameSpace: "", basicName: "string", typeKind: 0, typeArguments: [], modulePath: null }, annotations: [{ name: "MetaModel.key", arguments: [] }, { name: "MetaModel.description", arguments: ["Mime type of the request or response body"] }, { name: "MetaModel.canInherit", arguments: ["mediaType"] }, { name: "MetaModel.oftenKeys", arguments: [["application/json", "application/xml", "application/x-www-form-urlencoded", "multipart/form-data"]] }], valueConstraint: null, optional: !1 }, { name: "schema", type: { typeName: "Sys.SchemaString", nameSpace: "Sys", basicName: "SchemaString", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/bodies.ts" }, annotations: [{ name: "MetaModel.requireValue", arguments: ["this.name.isForm()", "false"] }, { name: "MetaModel.description", arguments: ["The structure of a request or response body MAY be further specified by the schema property under the appropriate media type. The schema key CANNOT be specified if a body's media type is application/x-www-form-urlencoded or multipart/form-data. All parsers of RAML MUST be able to interpret JSON Schema and XML Schema. Schema MAY be declared inline or in an external file. However, if the schema is sufficiently large so as to make it difficult for a person to read the API definition, or the schema is reused across multiple APIs or across multiple miles in the same API, the !include user-defined data type SHOULD be used instead of including the content inline. Alternatively, the value of the schema field MAY be the name of a schema specified in the root-level schemas property, or it MAY be declared in an external file and included by using the by using the RAML !include user-defined data type."] }], valueConstraint: null, optional: !1 }, { name: "example", type: { typeName: "Sys.ExampleString", nameSpace: "Sys", basicName: "ExampleString", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/bodies.ts" }, annotations: [{ name: "MetaModel.description", arguments: ["Documentation generators MUST use body properties' example attributes to generate example invocations."] }], valueConstraint: null, optional: !1 }, { name: "formParameters", type: { base: { typeName: "Params.Parameter", nameSpace: "Params", basicName: "Parameter", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/bodies.ts" }, typeKind: 1 }, annotations: [{ name: "MetaModel.setsContextValue", arguments: ["location", "Params.ParameterLocation.FORM"] }, { name: "MetaModel.description", arguments: ["Web forms REQUIRE special encoding and custom declaration. If the API's media type is either application/x-www-form-urlencoded or multipart/form-data, the formParameters property MUST specify the name-value pairs that the API is expecting. The formParameters property is a map in which the key is the name of the web form parameter, and the value is itself a map the specifies the web form parameter's attributes."] }], valueConstraint: null, optional: !1 }, { name: "schemaContent", type: { typeName: "string", nameSpace: "", basicName: "string", typeKind: 0, typeArguments: [], modulePath: null }, annotations: [{ name: "MetaModel.customHandling", arguments: [] }, { name: "MetaModel.description", arguments: ["Returns schema content for the cases when schema is inlined, when schema is included, and when schema is a reference."] }], valueConstraint: null, optional: !1 }, { name: "description", type: { typeName: "Sys.MarkdownString", nameSpace: "Sys", basicName: "MarkdownString", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/bodies.ts" }, annotations: [{ name: "MetaModel.description", arguments: ["Human readable description of the body"] }], valueConstraint: null, optional: !1 }, { name: "parametrizedProperties", type: { typeName: "Sys.TypeInstance", nameSpace: "Sys", basicName: "TypeInstance", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/bodies.ts" }, annotations: [{ name: "MetaModel.customHandling", arguments: [] }, { name: "MetaModel.description", arguments: ["For bodies defined inside traits and resource types returns object representation of parametrized properties"] }], valueConstraint: null, optional: !1 }], isInterface: !1, annotations: [{ name: "MetaModel.canInherit", arguments: ["mediaType"] }], "extends": [], moduleName: null, annotationOverridings: {} }, { name: "XMLBody", methods: [], typeParameters: [], typeParameterConstraint: [], "implements": [], fields: [{ name: "schema", type: { typeName: "Sys.XMLSchemaString", nameSpace: "Sys", basicName: "XMLSchemaString", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/bodies.ts" }, annotations: [{ name: "MetaModel.description", arguments: ["XSD Schema"] }], valueConstraint: null, optional: !1 }], isInterface: !1, annotations: [{ name: "MetaModel.functionalDescriminator", arguments: ["this.mime.isXML()"] }, { name: "MetaModel.description", arguments: ["Needed to set connection between xml related mime types and xsd schema"] }], "extends": [{ typeName: "BodyLike", nameSpace: "", basicName: "BodyLike", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/bodies.ts" }], moduleName: null, annotationOverridings: {} }, { name: "JSONBody", methods: [], typeParameters: [], typeParameterConstraint: [], "implements": [], fields: [{ name: "schema", type: { typeName: "Sys.JSonSchemaString", nameSpace: "Sys", basicName: "JSonSchemaString", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/bodies.ts" }, annotations: [{ name: "MetaModel.description", arguments: ["JSON Schema"] }], valueConstraint: null, optional: !1 }], isInterface: !1, annotations: [{ name: "MetaModel.functionalDescriminator", arguments: ["this.mime.isJSON()"] }, { name: "MetaModel.description", arguments: ["Needed to set connection between json related mime types and json schema"] }], "extends": [{ typeName: "BodyLike", nameSpace: "", basicName: "BodyLike", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/bodies.ts" }], moduleName: null, annotationOverridings: {} }, { name: "Response", methods: [], typeParameters: [], typeParameterConstraint: [], "implements": [], fields: [{ name: "code", type: { typeName: "Sys.StatusCodeString", nameSpace: "Sys", basicName: "StatusCodeString", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/bodies.ts" }, annotations: [{ name: "MetaModel.key", arguments: [] }, { name: "MetaModel.extraMetaKey", arguments: ["statusCodes"] }, { name: "MetaModel.description", arguments: ["Responses MUST be a map of one or more HTTP status codes, where each status code itself is a map that describes that status code."] }], valueConstraint: null, optional: !1 }, { name: "headers", type: { base: { typeName: "Params.Parameter", nameSpace: "Params", basicName: "Parameter", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/bodies.ts" }, typeKind: 1 }, annotations: [{ name: "MetaModel.setsContextValue", arguments: ["location", "Params.ParameterLocation.HEADERS"] }, { name: "MetaModel.newInstanceName", arguments: ["New Header"] }, { name: "MetaModel.description", arguments: ["An API's methods may support custom header values in responses. The custom, non-standard HTTP headers MUST be specified by the headers property. API's may include the the placeholder token {?} in a header name to indicate that any number of headers that conform to the specified format can be sent in responses. This is particularly useful for APIs that allow HTTP headers that conform to some naming convention to send arbitrary, custom data."] }], valueConstraint: null, optional: !1 }, { name: "body", type: { base: { typeName: "BodyLike", nameSpace: "", basicName: "BodyLike", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/bodies.ts" }, typeKind: 1 }, annotations: [{ name: "MetaModel.newInstanceName", arguments: ["New Body"] }, { name: "MetaModel.description", arguments: ["Each response MAY contain a body property, which conforms to the same structure as request body properties (see Body). Responses that can return more than one response code MAY therefore have multiple bodies defined. For APIs without a priori knowledge of the response types for their responses, `*/*` MAY be used to indicate that responses that do not matching other defined data types MUST be accepted. Processing applications MUST match the most descriptive media type first if `*/*` is used."] }], valueConstraint: null, optional: !1 }, { name: "description", type: { typeName: "Sys.MarkdownString", nameSpace: "Sys", basicName: "MarkdownString", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/bodies.ts" }, annotations: [{ name: "MetaModel.description", arguments: ["The description attribute describes the intended use or meaning of the $self. This value MAY be formatted using Markdown."] }], valueConstraint: null, optional: !1 }, { name: "parametrizedProperties", type: { typeName: "Sys.TypeInstance", nameSpace: "Sys", basicName: "TypeInstance", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/bodies.ts" }, annotations: [{ name: "MetaModel.customHandling", arguments: [] }, { name: "MetaModel.description", arguments: ["For responses defined inside traits and resource types returns object representation of parametrized properties"] }], valueConstraint: null, optional: !1 }], isInterface: !1, annotations: [], "extends": [], moduleName: null, annotationOverridings: {} }], aliases: [], enumDeclarations: [], imports: { MetaModel: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/metamodel.ts", Sys: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/systemTypes.ts", Params: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/parameters.ts", Common: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/common.ts" }, name: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/bodies.ts" }, { classes: [{ name: "Resource", methods: [], typeParameters: [], typeParameterConstraint: [], "implements": [], fields: [{ name: "relativeUri", type: { typeName: "Sys.RelativeUriString", nameSpace: "Sys", basicName: "RelativeUriString", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/resources.ts" }, annotations: [{ name: "MetaModel.key", arguments: [] }, { name: "MetaModel.startFrom", arguments: ["/"] }, { name: "MetaModel.description", arguments: ["Relative URL of this resource from the parent resource"] }], valueConstraint: null, optional: !1 }, { name: "type", type: { typeName: "ResourceTypeRef", nameSpace: "", basicName: "ResourceTypeRef", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/resources.ts" }, annotations: [{ name: "MetaModel.description", arguments: ["Instantiation of applyed resource type"] }], valueConstraint: null, optional: !1 }, { name: "is", type: { base: { typeName: "TraitRef", nameSpace: "", basicName: "TraitRef", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/resources.ts" }, typeKind: 1 }, annotations: [{ name: "MetaModel.description", arguments: ["Instantiation of applyed traits"] }], valueConstraint: null, optional: !1 }, { name: "securedBy", type: { base: { typeName: "SecuritySchemeRef", nameSpace: "", basicName: "SecuritySchemeRef", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/resources.ts" }, typeKind: 1 }, annotations: [{ name: "MetaModel.allowNull", arguments: [] }, { name: "MetaModel.description", arguments: ["securityScheme may also be applied to a resource by using the securedBy key, which is equivalent to applying the securityScheme to all methods that may be declared, explicitly or implicitly, by defining the resourceTypes or traits property for that resource. To indicate that the method may be called without applying any securityScheme, the method may be annotated with the null securityScheme."] }], valueConstraint: null, optional: !1 }, { name: "uriParameters", type: { base: { typeName: "Params.Parameter", nameSpace: "Params", basicName: "Parameter", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/resources.ts" }, typeKind: 1 }, annotations: [{ name: "MetaModel.setsContextValue", arguments: ["fieldOrParam", !0] }, { name: "MetaModel.setsContextValue", arguments: ["location", "Params.ParameterLocation.URI"] }, { name: "MetaModel.description", arguments: ["Uri parameters of this resource"] }], valueConstraint: null, optional: !1 }, { name: "methods", type: { base: { typeName: "Methods.Method", nameSpace: "Methods", basicName: "Method", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/resources.ts" }, typeKind: 1 }, annotations: [{ name: "MetaModel.newInstanceName", arguments: ["New Method"] }, { name: "MetaModel.description", arguments: ["Methods that can be called on this resource"] }], valueConstraint: null, optional: !1 }, { name: "resources", type: { base: { typeName: "Resource", nameSpace: "", basicName: "Resource", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/resources.ts" }, typeKind: 1 }, annotations: [{ name: "MetaModel.newInstanceName", arguments: ["New Resource"] }, { name: "MetaModel.description", arguments: ["Children resources"] }], valueConstraint: null, optional: !1 }, { name: "displayName", type: { typeName: "string", nameSpace: "", basicName: "string", typeKind: 0, typeArguments: [], modulePath: null }, annotations: [{ name: "MetaModel.description", arguments: ["An alternate, human-friendly name for the resource"] }], valueConstraint: null, optional: !1 }, { name: "baseUriParameters", type: { base: { typeName: "Params.Parameter", nameSpace: "Params", basicName: "Parameter", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/resources.ts" }, typeKind: 1 }, annotations: [{ name: "MetaModel.setsContextValue", arguments: ["fieldOrParam", !0] }, { name: "MetaModel.setsContextValue", arguments: ["location", "Params.ParameterLocation.BURI"] }, { name: "MetaModel.description", arguments: ["A resource or a method can override a base URI template's values. This is useful to restrict or change the default or parameter selection in the base URI. The baseUriParameters property MAY be used to override any or all parameters defined at the root level baseUriParameters property, as well as base URI parameters not specified at the root level."] }], valueConstraint: null, optional: !1 }, { name: "description", type: { typeName: "Sys.MarkdownString", nameSpace: "Sys", basicName: "MarkdownString", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/resources.ts" }, annotations: [{ name: "MetaModel.description", arguments: ["The description attribute describes the intended use or meaning of the $self. This value MAY be formatted using Markdown."] }], valueConstraint: null, optional: !1 }], isInterface: !1, annotations: [], "extends": [], moduleName: null, annotationOverridings: {} }, { name: "ResourceTypeRef", methods: [], typeParameters: [], typeParameterConstraint: [], "implements": [], fields: [{ name: "resourceType", type: { typeName: "ResourceType", nameSpace: "", basicName: "ResourceType", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/resources.ts" }, annotations: [{ name: "MetaModel.customHandling", arguments: [] }, { name: "MetaModel.description", arguments: ["Returns referenced resource type"] }], valueConstraint: null, optional: !1 }], isInterface: !1, annotations: [], "extends": [{ typeName: "Reference", nameSpace: "", basicName: "Reference", typeKind: 0, typeArguments: [{ typeName: "ResourceType", nameSpace: "", basicName: "ResourceType", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/resources.ts" }], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/resources.ts" }], moduleName: null, annotationOverridings: {} }, { name: "ResourceType", methods: [], typeParameters: [], typeParameterConstraint: [], "implements": [{ typeName: "DeclaresDynamicType", nameSpace: "", basicName: "DeclaresDynamicType", typeKind: 0, typeArguments: [{ typeName: "ResourceType", nameSpace: "", basicName: "ResourceType", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/resources.ts" }], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/resources.ts" }], fields: [{ name: "name", type: { typeName: "string", nameSpace: "", basicName: "string", typeKind: 0, typeArguments: [], modulePath: null }, annotations: [{ name: "MetaModel.key", arguments: [] }, { name: "MetaModel.description", arguments: ["Name of the resource type"] }], valueConstraint: null, optional: !1 }, { name: "usage", type: { typeName: "string", nameSpace: "", basicName: "string", typeKind: 0, typeArguments: [], modulePath: null }, annotations: [{ name: "MetaModel.description", arguments: ["Instructions on how and when the resource type should be used."] }], valueConstraint: null, optional: !1 }, { name: "methods", type: { base: { typeName: "Methods.Method", nameSpace: "Methods", basicName: "Method", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/resources.ts" }, typeKind: 1 }, annotations: [{ name: "MetaModel.description", arguments: ["Methods that are part of this resource type definition"] }], valueConstraint: null, optional: !1 }, { name: "is", type: { base: { typeName: "Security.TraitRef", nameSpace: "Security", basicName: "TraitRef", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/resources.ts" }, typeKind: 1 }, annotations: [{ name: "MetaModel.description", arguments: ["Instantiation of applyed traits"] }], valueConstraint: null, optional: !1 }, { name: "type", type: { typeName: "ResourceTypeRef", nameSpace: "", basicName: "ResourceTypeRef", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/resources.ts" }, annotations: [{ name: "MetaModel.description", arguments: ["Instantiation of applyed resource type"] }], valueConstraint: null, optional: !1 }, { name: "securedBy", type: { base: { typeName: "Security.SecuritySchemeRef", nameSpace: "Security", basicName: "SecuritySchemeRef", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/resources.ts" }, typeKind: 1 }, annotations: [{ name: "MetaModel.allowNull", arguments: [] }, { name: "MetaModel.description", arguments: ["securityScheme may also be applied to a resource by using the securedBy key, which is equivalent to applying the securityScheme to all methods that may be declared, explicitly or implicitly, by defining the resourceTypes or traits property for that resource. To indicate that the method may be called without applying any securityScheme, the method may be annotated with the null securityScheme."]
                                        }], valueConstraint: null, optional: !1 }, { name: "uriParameters", type: { base: { typeName: "Params.Parameter", nameSpace: "Params", basicName: "Parameter", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/resources.ts" }, typeKind: 1 }, annotations: [{ name: "MetaModel.setsContextValue", arguments: ["location", "Params.ParameterLocation.URI"] }, { name: "MetaModel.description", arguments: ["Uri parameters of this resource"] }], valueConstraint: null, optional: !1 }, { name: "displayName", type: { typeName: "string", nameSpace: "", basicName: "string", typeKind: 0, typeArguments: [], modulePath: null }, annotations: [{ name: "MetaModel.description", arguments: ["An alternate, human-friendly name for the resource type"] }], valueConstraint: null, optional: !1 }, { name: "baseUriParameters", type: { base: { typeName: "Params.Parameter", nameSpace: "Params", basicName: "Parameter", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/resources.ts" }, typeKind: 1 }, annotations: [{ name: "MetaModel.setsContextValue", arguments: ["fieldOrParam", !0] }, { name: "MetaModel.setsContextValue", arguments: ["location", "Params.ParameterLocation.BURI"] }, { name: "MetaModel.description", arguments: ["A resource or a method can override a base URI template's values. This is useful to restrict or change the default or parameter selection in the base URI. The baseUriParameters property MAY be used to override any or all parameters defined at the root level baseUriParameters property, as well as base URI parameters not specified at the root level."] }], valueConstraint: null, optional: !1 }, { name: "parametrizedProperties", type: { typeName: "Sys.TypeInstance", nameSpace: "Sys", basicName: "TypeInstance", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/resources.ts" }, annotations: [{ name: "MetaModel.customHandling", arguments: [] }, { name: "MetaModel.description", arguments: ["Returns object representation of parametrized properties of the resource type"] }], valueConstraint: null, optional: !1 }, { name: "description", type: { typeName: "Sys.MarkdownString", nameSpace: "Sys", basicName: "MarkdownString", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/resources.ts" }, annotations: [{ name: "MetaModel.description", arguments: ["The description attribute describes the intended use or meaning of the $self. This value MAY be formatted using Markdown."] }], valueConstraint: null, optional: !1 }], isInterface: !1, annotations: [{ name: "MetaModel.inlinedTemplates", arguments: [] }, { name: "MetaModel.allowQuestion", arguments: [] }], "extends": [], moduleName: null, annotationOverridings: {} }], aliases: [], enumDeclarations: [], imports: { MetaModel: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/metamodel.ts", Sys: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/systemTypes.ts", Params: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/parameters.ts", Bodies: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/bodies.ts", Common: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/common.ts", Methods: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/methods.ts", Security: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/security.ts" }, name: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/resources.ts" }, { classes: [{ name: "MethodBase", methods: [], typeParameters: [], typeParameterConstraint: [], "implements": [], fields: [{ name: "responses", type: { base: { typeName: "Bodies.Response", nameSpace: "Bodies", basicName: "Response", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/methods.ts" }, typeKind: 1 }, annotations: [{ name: "MetaModel.newInstanceName", arguments: ["New Response"] }, { name: "MetaModel.description", arguments: ["Resource methods MAY have one or more responses. Responses MAY be described using the description property, and MAY include example attributes or schema properties."] }], valueConstraint: null, optional: !1 }, { name: "body", type: { base: { typeName: "Bodies.BodyLike", nameSpace: "Bodies", basicName: "BodyLike", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/methods.ts" }, typeKind: 1 }, annotations: [{ name: "MetaModel.newInstanceName", arguments: ["New Body"] }, { name: "MetaModel.description", arguments: ["Some method verbs expect the resource to be sent as a request body. For example, to create a resource, the request must include the details of the resource to create. Resources CAN have alternate representations. For example, an API might support both JSON and XML representations. A method's body is defined in the body property as a hashmap, in which the key MUST be a valid media type."] }], valueConstraint: null, optional: !1 }, { name: "protocols", type: { base: { typeName: "string", nameSpace: "", basicName: "string", typeKind: 0, typeArguments: [], modulePath: null }, typeKind: 1 }, annotations: [{ name: "MetaModel.oneOf", arguments: [["HTTP", "HTTPS"]] }, { name: "MetaModel.description", arguments: ["A method can override an API's protocols value for that single method by setting a different value for the fields."] }], valueConstraint: null, optional: !1 }, { name: "securedBy", type: { base: { typeName: "SecuritySchemeRef", nameSpace: "", basicName: "SecuritySchemeRef", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/methods.ts" }, typeKind: 1 }, annotations: [{ name: "MetaModel.allowNull", arguments: [] }, { name: "MetaModel.description", arguments: ["A list of the security schemas to apply, these must be defined in the securitySchemes declaration. To indicate that the method may be called without applying any securityScheme, the method may be annotated with the null securityScheme. Security schemas may also be applied to a resource with securedBy, which is equivalent to applying the security schemas to all methods that may be declared, explicitly or implicitly, by defining the resourceTypes or traits property for that resource."] }], valueConstraint: null, optional: !1 }, { name: "baseUriParameters", type: { base: { typeName: "Params.Parameter", nameSpace: "Params", basicName: "Parameter", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/methods.ts" }, typeKind: 1 }, annotations: [{ name: "MetaModel.setsContextValue", arguments: ["fieldOrParam", !0] }, { name: "MetaModel.setsContextValue", arguments: ["location", "Params.ParameterLocation.BURI"] }, { name: "MetaModel.description", arguments: ["A resource or a method can override a base URI template's values. This is useful to restrict or change the default or parameter selection in the base URI. The baseUriParameters property MAY be used to override any or all parameters defined at the root level baseUriParameters property, as well as base URI parameters not specified at the root level."] }], valueConstraint: null, optional: !1 }, { name: "queryParameters", type: { base: { typeName: "Params.Parameter", nameSpace: "Params", basicName: "Parameter", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/methods.ts" }, typeKind: 1 }, annotations: [{ name: "MetaModel.setsContextValue", arguments: ["location", "ParameterLocation.QUERY"] }, { name: "MetaModel.newInstanceName", arguments: ["New query parameter"] }, { name: "MetaModel.description", arguments: ["An APIs resources MAY be filtered (to return a subset of results) or altered (such as transforming a response body from JSON to XML format) by the use of query strings. If the resource or its method supports a query string, the query string MUST be defined by the queryParameters property"] }], valueConstraint: null, optional: !1 }, { name: "headers", type: { base: { typeName: "Params.Parameter", nameSpace: "Params", basicName: "Parameter", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/methods.ts" }, typeKind: 1 }, annotations: [{ name: "MetaModel.setsContextValue", arguments: ["location", "ParameterLocation.HEADERS"] }, { name: "MetaModel.description", arguments: ["Headers that allowed at this position"] }, { name: "MetaModel.newInstanceName", arguments: ["New Header"] }], valueConstraint: null, optional: !1 }, { name: "description", type: { typeName: "Sys.MarkdownString", nameSpace: "Sys", basicName: "MarkdownString", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/methods.ts" }, annotations: [], valueConstraint: null, optional: !1 }], isInterface: !1, annotations: [{ name: "MetaModel.description", arguments: ["Method object allows description of http methods"] }], "extends": [], moduleName: null, annotationOverridings: {} }, { name: "Method", methods: [], typeParameters: [], typeParameterConstraint: [], "implements": [], fields: [{ name: "method", type: { typeName: "string", nameSpace: "", basicName: "string", typeKind: 0, typeArguments: [], modulePath: null }, annotations: [{ name: "MetaModel.key", arguments: [] }, { name: "MetaModel.extraMetaKey", arguments: ["methods"] }, { name: "MetaModel.oneOf", arguments: [["get", "put", "post", "delete", "patch", "options", "head", "trace", "connect"]] }, { name: "MetaModel.description", arguments: ["Method that can be called"] }], valueConstraint: null, optional: !1 }, { name: "is", type: { base: { typeName: "TraitRef", nameSpace: "", basicName: "TraitRef", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/methods.ts" }, typeKind: 1 }, annotations: [{ name: "MetaModel.description", arguments: ["Instantiation of applyed traits"] }], valueConstraint: null, optional: !1 }, { name: "parametrizedProperties", type: { typeName: "Sys.TypeInstance", nameSpace: "Sys", basicName: "TypeInstance", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/methods.ts" }, annotations: [{ name: "MetaModel.customHandling", arguments: [] }, { name: "MetaModel.description", arguments: ["For methods defined inside resource types returns object representation of parametrized properties"] }], valueConstraint: null, optional: !1 }], isInterface: !1, annotations: [], "extends": [{ typeName: "MethodBase", nameSpace: "", basicName: "MethodBase", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/methods.ts" }], moduleName: null, annotationOverridings: {} }, { name: "Trait", methods: [], typeParameters: [], typeParameterConstraint: [], "implements": [{ typeName: "DeclaresDynamicType", nameSpace: "", basicName: "DeclaresDynamicType", typeKind: 0, typeArguments: [{ typeName: "Trait", nameSpace: "", basicName: "Trait", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/methods.ts" }], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/methods.ts" }], fields: [{ name: "name", type: { typeName: "string", nameSpace: "", basicName: "string", typeKind: 0, typeArguments: [], modulePath: null }, annotations: [{ name: "MetaModel.key", arguments: [] }, { name: "MetaModel.description", arguments: ["Name of the trait"] }], valueConstraint: null, optional: !1 }, { name: "usage", type: { typeName: "string", nameSpace: "", basicName: "string", typeKind: 0, typeArguments: [], modulePath: null }, annotations: [{ name: "MetaModel.description", arguments: ["Instructions on how and when the trait should be used."] }], valueConstraint: null, optional: !1 }, { name: "parametrizedProperties", type: { typeName: "Sys.TypeInstance", nameSpace: "Sys", basicName: "TypeInstance", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/methods.ts" }, annotations: [{ name: "MetaModel.customHandling", arguments: [] }, { name: "MetaModel.description", arguments: ["Returns object representation of parametrized properties of the trait"] }], valueConstraint: null, optional: !1 }, { name: "displayName", type: { typeName: "string", nameSpace: "", basicName: "string", typeKind: 0, typeArguments: [], modulePath: null }, annotations: [{ name: "MetaModel.description", arguments: ["An alternate, human-friendly name for the trait"] }], valueConstraint: null, optional: !1 }], isInterface: !1, annotations: [{ name: "MetaModel.inlinedTemplates", arguments: [] }, { name: "MetaModel.allowQuestion", arguments: [] }], "extends": [{ typeName: "MethodBase", nameSpace: "", basicName: "MethodBase", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/methods.ts" }], moduleName: null, annotationOverridings: {} }, { name: "TraitRef", methods: [], typeParameters: [], typeParameterConstraint: [], "implements": [], fields: [{ name: "trait", type: { typeName: "Trait", nameSpace: "", basicName: "Trait", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/methods.ts" }, annotations: [{ name: "MetaModel.customHandling", arguments: [] }, { name: "MetaModel.description", arguments: ["Returns referenced trait"] }], valueConstraint: null, optional: !1 }], isInterface: !1, annotations: [], "extends": [{ typeName: "Reference", nameSpace: "", basicName: "Reference", typeKind: 0, typeArguments: [{ typeName: "Trait", nameSpace: "", basicName: "Trait", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/methods.ts" }], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/methods.ts" }], moduleName: null, annotationOverridings: {} }], aliases: [], enumDeclarations: [], imports: { MetaModel: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/metamodel.ts", Sys: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/systemTypes.ts", Params: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/parameters.ts", Bodies: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/bodies.ts", Common: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/common.ts", Security: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/security.ts" }, name: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/methods.ts" }, { classes: [{ name: "SecuritySchemePart", methods: [], typeParameters: [], typeParameterConstraint: [], "implements": [], fields: [{ name: "displayName", type: { typeName: "string", nameSpace: "", basicName: "string", typeKind: 0, typeArguments: [], modulePath: null }, annotations: [{ name: "MetaModel.description", arguments: ["An alternate, human-friendly name for the security scheme part"] }], valueConstraint: null, optional: !1 }, { name: "is", type: { base: { typeName: "TraitRef", nameSpace: "", basicName: "TraitRef", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/security.ts" }, typeKind: 1 }, annotations: [{ name: "MetaModel.description", arguments: ["Instantiation of applyed traits"] }], valueConstraint: null, optional: !1 }], isInterface: !1, annotations: [], "extends": [{ typeName: "MethodBase", nameSpace: "", basicName: "MethodBase", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/security.ts" }], moduleName: null, annotationOverridings: { headers: [{ name: "MetaModel.markdownDescription", arguments: ["Optional array of headers, documenting the possible headers that could be accepted."] }, { name: "MetaModel.valueDescription", arguments: ["Object whose property names are the request header names and whose values describe the values."] }], queryParameters: [{ name: "MetaModel.markdownDescription", arguments: ["Query parameters, used by the schema in order to authorize the request. Mutually exclusive with queryString."] }, { name: "MetaModel.valueDescription", arguments: ["Object whose property names are the query parameter names and whose values describe the values."] }], queryString: [{ name: "MetaModel.description", arguments: ["Specifies the query string, used by the schema in order to authorize the request. Mutually exclusive with queryParameters."] }, { name: "MetaModel.valueDescription", arguments: ["Type name or type declaration"] }], responses: [{ name: "MetaModel.description", arguments: ["Optional array of responses, describing the possible responses that could be sent."] }], description: [{ name: "MetaModel.description", arguments: ["A longer, human-friendly description of the security scheme part"] }, { name: "MetaModel.valueDescription", arguments: ["Markdown string"] }] } }, { name: "SecuritySchemeSettings", methods: [], typeParameters: [], typeParameterConstraint: [], "implements": [], fields: [], isInterface: !1, annotations: [{ name: "MetaModel.allowAny", arguments: [] }], "extends": [], moduleName: null, annotationOverridings: {} }, { name: "AbstractSecurityScheme", methods: [], typeParameters: [], typeParameterConstraint: [], "implements": [{ typeName: "Referencable", nameSpace: "", basicName: "Referencable", typeKind: 0, typeArguments: [{ typeName: "AbstractSecurityScheme", nameSpace: "", basicName: "AbstractSecurityScheme", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/security.ts" }], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/security.ts" }], fields: [{ name: "name", type: { typeName: "string", nameSpace: "", basicName: "string", typeKind: 0, typeArguments: [], modulePath: null }, annotations: [{ name: "MetaModel.key", arguments: [] }, { name: "MetaModel.startFrom", arguments: [""] }, { name: "MetaModel.hide", arguments: [] }, { name: "MetaModel.description", arguments: ["Name of the security scheme"] }], valueConstraint: null, optional: !1 }, { name: "type", type: { typeName: "string", nameSpace: "", basicName: "string", typeKind: 0, typeArguments: [], modulePath: null }, annotations: [{ name: "MetaModel.required", arguments: [] }, { name: "MetaModel.oneOf", arguments: [["OAuth 1.0", "OAuth 2.0", "Basic Authentication", "DigestSecurityScheme Authentication", "x-{other}"]] }, { name: "MetaModel.descriminatingProperty", arguments: [] }, { name: "MetaModel.description", arguments: ["The securitySchemes property MUST be used to specify an API's security mechanisms, including the required settings and the authentication methods that the API supports. one authentication method is allowed if the API supports them."] }, { name: "MetaModel.valueDescription", arguments: ["string<br><br>The value MUST be one of<br>* OAuth 1.0,<br>* OAuth 2.0, <br>* BasicSecurityScheme Authentication<br>* DigestSecurityScheme Authentication<br>* x-&lt;other&gt;"] }], valueConstraint: null, optional: !1 }, { name: "description", type: { typeName: "Sys.MarkdownString", nameSpace: "Sys", basicName: "MarkdownString", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/security.ts" }, annotations: [{ name: "MetaModel.description", arguments: ["The description attribute MAY be used to describe a security schemes property."] }], valueConstraint: null, optional: !1 }, { name: "describedBy", type: { typeName: "SecuritySchemePart", nameSpace: "", basicName: "SecuritySchemePart", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/security.ts" }, annotations: [{ name: "MetaModel.description", arguments: ["A description of the request components related to Security that are determined by the scheme: the headers, query parameters or responses. As a best practice, even for standard security schemes, API designers SHOULD describe these properties of security schemes. Including the security scheme description completes an API documentation."] }], valueConstraint: null, optional: !1 }, { name: "settings", type: { typeName: "SecuritySchemeSettings", nameSpace: "", basicName: "SecuritySchemeSettings", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/security.ts" }, annotations: [{ name: "MetaModel.description", arguments: ["The settings attribute MAY be used to provide security scheme-specific information. The required attributes vary depending on the type of security scheme is being declared. It describes the minimum set of properties which any processing application MUST provide and validate if it chooses to implement the security scheme. Processing applications MAY choose to recognize other properties for things such as token lifetime, preferred cryptographic algorithms, and more."] }], valueConstraint: null, optional: !1 }], isInterface: !1, annotations: [{ name: "MetaModel.description", arguments: ["Declares globally referable security schema definition"] }, { name: "MetaModel.actuallyExports", arguments: ["$self"] }, { name: "MetaModel.referenceIs", arguments: ["settings"] }], "extends": [], moduleName: null, annotationOverridings: {} }, { name: "SecuritySchemeRef", methods: [], typeParameters: [], typeParameterConstraint: [], "implements": [], fields: [{ name: "securitySchemeName", type: { typeName: "string", nameSpace: "", basicName: "string", typeKind: 0, typeArguments: [], modulePath: null }, annotations: [{ name: "MetaModel.customHandling", arguments: [] }, { name: "MetaModel.description", arguments: ["Returns the name of security scheme, this reference refers to."] }], valueConstraint: null, optional: !1 }, { name: "securityScheme", type: { typeName: "AbstractSecurityScheme", nameSpace: "", basicName: "AbstractSecurityScheme", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/security.ts" }, annotations: [{ name: "MetaModel.customHandling", arguments: [] }, { name: "MetaModel.description", arguments: ["Returns AST node of security scheme, this reference refers to, or null."] }], valueConstraint: null, optional: !1 }], isInterface: !1, annotations: [{ name: "MetaModel.allowAny", arguments: [] }], "extends": [{ typeName: "Reference", nameSpace: "", basicName: "Reference", typeKind: 0, typeArguments: [{ typeName: "AbstractSecurityScheme", nameSpace: "", basicName: "AbstractSecurityScheme", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/security.ts" }], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/security.ts" }], moduleName: null, annotationOverridings: {} }, { name: "OAuth1SecuritySchemeSettings", methods: [], typeParameters: [], typeParameterConstraint: [], "implements": [], fields: [{ name: "requestTokenUri", type: { typeName: "Sys.FixedUri", nameSpace: "Sys", basicName: "FixedUri", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/security.ts" }, annotations: [{ name: "MetaModel.required", arguments: [] }, { name: "MetaModel.description", arguments: ["The URI of the Temporary Credential Request endpoint as defined in RFC5849 Section 2.1"] }, { name: "MetaModel.valueDescription", arguments: ["FixedUriString"] }], valueConstraint: null, optional: !1 }, { name: "authorizationUri", type: { typeName: "Sys.FixedUri", nameSpace: "Sys", basicName: "FixedUri", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/security.ts" }, annotations: [{ name: "MetaModel.required", arguments: [] }, { name: "MetaModel.description", arguments: ["The URI of the Resource Owner Authorization endpoint as defined in RFC5849 Section 2.2"] }, { name: "MetaModel.valueDescription", arguments: ["FixedUriString"] }], valueConstraint: null, optional: !1 }, { name: "tokenCredentialsUri", type: { typeName: "Sys.FixedUri", nameSpace: "Sys", basicName: "FixedUri", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/security.ts" }, annotations: [{ name: "MetaModel.required", arguments: [] }, { name: "MetaModel.description", arguments: ["The URI of the Token Request endpoint as defined in RFC5849 Section 2.3"] }, { name: "MetaModel.valueDescription", arguments: ["FixedUriString"] }], valueConstraint: null, optional: !1 }], isInterface: !1, annotations: [{ name: "MetaModel.allowAny", arguments: [] }, { name: "MetaModel.functionalDescriminator", arguments: ["$parent.type=='OAuth 1.0'"] }], "extends": [{ typeName: "SecuritySchemeSettings", nameSpace: "", basicName: "SecuritySchemeSettings", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/security.ts" }], moduleName: null, annotationOverridings: {} }, { name: "OAuth2SecuritySchemeSettings", methods: [], typeParameters: [], typeParameterConstraint: [], "implements": [], fields: [{ name: "accessTokenUri", type: { typeName: "Sys.FixedUri", nameSpace: "Sys", basicName: "FixedUri", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/security.ts" }, annotations: [{ name: "MetaModel.required", arguments: [] }, { name: "MetaModel.description", arguments: ["The URI of the Token Endpoint as defined in RFC6749 Section 3.2. Not required forby implicit grant type."] }, { name: "MetaModel.valueDescription", arguments: ["FixedUriString"] }], valueConstraint: null, optional: !1 }, { name: "authorizationUri", type: { typeName: "Sys.FixedUri", nameSpace: "Sys", basicName: "FixedUri", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/security.ts" }, annotations: [{ name: "MetaModel.required", arguments: [] }, { name: "MetaModel.description", arguments: ["The URI of the Authorization Endpoint as defined in RFC6749 Section 3.1. Required forby authorization_code and implicit grant types."] }, { name: "MetaModel.valueDescription", arguments: ["FixedUriString"] }], valueConstraint: null, optional: !1 }, { name: "authorizationGrants", type: { base: { typeName: "string", nameSpace: "", basicName: "string", typeKind: 0, typeArguments: [], modulePath: null }, typeKind: 1 }, annotations: [{ name: "MetaModel.description", arguments: ["A list of the Authorization grants supported by the API as defined in RFC6749 Sections 4.1, 4.2, 4.3 and 4.4, can be any of: authorization_code, password, client_credentials, implicit, or refresh_token."] }, { name: "MetaModel.markdownDescription", arguments: ["A list of the Authorization grants supported by the API as defined in RFC6749 Sections 4.1, 4.2, 4.3 and 4.4, can be any of:<br>* authorization_code<br>* password<br>* client_credentials <br>* implicit<br>* refresh_token."] }], valueConstraint: null, optional: !1 }, { name: "scopes", type: { base: { typeName: "string", nameSpace: "", basicName: "string", typeKind: 0, typeArguments: [], modulePath: null }, typeKind: 1 }, annotations: [{ name: "MetaModel.description", arguments: ["A list of scopes supported by the security scheme as defined in RFC6749 Section 3.3"] }], valueConstraint: null, optional: !1 }], isInterface: !1, annotations: [{ name: "MetaModel.allowAny", arguments: [] }], "extends": [{ typeName: "SecuritySchemeSettings", nameSpace: "", basicName: "SecuritySchemeSettings", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/security.ts" }], moduleName: null, annotationOverridings: {} }, { name: "OAuth2SecurityScheme", methods: [], typeParameters: [], typeParameterConstraint: [], "implements": [], fields: [{ name: "type", type: null, annotations: [], valueConstraint: { isCallConstraint: !1, value: "OAuth 2.0" }, optional: !1 }, { name: "settings", type: { typeName: "OAuth2SecuritySchemeSettings", nameSpace: "", basicName: "OAuth2SecuritySchemeSettings", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/security.ts" }, annotations: [], valueConstraint: null, optional: !1 }], isInterface: !1, annotations: [{ name: "MetaModel.description", arguments: ["Declares globally referable security schema definition"] }, { name: "MetaModel.actuallyExports", arguments: ["$self"] }, { name: "MetaModel.referenceIs", arguments: ["settings"] }], "extends": [{ typeName: "AbstractSecurityScheme", nameSpace: "", basicName: "AbstractSecurityScheme", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/security.ts" }], moduleName: null, annotationOverridings: {} }, { name: "OAuth1SecurityScheme", methods: [], typeParameters: [], typeParameterConstraint: [], "implements": [], fields: [{ name: "type", type: null, annotations: [], valueConstraint: { isCallConstraint: !1, value: "OAuth 1.0" }, optional: !1 }, { name: "settings", type: { typeName: "OAuth1SecuritySchemeSettings", nameSpace: "", basicName: "OAuth1SecuritySchemeSettings", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/security.ts" }, annotations: [], valueConstraint: null, optional: !1 }], isInterface: !1, annotations: [{ name: "MetaModel.description", arguments: ["Declares globally referable security schema definition"] }, { name: "MetaModel.actuallyExports", arguments: ["$self"] }, { name: "MetaModel.referenceIs", arguments: ["settings"] }], "extends": [{ typeName: "AbstractSecurityScheme", nameSpace: "", basicName: "AbstractSecurityScheme", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/security.ts" }], moduleName: null, annotationOverridings: {} }, { name: "BasicSecurityScheme", methods: [], typeParameters: [], typeParameterConstraint: [], "implements": [], fields: [{ name: "type", type: null, annotations: [], valueConstraint: { isCallConstraint: !1, value: "Basic Authentication" }, optional: !1 }], isInterface: !1, annotations: [{ name: "MetaModel.description", arguments: ["Declares globally referable security schema definition"] }, { name: "MetaModel.actuallyExports", arguments: ["$self"] }, { name: "MetaModel.referenceIs", arguments: ["settings"] }], "extends": [{ typeName: "AbstractSecurityScheme", nameSpace: "", basicName: "AbstractSecurityScheme", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/security.ts" }], moduleName: null, annotationOverridings: {} }, { name: "DigestSecurityScheme", methods: [], typeParameters: [], typeParameterConstraint: [], "implements": [], fields: [{ name: "type", type: null, annotations: [], valueConstraint: { isCallConstraint: !1, value: "Digest Authentication" }, optional: !1 }], isInterface: !1, annotations: [{ name: "MetaModel.description", arguments: ["Declares globally referable security schema definition"] }, { name: "MetaModel.actuallyExports", arguments: ["$self"] }, { name: "MetaModel.referenceIs", arguments: ["settings"] }], "extends": [{ typeName: "AbstractSecurityScheme", nameSpace: "", basicName: "AbstractSecurityScheme", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/security.ts" }], moduleName: null, annotationOverridings: {} }, { name: "CustomSecurityScheme", methods: [], typeParameters: [], typeParameterConstraint: [], "implements": [], fields: [{ name: "type", type: null, annotations: [], valueConstraint: { isCallConstraint: !1, value: "x-{other}" }, optional: !1 }], isInterface: !1, annotations: [{ name: "MetaModel.description", arguments: ["Declares globally referable security schema definition"] }, { name: "MetaModel.actuallyExports", arguments: ["$self"] }, { name: "MetaModel.referenceIs", arguments: ["settings"] }], "extends": [{ typeName: "AbstractSecurityScheme", nameSpace: "", basicName: "AbstractSecurityScheme", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/security.ts" }], moduleName: null, annotationOverridings: {} }], aliases: [], enumDeclarations: [], imports: { MetaModel: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/metamodel.ts", Sys: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/systemTypes.ts", Params: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/parameters.ts", Bodies: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/bodies.ts", Common: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/common.ts",
                        Methods: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/methods.ts" }, name: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-0.8/security.ts" }];
        }, function (e, t, n) {
            e.exports = [{ classes: [{ name: "Library", methods: [], typeParameters: [], typeParameterConstraint: [], "implements": [], fields: [{ name: "usage", type: { typeName: "string", nameSpace: "", basicName: "string", typeKind: 0, typeArguments: [], modulePath: null }, annotations: [{ name: "MetaModel.description", arguments: ["contains description of why library exist"] }], valueConstraint: null, optional: !1 }, { name: "name", type: { typeName: "string", nameSpace: "", basicName: "string", typeKind: 0, typeArguments: [], modulePath: null }, annotations: [{ name: "MetaModel.key", arguments: [] }, { name: "MetaModel.description", arguments: ["Namespace which the library is imported under"] }], valueConstraint: null, optional: !1 }], isInterface: !1, annotations: [], "extends": [{ typeName: "LibraryBase", nameSpace: "", basicName: "LibraryBase", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/api.ts" }], moduleName: null, annotationOverridings: {} }, { name: "LibraryBase", methods: [], typeParameters: [], typeParameterConstraint: [], "implements": [], fields: [{ name: "schemas", type: { base: { typeName: "TypeDeclaration", nameSpace: "", basicName: "TypeDeclaration", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/api.ts" }, typeKind: 1 }, annotations: [{ name: "MetaModel.embeddedInMaps", arguments: [] }, { name: "MetaModel.description", arguments: ['Alias for the equivalent "types" property, for compatibility with RAML 0.8. Deprecated - API definitions should use the "types" property, as the "schemas" alias for that property name may be removed in a future RAML version. The "types" property allows for XML and JSON schemas.'] }], valueConstraint: null, optional: !1 }, { name: "types", type: { base: { typeName: "DataModel.TypeDeclaration", nameSpace: "DataModel", basicName: "TypeDeclaration", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/api.ts" }, typeKind: 1 }, annotations: [{ name: "MetaModel.embeddedInMaps", arguments: [] }, { name: "MetaModel.setsContextValue", arguments: ["locationKind", "DataModel.LocationKind.MODELS"] }, { name: "MetaModel.description", arguments: ["Declarations of (data) types for use within this API"] }, { name: "MetaModel.markdownDescription", arguments: ["Declarations of (data) types for use within this API."] }, { name: "MetaModel.valueDescription", arguments: ["An object whose properties map type names to type declarations; or an array of such objects"] }], valueConstraint: null, optional: !1 }, { name: "traits", type: { base: { typeName: "Methods.Trait", nameSpace: "Methods", basicName: "Trait", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/api.ts" }, typeKind: 1 }, annotations: [{ name: "MetaModel.embeddedInMaps", arguments: [] }, { name: "MetaModel.description", arguments: ["Declarations of traits used in this API"] }, { name: "MetaModel.description", arguments: ["Declarations of traits for use within this API"] }, { name: "MetaModel.markdownDescription", arguments: ["Declarations of traits for use within this API."] }, { name: "MetaModel.valueDescription", arguments: ["An object whose properties map trait names to trait declarations; or an array of such objects"] }], valueConstraint: null, optional: !1 }, { name: "resourceTypes", type: { base: { typeName: "Resources.ResourceType", nameSpace: "Resources", basicName: "ResourceType", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/api.ts" }, typeKind: 1 }, annotations: [{ name: "MetaModel.embeddedInMaps", arguments: [] }, { name: "MetaModel.description", arguments: ["Declaration of resource types used in this API"] }, { name: "MetaModel.description", arguments: ["Declarations of resource types for use within this API"] }, { name: "MetaModel.markdownDescription", arguments: ["Declarations of resource types for use within this API."] }, { name: "MetaModel.valueDescription", arguments: ["An object whose properties map resource type names to resource type declarations; or an array of such objects"] }], valueConstraint: null, optional: !1 }, { name: "annotationTypes", type: { base: { typeName: "DataModel.TypeDeclaration", nameSpace: "DataModel", basicName: "TypeDeclaration", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/api.ts" }, typeKind: 1 }, annotations: [{ name: "MetaModel.setsContextValue", arguments: ["decls", "true"] }, { name: "MetaModel.embeddedInMaps", arguments: [] }, { name: "MetaModel.description", arguments: ["Declarations of annotation types for use by annotations"] }, { name: "MetaModel.markdownDescription", arguments: ["Declarations of annotation types for use by annotations."] }, { name: "MetaModel.valueDescription", arguments: ["An object whose properties map annotation type names to annotation type declarations; or an array of such objects"] }], valueConstraint: null, optional: !1 }, { name: "securitySchemes", type: { base: { typeName: "Security.AbstractSecurityScheme", nameSpace: "Security", basicName: "AbstractSecurityScheme", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/api.ts" }, typeKind: 1 }, annotations: [{ name: "MetaModel.embeddedInMaps", arguments: [] }, { name: "MetaModel.description", arguments: ["Security schemas declarations"] }, { name: "MetaModel.description", arguments: ["Declarations of security schemes for use within this API."] }, { name: "MetaModel.markdownDescription", arguments: ["Declarations of security schemes for use within this API."] }, { name: "MetaModel.valueDescription", arguments: ["An object whose properties map security scheme names to security scheme declarations; or an array of such objects"] }], valueConstraint: null, optional: !1 }], isInterface: !1, annotations: [{ name: "MetaModel.internalClass", arguments: [] }], "extends": [{ typeName: "FragmentDeclaration", nameSpace: "", basicName: "FragmentDeclaration", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/api.ts" }], moduleName: null, annotationOverridings: {} }, { name: "Api", methods: [], typeParameters: [], typeParameterConstraint: [], "implements": [], fields: [{ name: "title", type: { typeName: "string", nameSpace: "", basicName: "string", typeKind: 0, typeArguments: [], modulePath: null }, annotations: [{ name: "MetaModel.required", arguments: [] }, { name: "MetaModel.description", arguments: ["Short plain-text label for the API"] }], valueConstraint: null, optional: !1 }, { name: "description", type: { typeName: "Sys.MarkdownString", nameSpace: "Sys", basicName: "MarkdownString", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/api.ts" }, annotations: [{ name: "MetaModel.description", arguments: ["A longer, human-friendly description of the API"] }], valueConstraint: null, optional: !1 }, { name: "version", type: { typeName: "string", nameSpace: "", basicName: "string", typeKind: 0, typeArguments: [], modulePath: null }, annotations: [{ name: "MetaModel.description", arguments: ["The version of the API, e.g. 'v1'"] }], valueConstraint: null, optional: !1 }, { name: "baseUri", type: { typeName: "Sys.FullUriTemplateString", nameSpace: "Sys", basicName: "FullUriTemplateString", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/api.ts" }, annotations: [{ name: "MetaModel.description", arguments: ["A URI that's to be used as the base of all the resources' URIs. Often used as the base of the URL of each resource, containing the location of the API. Can be a template URI."] }], valueConstraint: null, optional: !1 }, { name: "baseUriParameters", type: { base: { typeName: "DataModel.TypeDeclaration", nameSpace: "DataModel", basicName: "TypeDeclaration", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/api.ts" }, typeKind: 1 }, annotations: [{ name: "MetaModel.setsContextValue", arguments: ["location", "DataModel.ModelLocation.BURI"] }, { name: "MetaModel.setsContextValue", arguments: ["locationKind", "DataModel.LocationKind.APISTRUCTURE"] }, { name: "MetaModel.description", arguments: ["Named parameters used in the baseUri (template)"] }], valueConstraint: null, optional: !1 }, { name: "protocols", type: { base: { typeName: "string", nameSpace: "", basicName: "string", typeKind: 0, typeArguments: [], modulePath: null }, typeKind: 1 }, annotations: [{ name: "MetaModel.oneOf", arguments: [["HTTP", "HTTPS"]] }, { name: "MetaModel.description", arguments: ["The protocols supported by the API"] }, { name: "MetaModel.valueDescription", arguments: ['Array of strings, with each being "HTTP" or "HTTPS", case-insensitive'] }], valueConstraint: null, optional: !1 }, { name: "mediaType", type: { base: { typeName: "Bodies.MimeType", nameSpace: "Bodies", basicName: "MimeType", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/api.ts" }, typeKind: 1 }, annotations: [{ name: "MetaModel.oftenKeys", arguments: [["application/json", "application/xml", "application/x-www-form-urlencoded", "multipart/form-data"]] }, { name: "MetaModel.description", arguments: ['The default media type to use for request and response bodies (payloads), e.g. "application/json"'] }, { name: "MetaModel.inherited", arguments: [] }, { name: "MetaModel.valueDescription", arguments: ["Media type string"] }], valueConstraint: null, optional: !1 }, { name: "securedBy", type: { base: { typeName: "Security.SecuritySchemeRef", nameSpace: "Security", basicName: "SecuritySchemeRef", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/api.ts" }, typeKind: 1 }, annotations: [{ name: "MetaModel.description", arguments: ["The security schemes that apply to every resource and method in the API"] }], valueConstraint: null, optional: !1 }, { name: "resources", type: { base: { typeName: "Resources.Resource", nameSpace: "Resources", basicName: "Resource", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/api.ts" }, typeKind: 1 }, annotations: [{ name: "MetaModel.documentationTableLabel", arguments: ["/&lt;relativeUri&gt;"] }, { name: "MetaModel.newInstanceName", arguments: ["New Resource"] }, { name: "MetaModel.description", arguments: ["The resources of the API, identified as relative URIs that begin with a slash (/). Every property whose key begins with a slash (/), and is either at the root of the API definition or is the child property of a resource property, is a resource property, e.g.: /users, /{groupId}, etc"] }], valueConstraint: null, optional: !1 }, { name: "documentation", type: { base: { typeName: "DocumentationItem", nameSpace: "", basicName: "DocumentationItem", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/api.ts" }, typeKind: 1 }, annotations: [{ name: "MetaModel.description", arguments: ["Additional overall documentation for the API"] }], valueConstraint: null, optional: !1 }, { name: "RAMLVersion", type: { typeName: "string", nameSpace: "", basicName: "string", typeKind: 0, typeArguments: [], modulePath: null }, annotations: [{ name: "MetaModel.customHandling", arguments: [] }, { name: "MetaModel.description", arguments: ['Returns RAML version. "RAML10" string is returned for RAML 1.0. "RAML08" string is returned for RAML 0.8.'] }], valueConstraint: null, optional: !1 }], isInterface: !1, annotations: [], "extends": [{ typeName: "LibraryBase", nameSpace: "", basicName: "LibraryBase", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/api.ts" }], moduleName: null, annotationOverridings: { annotations: [{ name: "MetaModel.markdownDescription", arguments: ['Annotations to be applied to this API. Annotations are any property whose key begins with "(" and ends with ")" and whose name (the part between the beginning and ending parentheses) is a declared annotation name.'] }] } }, { name: "Overlay", methods: [], typeParameters: [], typeParameterConstraint: [], "implements": [], fields: [{ name: "usage", type: { typeName: "string", nameSpace: "", basicName: "string", typeKind: 0, typeArguments: [], modulePath: null }, annotations: [{ name: "MetaModel.description", arguments: ["contains description of why overlay exist"] }], valueConstraint: null, optional: !1 }, { name: "extends", type: { typeName: "string", nameSpace: "", basicName: "string", typeKind: 0, typeArguments: [], modulePath: null }, annotations: [{ name: "MetaModel.required", arguments: [] }, { name: "MetaModel.description", arguments: ["Location of a valid RAML API definition (or overlay or extension), the overlay is applied to."] }], valueConstraint: null, optional: !1 }, { name: "title", type: { typeName: "string", nameSpace: "", basicName: "string", typeKind: 0, typeArguments: [], modulePath: null }, annotations: [{ name: "MetaModel.description", arguments: ["Short plain-text label for the API"] }], valueConstraint: null, optional: !1 }], isInterface: !1, annotations: [], "extends": [{ typeName: "Api", nameSpace: "", basicName: "Api", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/api.ts" }], moduleName: null, annotationOverridings: {} }, { name: "Extension", methods: [], typeParameters: [], typeParameterConstraint: [], "implements": [], fields: [{ name: "usage", type: { typeName: "string", nameSpace: "", basicName: "string", typeKind: 0, typeArguments: [], modulePath: null }, annotations: [{ name: "MetaModel.description", arguments: ["contains description of why extension exist"] }], valueConstraint: null, optional: !1 }, { name: "extends", type: { typeName: "string", nameSpace: "", basicName: "string", typeKind: 0, typeArguments: [], modulePath: null }, annotations: [{ name: "MetaModel.required", arguments: [] }, { name: "MetaModel.description", arguments: ["Location of a valid RAML API definition (or overlay or extension), the extension is applied to"] }], valueConstraint: null, optional: !1 }, { name: "title", type: { typeName: "string", nameSpace: "", basicName: "string", typeKind: 0, typeArguments: [], modulePath: null }, annotations: [{ name: "MetaModel.description", arguments: ["Short plain-text label for the API"] }], valueConstraint: null, optional: !1 }], isInterface: !1, annotations: [], "extends": [{ typeName: "Api", nameSpace: "", basicName: "Api", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/api.ts" }], moduleName: null, annotationOverridings: {} }, { name: "UsesDeclaration", methods: [], typeParameters: [], typeParameterConstraint: [], "implements": [], fields: [{ name: "key", type: { typeName: "string", nameSpace: "", basicName: "string", typeKind: 0, typeArguments: [], modulePath: null }, annotations: [{ name: "MetaModel.key", arguments: [] }, { name: "MetaModel.description", arguments: ["Name prefix (without dot) used to refer imported declarations"] }], valueConstraint: null, optional: !1 }, { name: "value", type: { typeName: "string", nameSpace: "", basicName: "string", typeKind: 0, typeArguments: [], modulePath: null }, annotations: [{ name: "MetaModel.description", arguments: ["Content of the schema"] }, { name: "MetaModel.canBeValue", arguments: [] }, { name: "MetaModel.value", arguments: [] }], valueConstraint: null, optional: !1 }], isInterface: !1, annotations: [], "extends": [{ typeName: "Annotable", nameSpace: "", basicName: "Annotable", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/api.ts" }], moduleName: null, annotationOverridings: {} }, { name: "FragmentDeclaration", methods: [], typeParameters: [], typeParameterConstraint: [], "implements": [], fields: [{ name: "uses", type: { base: { typeName: "UsesDeclaration", nameSpace: "", basicName: "UsesDeclaration", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/api.ts" }, typeKind: 1 }, annotations: [{ name: "MetaModel.embeddedInMaps", arguments: [] }], valueConstraint: null, optional: !1 }], isInterface: !1, annotations: [], "extends": [{ typeName: "Annotable", nameSpace: "", basicName: "Annotable", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/api.ts" }], moduleName: null, annotationOverridings: {} }, { name: "DocumentationItem", methods: [], typeParameters: [], typeParameterConstraint: [], "implements": [], fields: [{ name: "title", type: { typeName: "string", nameSpace: "", basicName: "string", typeKind: 0, typeArguments: [], modulePath: null }, annotations: [{ name: "MetaModel.description", arguments: ["Title of documentation section"] }, { name: "MetaModel.required", arguments: [] }], valueConstraint: null, optional: !1 }, { name: "content", type: { typeName: "Sys.MarkdownString", nameSpace: "Sys", basicName: "MarkdownString", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/api.ts" }, annotations: [{ name: "MetaModel.description", arguments: ["Content of documentation section"] }, { name: "MetaModel.required", arguments: [] }], valueConstraint: null, optional: !1 }], isInterface: !1, annotations: [{ name: "MetaModel.possibleInterfaces", arguments: [["FragmentDeclaration"]] }], "extends": [{ typeName: "Annotable", nameSpace: "", basicName: "Annotable", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/api.ts" }], moduleName: null, annotationOverridings: {} }], aliases: [], enumDeclarations: [], imports: { MetaModel: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/metamodel.ts", Sys: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/systemTypes.ts", Methods: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/methods.ts", Resources: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/resources.ts", Decls: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/declarations.ts", Params: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/parameters.ts", Common: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/common.ts", Bodies: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/bodies.ts", DataModel: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/datamodel.ts", Security: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/security.ts" }, name: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/api.ts" }, { classes: [{ name: "SpecPartMetaData", methods: [], typeParameters: [], typeParameterConstraint: [], "implements": [], fields: [], isInterface: !0, annotations: [], "extends": [], moduleName: null, annotationOverridings: {} }], aliases: [], enumDeclarations: [], imports: {}, name: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/metamodel.ts" }, { classes: [{ name: "ValueType", methods: [{ returnType: { typeName: "string", nameSpace: "", basicName: "string", typeKind: 0, typeArguments: [], modulePath: null }, name: "value", start: 170, end: 210, text: "\n\n  value():string {\n    return null\n  }", arguments: [] }], typeParameters: [], typeParameterConstraint: [], "implements": [], fields: [], isInterface: !1, annotations: [], "extends": [{ typeName: "Annotable", nameSpace: "", basicName: "Annotable", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/systemTypes.ts" }], moduleName: null, annotationOverridings: {} }, { name: "StringType", methods: [], typeParameters: [], typeParameterConstraint: [], "implements": [], fields: [], isInterface: !1, annotations: [{ name: "MetaModel.nameAtRuntime", arguments: ["string"] }, { name: "MetaModel.alias", arguments: ["string"] }], "extends": [{ typeName: "ValueType", nameSpace: "", basicName: "ValueType", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/systemTypes.ts" }], moduleName: null, annotationOverridings: {} }, { name: "AnyType", methods: [], typeParameters: [], typeParameterConstraint: [], "implements": [], fields: [], isInterface: !1, annotations: [{ name: "MetaModel.nameAtRuntime", arguments: ["any"] }, { name: "MetaModel.alias", arguments: ["any"] }], "extends": [{ typeName: "ValueType", nameSpace: "", basicName: "ValueType", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/systemTypes.ts" }], moduleName: null, annotationOverridings: {} }, { name: "NumberType", methods: [], typeParameters: [], typeParameterConstraint: [], "implements": [], fields: [], isInterface: !1, annotations: [{ name: "MetaModel.nameAtRuntime", arguments: ["number"] }, { name: "MetaModel.alias", arguments: ["number"] }], "extends": [{ typeName: "ValueType", nameSpace: "", basicName: "ValueType", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/systemTypes.ts" }], moduleName: null, annotationOverridings: {} }, { name: "IntegerType", methods: [], typeParameters: [], typeParameterConstraint: [], "implements": [], fields: [], isInterface: !1, annotations: [{ name: "MetaModel.nameAtRuntime", arguments: ["integer"] }, { name: "MetaModel.alias", arguments: ["integer"] }], "extends": [{ typeName: "ValueType", nameSpace: "", basicName: "ValueType", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/systemTypes.ts" }], moduleName: null, annotationOverridings: {} }, { name: "NullType", methods: [], typeParameters: [], typeParameterConstraint: [], "implements": [], fields: [], isInterface: !1, annotations: [{ name: "MetaModel.nameAtRuntime", arguments: ["null"] }, { name: "MetaModel.alias", arguments: ["null"] }], "extends": [{ typeName: "ValueType", nameSpace: "", basicName: "ValueType", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/systemTypes.ts" }], moduleName: null, annotationOverridings: {} }, { name: "TimeOnlyType", methods: [], typeParameters: [], typeParameterConstraint: [], "implements": [], fields: [], isInterface: !1, annotations: [{ name: "MetaModel.nameAtRuntime", arguments: ["time-only"] }, { name: "MetaModel.alias", arguments: ["time-only"] }], "extends": [{ typeName: "ValueType", nameSpace: "", basicName: "ValueType", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/systemTypes.ts" }], moduleName: null, annotationOverridings: {} }, { name: "DateOnlyType", methods: [], typeParameters: [], typeParameterConstraint: [], "implements": [], fields: [], isInterface: !1, annotations: [{ name: "MetaModel.nameAtRuntime", arguments: ["date-only"] }, { name: "MetaModel.alias", arguments: ["date-only"] }], "extends": [{ typeName: "ValueType", nameSpace: "", basicName: "ValueType", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/systemTypes.ts" }], moduleName: null, annotationOverridings: {} }, { name: "DateTimeOnlyType", methods: [], typeParameters: [], typeParameterConstraint: [], "implements": [], fields: [], isInterface: !1, annotations: [{ name: "MetaModel.nameAtRuntime", arguments: ["datetime-only"] }, { name: "MetaModel.alias", arguments: ["datetime-only"] }], "extends": [{ typeName: "ValueType", nameSpace: "", basicName: "ValueType", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/systemTypes.ts" }], moduleName: null, annotationOverridings: {} }, { name: "DateTimeType", methods: [], typeParameters: [], typeParameterConstraint: [], "implements": [], fields: [], isInterface: !1, annotations: [{ name: "MetaModel.nameAtRuntime", arguments: ["datetime"] }, { name: "MetaModel.alias", arguments: ["datetime"] }], "extends": [{ typeName: "ValueType", nameSpace: "", basicName: "ValueType", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/systemTypes.ts" }], moduleName: null, annotationOverridings: {} }, { name: "FileType", methods: [], typeParameters: [], typeParameterConstraint: [], "implements": [], fields: [], isInterface: !1, annotations: [{ name: "MetaModel.nameAtRuntime", arguments: ["file"] }, { name: "MetaModel.alias", arguments: ["file"] }], "extends": [{ typeName: "ValueType", nameSpace: "", basicName: "ValueType", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/systemTypes.ts" }], moduleName: null, annotationOverridings: {} }, { name: "BooleanType", methods: [], typeParameters: [], typeParameterConstraint: [], "implements": [], fields: [], isInterface: !1, annotations: [{ name: "MetaModel.nameAtRuntime", arguments: ["boolean"] }, { name: "MetaModel.alias", arguments: ["boolean"] }], "extends": [{ typeName: "ValueType", nameSpace: "", basicName: "ValueType", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/systemTypes.ts" }], moduleName: null, annotationOverridings: {} }, { name: "Reference", methods: [], typeParameters: ["T"], typeParameterConstraint: [null], "implements": [], fields: [{ name: "structuredValue", type: { typeName: "DataModel.TypeInstance", nameSpace: "DataModel", basicName: "TypeInstance", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/systemTypes.ts" }, annotations: [{ name: "MetaModel.customHandling", arguments: [] }, { name: "MetaModel.description", arguments: ["Returns a structured object if the reference point to one."] }], valueConstraint: null, optional: !1 }, { name: "name", type: { typeName: "string", nameSpace: "", basicName: "string", typeKind: 0, typeArguments: [], modulePath: null }, annotations: [{ name: "MetaModel.customHandling", arguments: [] }, { name: "MetaModel.description", arguments: ["Returns name of referenced object"] }], valueConstraint: null, optional: !1 }], isInterface: !1, annotations: [], "extends": [{ typeName: "ValueType", nameSpace: "", basicName: "ValueType", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/systemTypes.ts" }], moduleName: null, annotationOverridings: {} }, { name: "UriTemplate", methods: [], typeParameters: [], typeParameterConstraint: [], "implements": [], fields: [], isInterface: !1, annotations: [{ name: "MetaModel.description", arguments: ["This type currently serves both for absolute and relative urls"] }], "extends": [{ typeName: "StringType", nameSpace: "", basicName: "StringType", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/systemTypes.ts" }], moduleName: null, annotationOverridings: {} }, { name: "StatusCodeString", methods: [], typeParameters: [], typeParameterConstraint: [], "implements": [], fields: [], isInterface: !1, annotations: [], "extends": [{ typeName: "StringType", nameSpace: "", basicName: "StringType", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/systemTypes.ts" }], moduleName: null, annotationOverridings: {} }, { name: "RelativeUriString", methods: [], typeParameters: [], typeParameterConstraint: [], "implements": [], fields: [], isInterface: !1, annotations: [{ name: "MetaModel.description", arguments: ["This  type describes relative uri templates"] }], "extends": [{ typeName: "UriTemplate", nameSpace: "", basicName: "UriTemplate", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/systemTypes.ts" }], moduleName: null, annotationOverridings: {} }, { name: "FullUriTemplateString", methods: [], typeParameters: [], typeParameterConstraint: [], "implements": [], fields: [], isInterface: !1, annotations: [{ name: "MetaModel.description", arguments: ["This  type describes absolute uri templates"] }], "extends": [{ typeName: "UriTemplate", nameSpace: "", basicName: "UriTemplate", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/systemTypes.ts" }], moduleName: null, annotationOverridings: {} }, { name: "FixedUriString", methods: [], typeParameters: [], typeParameterConstraint: [], "implements": [], fields: [], isInterface: !1, annotations: [{ name: "MetaModel.description", arguments: ["This  type describes fixed uris"] }], "extends": [{ typeName: "StringType", nameSpace: "", basicName: "StringType", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/systemTypes.ts" }], moduleName: null, annotationOverridings: {} }, { name: "ContentType", methods: [], typeParameters: [], typeParameterConstraint: [], "implements": [], fields: [], isInterface: !1, annotations: [], "extends": [{ typeName: "StringType", nameSpace: "", basicName: "StringType", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/systemTypes.ts" }], moduleName: null, annotationOverridings: {} }, { name: "MarkdownString", methods: [], typeParameters: [], typeParameterConstraint: [], "implements": [], fields: [], isInterface: !1, annotations: [{ name: "MetaModel.innerType", arguments: ["markdown"] }, { name: "MetaModel.description", arguments: ["[GitHub Flavored Markdown](https://help.github.com/articles/github-flavored-markdown/)"] }], "extends": [{ typeName: "StringType", nameSpace: "", basicName: "StringType", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/systemTypes.ts" }], moduleName: null, annotationOverridings: {} }, { name: "SchemaString", methods: [], typeParameters: [], typeParameterConstraint: [], "implements": [], fields: [], isInterface: !1, annotations: [{ name: "MetaModel.description", arguments: ["Schema at this moment only two subtypes are supported (json schema and xsd)"] }, { name: "MetaModel.alias", arguments: ["schema"] }], "extends": [{ typeName: "StringType", nameSpace: "", basicName: "StringType", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/systemTypes.ts" }], moduleName: null, annotationOverridings: {} }], aliases: [], enumDeclarations: [], imports: { MetaModel: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/metamodel.ts", DataModel: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/datamodel.ts", Common: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/common.ts" }, name: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/systemTypes.ts" }, { classes: [{ name: "ExampleSpec", methods: [], typeParameters: [], typeParameterConstraint: [], "implements": [], fields: [{ name: "value", type: { typeName: "any", nameSpace: "", basicName: "any", typeKind: 0, typeArguments: [], modulePath: null }, annotations: [{ name: "MetaModel.example", arguments: [] }, { name: "MetaModel.selfNode", arguments: [] }, { name: "MetaModel.description", arguments: ["String representation of example"] }, { name: "MetaModel.required", arguments: [] }, { name: "MetaModel.valueDescription", arguments: ["* Valid value for this type<br>* String representing the serialized version of a valid value"] }], valueConstraint: null, optional: !1 }, { name: "structuredValue", type: { typeName: "TypeInstance", nameSpace: "", basicName: "TypeInstance", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/datamodel.ts" }, annotations: [{ name: "MetaModel.customHandling", arguments: [] }, { name: "MetaModel.description", arguments: ["Returns object representation of example, if possible"] }], valueConstraint: null, optional: !1 }, { name: "strict", type: { typeName: "boolean", nameSpace: "", basicName: "boolean", typeKind: 0, typeArguments: [], modulePath: null }, annotations: [{ name: "MetaModel.description", arguments: ["By default, examples are validated against any type declaration. Set this to false to allow examples that need not validate."] }], valueConstraint: null, optional: !1 }, { name: "name", type: { typeName: "string", nameSpace: "", basicName: "string", typeKind: 0, typeArguments: [], modulePath: null }, annotations: [{ name: "MetaModel.key", arguments: [] }, { name: "MetaModel.hide", arguments: [] }, { name: "MetaModel.description", arguments: ["Example identifier, if specified"]
                                        }], valueConstraint: null, optional: !1 }, { name: "displayName", type: { typeName: "string", nameSpace: "", basicName: "string", typeKind: 0, typeArguments: [], modulePath: null }, annotations: [{ name: "MetaModel.description", arguments: ["An alternate, human-friendly name for the example"] }], valueConstraint: null, optional: !1 }, { name: "description", type: { typeName: "Sys.MarkdownString", nameSpace: "Sys", basicName: "MarkdownString", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/datamodel.ts" }, annotations: [{ name: "MetaModel.description", arguments: ["A longer, human-friendly description of the example"] }, { name: "MetaModel.valueDescription", arguments: ["markdown string"] }], valueConstraint: null, optional: !1 }], isInterface: !1, annotations: [{ name: "MetaModel.customHandling", arguments: [] }, { name: "MetaModel.possibleInterfaces", arguments: [["FragmentDeclaration"]] }], "extends": [{ typeName: "Annotable", nameSpace: "", basicName: "Annotable", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/datamodel.ts" }], moduleName: null, annotationOverridings: { annotations: [{ name: "MetaModel.markdownDescription", arguments: ['Annotations to be applied to this example. Annotations are any property whose key begins with "(" and ends with ")" and whose name (the part between the beginning and ending parentheses) is a declared annotation name.'] }] } }, { name: "TypeDeclaration", methods: [], typeParameters: [], typeParameterConstraint: [], "implements": [], fields: [{ name: "name", type: { typeName: "string", nameSpace: "", basicName: "string", typeKind: 0, typeArguments: [], modulePath: null }, annotations: [{ name: "MetaModel.key", arguments: [] }, { name: "MetaModel.description", arguments: ["Type name for top level types. For properties and parameters -- property o parameter name, respectively. For bodies -- media type."] }, { name: "MetaModel.extraMetaKey", arguments: ["headers"] }, { name: "MetaModel.hide", arguments: [] }], valueConstraint: null, optional: !1 }, { name: "displayName", type: { typeName: "string", nameSpace: "", basicName: "string", typeKind: 0, typeArguments: [], modulePath: null }, annotations: [{ name: "MetaModel.description", arguments: ["The displayName attribute specifies the type display name. It is a friendly name used only for  display or documentation purposes. If displayName is not specified, it defaults to the element's key (the name of the property itself)."] }], valueConstraint: null, optional: !1 }, { name: "facets", type: { base: { typeName: "TypeDeclaration", nameSpace: "", basicName: "TypeDeclaration", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/datamodel.ts" }, typeKind: 1 }, annotations: [{ name: "MetaModel.embeddedInMaps", arguments: [] }, { name: "MetaModel.declaringFields", arguments: [] }, { name: "MetaModel.description", arguments: ["When extending from a type you can define new facets (which can then be set to concrete values by subtypes)."] }, { name: "MetaModel.hide", arguments: [] }], valueConstraint: null, optional: !1 }, { name: "fixedFacets", type: { typeName: "TypeInstance", nameSpace: "", basicName: "TypeInstance", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/datamodel.ts" }, annotations: [{ name: "MetaModel.customHandling", arguments: [] }, { name: "MetaModel.description", arguments: ["Returns facets fixed by the type. Value is an object with properties named after facets fixed. Value of each property is a value of the corresponding facet."] }], valueConstraint: null, optional: !1 }, { name: "schema", type: { typeName: "string", nameSpace: "", basicName: "string", typeKind: 0, typeArguments: [], modulePath: null }, annotations: [{ name: "MetaModel.typeExpression", arguments: [] }, { name: "MetaModel.allowMultiple", arguments: [] }, { name: "MetaModel.description", arguments: ['Alias for the equivalent "type" property, for compatibility with RAML 0.8. Deprecated - API definitions should use the "type" property, as the "schema" alias for that property name may be removed in a future RAML version. The "type" property allows for XML and JSON schemas.'] }, { name: "MetaModel.valueDescription", arguments: ["Single string denoting the base type or type expression"] }], valueConstraint: null, optional: !1 }, { name: "type", type: { typeName: "string", nameSpace: "", basicName: "string", typeKind: 0, typeArguments: [], modulePath: null }, annotations: [{ name: "MetaModel.typeExpression", arguments: [] }, { name: "MetaModel.allowMultiple", arguments: [] }, { name: "MetaModel.canBeValue", arguments: [] }, { name: "MetaModel.defaultValue", arguments: ["string"] }, { name: "MetaModel.descriminatingProperty", arguments: [] }, { name: "MetaModel.description", arguments: ["A base type which the current type extends, or more generally a type expression."] }, { name: "MetaModel.valueDescription", arguments: ["string denoting the base type or type expression"] }], valueConstraint: null, optional: !1 }, { name: "structuredType", type: { typeName: "TypeInstance", nameSpace: "", basicName: "TypeInstance", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/datamodel.ts" }, annotations: [{ name: "MetaModel.customHandling", arguments: [] }, { name: "MetaModel.typeExpression", arguments: [] }, { name: "MetaModel.description", arguments: ["Inlined supertype definition."] }, { name: "MetaModel.valueDescription", arguments: ["Inlined supertype definition"] }], valueConstraint: null, optional: !1 }, { name: "location", type: { typeName: "ModelLocation", nameSpace: "", basicName: "ModelLocation", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/datamodel.ts" }, annotations: [{ name: "MetaModel.system", arguments: [] }, { name: "MetaModel.description", arguments: ["Location of the parameter (can not be edited by user)"] }, { name: "MetaModel.hide", arguments: [] }], valueConstraint: null, optional: !1 }, { name: "locationKind", type: { typeName: "LocationKind", nameSpace: "", basicName: "LocationKind", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/datamodel.ts" }, annotations: [{ name: "MetaModel.system", arguments: [] }, { name: "MetaModel.description", arguments: ["Kind of location"] }, { name: "MetaModel.hide", arguments: [] }], valueConstraint: null, optional: !1 }, { name: "default", type: { typeName: "any", nameSpace: "", basicName: "any", typeKind: 0, typeArguments: [], modulePath: null }, annotations: [{ name: "MetaModel.description", arguments: ["Provides default value for a property"] }, { name: "MetaModel.hide", arguments: [] }], valueConstraint: null, optional: !1 }, { name: "example", type: { typeName: "ExampleSpec", nameSpace: "", basicName: "ExampleSpec", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/datamodel.ts" }, annotations: [{ name: "MetaModel.example", arguments: [] }, { name: "MetaModel.selfNode", arguments: [] }, { name: "MetaModel.description", arguments: ["An example of this type instance represented as string or yaml map/sequence. This can be used, e.g., by documentation generators to generate sample values for an object of this type. Cannot be present if the examples property is present."] }, { name: "MetaModel.valueDescription", arguments: ["* Valid value for this type<br>* String representing the serialized version of a valid value"] }], valueConstraint: null, optional: !1 }, { name: "examples", type: { base: { typeName: "ExampleSpec", nameSpace: "", basicName: "ExampleSpec", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/datamodel.ts" }, typeKind: 1 }, annotations: [{ name: "MetaModel.example", arguments: [] }, { name: "MetaModel.selfNode", arguments: [] }, { name: "MetaModel.description", arguments: ["An example of this type instance represented as string. This can be used, e.g., by documentation generators to generate sample values for an object of this type. Cannot be present if the example property is present."] }, { name: "MetaModel.valueDescription", arguments: ["* Valid value for this type<br>* String representing the serialized version of a valid value"] }], valueConstraint: null, optional: !1 }, { name: "required", type: { typeName: "boolean", nameSpace: "", basicName: "boolean", typeKind: 0, typeArguments: [], modulePath: null }, annotations: [{ name: "MetaModel.requireValue", arguments: ["fieldOrParam", !0] }, { name: "MetaModel.description", arguments: ["For property or parameter states if it is required."] }, { name: "MetaModel.describesAnnotation", arguments: ["required"] }, { name: "MetaModel.hide", arguments: [] }, { name: "MetaModel.defaultBooleanValue", arguments: [!0] }], valueConstraint: null, optional: !1 }, { name: "description", type: { typeName: "Sys.MarkdownString", nameSpace: "Sys", basicName: "MarkdownString", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/datamodel.ts" }, annotations: [{ name: "MetaModel.description", arguments: ["A longer, human-friendly description of the type"] }, { name: "MetaModel.valueDescription", arguments: ["markdown string"] }], valueConstraint: null, optional: !1 }, { name: "xml", type: { typeName: "XMLFacetInfo", nameSpace: "", basicName: "XMLFacetInfo", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/datamodel.ts" }, annotations: [], valueConstraint: null, optional: !1 }, { name: "allowedTargets", type: { base: { typeName: "AnnotationTarget", nameSpace: "", basicName: "AnnotationTarget", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/datamodel.ts" }, typeKind: 1 }, annotations: [{ name: "MetaModel.oneOf", arguments: [["API", "DocumentationItem", "Resource", "Method", "Response", "RequestBody", "ResponseBody", "TypeDeclaration", "NamedExample", "ResourceType", "Trait", "SecurityScheme", "SecuritySchemeSettings", "AnnotationTypeDeclaration", "Library", "Overlay", "Extension", "Scalar"]] }, { name: "MetaModel.description", arguments: ["Restrictions on where annotations of this type can be applied. If this property is specified, annotations of this type may only be applied on a property corresponding to one of the target names specified as the value of this property."] }, { name: "MetaModel.valueDescription", arguments: ["An array, or single, of names allowed target nodes."] }], valueConstraint: null, optional: !1 }, { name: "isAnnotation", type: { typeName: "boolean", nameSpace: "", basicName: "boolean", typeKind: 0, typeArguments: [], modulePath: null }, annotations: [{ name: "MetaModel.description", arguments: ["Whether the type represents annotation"] }], valueConstraint: null, optional: !1 }, { name: "parametrizedProperties", type: { typeName: "TypeInstance", nameSpace: "", basicName: "TypeInstance", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/datamodel.ts" }, annotations: [{ name: "MetaModel.customHandling", arguments: [] }, { name: "MetaModel.description", arguments: ["For types defined in traits or resource types returns object representation of parametrized properties"] }], valueConstraint: null, optional: !1 }], isInterface: !1, annotations: [{ name: "MetaModel.convertsToGlobalOfType", arguments: ["SchemaString"] }, { name: "MetaModel.canInherit", arguments: ["mediaType"] }, { name: "MetaModel.possibleInterfaces", arguments: [["FragmentDeclaration"]] }], "extends": [{ typeName: "Annotable", nameSpace: "", basicName: "Annotable", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/datamodel.ts" }], moduleName: null, annotationOverridings: { annotations: [{ name: "MetaModel.markdownDescription", arguments: ['Annotations to be applied to this type. Annotations are any property whose key begins with "(" and ends with ")" and whose name (the part between the beginning and ending parentheses) is a declared annotation name.'] }] } }, { name: "XMLFacetInfo", methods: [], typeParameters: [], typeParameterConstraint: [], "implements": [], fields: [{ name: "attribute", type: { typeName: "boolean", nameSpace: "", basicName: "boolean", typeKind: 0, typeArguments: [], modulePath: null }, annotations: [{ name: "MetaModel.description", arguments: ["If attribute is set to true, a type instance should be serialized as an XML attribute. It can only be true for scalar types."] }], valueConstraint: null, optional: !1 }, { name: "wrapped", type: { typeName: "boolean", nameSpace: "", basicName: "boolean", typeKind: 0, typeArguments: [], modulePath: null }, annotations: [{ name: "MetaModel.description", arguments: ["If wrapped is set to true, a type instance should be wrapped in its own XML element. It can not be true for scalar types and it can not be true at the same moment when attribute is true."] }], valueConstraint: null, optional: !1 }, { name: "name", type: { typeName: "string", nameSpace: "", basicName: "string", typeKind: 0, typeArguments: [], modulePath: null }, annotations: [{ name: "MetaModel.description", arguments: ["Allows to override the name of the XML element or XML attribute in it's XML representation."] }], valueConstraint: null, optional: !1 }, { name: "namespace", type: { typeName: "string", nameSpace: "", basicName: "string", typeKind: 0, typeArguments: [], modulePath: null }, annotations: [{ name: "MetaModel.description", arguments: ["Allows to configure the name of the XML namespace."] }], valueConstraint: null, optional: !1 }, { name: "prefix", type: { typeName: "string", nameSpace: "", basicName: "string", typeKind: 0, typeArguments: [], modulePath: null }, annotations: [{ name: "MetaModel.description", arguments: ["Allows to configure the prefix which will be used during serialization to XML."] }], valueConstraint: null, optional: !1 }], isInterface: !1, annotations: [], "extends": [{ typeName: "Annotable", nameSpace: "", basicName: "Annotable", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/datamodel.ts" }], moduleName: null, annotationOverridings: {} }, { name: "ArrayTypeDeclaration", methods: [], typeParameters: [], typeParameterConstraint: [], "implements": [], fields: [{ name: "type", type: null, annotations: [], valueConstraint: { isCallConstraint: !1, value: "array" }, optional: !1 }, { name: "uniqueItems", type: { typeName: "boolean", nameSpace: "", basicName: "boolean", typeKind: 0, typeArguments: [], modulePath: null }, annotations: [{ name: "MetaModel.facetId", arguments: ["uniqueItems"] }, { name: "MetaModel.description", arguments: ["Should items in array be unique"] }], valueConstraint: null, optional: !1 }, { name: "items", type: { typeName: "string", nameSpace: "", basicName: "string", typeKind: 0, typeArguments: [], modulePath: null }, annotations: [{ name: "MetaModel.typeExpression", arguments: [] }, { name: "MetaModel.allowMultiple", arguments: [] }, { name: "MetaModel.canBeValue", arguments: [] }, { name: "MetaModel.description", arguments: ["Array component type."] }, { name: "MetaModel.valueDescription", arguments: ["Inline type declaration or type name."] }], valueConstraint: null, optional: !1 }, { name: "structuredItems", type: { typeName: "TypeInstance", nameSpace: "", basicName: "TypeInstance", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/datamodel.ts" }, annotations: [{ name: "MetaModel.customHandling", arguments: [] }, { name: "MetaModel.typeExpression", arguments: [] }, { name: "MetaModel.description", arguments: ["Inlined component type definition"] }, { name: "MetaModel.valueDescription", arguments: ["Inlined component type definition"] }], valueConstraint: null, optional: !1 }, { name: "minItems", type: { typeName: "number", nameSpace: "", basicName: "number", typeKind: 0, typeArguments: [], modulePath: null }, annotations: [{ name: "MetaModel.facetId", arguments: ["minItems"] }, { name: "MetaModel.description", arguments: ["Minimum amount of items in array"] }, { name: "MetaModel.valueDescription", arguments: ["integer ( >= 0 ). Defaults to 0"] }], valueConstraint: null, optional: !1 }, { name: "maxItems", type: { typeName: "number", nameSpace: "", basicName: "number", typeKind: 0, typeArguments: [], modulePath: null }, annotations: [{ name: "MetaModel.facetId", arguments: ["maxItems"] }, { name: "MetaModel.description", arguments: ["Maximum amount of items in array"] }, { name: "MetaModel.valueDescription", arguments: ["integer ( >= 0 ). Defaults to undefined."] }], valueConstraint: null, optional: !1 }], isInterface: !1, annotations: [{ name: "MetaModel.convertsToGlobalOfType", arguments: ["SchemaString"] }, { name: "MetaModel.alias", arguments: ["array"] }, { name: "MetaModel.declaresSubTypeOf", arguments: ["TypeDeclaration"] }], "extends": [{ typeName: "TypeDeclaration", nameSpace: "", basicName: "TypeDeclaration", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/datamodel.ts" }], moduleName: null, annotationOverridings: {} }, { name: "UnionTypeDeclaration", methods: [], typeParameters: [], typeParameterConstraint: [], "implements": [], fields: [{ name: "type", type: null, annotations: [], valueConstraint: { isCallConstraint: !1, value: "union" }, optional: !1 }], isInterface: !1, annotations: [{ name: "MetaModel.convertsToGlobalOfType", arguments: ["SchemaString"] }, { name: "MetaModel.requireValue", arguments: ["locationKind", "LocationKind.MODELS"] }, { name: "MetaModel.declaresSubTypeOf", arguments: ["TypeDeclaration"] }], "extends": [{ typeName: "TypeDeclaration", nameSpace: "", basicName: "TypeDeclaration", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/datamodel.ts" }], moduleName: null, annotationOverridings: {} }, { name: "ObjectTypeDeclaration", methods: [], typeParameters: [], typeParameterConstraint: [], "implements": [], fields: [{ name: "type", type: null, annotations: [{ name: "MetaModel.hide", arguments: [] }], valueConstraint: { isCallConstraint: !1, value: "object" }, optional: !1 }, { name: "properties", type: { base: { typeName: "TypeDeclaration", nameSpace: "", basicName: "TypeDeclaration", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/datamodel.ts" }, typeKind: 1 }, annotations: [{ name: "MetaModel.embeddedInMaps", arguments: [] }, { name: "MetaModel.setsContextValue", arguments: ["fieldOrParam", !0] }, { name: "MetaModel.description", arguments: ["The properties that instances of this type may or must have."] }, { name: "MetaModel.valueDescription", arguments: ["An object whose keys are the properties' names and whose values are property declarations."] }], valueConstraint: null, optional: !1 }, { name: "minProperties", type: { typeName: "number", nameSpace: "", basicName: "number", typeKind: 0, typeArguments: [], modulePath: null }, annotations: [{ name: "MetaModel.facetId", arguments: ["minProperties"] }, { name: "MetaModel.description", arguments: ["The minimum number of properties allowed for instances of this type."] }], valueConstraint: null, optional: !1 }, { name: "maxProperties", type: { typeName: "number", nameSpace: "", basicName: "number", typeKind: 0, typeArguments: [], modulePath: null }, annotations: [{ name: "MetaModel.facetId", arguments: ["maxProperties"] }, { name: "MetaModel.description", arguments: ["The maximum number of properties allowed for instances of this type."] }], valueConstraint: null, optional: !1 }, { name: "additionalProperties", type: { typeName: "boolean", nameSpace: "", basicName: "boolean", typeKind: 0, typeArguments: [], modulePath: null }, annotations: [{ name: "MetaModel.description", arguments: ["A Boolean that indicates if an object instance has additional properties."] }], valueConstraint: null, optional: !1 }, { name: "discriminator", type: { typeName: "string", nameSpace: "", basicName: "string", typeKind: 0, typeArguments: [], modulePath: null }, annotations: [{ name: "MetaModel.description", arguments: ["Type property name to be used as discriminator, or boolean"] }], valueConstraint: null, optional: !1 }, { name: "discriminatorValue", type: { typeName: "string", nameSpace: "", basicName: "string", typeKind: 0, typeArguments: [], modulePath: null }, annotations: [{ name: "MetaModel.description", arguments: ["The value of discriminator for the type."] }], valueConstraint: null, optional: !1 }, { name: "enum", type: { base: { typeName: "any", nameSpace: "", basicName: "any", typeKind: 0, typeArguments: [], modulePath: null }, typeKind: 1 }, annotations: [], valueConstraint: null, optional: !1 }], isInterface: !1, annotations: [{ name: "MetaModel.definingPropertyIsEnough", arguments: ["properties"] }, { name: "MetaModel.setsContextValue", arguments: ["field", "true"] }, { name: "MetaModel.convertsToGlobalOfType", arguments: ["SchemaString"] }, { name: "MetaModel.declaresSubTypeOf", arguments: ["TypeDeclaration"] }], "extends": [{ typeName: "TypeDeclaration", nameSpace: "", basicName: "TypeDeclaration", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/datamodel.ts" }], moduleName: null, annotationOverridings: {} }, { name: "StringTypeDeclaration", methods: [], typeParameters: [], typeParameterConstraint: [], "implements": [], fields: [{ name: "type", type: null, annotations: [], valueConstraint: { isCallConstraint: !1, value: "string" }, optional: !1 }, { name: "pattern", type: { typeName: "string", nameSpace: "", basicName: "string", typeKind: 0, typeArguments: [], modulePath: null }, annotations: [{ name: "MetaModel.facetId", arguments: ["pattern"] }, { name: "MetaModel.description", arguments: ["Regular expression that this string should path"] }, { name: "MetaModel.valueDescription", arguments: ["regexp"] }], valueConstraint: null, optional: !1 }, { name: "minLength", type: { typeName: "number", nameSpace: "", basicName: "number", typeKind: 0, typeArguments: [], modulePath: null }, annotations: [{ name: "MetaModel.facetId", arguments: ["minLength"] }, { name: "MetaModel.description", arguments: ["Minimum length of the string"] }], valueConstraint: null, optional: !1 }, { name: "maxLength", type: { typeName: "number", nameSpace: "", basicName: "number", typeKind: 0, typeArguments: [], modulePath: null }, annotations: [{ name: "MetaModel.facetId", arguments: ["maxLength"] }, { name: "MetaModel.description", arguments: ["Maximum length of the string"] }], valueConstraint: null, optional: !1 }, { name: "enum", type: { base: { typeName: "string", nameSpace: "", basicName: "string", typeKind: 0, typeArguments: [], modulePath: null }, typeKind: 1 }, annotations: [{ name: "MetaModel.facetId", arguments: ["enum"] }, { name: "MetaModel.describesAnnotation", arguments: ["oneOf"] }, { name: "MetaModel.description", arguments: ["(Optional, applicable only for parameters of type string) The enum attribute provides an enumeration of the parameter's valid values. This MUST be an array. If the enum attribute is defined, API clients and servers MUST verify that a parameter's value matches a value in the enum array. If there is no matching value, the clients and servers MUST treat this as an error."] }, { name: "MetaModel.hide", arguments: [] }], valueConstraint: null, optional: !1 }], isInterface: !1, annotations: [{ name: "MetaModel.description", arguments: ["Value must be a string"] }, { name: "MetaModel.declaresSubTypeOf", arguments: ["TypeDeclaration"] }], "extends": [{ typeName: "TypeDeclaration", nameSpace: "", basicName: "TypeDeclaration", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/datamodel.ts" }], moduleName: null, annotationOverridings: {} }, { name: "BooleanTypeDeclaration", methods: [], typeParameters: [], typeParameterConstraint: [], "implements": [], fields: [{ name: "type", type: null, annotations: [], valueConstraint: { isCallConstraint: !1, value: "boolean" }, optional: !1 }, { name: "enum", type: { base: { typeName: "boolean", nameSpace: "", basicName: "boolean", typeKind: 0, typeArguments: [], modulePath: null }, typeKind: 1 }, annotations: [], valueConstraint: null, optional: !1 }], isInterface: !1, annotations: [{ name: "MetaModel.description", arguments: ["Value must be a boolean"] }, { name: "MetaModel.declaresSubTypeOf", arguments: ["TypeDeclaration"] }], "extends": [{ typeName: "TypeDeclaration", nameSpace: "", basicName: "TypeDeclaration", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/datamodel.ts" }], moduleName: null, annotationOverridings: {} }, { name: "NumberTypeDeclaration", methods: [], typeParameters: [], typeParameterConstraint: [], "implements": [], fields: [{ name: "type", type: null, annotations: [], valueConstraint: { isCallConstraint: !1, value: "number" }, optional: !1 }, { name: "minimum", type: { typeName: "number", nameSpace: "", basicName: "number", typeKind: 0, typeArguments: [], modulePath: null }, annotations: [{ name: "MetaModel.facetId", arguments: ["minimum"] }, { name: "MetaModel.description", arguments: ["(Optional, applicable only for parameters of type number or integer) The minimum attribute specifies the parameter's minimum value."] }], valueConstraint: null, optional: !1 }, { name: "maximum", type: { typeName: "number", nameSpace: "", basicName: "number", typeKind: 0, typeArguments: [], modulePath: null }, annotations: [{ name: "MetaModel.facetId", arguments: ["maximum"] }, { name: "MetaModel.description", arguments: ["(Optional, applicable only for parameters of type number or integer) The maximum attribute specifies the parameter's maximum value."] }], valueConstraint: null, optional: !1 }, { name: "enum", type: { base: { typeName: "number", nameSpace: "", basicName: "number", typeKind: 0, typeArguments: [], modulePath: null }, typeKind: 1 }, annotations: [{ name: "MetaModel.facetId", arguments: ["enum"] }, { name: "MetaModel.describesAnnotation", arguments: ["oneOf"] }, { name: "MetaModel.description", arguments: ["(Optional, applicable only for parameters of type string) The enum attribute provides an enumeration of the parameter's valid values. This MUST be an array. If the enum attribute is defined, API clients and servers MUST verify that a parameter's value matches a value in the enum array. If there is no matching value, the clients and servers MUST treat this as an error."] }, { name: "MetaModel.hide", arguments: [] }], valueConstraint: null, optional: !1 }, { name: "format", type: { typeName: "string", nameSpace: "", basicName: "string", typeKind: 0, typeArguments: [], modulePath: null }, annotations: [{ name: "MetaModel.oneOf", arguments: [["int32", "int64", "int", "long", "float", "double", "int16", "int8"]] }, { name: "MetaModel.description", arguments: ["Value format"] }], valueConstraint: null, optional: !1 }, { name: "multipleOf", type: { typeName: "number", nameSpace: "", basicName: "number", typeKind: 0, typeArguments: [], modulePath: null }, annotations: [{ name: "MetaModel.description", arguments: ['A numeric instance is valid against "multipleOf" if the result of the division of the instance by this keyword\'s value is an integer.'] }], valueConstraint: null, optional: !1 }], isInterface: !1, annotations: [{ name: "MetaModel.description", arguments: ["Value MUST be a number. Indicate floating point numbers as defined by YAML."] }, { name: "MetaModel.declaresSubTypeOf", arguments: ["TypeDeclaration"] }], "extends": [{ typeName: "TypeDeclaration", nameSpace: "", basicName: "TypeDeclaration", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/datamodel.ts" }], moduleName: null, annotationOverridings: {} }, { name: "IntegerTypeDeclaration", methods: [], typeParameters: [], typeParameterConstraint: [], "implements": [], fields: [{ name: "type", type: null, annotations: [], valueConstraint: { isCallConstraint: !1, value: "integer" }, optional: !1 }, { name: "format", type: { typeName: "string", nameSpace: "", basicName: "string", typeKind: 0, typeArguments: [], modulePath: null }, annotations: [{ name: "MetaModel.oneOf", arguments: [["int32", "int64", "int", "long", "int16", "int8"]] }, { name: "MetaModel.description", arguments: ["Value format"] }], valueConstraint: null, optional: !1 }], isInterface: !1, annotations: [{ name: "MetaModel.description", arguments: ["Value MUST be a integer."] }, { name: "MetaModel.declaresSubTypeOf", arguments: ["TypeDeclaration"] }], "extends": [{ typeName: "NumberTypeDeclaration", nameSpace: "", basicName: "NumberTypeDeclaration", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/datamodel.ts" }], moduleName: null, annotationOverridings: {} }, { name: "DateOnlyTypeDeclaration", methods: [], typeParameters: [], typeParameterConstraint: [], "implements": [], fields: [{ name: "type", type: null, annotations: [], valueConstraint: { isCallConstraint: !1, value: "date-only" }, optional: !1 }], isInterface: !1, annotations: [{ name: "MetaModel.description", arguments: ['the "full-date" notation of RFC3339, namely yyyy-mm-dd (no implications about time or timezone-offset)'] }, { name: "MetaModel.declaresSubTypeOf", arguments: ["TypeDeclaration"] }], "extends": [{ typeName: "TypeDeclaration", nameSpace: "", basicName: "TypeDeclaration", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/datamodel.ts" }], moduleName: null, annotationOverridings: {} }, { name: "TimeOnlyTypeDeclaration", methods: [], typeParameters: [], typeParameterConstraint: [], "implements": [], fields: [{ name: "type", type: null, annotations: [], valueConstraint: { isCallConstraint: !1, value: "time-only" }, optional: !1 }], isInterface: !1, annotations: [{ name: "MetaModel.description", arguments: ['the "partial-time" notation of RFC3339, namely hh:mm:ss[.ff...] (no implications about date or timezone-offset)'] }, { name: "MetaModel.declaresSubTypeOf", arguments: ["TypeDeclaration"] }], "extends": [{ typeName: "TypeDeclaration", nameSpace: "", basicName: "TypeDeclaration", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/datamodel.ts" }], moduleName: null, annotationOverridings: {} }, { name: "DateTimeOnlyTypeDeclaration", methods: [], typeParameters: [], typeParameterConstraint: [], "implements": [], fields: [{ name: "type", type: null, annotations: [], valueConstraint: { isCallConstraint: !1, value: "datetime-only" }, optional: !1 }], isInterface: !1, annotations: [{ name: "MetaModel.description", arguments: ['combined date-only and time-only with a separator of "T", namely yyyy-mm-ddThh:mm:ss[.ff...] (no implications about timezone-offset)'] }, { name: "MetaModel.declaresSubTypeOf", arguments: ["TypeDeclaration"] }], "extends": [{ typeName: "TypeDeclaration", nameSpace: "", basicName: "TypeDeclaration", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/datamodel.ts" }], moduleName: null, annotationOverridings: {} }, { name: "DateTimeTypeDeclaration", methods: [], typeParameters: [], typeParameterConstraint: [], "implements": [], fields: [{ name: "type", type: null, annotations: [], valueConstraint: { isCallConstraint: !1, value: "datetime" }, optional: !1 }, { name: "format", type: { typeName: "string", nameSpace: "", basicName: "string", typeKind: 0, typeArguments: [], modulePath: null }, annotations: [{ name: "MetaModel.oneOf", arguments: [["rfc3339", "rfc2616"]] }, { name: "MetaModel.description", arguments: ["Format used for this date time rfc3339 or rfc2616"] }], valueConstraint: null, optional: !1 }], isInterface: !1, annotations: [{ name: "MetaModel.description", arguments: ['a timestamp, either in the "date-time" notation of RFC3339, if format is omitted or is set to rfc3339, or in the format defined in RFC2616, if format is set to rfc2616.'] }, { name: "MetaModel.declaresSubTypeOf", arguments: ["TypeDeclaration"] }], "extends": [{ typeName: "TypeDeclaration", nameSpace: "", basicName: "TypeDeclaration", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/datamodel.ts" }], moduleName: null, annotationOverridings: {} }, { name: "TypeInstance", methods: [], typeParameters: [], typeParameterConstraint: [], "implements": [], fields: [{ name: "properties", type: { base: { typeName: "TypeInstanceProperty", nameSpace: "", basicName: "TypeInstanceProperty", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/datamodel.ts" }, typeKind: 1 }, annotations: [{ name: "MetaModel.description", arguments: ["Array of instance properties"] }], valueConstraint: null, optional: !1 }, { name: "isScalar", type: { typeName: "boolean", nameSpace: "", basicName: "boolean", typeKind: 0, typeArguments: [], modulePath: null }, annotations: [{ name: "MetaModel.description", arguments: ["Whether the type is scalar"] }], valueConstraint: null, optional: !1 }, { name: "value", type: { typeName: "any", nameSpace: "", basicName: "any", typeKind: 0, typeArguments: [], modulePath: null }, annotations: [{ name: "MetaModel.description", arguments: ["For instances of scalar types returns scalar value"] }], valueConstraint: null, optional: !1 }, { name: "isArray", type: { typeName: "boolean", nameSpace: "", basicName: "boolean", typeKind: 0, typeArguments: [], modulePath: null }, annotations: [{ name: "MetaModel.description", arguments: ["Indicates whether the instance is array"] }], valueConstraint: null,
                                    optional: !1 }, { name: "items", type: { base: { typeName: "TypeInstance", nameSpace: "", basicName: "TypeInstance", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/datamodel.ts" }, typeKind: 1 }, annotations: [{ name: "MetaModel.description", arguments: ["Returns components of array instances"] }], valueConstraint: null, optional: !1 }], isInterface: !1, annotations: [{ name: "MetaModel.customHandling", arguments: [] }], "extends": [], moduleName: null, annotationOverridings: {} }, { name: "TypeInstanceProperty", methods: [], typeParameters: [], typeParameterConstraint: [], "implements": [], fields: [{ name: "name", type: { typeName: "string", nameSpace: "", basicName: "string", typeKind: 0, typeArguments: [], modulePath: null }, annotations: [{ name: "MetaModel.description", arguments: ["Property name"] }], valueConstraint: null, optional: !1 }, { name: "value", type: { typeName: "TypeInstance", nameSpace: "", basicName: "TypeInstance", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/datamodel.ts" }, annotations: [{ name: "MetaModel.description", arguments: ["Property value"] }], valueConstraint: null, optional: !1 }, { name: "values", type: { base: { typeName: "TypeInstance", nameSpace: "", basicName: "TypeInstance", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/datamodel.ts" }, typeKind: 1 }, annotations: [{ name: "MetaModel.description", arguments: ["Array of values if property value is array"] }], valueConstraint: null, optional: !1 }, { name: "isArray", type: { typeName: "boolean", nameSpace: "", basicName: "boolean", typeKind: 0, typeArguments: [], modulePath: null }, annotations: [{ name: "MetaModel.description", arguments: ["Whether property has array as value"] }], valueConstraint: null, optional: !1 }], isInterface: !1, annotations: [{ name: "MetaModel.customHandling", arguments: [] }], "extends": [], moduleName: null, annotationOverridings: {} }], aliases: [], enumDeclarations: [{ name: "ModelLocation", members: ["QUERY", "HEADERS", "URI", "FORM", "BURI", "ANNOTATION", "MODEL", "SECURITYSCHEMATYPE"] }, { name: "LocationKind", members: ["APISTRUCTURE", "DECLARATIONS", "MODELS"] }], imports: { MetaModel: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/metamodel.ts", Sys: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/systemTypes.ts", Bodies: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/bodies.ts", Common: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/common.ts", Declarations: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/declarations.ts" }, name: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/datamodel.ts" }, { classes: [{ name: "MimeType", methods: [], typeParameters: [], typeParameterConstraint: [], "implements": [], fields: [], isInterface: !1, annotations: [{ name: "MetaModel.description", arguments: ["This sub type of the string represents mime types"] }], "extends": [{ typeName: "StringType", nameSpace: "", basicName: "StringType", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/bodies.ts" }], moduleName: null, annotationOverridings: {} }, { name: "Response", methods: [], typeParameters: [], typeParameterConstraint: [], "implements": [], fields: [{ name: "code", type: { typeName: "Sys.StatusCodeString", nameSpace: "Sys", basicName: "StatusCodeString", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/bodies.ts" }, annotations: [{ name: "MetaModel.key", arguments: [] }, { name: "MetaModel.extraMetaKey", arguments: ["statusCodes"] }, { name: "MetaModel.description", arguments: ["Responses MUST be a map of one or more HTTP status codes, where each status code itself is a map that describes that status code."] }, { name: "MetaModel.hide", arguments: [] }], valueConstraint: null, optional: !1 }, { name: "headers", type: { base: { typeName: "DataModel.TypeDeclaration", nameSpace: "DataModel", basicName: "TypeDeclaration", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/bodies.ts" }, typeKind: 1 }, annotations: [{ name: "MetaModel.setsContextValue", arguments: ["fieldOrParam", !0] }, { name: "MetaModel.setsContextValue", arguments: ["location", "DataModel.ModelLocation.HEADERS"] }, { name: "MetaModel.setsContextValue", arguments: ["locationKind", "DataModel.LocationKind.APISTRUCTURE"] }, { name: "MetaModel.newInstanceName", arguments: ["New Header"] }, { name: "MetaModel.description", arguments: ["Detailed information about any response headers returned by this method"] }, { name: "MetaModel.valueDescription", arguments: ["Object whose property names are the response header names and whose values describe the values."] }], valueConstraint: null, optional: !1 }, { name: "body", type: { base: { typeName: "DataModel.TypeDeclaration", nameSpace: "DataModel", basicName: "TypeDeclaration", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/bodies.ts" }, typeKind: 1 }, annotations: [{ name: "MetaModel.newInstanceName", arguments: ["New Body"] }, { name: "MetaModel.description", arguments: ["The body of the response: a body declaration"] }, { name: "MetaModel.valueDescription", arguments: ["Object whose properties are either<br>* Media types and whose values are type objects describing the request body for that media type, or<br>* a type object describing the request body for the default media type specified in the root mediaType property."] }], valueConstraint: null, optional: !1 }, { name: "description", type: { typeName: "Sys.MarkdownString", nameSpace: "Sys", basicName: "MarkdownString", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/bodies.ts" }, annotations: [{ name: "MetaModel.description", arguments: ["A longer, human-friendly description of the response"] }, { name: "MetaModel.valueDescription", arguments: ["Markdown string"] }], valueConstraint: null, optional: !1 }, { name: "parametrizedProperties", type: { typeName: "DataModel.TypeInstance", nameSpace: "DataModel", basicName: "TypeInstance", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/bodies.ts" }, annotations: [{ name: "MetaModel.customHandling", arguments: [] }, { name: "MetaModel.description", arguments: ["For responses defined in traits or resource types returns object representation of parametrized properties"] }], valueConstraint: null, optional: !1 }], isInterface: !1, annotations: [], "extends": [{ typeName: "Annotable", nameSpace: "", basicName: "Annotable", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/bodies.ts" }], moduleName: null, annotationOverridings: { displayName: [{ name: "MetaModel.description", arguments: ["An alternate, human-friendly name for the response"] }], annotations: [{ name: "MetaModel.markdownDescription", arguments: ['Annotations to be applied to this response. Annotations are any property whose key begins with "(" and ends with ")" and whose name (the part between the beginning and ending parentheses) is a declared annotation name.'] }] } }], aliases: [], enumDeclarations: [], imports: { MetaModel: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/metamodel.ts", Sys: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/systemTypes.ts", DataModel: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/datamodel.ts", Common: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/common.ts" }, name: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/bodies.ts" }, { classes: [{ name: "Annotable", methods: [], typeParameters: [], typeParameterConstraint: [], "implements": [], fields: [{ name: "annotations", type: { base: { typeName: "Decls.AnnotationRef", nameSpace: "Decls", basicName: "AnnotationRef", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/common.ts" }, typeKind: 1 }, annotations: [{ name: "MetaModel.noDirectParse", arguments: [] }, { name: "MetaModel.setsContextValue", arguments: ["locationKind", "datamodel.LocationKind.APISTRUCTURE"] }, { name: "MetaModel.setsContextValue", arguments: ["location", "datamodel.ModelLocation.ANNOTATION"] }, { name: "MetaModel.description", arguments: ["Most of RAML model elements may have attached annotations decribing additional meta data about this element"] }, { name: "MetaModel.documentationTableLabel", arguments: ["(&lt;annotationName&gt;)"] }, { name: "MetaModel.valueDescription", arguments: ["A value corresponding to the declared type of this annotation."] }], valueConstraint: null, optional: !1 }], isInterface: !1, annotations: [], "extends": [], moduleName: null, annotationOverridings: {} }], aliases: [], enumDeclarations: [], imports: { MetaModel: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/metamodel.ts", Sys: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/systemTypes.ts", Decls: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/declarations.ts" }, name: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/common.ts" }, { classes: [{ name: "AnnotationRef", methods: [], typeParameters: [], typeParameterConstraint: [], "implements": [], fields: [{ name: "annotation", type: { typeName: "DataModel.TypeDeclaration", nameSpace: "DataModel", basicName: "TypeDeclaration", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/declarations.ts" }, annotations: [{ name: "MetaModel.customHandling", arguments: [] }, { name: "MetaModel.description", arguments: ["Returns referenced annotation"] }], valueConstraint: null, optional: !1 }], isInterface: !1, annotations: [{ name: "MetaModel.description", arguments: ["Annotations allow you to attach information to your API"] }, { name: "MetaModel.tags", arguments: [["annotations"]] }], "extends": [{ typeName: "Reference", nameSpace: "", basicName: "Reference", typeKind: 0, typeArguments: [{ typeName: "DataModel.TypeDeclaration", nameSpace: "DataModel", basicName: "TypeDeclaration", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/declarations.ts" }], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/declarations.ts" }], moduleName: null, annotationOverridings: {} }, { name: "AnnotationTarget", methods: [], typeParameters: [], typeParameterConstraint: [], "implements": [], fields: [], isInterface: !1, annotations: [{ name: "MetaModel.description", arguments: ["Elements to which this Annotation can be applied (enum)"] }, { name: "MetaModel.tags", arguments: [["annotations"]] }], "extends": [{ typeName: "ValueType", nameSpace: "", basicName: "ValueType", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/declarations.ts" }], moduleName: null, annotationOverridings: {} }], aliases: [], enumDeclarations: [], imports: { MetaModel: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/metamodel.ts", Sys: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/systemTypes.ts", DataModel: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/datamodel.ts", Common: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/common.ts" }, name: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/declarations.ts" }, { classes: [{ name: "TraitRef", methods: [], typeParameters: [], typeParameterConstraint: [], "implements": [], fields: [{ name: "trait", type: { typeName: "Trait", nameSpace: "", basicName: "Trait", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/methods.ts" }, annotations: [{ name: "MetaModel.customHandling", arguments: [] }, { name: "MetaModel.description", arguments: ["Returns referenced trait"] }], valueConstraint: null, optional: !1 }], isInterface: !1, annotations: [], "extends": [{ typeName: "Reference", nameSpace: "", basicName: "Reference", typeKind: 0, typeArguments: [{ typeName: "Trait", nameSpace: "", basicName: "Trait", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/methods.ts" }], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/methods.ts" }], moduleName: null, annotationOverridings: {} }, { name: "Trait", methods: [], typeParameters: [], typeParameterConstraint: [], "implements": [], fields: [{ name: "name", type: { typeName: "string", nameSpace: "", basicName: "string", typeKind: 0, typeArguments: [], modulePath: null }, annotations: [{ name: "MetaModel.key", arguments: [] }, { name: "MetaModel.description", arguments: ["Name of the trait"] }], valueConstraint: null, optional: !1 }, { name: "usage", type: { typeName: "string", nameSpace: "", basicName: "string", typeKind: 0, typeArguments: [], modulePath: null }, annotations: [{ name: "MetaModel.description", arguments: ["Instructions on how and when the trait should be used."] }], valueConstraint: null, optional: !1 }, { name: "parametrizedProperties", type: { typeName: "DataModel.TypeInstance", nameSpace: "DataModel", basicName: "TypeInstance", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/methods.ts" }, annotations: [{ name: "MetaModel.customHandling", arguments: [] }, { name: "MetaModel.description", arguments: ["Returns object representation of parametrized properties of the trait"] }], valueConstraint: null, optional: !1 }], isInterface: !1, annotations: [{ name: "MetaModel.inlinedTemplates", arguments: [] }, { name: "MetaModel.allowQuestion", arguments: [] }, { name: "MetaModel.possibleInterfaces", arguments: [["FragmentDeclaration"]] }], "extends": [{ typeName: "MethodBase", nameSpace: "", basicName: "MethodBase", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/methods.ts" }], moduleName: null, annotationOverridings: { displayName: [{ name: "MetaModel.description", arguments: ["The displayName attribute specifies the trait display name. It is a friendly name used only for  display or documentation purposes. If displayName is not specified, it defaults to the element's key (the name of the property itself)."] }] } }, { name: "MethodBase", methods: [], typeParameters: [], typeParameterConstraint: [], "implements": [], fields: [{ name: "body", type: { base: { typeName: "DataModel.TypeDeclaration", nameSpace: "DataModel", basicName: "TypeDeclaration", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/methods.ts" }, typeKind: 1 }, annotations: [{ name: "MetaModel.newInstanceName", arguments: ["New Body"] }, { name: "MetaModel.description", arguments: ["Some method verbs expect the resource to be sent as a request body. For example, to create a resource, the request must include the details of the resource to create. Resources CAN have alternate representations. For example, an API might support both JSON and XML representations. A method's body is defined in the body property as a hashmap, in which the key MUST be a valid media type."] }], valueConstraint: null, optional: !1 }, { name: "protocols", type: { base: { typeName: "string", nameSpace: "", basicName: "string", typeKind: 0, typeArguments: [], modulePath: null }, typeKind: 1 }, annotations: [{ name: "MetaModel.oneOf", arguments: [["HTTP", "HTTPS"]] }, { name: "MetaModel.description", arguments: ["A method can override the protocols specified in the resource or at the API root, by employing this property."] }, { name: "MetaModel.valueDescription", arguments: ["array of strings of value HTTP or HTTPS, or a single string of such kind, case-insensitive"] }], valueConstraint: null, optional: !1 }, { name: "is", type: { base: { typeName: "TraitRef", nameSpace: "", basicName: "TraitRef", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/methods.ts" }, typeKind: 1 }, annotations: [{ name: "MetaModel.description", arguments: ["Instantiation of applyed traits"] }], valueConstraint: null, optional: !1 }, { name: "securedBy", type: { base: { typeName: "Security.SecuritySchemeRef", nameSpace: "Security", basicName: "SecuritySchemeRef", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/methods.ts" }, typeKind: 1 }, annotations: [{ name: "MetaModel.allowNull", arguments: [] }, { name: "MetaModel.description", arguments: ["securityScheme may also be applied to a resource by using the securedBy key, which is equivalent to applying the securityScheme to all methods that may be declared, explicitly or implicitly, by defining the resourceTypes or traits property for that resource. To indicate that the method may be called without applying any securityScheme, the method may be annotated with the null securityScheme."] }], valueConstraint: null, optional: !1 }, { name: "description", type: { typeName: "Sys.MarkdownString", nameSpace: "Sys", basicName: "MarkdownString", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/methods.ts" }, annotations: [], valueConstraint: null, optional: !1 }, { name: "displayName", type: { typeName: "string", nameSpace: "", basicName: "string", typeKind: 0, typeArguments: [], modulePath: null }, annotations: [], valueConstraint: null, optional: !1 }], isInterface: !1, annotations: [], "extends": [{ typeName: "Operation", nameSpace: "", basicName: "Operation", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/methods.ts" }], moduleName: null, annotationOverridings: {} }, { name: "Method", methods: [], typeParameters: [], typeParameterConstraint: [], "implements": [], fields: [{ name: "method", type: { typeName: "string", nameSpace: "", basicName: "string", typeKind: 0, typeArguments: [], modulePath: null }, annotations: [{ name: "MetaModel.key", arguments: [] }, { name: "MetaModel.extraMetaKey", arguments: ["methods"] }, { name: "MetaModel.oneOf", arguments: [["get", "put", "post", "delete", "options", "head", "patch"]] }, { name: "MetaModel.description", arguments: ["Method that can be called"] }, { name: "MetaModel.hide", arguments: [] }], valueConstraint: null, optional: !1 }, { name: "parametrizedProperties", type: { typeName: "DataModel.TypeInstance", nameSpace: "DataModel", basicName: "TypeInstance", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/methods.ts" }, annotations: [{ name: "MetaModel.customHandling", arguments: [] }, { name: "MetaModel.description", arguments: ["For types defined in resource types returns object representation of parametrized properties"] }], valueConstraint: null, optional: !1 }], isInterface: !1, annotations: [], "extends": [{ typeName: "MethodBase", nameSpace: "", basicName: "MethodBase", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/methods.ts" }], moduleName: null, annotationOverridings: { displayName: [{ name: "MetaModel.description", arguments: ["The displayName attribute specifies the method display name. It is a friendly name used only for  display or documentation purposes. If displayName is not specified, it defaults to the element's key (the name of the property itself)."] }] } }, { name: "Operation", methods: [], typeParameters: [], typeParameterConstraint: [], "implements": [], fields: [{ name: "queryParameters", type: { base: { typeName: "DataModel.TypeDeclaration", nameSpace: "DataModel", basicName: "TypeDeclaration", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/methods.ts" }, typeKind: 1 }, annotations: [{ name: "MetaModel.setsContextValue", arguments: ["fieldOrParam", !0] }, { name: "MetaModel.setsContextValue", arguments: ["location", "DataModel.ModelLocation.QUERY"] }, { name: "MetaModel.setsContextValue", arguments: ["locationKind", "DataModel.LocationKind.APISTRUCTURE"] }, { name: "MetaModel.newInstanceName", arguments: ["New query parameter"] }, { name: "MetaModel.description", arguments: ["An APIs resources MAY be filtered (to return a subset of results) or altered (such as transforming  a response body from JSON to XML format) by the use of query strings. If the resource or its method supports a query string, the query string MUST be defined by the queryParameters property"] }], valueConstraint: null, optional: !1 }, { name: "headers", type: { base: { typeName: "DataModel.TypeDeclaration", nameSpace: "DataModel", basicName: "TypeDeclaration", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/methods.ts" }, typeKind: 1 }, annotations: [{ name: "MetaModel.setsContextValue", arguments: ["fieldOrParam", !0] }, { name: "MetaModel.setsContextValue", arguments: ["location", "DataModel.ModelLocation.HEADERS"] }, { name: "MetaModel.setsContextValue", arguments: ["locationKind", "DataModel.LocationKind.APISTRUCTURE"] }, { name: "MetaModel.description", arguments: ["Headers that allowed at this position"] }, { name: "MetaModel.newInstanceName", arguments: ["New Header"] }], valueConstraint: null, optional: !1 }, { name: "queryString", type: { typeName: "DataModel.TypeDeclaration", nameSpace: "DataModel", basicName: "TypeDeclaration", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/methods.ts" }, annotations: [{ name: "MetaModel.description", arguments: ["Specifies the query string needed by this method. Mutually exclusive with queryParameters."] }], valueConstraint: null, optional: !1 }, { name: "responses", type: { base: { typeName: "Bodies.Response", nameSpace: "Bodies", basicName: "Response", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/methods.ts" }, typeKind: 1 }, annotations: [{ name: "MetaModel.setsContextValue", arguments: ["response", "true"] }, { name: "MetaModel.newInstanceName", arguments: ["New Response"] }, { name: "MetaModel.description", arguments: ["Information about the expected responses to a request"] }, { name: "MetaModel.valueDescription", arguments: ["An object whose keys are the HTTP status codes of the responses and whose values describe the responses."] }], valueConstraint: null, optional: !1 }], isInterface: !1, annotations: [], "extends": [{ typeName: "Annotable", nameSpace: "", basicName: "Annotable", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/methods.ts" }], moduleName: null, annotationOverridings: {} }], aliases: [], enumDeclarations: [], imports: { MetaModel: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/metamodel.ts", Sys: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/systemTypes.ts", Bodies: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/bodies.ts", DataModel: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/datamodel.ts", Security: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/security.ts" }, name: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/methods.ts" }, { classes: [{ name: "SecuritySchemePart", methods: [], typeParameters: [], typeParameterConstraint: [], "implements": [], fields: [], isInterface: !1, annotations: [], "extends": [{ typeName: "Operation", nameSpace: "", basicName: "Operation", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/security.ts" }], moduleName: null, annotationOverridings: { annotations: [{ name: "MetaModel.description", arguments: ['Annotations to be applied to this security scheme part. Annotations are any property whose key begins with "(" and ends with ")" and whose name (the part between the beginning and ending parentheses) is a declared annotation name.'] }] } }, { name: "SecuritySchemeSettings", methods: [], typeParameters: [], typeParameterConstraint: [], "implements": [], fields: [], isInterface: !1, annotations: [{ name: "MetaModel.allowAny", arguments: [] }], "extends": [{ typeName: "Annotable", nameSpace: "", basicName: "Annotable", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/security.ts" }], moduleName: null, annotationOverridings: {} }, { name: "OAuth1SecuritySchemeSettings", methods: [], typeParameters: [], typeParameterConstraint: [], "implements": [], fields: [{ name: "requestTokenUri", type: { typeName: "Sys.FixedUriString", nameSpace: "Sys", basicName: "FixedUriString", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/security.ts" }, annotations: [{ name: "MetaModel.required", arguments: [] }, { name: "MetaModel.description", arguments: ["The URI of the Temporary Credential Request endpoint as defined in RFC5849 Section 2.1"] }, { name: "MetaModel.valueDescription", arguments: ["FixedUriString"] }], valueConstraint: null, optional: !1 }, { name: "authorizationUri", type: { typeName: "Sys.FixedUriString", nameSpace: "Sys", basicName: "FixedUriString", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/security.ts" }, annotations: [{ name: "MetaModel.required", arguments: [] }, { name: "MetaModel.description", arguments: ["The URI of the Resource Owner Authorization endpoint as defined in RFC5849 Section 2.2"] }, { name: "MetaModel.valueDescription", arguments: ["FixedUriString"] }], valueConstraint: null, optional: !1 }, { name: "tokenCredentialsUri", type: { typeName: "Sys.FixedUriString", nameSpace: "Sys", basicName: "FixedUriString", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/security.ts" }, annotations: [{ name: "MetaModel.required", arguments: [] }, { name: "MetaModel.description", arguments: ["The URI of the Token Request endpoint as defined in RFC5849 Section 2.3"] }, { name: "MetaModel.valueDescription", arguments: ["FixedUriString"] }], valueConstraint: null, optional: !1 }, { name: "signatures", type: { base: { typeName: "string", nameSpace: "", basicName: "string", typeKind: 0, typeArguments: [], modulePath: null }, typeKind: 1 }, annotations: [{ name: "MetaModel.oneOf", arguments: [["HMAC-SHA1", "RSA-SHA1", "PLAINTEXT"]] }, { name: "MetaModel.hide", arguments: [] }, { name: "MetaModel.description", arguments: ["List of the signature methods used by the server. Available methods: HMAC-SHA1, RSA-SHA1, PLAINTEXT"] }], valueConstraint: null, optional: !1 }], isInterface: !1, annotations: [{ name: "MetaModel.allowAny", arguments: [] }, { name: "MetaModel.functionalDescriminator", arguments: ["$parent.type=='OAuth 1.0'"] }], "extends": [{ typeName: "SecuritySchemeSettings", nameSpace: "", basicName: "SecuritySchemeSettings", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/security.ts" }], moduleName: null, annotationOverridings: {} }, { name: "OAuth2SecuritySchemeSettings", methods: [], typeParameters: [], typeParameterConstraint: [], "implements": [], fields: [{ name: "accessTokenUri", type: { typeName: "Sys.FixedUriString", nameSpace: "Sys", basicName: "FixedUriString", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/security.ts" }, annotations: [{ name: "MetaModel.required", arguments: [] }, { name: "MetaModel.description", arguments: ["The URI of the Token Endpoint as defined in RFC6749 Section 3.2. Not required forby implicit grant type."] }, { name: "MetaModel.valueDescription", arguments: ["FixedUriString"] }], valueConstraint: null, optional: !1 }, { name: "authorizationUri", type: { typeName: "Sys.FixedUriString", nameSpace: "Sys", basicName: "FixedUriString", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/security.ts" }, annotations: [{ name: "MetaModel.description", arguments: ["The URI of the Authorization Endpoint as defined in RFC6749 Section 3.1. Required forby authorization_code and implicit grant types."] }, { name: "MetaModel.valueDescription", arguments: ["FixedUriString"] }], valueConstraint: null, optional: !1 }, { name: "authorizationGrants", type: { base: { typeName: "string", nameSpace: "", basicName: "string", typeKind: 0, typeArguments: [], modulePath: null }, typeKind: 1 }, annotations: [{ name: "MetaModel.required", arguments: [] }, { name: "MetaModel.oftenKeys", arguments: [["authorization_code", "password", "client_credentials", "implicit"]] }, { name: "MetaModel.description", arguments: ["A list of the Authorization grants supported by the API as defined in RFC6749 Sections 4.1, 4.2, 4.3 and 4.4, can be any of: authorization_code, password, client_credentials, implicit, or any absolute url."] }, { name: "MetaModel.markdownDescription", arguments: ["A list of the Authorization grants supported by the API as defined in RFC6749 Sections 4.1, 4.2, 4.3 and 4.4, can be any of:<br>* authorization_code<br>* password<br>* client_credentials<br>* implicit <br>*  or any absolute url."] }], valueConstraint: null, optional: !1 }, { name: "scopes", type: { base: { typeName: "string", nameSpace: "", basicName: "string", typeKind: 0, typeArguments: [], modulePath: null }, typeKind: 1 }, annotations: [{ name: "MetaModel.description", arguments: ["A list of scopes supported by the security scheme as defined in RFC6749 Section 3.3"] }], valueConstraint: null, optional: !1 }], isInterface: !1, annotations: [{ name: "MetaModel.allowAny", arguments: [] }], "extends": [{ typeName: "SecuritySchemeSettings", nameSpace: "", basicName: "SecuritySchemeSettings", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/security.ts" }], moduleName: null, annotationOverridings: {} }, { name: "SecuritySchemeRef", methods: [], typeParameters: [], typeParameterConstraint: [], "implements": [], fields: [{ name: "securitySchemeName", type: { typeName: "string", nameSpace: "", basicName: "string", typeKind: 0, typeArguments: [], modulePath: null }, annotations: [{ name: "MetaModel.customHandling", arguments: [] }, { name: "MetaModel.description", arguments: ["Returns the name of security scheme, this reference refers to."] }], valueConstraint: null, optional: !1 }, { name: "securityScheme", type: { typeName: "AbstractSecurityScheme", nameSpace: "", basicName: "AbstractSecurityScheme", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/security.ts" }, annotations: [{ name: "MetaModel.customHandling", arguments: [] }, { name: "MetaModel.description", arguments: ["Returns AST node of security scheme, this reference refers to, or null."] }], valueConstraint: null, optional: !1 }], isInterface: !1, annotations: [], "extends": [{ typeName: "Reference", nameSpace: "", basicName: "Reference", typeKind: 0, typeArguments: [{ typeName: "AbstractSecurityScheme", nameSpace: "", basicName: "AbstractSecurityScheme", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/security.ts" }], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/security.ts" }], moduleName: null, annotationOverridings: {} }, { name: "AbstractSecurityScheme", methods: [], typeParameters: [], typeParameterConstraint: [], "implements": [], fields: [{ name: "name", type: { typeName: "string", nameSpace: "", basicName: "string", typeKind: 0, typeArguments: [], modulePath: null }, annotations: [{ name: "MetaModel.key", arguments: [] }, { name: "MetaModel.startFrom", arguments: [""] }, { name: "MetaModel.hide", arguments: [] }, { name: "MetaModel.description", arguments: ["Name of the security scheme"] }], valueConstraint: null, optional: !1 }, { name: "type", type: { typeName: "string", nameSpace: "", basicName: "string", typeKind: 0, typeArguments: [], modulePath: null }, annotations: [{ name: "MetaModel.required", arguments: [] }, { name: "MetaModel.oneOf", arguments: [["OAuth 1.0", "OAuth 2.0", "Basic Authentication", "Digest Authentication", "Pass Through", "x-{other}"]]
                                        }, { name: "MetaModel.descriminatingProperty", arguments: [] }, { name: "MetaModel.description", arguments: ["The securitySchemes property MUST be used to specify an API's security mechanisms, including the required settings and the authentication methods that the API supports. one authentication method is allowed if the API supports them."] }, { name: "MetaModel.valueDescription", arguments: ["string<br><br>The value MUST be one of<br>* OAuth 1.0,<br>* OAuth 2.0,<br>* BasicSecurityScheme Authentication<br>* DigestSecurityScheme Authentication<br>* Pass Through<br>* x-&lt;other&gt;"] }], valueConstraint: null, optional: !1 }, { name: "description", type: { typeName: "Sys.MarkdownString", nameSpace: "Sys", basicName: "MarkdownString", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/security.ts" }, annotations: [{ name: "MetaModel.description", arguments: ["The description attribute MAY be used to describe a security schemes property."] }, { name: "MetaModel.description", arguments: ["The description MAY be used to describe a securityScheme."] }], valueConstraint: null, optional: !1 }, { name: "describedBy", type: { typeName: "SecuritySchemePart", nameSpace: "", basicName: "SecuritySchemePart", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/security.ts" }, annotations: [{ name: "MetaModel.description", arguments: ["A description of the request components related to Security that are determined by the scheme: the headers, query parameters or responses. As a best practice, even for standard security schemes, API designers SHOULD describe these properties of security schemes. Including the security scheme description completes an API documentation."] }], valueConstraint: null, optional: !1 }, { name: "displayName", type: { typeName: "string", nameSpace: "", basicName: "string", typeKind: 0, typeArguments: [], modulePath: null }, annotations: [{ name: "MetaModel.description", arguments: ["The displayName attribute specifies the security scheme display name. It is a friendly name used only for  display or documentation purposes. If displayName is not specified, it defaults to the element's key (the name of the property itself)."] }], valueConstraint: null, optional: !1 }, { name: "settings", type: { typeName: "SecuritySchemeSettings", nameSpace: "", basicName: "SecuritySchemeSettings", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/security.ts" }, annotations: [{ name: "MetaModel.description", arguments: ["The settings attribute MAY be used to provide security scheme-specific information. The required attributes vary depending on the type of security scheme is being declared. It describes the minimum set of properties which any processing application MUST provide and validate if it chooses to implement the security scheme. Processing applications MAY choose to recognize other properties for things such as token lifetime, preferred cryptographic algorithms, and more."] }], valueConstraint: null, optional: !1 }], isInterface: !1, annotations: [{ name: "MetaModel.description", arguments: ["Declares globally referable security scheme definition"] }, { name: "MetaModel.actuallyExports", arguments: ["$self"] }, { name: "MetaModel.referenceIs", arguments: ["settings"] }], "extends": [{ typeName: "Annotable", nameSpace: "", basicName: "Annotable", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/security.ts" }], moduleName: null, annotationOverridings: {} }, { name: "OAuth2SecurityScheme", methods: [], typeParameters: [], typeParameterConstraint: [], "implements": [], fields: [{ name: "type", type: null, annotations: [], valueConstraint: { isCallConstraint: !1, value: "OAuth 2.0" }, optional: !1 }, { name: "settings", type: { typeName: "OAuth2SecuritySchemeSettings", nameSpace: "", basicName: "OAuth2SecuritySchemeSettings", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/security.ts" }, annotations: [], valueConstraint: null, optional: !1 }], isInterface: !1, annotations: [{ name: "MetaModel.description", arguments: ["Declares globally referable security scheme definition"] }, { name: "MetaModel.actuallyExports", arguments: ["$self"] }, { name: "MetaModel.referenceIs", arguments: ["settings"] }], "extends": [{ typeName: "AbstractSecurityScheme", nameSpace: "", basicName: "AbstractSecurityScheme", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/security.ts" }], moduleName: null, annotationOverridings: {} }, { name: "OAuth1SecurityScheme", methods: [], typeParameters: [], typeParameterConstraint: [], "implements": [], fields: [{ name: "type", type: null, annotations: [], valueConstraint: { isCallConstraint: !1, value: "OAuth 1.0" }, optional: !1 }, { name: "settings", type: { typeName: "OAuth1SecuritySchemeSettings", nameSpace: "", basicName: "OAuth1SecuritySchemeSettings", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/security.ts" }, annotations: [], valueConstraint: null, optional: !1 }], isInterface: !1, annotations: [{ name: "MetaModel.description", arguments: ["Declares globally referable security scheme definition"] }, { name: "MetaModel.actuallyExports", arguments: ["$self"] }, { name: "MetaModel.referenceIs", arguments: ["settings"] }], "extends": [{ typeName: "AbstractSecurityScheme", nameSpace: "", basicName: "AbstractSecurityScheme", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/security.ts" }], moduleName: null, annotationOverridings: {} }, { name: "PassThroughSecurityScheme", methods: [], typeParameters: [], typeParameterConstraint: [], "implements": [], fields: [{ name: "type", type: null, annotations: [], valueConstraint: { isCallConstraint: !1, value: "Pass Through" }, optional: !1 }, { name: "settings", type: { typeName: "SecuritySchemeSettings", nameSpace: "", basicName: "SecuritySchemeSettings", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/security.ts" }, annotations: [], valueConstraint: null, optional: !1 }], isInterface: !1, annotations: [{ name: "MetaModel.description", arguments: ["Declares globally referable security scheme definition"] }, { name: "MetaModel.actuallyExports", arguments: ["$self"] }, { name: "MetaModel.referenceIs", arguments: ["settings"] }], "extends": [{ typeName: "AbstractSecurityScheme", nameSpace: "", basicName: "AbstractSecurityScheme", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/security.ts" }], moduleName: null, annotationOverridings: {} }, { name: "BasicSecurityScheme", methods: [], typeParameters: [], typeParameterConstraint: [], "implements": [], fields: [{ name: "type", type: null, annotations: [], valueConstraint: { isCallConstraint: !1, value: "Basic Authentication" }, optional: !1 }], isInterface: !1, annotations: [{ name: "MetaModel.description", arguments: ["Declares globally referable security scheme definition"] }, { name: "MetaModel.actuallyExports", arguments: ["$self"] }, { name: "MetaModel.referenceIs", arguments: ["settings"] }], "extends": [{ typeName: "AbstractSecurityScheme", nameSpace: "", basicName: "AbstractSecurityScheme", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/security.ts" }], moduleName: null, annotationOverridings: {} }, { name: "DigestSecurityScheme", methods: [], typeParameters: [], typeParameterConstraint: [], "implements": [], fields: [{ name: "type", type: null, annotations: [], valueConstraint: { isCallConstraint: !1, value: "Digest Authentication" }, optional: !1 }], isInterface: !1, annotations: [{ name: "MetaModel.description", arguments: ["Declares globally referable security scheme definition"] }, { name: "MetaModel.actuallyExports", arguments: ["$self"] }, { name: "MetaModel.referenceIs", arguments: ["settings"] }], "extends": [{ typeName: "AbstractSecurityScheme", nameSpace: "", basicName: "AbstractSecurityScheme", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/security.ts" }], moduleName: null, annotationOverridings: {} }, { name: "CustomSecurityScheme", methods: [], typeParameters: [], typeParameterConstraint: [], "implements": [], fields: [{ name: "type", type: null, annotations: [], valueConstraint: { isCallConstraint: !1, value: "x-{other}" }, optional: !1 }], isInterface: !1, annotations: [{ name: "MetaModel.description", arguments: ["Declares globally referable security scheme definition"] }, { name: "MetaModel.actuallyExports", arguments: ["$self"] }, { name: "MetaModel.referenceIs", arguments: ["settings"] }], "extends": [{ typeName: "AbstractSecurityScheme", nameSpace: "", basicName: "AbstractSecurityScheme", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/security.ts" }], moduleName: null, annotationOverridings: {} }], aliases: [], enumDeclarations: [], imports: { MetaModel: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/metamodel.ts", Sys: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/systemTypes.ts", Methods: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/methods.ts" }, name: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/security.ts" }, { classes: [{ name: "ResourceTypeRef", methods: [], typeParameters: [], typeParameterConstraint: [], "implements": [], fields: [{ name: "resourceType", type: { typeName: "ResourceType", nameSpace: "", basicName: "ResourceType", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/resources.ts" }, annotations: [{ name: "MetaModel.customHandling", arguments: [] }, { name: "MetaModel.description", arguments: ["Returns referenced resource type"] }], valueConstraint: null, optional: !1 }], isInterface: !1, annotations: [], "extends": [{ typeName: "Reference", nameSpace: "", basicName: "Reference", typeKind: 0, typeArguments: [{ typeName: "ResourceType", nameSpace: "", basicName: "ResourceType", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/resources.ts" }], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/resources.ts" }], moduleName: null, annotationOverridings: {} }, { name: "ResourceType", methods: [], typeParameters: [], typeParameterConstraint: [], "implements": [], fields: [{ name: "displayName", type: { typeName: "string", nameSpace: "", basicName: "string", typeKind: 0, typeArguments: [], modulePath: null }, annotations: [{ name: "MetaModel.description", arguments: ["The displayName attribute specifies the resource type display name. It is a friendly name used only for  display or documentation purposes. If displayName is not specified, it defaults to the element's key (the name of the property itself)."] }], valueConstraint: null, optional: !1 }, { name: "name", type: { typeName: "string", nameSpace: "", basicName: "string", typeKind: 0, typeArguments: [], modulePath: null }, annotations: [{ name: "MetaModel.key", arguments: [] }, { name: "MetaModel.description", arguments: ["Name of the resource type"] }], valueConstraint: null, optional: !1 }, { name: "usage", type: { typeName: "string", nameSpace: "", basicName: "string", typeKind: 0, typeArguments: [], modulePath: null }, annotations: [{ name: "MetaModel.description", arguments: ["Instructions on how and when the resource type should be used."] }], valueConstraint: null, optional: !1 }, { name: "parametrizedProperties", type: { typeName: "DataModel.TypeInstance", nameSpace: "DataModel", basicName: "TypeInstance", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/resources.ts" }, annotations: [{ name: "MetaModel.customHandling", arguments: [] }, { name: "MetaModel.description", arguments: ["Returns object representation of parametrized properties of the resource type"] }], valueConstraint: null, optional: !1 }], isInterface: !1, annotations: [{ name: "MetaModel.inlinedTemplates", arguments: [] }, { name: "MetaModel.allowQuestion", arguments: [] }, { name: "MetaModel.possibleInterfaces", arguments: [["FragmentDeclaration"]] }], "extends": [{ typeName: "ResourceBase", nameSpace: "", basicName: "ResourceBase", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/resources.ts" }], moduleName: null, annotationOverridings: {} }, { name: "ResourceBase", methods: [], typeParameters: [], typeParameterConstraint: [], "implements": [], fields: [{ name: "methods", type: { base: { typeName: "Methods.Method", nameSpace: "Methods", basicName: "Method", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/resources.ts" }, typeKind: 1 }, annotations: [{ name: "MetaModel.description", arguments: ["Methods that are part of this resource type definition"] }, { name: "MetaModel.markdownDescription", arguments: ["The methods available on this resource."] }, { name: "MetaModel.documentationTableLabel", arguments: ["get?<br>patch?<br>put?<br>post?<br>delete?<br>options?<br>head?"] }, { name: "MetaModel.valueDescription", arguments: ["Object describing the method"] }], valueConstraint: null, optional: !1 }, { name: "is", type: { base: { typeName: "Methods.TraitRef", nameSpace: "Methods", basicName: "TraitRef", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/resources.ts" }, typeKind: 1 }, annotations: [{ name: "MetaModel.description", arguments: ["A list of the traits to apply to all methods declared (implicitly or explicitly) for this resource. Individual methods may override this declaration"] }, { name: "MetaModel.valueDescription", arguments: ["array, which can contain each of the following elements:<br>* name of unparametrized trait <br>* a key-value pair with trait name as key and a map of trait parameters as value<br>* inline trait declaration <br><br>(or a single element of any above kind)"] }], valueConstraint: null, optional: !1 }, { name: "type", type: { typeName: "ResourceTypeRef", nameSpace: "", basicName: "ResourceTypeRef", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/resources.ts" }, annotations: [{ name: "MetaModel.description", arguments: ["The resource type which this resource inherits."] }, { name: "MetaModel.valueDescription", arguments: ["one of the following elements:<br>* name of unparametrized resource type<br>* a key-value pair with resource type name as key and a map of its parameters as value<br>* inline resource type declaration"] }], valueConstraint: null, optional: !1 }, { name: "description", type: { typeName: "Sys.MarkdownString", nameSpace: "Sys", basicName: "MarkdownString", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/resources.ts" }, annotations: [], valueConstraint: null, optional: !1 }, { name: "securedBy", type: { base: { typeName: "Security.SecuritySchemeRef", nameSpace: "Security", basicName: "SecuritySchemeRef", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/resources.ts" }, typeKind: 1 }, annotations: [{ name: "MetaModel.allowNull", arguments: [] }, { name: "MetaModel.description", arguments: ["The security schemes that apply to all methods declared (implicitly or explicitly) for this resource."] }, { name: "MetaModel.valueDescription", arguments: ["array of security scheme names or a single security scheme name"] }], valueConstraint: null, optional: !1 }, { name: "uriParameters", type: { base: { typeName: "DataModel.TypeDeclaration", nameSpace: "DataModel", basicName: "TypeDeclaration", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/resources.ts" }, typeKind: 1 }, annotations: [{ name: "MetaModel.setsContextValue", arguments: ["location", "DataModel.ModelLocation.URI"] }, { name: "MetaModel.setsContextValue", arguments: ["locationKind", "DataModel.LocationKind.APISTRUCTURE"] }, { name: "MetaModel.setsContextValue", arguments: ["fieldOrParam", !0] }, { name: "MetaModel.description", arguments: ["Detailed information about any URI parameters of this resource"] }, { name: "MetaModel.valueDescription", arguments: ["object whose property names are the URI parameter names and whose values describe the values"] }], valueConstraint: null, optional: !1 }], isInterface: !1, annotations: [], "extends": [{ typeName: "Annotable", nameSpace: "", basicName: "Annotable", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/resources.ts" }], moduleName: null, annotationOverridings: {} }, { name: "Resource", methods: [], typeParameters: [], typeParameterConstraint: [], "implements": [], fields: [{ name: "relativeUri", type: { typeName: "Sys.RelativeUriString", nameSpace: "Sys", basicName: "RelativeUriString", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/resources.ts" }, annotations: [{ name: "MetaModel.key", arguments: [] }, { name: "MetaModel.startFrom", arguments: ["/"] }, { name: "MetaModel.description", arguments: ["Relative URL of this resource from the parent resource"] }, { name: "MetaModel.hide", arguments: [] }], valueConstraint: null, optional: !1 }, { name: "displayName", type: { typeName: "string", nameSpace: "", basicName: "string", typeKind: 0, typeArguments: [], modulePath: null }, annotations: [{ name: "MetaModel.description", arguments: ["The displayName attribute specifies the resource display name. It is a friendly name used only for  display or documentation purposes. If displayName is not specified, it defaults to the element's key (the name of the property itself)."] }], valueConstraint: null, optional: !1 }, { name: "resources", type: { base: { typeName: "Resource", nameSpace: "", basicName: "Resource", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/resources.ts" }, typeKind: 1 }, annotations: [{ name: "MetaModel.newInstanceName", arguments: ["New Resource"] }, { name: "MetaModel.description", arguments: ['A nested resource is identified as any property whose name begins with a slash ("/") and is therefore treated as a relative URI.'] }, { name: "MetaModel.documentationTableLabel", arguments: ["/&lt;relativeUri&gt;"] }, { name: "MetaModel.valueDescription", arguments: ["object describing the nested resource"] }], valueConstraint: null, optional: !1 }], isInterface: !1, annotations: [], "extends": [{ typeName: "ResourceBase", nameSpace: "", basicName: "ResourceBase", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/resources.ts" }], moduleName: null, annotationOverridings: { description: [{ name: "MetaModel.description", arguments: ["A longer, human-friendly description of the resource."] }, { name: "MetaModel.valueDescription", arguments: ["Markdown string"] }], annotations: [{ name: "MetaModel.markdownDescription", arguments: ['Annotations to be applied to this resource. Annotations are any property whose key begins with "(" and ends with ")" and whose name (the part between the beginning and ending parentheses) is a declared annotation name.'] }] } }], aliases: [], enumDeclarations: [], imports: { MetaModel: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/metamodel.ts", Sys: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/systemTypes.ts", DataModel: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/datamodel.ts", Security: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/security.ts", Methods: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/methods.ts" }, name: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/resources.ts" }, { classes: [{ name: "FileTypeDeclaration", methods: [], typeParameters: [], typeParameterConstraint: [], "implements": [], fields: [{ name: "type", type: null, annotations: [], valueConstraint: { isCallConstraint: !1, value: "file" }, optional: !1 }, { name: "fileTypes", type: { base: { typeName: "Sys.ContentType", nameSpace: "Sys", basicName: "ContentType", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/parameters.ts" }, typeKind: 1 }, annotations: [{ name: "MetaModel.description", arguments: ["A list of valid content-type strings for the file. The file type */* should be a valid value."] }], valueConstraint: null, optional: !1 }, { name: "minLength", type: { typeName: "number", nameSpace: "", basicName: "number", typeKind: 0, typeArguments: [], modulePath: null }, annotations: [{ name: "MetaModel.description", arguments: ["The minLength attribute specifies the parameter value's minimum number of bytes."] }], valueConstraint: null, optional: !1 }, { name: "maxLength", type: { typeName: "number", nameSpace: "", basicName: "number", typeKind: 0, typeArguments: [], modulePath: null }, annotations: [{ name: "MetaModel.description", arguments: ["The maxLength attribute specifies the parameter value's maximum number of bytes."] }], valueConstraint: null, optional: !1 }], isInterface: !1, annotations: [{ name: "MetaModel.description", arguments: ["(Applicable only to Form properties) Value is a file. Client generators SHOULD use this type to handle file uploads correctly."] }], "extends": [{ typeName: "TypeDeclaration", nameSpace: "", basicName: "TypeDeclaration", typeKind: 0, typeArguments: [], modulePath: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/parameters.ts" }], moduleName: null, annotationOverridings: {} }], aliases: [], enumDeclarations: [], imports: { MetaModel: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/metamodel.ts", Sys: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/systemTypes.ts", DataModel: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/datamodel.ts" }, name: "/Users/munch/work/repositories_official/raml-definition-system/raml-definition/spec-1.0/parameters.ts" }];
        }, function (e, t, n) {
            "use strict";
            t.decode = t.parse = n(99), t.encode = t.stringify = n(100);
        }, function (e, t, n) {
            "use strict";
            function r() { return L; }
            function i(e) { return e instanceof N.AbstractType; }
            function a(e, t) { return void 0 === t && (t = N.builtInRegistry()), _.parseJSONTypeCollection(e, t); }
            function o(e) { return _.parseJSON(null, e, N.builtInRegistry()); }
            function s(e) { return e.types || e.annotationTypes ? _.parseJSONTypeCollection(e) : _.parseJSON(null, e); }
            function u(e, t) { return _.parseJSON(null, e, t ? t.getTypeRegistry() : N.builtInRegistry()); }
            function l(e) { return _.parseTypeCollection(e, N.builtInRegistry()); }
            function p(e, t, n, r, i, a, o) { if (void 0 === r && (r = !1), void 0 === i && (i = !1), void 0 === a && (a = !0), void 0 === o && (o = !1), a) {
                var s;
                if (s = i ? n.getAnnotationType(e) : n.getType(e), null != s)
                    return s;
            } return _.parse(e, t, n ? n.getTypeRegistry() : N.builtInRegistry(), r, i, a, o); }
            function c(e) { return _.storeAsJSON(e); }
            function f(e, t, n) { void 0 === n && (n = !1), N.autoCloseFlag = n; try {
                return t.validate(e, n);
            }
            finally {
                N.autoCloseFlag = !1;
            } }
            function m(e, t) { return e.validateType(t.getAnnotationTypeRegistry()); }
            function h(e, t) { return t.ac(e); }
            function d(e) { return e.canDoAc(); }
            function y() { return b.getInstance().allPrototypes(); }
            function v() { return N.builtInRegistry(); }
            function g(e) { for (var t = [], n = 1; n < arguments.length; n++)
                t[n - 1] = arguments[n]; return N.derive(e, t); }
            function A(e) { for (var t = [], n = 1; n < arguments.length; n++)
                t[n - 1] = arguments[n]; return N.union(e, t); }
            function T(e) { C.setPropertyConstructor(e); }
            function E(e, t) { return C.toNominal(e, t); }
            function S(e) { return N.toValidationPath(e); }
            var N = n(101);
            t.tsInterfaces = n(102);
            var _ = n(103), b = n(104), I = n(105), R = n(106), M = n(106), w = n(106), C = n(107);
            t.nominalTypes = n(108), t.nominalInterfaces = n(109), t.typeExpressions = n(110);
            var L = n(111);
            t.TOP_LEVEL_EXTRA = t.tsInterfaces.TOP_LEVEL_EXTRA, t.DEFINED_IN_TYPES_EXTRA = t.tsInterfaces.DEFINED_IN_TYPES_EXTRA, t.USER_DEFINED_EXTRA = t.tsInterfaces.USER_DEFINED_EXTRA, t.SOURCE_EXTRA = t.tsInterfaces.SOURCE_EXTRA, t.getSchemaUtils = r, t.isParsedType = i, t.loadTypeCollection = a, t.loadType = o, t.parse = s, t.parseType = u, function (e) { e[e.SCALAR = 0] = "SCALAR", e[e.ARRAY = 1] = "ARRAY", e[e.MAP = 2] = "MAP"; }(t.NodeKind || (t.NodeKind = {}));
            t.NodeKind;
            t.parseFromAST = l, t.parseTypeFromAST = p, t.dump = c, t.validate = f, t.validateTypeDefinition = m, t.performAC = h, t.checkACStatus = d, t.builtInFacets = y, t.builtInTypes = v, t.derive = g, t.unify = A;
            var P = function () { function e(e) { this.target = e; } return e.prototype.addProperty = function (e, t, n) { return this.target.declareProperty(e, t, n), this; }, e.prototype.closeType = function () { return this.target.addMeta(new I.KnownPropertyRestriction(!1)), this; }, e.prototype.annotate = function (e, t) { return this.target.addMeta(new R.Annotation(e, t)), this; }, e.prototype.customFacet = function (e, t) { return this.target.addMeta(new M.CustomFacet(e, t)), this; }, e.prototype.customFacetDeclaration = function (e, t, n) { return void 0 === n && (n = !0), this.target.addMeta(new w.FacetDeclaration(e, t, n)), this; }, e.prototype.addSimpleFacet = function (e, t) { return this.target.addMeta(b.getInstance().buildFacet(e, t)), this; }, e.prototype.getResult = function () { return this.target; }, e; }();
            t.TypeConstructor = P, t.setPropertyConstructor = T, t.toNominal = E, t.toValidationPath = S;
        }, function (e, t, n) { var r; (function (e, i) { !function (a) { function o(e) { throw RangeError(P[e]); } function s(e, t) { for (var n = e.length, r = []; n--;)
            r[n] = t(e[n]); return r; } function u(e, t) { var n = e.split("@"), r = ""; n.length > 1 && (r = n[0] + "@", e = n[1]), e = e.replace(L, "."); var i = e.split("."), a = s(i, t).join("."); return r + a; } function l(e) { for (var t, n, r = [], i = 0, a = e.length; a > i;)
            t = e.charCodeAt(i++), t >= 55296 && 56319 >= t && a > i ? (n = e.charCodeAt(i++), 56320 == (64512 & n) ? r.push(((1023 & t) << 10) + (1023 & n) + 65536) : (r.push(t), i--)) : r.push(t); return r; } function p(e) { return s(e, function (e) { var t = ""; return e > 65535 && (e -= 65536, t += U(e >>> 10 & 1023 | 55296), e = 56320 | 1023 & e), t += U(e); }).join(""); } function c(e) { return 10 > e - 48 ? e - 22 : 26 > e - 65 ? e - 65 : 26 > e - 97 ? e - 97 : E; } function f(e, t) { return e + 22 + 75 * (26 > e) - ((0 != t) << 5); } function m(e, t, n) { var r = 0; for (e = n ? D(e / b) : e >> 1, e += D(e / t); e > O * N >> 1; r += E)
            e = D(e / O); return D(r + (O + 1) * e / (e + _)); } function h(e) { var t, n, r, i, a, s, u, l, f, h, d = [], y = e.length, v = 0, g = R, A = I; for (n = e.lastIndexOf(M), 0 > n && (n = 0), r = 0; n > r; ++r)
            e.charCodeAt(r) >= 128 && o("not-basic"), d.push(e.charCodeAt(r)); for (i = n > 0 ? n + 1 : 0; y > i;) {
            for (a = v, s = 1, u = E; i >= y && o("invalid-input"), l = c(e.charCodeAt(i++)), (l >= E || l > D((T - v) / s)) && o("overflow"), v += l * s, f = A >= u ? S : u >= A + N ? N : u - A, !(f > l); u += E)
                h = E - f, s > D(T / h) && o("overflow"), s *= h;
            t = d.length + 1, A = m(v - a, t, 0 == a), D(v / t) > T - g && o("overflow"), g += D(v / t), v %= t, d.splice(v++, 0, g);
        } return p(d); } function d(e) { var t, n, r, i, a, s, u, p, c, h, d, y, v, g, A, _ = []; for (e = l(e), y = e.length, t = R, n = 0, a = I, s = 0; y > s; ++s)
            d = e[s], 128 > d && _.push(U(d)); for (r = i = _.length, i && _.push(M); y > r;) {
            for (u = T, s = 0; y > s; ++s)
                d = e[s], d >= t && u > d && (u = d);
            for (v = r + 1, u - t > D((T - n) / v) && o("overflow"), n += (u - t) * v, t = u, s = 0; y > s; ++s)
                if (d = e[s], t > d && ++n > T && o("overflow"), d == t) {
                    for (p = n, c = E; h = a >= c ? S : c >= a + N ? N : c - a, !(h > p); c += E)
                        A = p - h, g = E - h, _.push(U(f(h + A % g, 0))), p = D(A / g);
                    _.push(U(f(p, 0))), a = m(n, v, r == i), n = 0, ++r;
                }
            ++n, ++t;
        } return _.join(""); } function y(e) { return u(e, function (e) { return w.test(e) ? h(e.slice(4).toLowerCase()) : e; }); } function v(e) { return u(e, function (e) { return C.test(e) ? "xn--" + d(e) : e; }); } var g = ("object" == typeof t && t && !t.nodeType && t, "object" == typeof e && e && !e.nodeType && e, "object" == typeof i && i); (g.global === g || g.window === g || g.self === g) && (a = g); var A, T = 2147483647, E = 36, S = 1, N = 26, _ = 38, b = 700, I = 72, R = 128, M = "-", w = /^xn--/, C = /[^\x20-\x7E]/, L = /[\x2E\u3002\uFF0E\uFF61]/g, P = { overflow: "Overflow: input needs wider integers to process", "not-basic": "Illegal input >= 0x80 (not a basic code point)", "invalid-input": "Invalid input" }, O = E - S, D = Math.floor, U = String.fromCharCode; A = { version: "1.3.2", ucs2: { decode: l, encode: p }, decode: h, encode: d, toASCII: v, toUnicode: y }, r = function () { return A; }.call(t, n, t, e), !(void 0 !== r && (e.exports = r)); }(this); }).call(t, n(151)(e), function () { return this; }()); }, function (e, t, n) {
            function r() { }
            function i(e, t, n, r, i) { function p(e) { if (e > 65535) {
                e -= 65536;
                var t = 55296 + (e >> 10), n = 56320 + (1023 & e);
                return String.fromCharCode(t, n);
            } return String.fromCharCode(e); } function h(e) { var t = e.slice(1, -1); return t in n ? n[t] : "#" === t.charAt(0) ? p(parseInt(t.substr(1).replace("x", "0x"))) : (i.error("entity not found:" + e), e); } function d(t) { if (t > N) {
                var n = e.substring(N, t).replace(/&#?\w+;/g, h);
                T && y(N), r.characters(n, 0, t - N), N = t;
            } } function y(t, n) { for (; t >= g && (n = A.exec(e));)
                v = n.index, g = v + n[0].length, T.lineNumber++; T.columnNumber = t - v + 1; } for (var v = 0, g = 0, A = /.*(?:\r\n?|\n)|.*$/g, T = r.locator, E = [{ currentNSMap: t }], S = {}, N = 0;;) {
                try {
                    var _ = e.indexOf("<", N);
                    if (0 > _) {
                        if (!e.substr(N).match(/^\s*$/)) {
                            var b = r.doc, I = b.createTextNode(e.substr(N));
                            b.appendChild(I), r.currentElement = I;
                        }
                        return;
                    }
                    switch ((_ > N && d(_), e.charAt(_ + 1))) {
                        case "/":
                            var R = e.indexOf(">", _ + 3), M = e.substring(_ + 2, R), w = E.pop();
                            0 > R ? (M = e.substring(_ + 2).replace(/[\s<].*/, ""), i.error("end tag name: " + M + " is not complete:" + w.tagName), R = _ + 1 + M.length) : M.match(/\s</) && (M = M.replace(/[\s<].*/, ""), i.error("end tag name: " + M + " maybe not complete"), R = _ + 1 + M.length);
                            var C = w.localNSMap, L = w.tagName == M, P = L || w.tagName && w.tagName.toLowerCase() == M.toLowerCase();
                            if (P) {
                                if (r.endElement(w.uri, w.localName, M), C)
                                    for (var O in C)
                                        r.endPrefixMapping(O);
                                L || i.fatalError("end tag name: " + M + " is not match the current start tagName:" + w.tagName);
                            }
                            else
                                E.push(w);
                            R++;
                            break;
                        case "?":
                            T && y(_), R = f(e, _, r);
                            break;
                        case "!":
                            T && y(_), R = c(e, _, r, i);
                            break;
                        default:
                            T && y(_);
                            var D = new m, U = E[E.length - 1].currentNSMap, R = o(e, _, D, U, h, i), x = D.length;
                            if (!D.closed && l(e, R, D.tagName, S) && (D.closed = !0, n.nbsp || i.warning("unclosed xml attribute")), T && x) {
                                for (var k = a(T, {}), F = 0; x > F; F++) {
                                    var B = D[F];
                                    y(B.offset), B.locator = a(T, {});
                                }
                                r.locator = k, s(D, r, U) && E.push(D), r.locator = T;
                            }
                            else
                                s(D, r, U) && E.push(D);
                            "http://www.w3.org/1999/xhtml" !== D.uri || D.closed ? R++ : R = u(e, R, D.tagName, h, r);
                    }
                }
                catch (K) {
                    i.error("element parse error: " + K), R = -1;
                }
                R > N ? N = R : d(Math.max(_, N) + 1);
            } }
            function a(e, t) { return t.lineNumber = e.lineNumber, t.columnNumber = e.columnNumber, t; }
            function o(e, t, n, r, i, a) { for (var o, s, u = ++t, l = A;;) {
                var p = e.charAt(u);
                switch (p) {
                    case "=":
                        if (l === T)
                            o = e.slice(t, u), l = S;
                        else {
                            if (l !== E)
                                throw new Error("attribute equal must after attrName");
                            l = S;
                        }
                        break;
                    case "'":
                    case '"':
                        if (l === S || l === T) {
                            if (l === T && (a.warning('attribute value must after "="'), o = e.slice(t, u)), t = u + 1, u = e.indexOf(p, t), !(u > 0))
                                throw new Error("attribute value no end '" + p + "' match");
                            s = e.slice(t, u).replace(/&#?\w+;/g, i), n.add(o, s, t - 1), l = _;
                        }
                        else {
                            if (l != N)
                                throw new Error('attribute value must after "="');
                            s = e.slice(t, u).replace(/&#?\w+;/g, i), n.add(o, s, t), a.warning('attribute "' + o + '" missed start quot(' + p + ")!!"), t = u + 1, l = _;
                        }
                        break;
                    case "/":
                        switch (l) {
                            case A: n.setTagName(e.slice(t, u));
                            case _:
                            case b:
                            case I: l = I, n.closed = !0;
                            case N:
                            case T:
                            case E: break;
                            default: throw new Error("attribute invalid close char('/')");
                        }
                        break;
                    case "": return a.error("unexpected end of input"), l == A && n.setTagName(e.slice(t, u)), u;
                    case ">":
                        switch (l) {
                            case A: n.setTagName(e.slice(t, u));
                            case _:
                            case b:
                            case I: break;
                            case N:
                            case T: s = e.slice(t, u), "/" === s.slice(-1) && (n.closed = !0, s = s.slice(0, -1));
                            case E:
                                l === E && (s = o), l == N ? (a.warning('attribute "' + s + '" missed quot(")!!'), n.add(o, s.replace(/&#?\w+;/g, i), t)) : ("http://www.w3.org/1999/xhtml" === r[""] && s.match(/^(?:disabled|checked|selected)$/i) || a.warning('attribute "' + s + '" missed value!! "' + s + '" instead!!'), n.add(s, s, t));
                                break;
                            case S: throw new Error("attribute value missed!!");
                        }
                        return u;
                    case "": p = " ";
                    default: if (" " >= p)
                        switch (l) {
                            case A:
                                n.setTagName(e.slice(t, u)), l = b;
                                break;
                            case T:
                                o = e.slice(t, u), l = E;
                                break;
                            case N:
                                var s = e.slice(t, u).replace(/&#?\w+;/g, i);
                                a.warning('attribute "' + s + '" missed quot(")!!'), n.add(o, s, t);
                            case _: l = b;
                        }
                    else
                        switch (l) {
                            case E:
                                n.tagName;
                                "http://www.w3.org/1999/xhtml" === r[""] && o.match(/^(?:disabled|checked|selected)$/i) || a.warning('attribute "' + o + '" missed value!! "' + o + '" instead2!!'), n.add(o, o, t), t = u, l = T;
                                break;
                            case _: a.warning('attribute space is required"' + o + '"!!');
                            case b:
                                l = T, t = u;
                                break;
                            case S:
                                l = N, t = u;
                                break;
                            case I: throw new Error("elements closed character '/' and '>' must be connected to");
                        }
                }
                u++;
            } }
            function s(e, t, n) {
                for (var r = e.tagName, i = null, a = e.length; a--;) {
                    var o = e[a], s = o.qName, u = o.value, l = s.indexOf(":");
                    if (l > 0)
                        var c = o.prefix = s.slice(0, l), f = s.slice(l + 1), m = "xmlns" === c && f;
                    else
                        f = s,
                            c = null, m = "xmlns" === s && "";
                    o.localName = f, m !== !1 && (null == i && (i = {}, p(n, n = {})), n[m] = i[m] = u, o.uri = "http://www.w3.org/2000/xmlns/", t.startPrefixMapping(m, u));
                }
                for (var a = e.length; a--;) {
                    o = e[a];
                    var c = o.prefix;
                    c && ("xml" === c && (o.uri = "http://www.w3.org/XML/1998/namespace"), "xmlns" !== c && (o.uri = n[c || ""]));
                }
                var l = r.indexOf(":");
                l > 0 ? (c = e.prefix = r.slice(0, l), f = e.localName = r.slice(l + 1)) : (c = null, f = e.localName = r);
                var h = e.uri = n[c || ""];
                if (t.startElement(h, f, r, e), !e.closed)
                    return e.currentNSMap = n, e.localNSMap = i, !0;
                if (t.endElement(h, f, r), i)
                    for (c in i)
                        t.endPrefixMapping(c);
            }
            function u(e, t, n, r, i) { if (/^(?:script|textarea)$/i.test(n)) {
                var a = e.indexOf("</" + n + ">", t), o = e.substring(t + 1, a);
                if (/[&<]/.test(o))
                    return /^script$/i.test(n) ? (i.characters(o, 0, o.length), a) : (o = o.replace(/&#?\w+;/g, r), i.characters(o, 0, o.length), a);
            } return t + 1; }
            function l(e, t, n, r) { var i = r[n]; return null == i && (i = e.lastIndexOf("</" + n + ">"), t > i && (i = e.lastIndexOf("</" + n)), r[n] = i), t > i; }
            function p(e, t) { for (var n in e)
                t[n] = e[n]; }
            function c(e, t, n, r) { var i = e.charAt(t + 2); switch (i) {
                case "-":
                    if ("-" === e.charAt(t + 3)) {
                        var a = e.indexOf("-->", t + 4);
                        return a > t ? (n.comment(e, t + 4, a - t - 4), a + 3) : (r.error("Unclosed comment"), -1);
                    }
                    return -1;
                default:
                    if ("CDATA[" == e.substr(t + 3, 6)) {
                        var a = e.indexOf("]]>", t + 9);
                        return n.startCDATA(), n.characters(e, t + 9, a - t - 9), n.endCDATA(), a + 3;
                    }
                    var o = d(e, t), s = o.length;
                    if (s > 1 && /!doctype/i.test(o[0][0])) {
                        var u = o[1][0], l = s > 3 && /^public$/i.test(o[2][0]) && o[3][0], p = s > 4 && o[4][0], c = o[s - 1];
                        return n.startDTD(u, l && l.replace(/^(['"])(.*?)\1$/, "$2"), p && p.replace(/^(['"])(.*?)\1$/, "$2")), n.endDTD(), c.index + c[0].length;
                    }
            } return -1; }
            function f(e, t, n) { var r = e.indexOf("?>", t); if (r) {
                var i = e.substring(t, r).match(/^<\?(\S*)\s*([\s\S]*?)\s*$/);
                if (i) {
                    i[0].length;
                    return n.processingInstruction(i[1], i[2]), r + 2;
                }
                return -1;
            } return -1; }
            function m(e) { }
            function h(e, t) { return e.__proto__ = t, e; }
            function d(e, t) { var n, r = [], i = /'[^']+'|"[^"]+"|[^\s<>\/=]+=?|(\/?\s*>|<)/g; for (i.lastIndex = t, i.exec(e); n = i.exec(e);)
                if (r.push(n), n[1])
                    return r; }
            var y = /[A-Z_a-z\xC0-\xD6\xD8-\xF6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD]/, v = new RegExp("[\\-\\.0-9" + y.source.slice(1, -1) + "\\u00B7\\u0300-\\u036F\\u203F-\\u2040]"), g = new RegExp("^" + y.source + v.source + "*(?::" + y.source + v.source + "*)?$"), A = 0, T = 1, E = 2, S = 3, N = 4, _ = 5, b = 6, I = 7;
            r.prototype = { parse: function (e, t, n) { var r = this.domBuilder; r.startDocument(), p(t, t = {}), i(e, t, n, r, this.errorHandler), r.endDocument(); } }, m.prototype = { setTagName: function (e) { if (!g.test(e))
                    throw new Error("invalid tagName:" + e); this.tagName = e; }, add: function (e, t, n) { if (!g.test(e))
                    throw new Error("invalid attribute:" + e); this[this.length++] = { qName: e, value: t, offset: n }; }, length: 0, getLocalName: function (e) { return this[e].localName; }, getLocator: function (e) { return this[e].locator; }, getQName: function (e) { return this[e].qName; }, getURI: function (e) { return this[e].uri; }, getValue: function (e) { return this[e].value; } }, h({}, h.prototype) instanceof h || (h = function (e, t) { function n() { } n.prototype = t, n = new n; for (t in e)
                n[t] = e[t]; return n; }), t.XMLReader = r;
        }, function (e, t, n) { function r(e, t) { for (var n in e)
            t[n] = e[n]; } function i(e, t) { function n() { } var i = e.prototype; if (Object.create) {
            var a = Object.create(t.prototype);
            i.__proto__ = a;
        } i instanceof t || (n.prototype = t.prototype, n = new n, r(i, n), e.prototype = i = n), i.constructor != e && ("function" != typeof e && console.error("unknow Class:" + e), i.constructor = e); } function a(e, t) { if (t instanceof Error)
            var n = t;
        else
            n = this, Error.call(this, ae[e]), this.message = ae[e], Error.captureStackTrace && Error.captureStackTrace(this, a); return n.code = e, t && (this.message = this.message + ": " + t), n; } function o() { } function s(e, t) { this._node = e, this._refresh = t, u(this); } function u(e) { var t = e._node._inc || e._node.ownerDocument._inc; if (e._inc != t) {
            var n = e._refresh(e._node);
            j(e, "length", n.length), r(n, e), e._inc = t;
        } } function l() { } function p(e, t) { for (var n = e.length; n--;)
            if (e[n] === t)
                return n; } function c(e, t, n, r) { if (r ? t[p(t, r)] = n : t[t.length++] = n, e) {
            n.ownerElement = e;
            var i = e.ownerDocument;
            i && (r && A(i, e, r), g(i, e, n));
        } } function f(e, t, n) { var r = p(t, n); if (!(r >= 0))
            throw a(se, new Error(e.tagName + "@" + n)); for (var i = t.length - 1; i > r;)
            t[r] = t[++r]; if (t.length = i, e) {
            var o = e.ownerDocument;
            o && (A(o, e, n), n.ownerElement = null);
        } } function m(e) { if (this._features = {}, e)
            for (var t in e)
                this._features = e[t]; } function h() { } function d(e) { return "<" == e && "&lt;" || ">" == e && "&gt;" || "&" == e && "&amp;" || '"' == e && "&quot;" || "&#" + e.charCodeAt() + ";"; } function y(e, t) { if (t(e))
            return !0; if (e = e.firstChild)
            do
                if (y(e, t))
                    return !0;
            while (e = e.nextSibling); } function v() { } function g(e, t, n) { e && e._inc++; var r = n.namespaceURI; "http://www.w3.org/2000/xmlns/" == r && (t._nsMap[n.prefix ? n.localName : ""] = n.value); } function A(e, t, n, r) { e && e._inc++; var i = n.namespaceURI; "http://www.w3.org/2000/xmlns/" == i && delete t._nsMap[n.prefix ? n.localName : ""]; } function T(e, t, n) { if (e && e._inc) {
            e._inc++;
            var r = t.childNodes;
            if (n)
                r[r.length++] = n;
            else {
                for (var i = t.firstChild, a = 0; i;)
                    r[a++] = i, i = i.nextSibling;
                r.length = a;
            }
        } } function E(e, t) { var n = t.previousSibling, r = t.nextSibling; return n ? n.nextSibling = r : e.firstChild = r, r ? r.previousSibling = n : e.lastChild = n, T(e.ownerDocument, e), t; } function S(e, t, n) { var r = t.parentNode; if (r && r.removeChild(t), t.nodeType === ne) {
            var i = t.firstChild;
            if (null == i)
                return t;
            var a = t.lastChild;
        }
        else
            i = a = t; var o = n ? n.previousSibling : e.lastChild; i.previousSibling = o, a.nextSibling = n, o ? o.nextSibling = i : e.firstChild = i, null == n ? e.lastChild = a : n.previousSibling = a; do
            i.parentNode = e;
        while (i !== a && (i = i.nextSibling)); return T(e.ownerDocument || e, e), t.nodeType == ne && (t.firstChild = t.lastChild = null), t; } function N(e, t) { var n = t.parentNode; if (n) {
            var r = e.lastChild;
            n.removeChild(t);
            var r = e.lastChild;
        } var r = e.lastChild; return t.parentNode = e, t.previousSibling = r, t.nextSibling = null, r ? r.nextSibling = t : e.firstChild = t, e.lastChild = t, T(e.ownerDocument, e, t), t; } function _() { this._nsMap = {}; } function b() { } function I() { } function R() { } function M() { } function w() { } function C() { } function L() { } function P() { } function O() { } function D() { } function U() { } function x() { } function k(e, t) { var n = [], r = 9 == this.nodeType ? this.documentElement : this, i = r.prefix, a = r.namespaceURI; if (a && null == i) {
            var i = r.lookupPrefix(a);
            if (null == i)
                var o = [{ namespace: a, prefix: null }];
        } return B(this, n, e, t, o), n.join(""); } function F(e, t, n) { var r = e.prefix || "", i = e.namespaceURI; if (!r && !i)
            return !1; if ("xml" === r && "http://www.w3.org/XML/1998/namespace" === i || "http://www.w3.org/2000/xmlns/" == i)
            return !1; for (var a = n.length; a--;) {
            var o = n[a];
            if (o.prefix == r)
                return o.namespace != i;
        } return !0; } function B(e, t, n, r, i) { if (r) {
            if (e = r(e), !e)
                return;
            if ("string" == typeof e)
                return void t.push(e);
        } switch (e.nodeType) {
            case Y:
                i || (i = []);
                var a = (i.length, e.attributes), o = a.length, s = e.firstChild, u = e.tagName;
                n = q === e.namespaceURI || n, t.push("<", u);
                for (var l = 0; o > l; l++) {
                    var p = a.item(l);
                    "xmlns" == p.prefix ? i.push({ prefix: p.localName, namespace: p.value }) : "xmlns" == p.nodeName && i.push({ prefix: "", namespace: p.value });
                }
                for (var l = 0; o > l; l++) {
                    var p = a.item(l);
                    if (F(p, n, i)) {
                        var c = p.prefix || "", f = p.namespaceURI, m = c ? " xmlns:" + c : " xmlns";
                        t.push(m, '="', f, '"'), i.push({ prefix: c, namespace: f });
                    }
                    B(p, t, n, r, i);
                }
                if (F(e, n, i)) {
                    var c = e.prefix || "", f = e.namespaceURI, m = c ? " xmlns:" + c : " xmlns";
                    t.push(m, '="', f, '"'), i.push({ prefix: c, namespace: f });
                }
                if (s || n && !/^(?:meta|link|img|br|hr|input)$/i.test(u)) {
                    if (t.push(">"), n && /^script$/i.test(u))
                        for (; s;)
                            s.data ? t.push(s.data) : B(s, t, n, r, i), s = s.nextSibling;
                    else
                        for (; s;)
                            B(s, t, n, r, i), s = s.nextSibling;
                    t.push("</", u, ">");
                }
                else
                    t.push("/>");
                return;
            case ee:
            case ne:
                for (var s = e.firstChild; s;)
                    B(s, t, n, r, i), s = s.nextSibling;
                return;
            case G: return t.push(" ", e.name, '="', e.value.replace(/[<&"]/g, d), '"');
            case X: return t.push(e.data.replace(/[<&]/g, d));
            case z: return t.push("<![CDATA[", e.data, "]]>");
            case Z: return t.push("<!--", e.data, "-->");
            case te:
                var h = e.publicId, y = e.systemId;
                if (t.push("<!DOCTYPE ", e.name), h)
                    t.push(' PUBLIC "', h), y && "." != y && t.push('" "', y), t.push('">');
                else if (y && "." != y)
                    t.push(' SYSTEM "', y, '">');
                else {
                    var v = e.internalSubset;
                    v && t.push(" [", v, "]"), t.push(">");
                }
                return;
            case Q: return t.push("<?", e.target, " ", e.data, "?>");
            case $: return t.push("&", e.nodeName, ";");
            default: t.push("??", e.nodeName);
        } } function K(e, t, n) { var r; switch (t.nodeType) {
            case Y: r = t.cloneNode(!1), r.ownerDocument = e;
            case ne: break;
            case G: n = !0;
        } if (r || (r = t.cloneNode(!1)), r.ownerDocument = e, r.parentNode = null, n)
            for (var i = t.firstChild; i;)
                r.appendChild(K(e, i, n)), i = i.nextSibling; return r; } function V(e, t, n) { var r = new t.constructor; for (var i in t) {
            var a = t[i];
            "object" != typeof a && a != r[i] && (r[i] = a);
        } switch ((t.childNodes && (r.childNodes = new o), r.ownerDocument = e, r.nodeType)) {
            case Y:
                var s = t.attributes, u = r.attributes = new l, p = s.length;
                u._ownerElement = r;
                for (var c = 0; p > c; c++)
                    r.setAttributeNode(V(e, s.item(c), !0));
                break;
            case G: n = !0;
        } if (n)
            for (var f = t.firstChild; f;)
                r.appendChild(V(e, f, n)), f = f.nextSibling; return r; } function j(e, t, n) { e[t] = n; } function W(e) { switch (e.nodeType) {
            case Y:
            case ne:
                var t = [];
                for (e = e.firstChild; e;)
                    7 !== e.nodeType && 8 !== e.nodeType && t.push(W(e)), e = e.nextSibling;
                return t.join("");
            default: return e.nodeValue;
        } } var q = "http://www.w3.org/1999/xhtml", H = {}, Y = H.ELEMENT_NODE = 1, G = H.ATTRIBUTE_NODE = 2, X = H.TEXT_NODE = 3, z = H.CDATA_SECTION_NODE = 4, $ = H.ENTITY_REFERENCE_NODE = 5, J = H.ENTITY_NODE = 6, Q = H.PROCESSING_INSTRUCTION_NODE = 7, Z = H.COMMENT_NODE = 8, ee = H.DOCUMENT_NODE = 9, te = H.DOCUMENT_TYPE_NODE = 10, ne = H.DOCUMENT_FRAGMENT_NODE = 11, re = H.NOTATION_NODE = 12, ie = {}, ae = {}, oe = (ie.INDEX_SIZE_ERR = (ae[1] = "Index size error", 1), ie.DOMSTRING_SIZE_ERR = (ae[2] = "DOMString size error", 2), ie.HIERARCHY_REQUEST_ERR = (ae[3] = "Hierarchy request error", 3)), se = (ie.WRONG_DOCUMENT_ERR = (ae[4] = "Wrong document", 4), ie.INVALID_CHARACTER_ERR = (ae[5] = "Invalid character", 5), ie.NO_DATA_ALLOWED_ERR = (ae[6] = "No data allowed", 6), ie.NO_MODIFICATION_ALLOWED_ERR = (ae[7] = "No modification allowed", 7), ie.NOT_FOUND_ERR = (ae[8] = "Not found", 8)), ue = (ie.NOT_SUPPORTED_ERR = (ae[9] = "Not supported", 9), ie.INUSE_ATTRIBUTE_ERR = (ae[10] = "Attribute in use", 10)); ie.INVALID_STATE_ERR = (ae[11] = "Invalid state", 11), ie.SYNTAX_ERR = (ae[12] = "Syntax error", 12), ie.INVALID_MODIFICATION_ERR = (ae[13] = "Invalid modification", 13), ie.NAMESPACE_ERR = (ae[14] = "Invalid namespace", 14), ie.INVALID_ACCESS_ERR = (ae[15] = "Invalid access", 15); a.prototype = Error.prototype, r(ie, a), o.prototype = { length: 0, item: function (e) { return this[e] || null; }, toString: function (e, t) { for (var n = [], r = 0; r < this.length; r++)
                B(this[r], n, e, t); return n.join(""); } }, s.prototype.item = function (e) { return u(this), this[e]; }, i(s, o), l.prototype = { length: 0, item: o.prototype.item, getNamedItem: function (e) { for (var t = this.length; t--;) {
                var n = this[t];
                if (n.nodeName == e)
                    return n;
            } }, setNamedItem: function (e) { var t = e.ownerElement; if (t && t != this._ownerElement)
                throw new a(ue); var n = this.getNamedItem(e.nodeName); return c(this._ownerElement, this, e, n), n; }, setNamedItemNS: function (e) { var t, n = e.ownerElement; if (n && n != this._ownerElement)
                throw new a(ue); return t = this.getNamedItemNS(e.namespaceURI, e.localName), c(this._ownerElement, this, e, t), t; }, removeNamedItem: function (e) { var t = this.getNamedItem(e); return f(this._ownerElement, this, t), t; }, removeNamedItemNS: function (e, t) { var n = this.getNamedItemNS(e, t); return f(this._ownerElement, this, n), n; }, getNamedItemNS: function (e, t) { for (var n = this.length; n--;) {
                var r = this[n];
                if (r.localName == t && r.namespaceURI == e)
                    return r;
            } return null; } }, m.prototype = { hasFeature: function (e, t) { var n = this._features[e.toLowerCase()]; return n && (!t || t in n) ? !0 : !1; }, createDocument: function (e, t, n) { var r = new v; if (r.implementation = this, r.childNodes = new o, r.doctype = n, n && r.appendChild(n), t) {
                var i = r.createElementNS(e, t);
                r.appendChild(i);
            } return r; }, createDocumentType: function (e, t, n) { var r = new C; return r.name = e, r.nodeName = e, r.publicId = t, r.systemId = n, r; } }, h.prototype = { firstChild: null, lastChild: null, previousSibling: null, nextSibling: null, attributes: null, parentNode: null, childNodes: null, ownerDocument: null, nodeValue: null, namespaceURI: null, prefix: null, localName: null, insertBefore: function (e, t) { return S(this, e, t); }, replaceChild: function (e, t) { this.insertBefore(e, t), t && this.removeChild(t); }, removeChild: function (e) { return E(this, e); }, appendChild: function (e) { return this.insertBefore(e, null); }, hasChildNodes: function () { return null != this.firstChild; }, cloneNode: function (e) { return V(this.ownerDocument || this, this, e); }, normalize: function () { for (var e = this.firstChild; e;) {
                var t = e.nextSibling;
                t && t.nodeType == X && e.nodeType == X ? (this.removeChild(t), e.appendData(t.data)) : (e.normalize(), e = t);
            } }, isSupported: function (e, t) { return this.ownerDocument.implementation.hasFeature(e, t); }, hasAttributes: function () { return this.attributes.length > 0; }, lookupPrefix: function (e) { for (var t = this; t;) {
                var n = t._nsMap;
                if (n)
                    for (var r in n)
                        if (n[r] == e)
                            return r;
                t = t.nodeType == G ? t.ownerDocument : t.parentNode;
            } return null; }, lookupNamespaceURI: function (e) { for (var t = this; t;) {
                var n = t._nsMap;
                if (n && e in n)
                    return n[e];
                t = t.nodeType == G ? t.ownerDocument : t.parentNode;
            } return null; }, isDefaultNamespace: function (e) { var t = this.lookupPrefix(e); return null == t; } }, r(H, h), r(H, h.prototype), v.prototype = { nodeName: "#document", nodeType: ee, doctype: null, documentElement: null, _inc: 1, insertBefore: function (e, t) { if (e.nodeType == ne) {
                for (var n = e.firstChild; n;) {
                    var r = n.nextSibling;
                    this.insertBefore(n, t), n = r;
                }
                return e;
            } return null == this.documentElement && e.nodeType == Y && (this.documentElement = e), S(this, e, t), e.ownerDocument = this, e; }, removeChild: function (e) { return this.documentElement == e && (this.documentElement = null), E(this, e); }, importNode: function (e, t) { return K(this, e, t); }, getElementById: function (e) { var t = null; return y(this.documentElement, function (n) { return n.nodeType == Y && n.getAttribute("id") == e ? (t = n, !0) : void 0; }), t; }, createElement: function (e) { var t = new _; t.ownerDocument = this, t.nodeName = e, t.tagName = e, t.childNodes = new o; var n = t.attributes = new l; return n._ownerElement = t, t; }, createDocumentFragment: function () { var e = new D; return e.ownerDocument = this, e.childNodes = new o, e; }, createTextNode: function (e) { var t = new R; return t.ownerDocument = this, t.appendData(e), t; }, createComment: function (e) { var t = new M; return t.ownerDocument = this, t.appendData(e), t; }, createCDATASection: function (e) { var t = new w; return t.ownerDocument = this, t.appendData(e), t; }, createProcessingInstruction: function (e, t) { var n = new U; return n.ownerDocument = this, n.tagName = n.target = e, n.nodeValue = n.data = t, n; }, createAttribute: function (e) { var t = new b; return t.ownerDocument = this, t.name = e, t.nodeName = e, t.localName = e, t.specified = !0, t; }, createEntityReference: function (e) { var t = new O; return t.ownerDocument = this, t.nodeName = e, t; }, createElementNS: function (e, t) { var n = new _, r = t.split(":"), i = n.attributes = new l; return n.childNodes = new o, n.ownerDocument = this, n.nodeName = t, n.tagName = t, n.namespaceURI = e, 2 == r.length ? (n.prefix = r[0], n.localName = r[1]) : n.localName = t, i._ownerElement = n, n; }, createAttributeNS: function (e, t) { var n = new b, r = t.split(":"); return n.ownerDocument = this, n.nodeName = t, n.name = t, n.namespaceURI = e, n.specified = !0, 2 == r.length ? (n.prefix = r[0], n.localName = r[1]) : n.localName = t, n; } }, i(v, h), _.prototype = { nodeType: Y, hasAttribute: function (e) { return null != this.getAttributeNode(e); }, getAttribute: function (e) { var t = this.getAttributeNode(e); return t && t.value || ""; }, getAttributeNode: function (e) { return this.attributes.getNamedItem(e); }, setAttribute: function (e, t) { var n = this.ownerDocument.createAttribute(e); n.value = n.nodeValue = "" + t, this.setAttributeNode(n); }, removeAttribute: function (e) { var t = this.getAttributeNode(e); t && this.removeAttributeNode(t); }, appendChild: function (e) { return e.nodeType === ne ? this.insertBefore(e, null) : N(this, e); }, setAttributeNode: function (e) { return this.attributes.setNamedItem(e); }, setAttributeNodeNS: function (e) { return this.attributes.setNamedItemNS(e); }, removeAttributeNode: function (e) { return this.attributes.removeNamedItem(e.nodeName); }, removeAttributeNS: function (e, t) { var n = this.getAttributeNodeNS(e, t); n && this.removeAttributeNode(n); }, hasAttributeNS: function (e, t) { return null != this.getAttributeNodeNS(e, t); }, getAttributeNS: function (e, t) { var n = this.getAttributeNodeNS(e, t); return n && n.value || ""; }, setAttributeNS: function (e, t, n) { var r = this.ownerDocument.createAttributeNS(e, t); r.value = r.nodeValue = "" + n, this.setAttributeNode(r); }, getAttributeNodeNS: function (e, t) { return this.attributes.getNamedItemNS(e, t); }, getElementsByTagName: function (e) { return new s(this, function (t) { var n = []; return y(t, function (r) { r === t || r.nodeType != Y || "*" !== e && r.tagName != e || n.push(r); }), n; }); }, getElementsByTagNameNS: function (e, t) { return new s(this, function (n) { var r = []; return y(n, function (i) { i === n || i.nodeType !== Y || "*" !== e && i.namespaceURI !== e || "*" !== t && i.localName != t || r.push(i); }), r; }); } }, v.prototype.getElementsByTagName = _.prototype.getElementsByTagName, v.prototype.getElementsByTagNameNS = _.prototype.getElementsByTagNameNS, i(_, h), b.prototype.nodeType = G, i(b, h), I.prototype = { data: "", substringData: function (e, t) { return this.data.substring(e, e + t); }, appendData: function (e) { e = this.data + e, this.nodeValue = this.data = e, this.length = e.length; }, insertData: function (e, t) { this.replaceData(e, 0, t); }, appendChild: function (e) { throw new Error(ae[oe]); }, deleteData: function (e, t) { this.replaceData(e, t, ""); }, replaceData: function (e, t, n) { var r = this.data.substring(0, e), i = this.data.substring(e + t); n = r + n + i, this.nodeValue = this.data = n, this.length = n.length; } }, i(I, h), R.prototype = { nodeName: "#text", nodeType: X, splitText: function (e) { var t = this.data, n = t.substring(e); t = t.substring(0, e), this.data = this.nodeValue = t, this.length = t.length; var r = this.ownerDocument.createTextNode(n); return this.parentNode && this.parentNode.insertBefore(r, this.nextSibling), r; } }, i(R, I), M.prototype = { nodeName: "#comment", nodeType: Z }, i(M, I), w.prototype = { nodeName: "#cdata-section", nodeType: z }, i(w, I), C.prototype.nodeType = te, i(C, h), L.prototype.nodeType = re, i(L, h), P.prototype.nodeType = J, i(P, h), O.prototype.nodeType = $, i(O, h), D.prototype.nodeName = "#document-fragment", D.prototype.nodeType = ne, i(D, h), U.prototype.nodeType = Q, i(U, h), x.prototype.serializeToString = function (e, t, n) { return k.call(e, t, n); }, h.prototype.toString = k; try {
            Object.defineProperty && (Object.defineProperty(s.prototype, "length", { get: function () { return u(this), this.$$length; } }), Object.defineProperty(h.prototype, "textContent", { get: function () { return W(this); }, set: function (e) { switch (this.nodeType) {
                    case Y:
                    case ne:
                        for (; this.firstChild;)
                            this.removeChild(this.firstChild);
                        (e || String(e)) && this.appendChild(this.ownerDocument.createTextNode(e));
                        break;
                    default: this.data = e, this.value = e, this.nodeValue = e;
                } } }), j = function (e, t, n) { e["$$" + t] = n; });
        }
        catch (le) { } t.DOMImplementation = m, t.XMLSerializer = x; }, function (e, t, n) {
            "use strict";
            function r(e, t) { e = e.split("?"); var n = e[0], r = (e[1] || "").split("#")[0], o = e[1] && e[1].split("#").length > 1 ? "#" + e[1].split("#")[1] : "", s = i(r); for (var u in t)
                s[u] = t[u]; return r = a(s), "" !== r && (r = "?" + r), n + r + o; }
            var i = n(169).parse, a = n(169).stringify;
            e.exports = r;
        }, function (e, t, n) {
            "use strict";
            function r(e) { return 10 === e || 13 === e; }
            function i(e) { return 9 === e || 32 === e; }
            function a(e) { return 9 === e || 32 === e || 10 === e || 13 === e; }
            function o(e) { return 44 === e || 91 === e || 93 === e || 123 === e || 125 === e; }
            function s(e) { var t; return e >= 48 && 57 >= e ? e - 48 : (t = 32 | e, t >= 97 && 102 >= t ? t - 97 + 10 : -1); }
            function u(e) { return 120 === e ? 2 : 117 === e ? 4 : 85 === e ? 8 : 0; }
            function l(e) { return e >= 48 && 57 >= e ? e - 48 : -1; }
            function p(e) { return 48 === e ? "\x00" : 97 === e ? "" : 98 === e ? "\b" : 116 === e ? "	" : 9 === e ? "	" : 110 === e ? "\n" : 118 === e ? "" : 102 === e ? "\f" : 114 === e ? "\r" : 101 === e ? "" : 32 === e ? " " : 34 === e ? '"' : 47 === e ? "/" : 92 === e ? "\\" : 78 === e ? "" : 95 === e ? " " : 76 === e ? "\u2028" : 80 === e ? "\u2029" : ""; }
            function c(e) { return 65535 >= e ? String.fromCharCode(e) : String.fromCharCode((e - 65536 >> 10) + 55296, (e - 65536 & 1023) + 56320); }
            function f(e, t, n) { return void 0 === n && (n = !1), new j(t, new W(e.filename, e.input, e.position, e.line, e.position - e.lineStart), n); }
            function m(e, t, n, r, i) { void 0 === r && (r = !1), void 0 === i && (i = !1); var a = A(e, t); if (a) {
                var o = n + t;
                if (!e.errorMap[o]) {
                    var s = new W(e.filename, e.input, t, a.line, t - a.start);
                    i && (s.toLineEnd = !0);
                    var u = new j(n, s, r);
                    e.errors.push(u);
                }
            } }
            function h(e, t) { var n = f(e, t), r = n.message + n.mark.position; e.errorMap[r] || (e.errors.push(n), e.errorMap[r] = 1); for (var i = e.position;;) {
                if (e.position >= e.input.length - 1)
                    return;
                var a = e.input.charAt(e.position);
                if ("\n" == a)
                    return e.position--, void (e.position == i && (e.position += 1));
                if ("\r" == a)
                    return e.position--, void (e.position == i && (e.position += 1));
                e.position++;
            } }
            function d(e, t) { var n = f(e, t); e.onWarning && e.onWarning.call(null, n); }
            function y(e, t, n, r) { var i, a, o, s, u = e.result; if (-1 == u.startPosition && (u.startPosition = t), n >= t) {
                if (s = e.input.slice(t, n), r)
                    for (i = 0, a = s.length; a > i; i += 1)
                        o = s.charCodeAt(i), 9 === o || o >= 32 && 1114111 >= o || h(e, "expected valid JSON character");
                u.value += s, u.endPosition = n;
            } }
            function v(e, t, n, r, i) { if (null != r) {
                null === t && (t = { startPosition: r.startPosition, endPosition: i.endPosition, parent: null, errors: [], mappings: [], kind: K.Kind.MAP });
                var a = K.newMapping(r, i);
                return a.parent = t, r.parent = a, null != i && (i.parent = a), !e.ignoreDuplicateKeys && t.mappings.forEach(function (t) { t.key && t.key.value === (a.key && a.key.value) && (m(e, a.key.startPosition, "duplicate key"), m(e, t.key.startPosition, "duplicate key")); }), t.mappings.push(a), t.endPosition = i ? i.endPosition : r.endPosition + 1, t;
            } }
            function g(e) { var t; t = e.input.charCodeAt(e.position), 10 === t ? e.position++ : 13 === t ? (e.position++, 10 === e.input.charCodeAt(e.position) && e.position++) : h(e, "a line break is expected"), e.line += 1, e.lineStart = e.position, e.lines.push({ start: e.lineStart, line: e.line }); }
            function A(e, t) { for (var n, r = 0; r < e.lines.length && !(e.lines[r].start > t); r++)
                n = e.lines[r]; return n ? n : { start: 0, line: 0 }; }
            function T(e, t, n) { for (var a = 0, o = e.input.charCodeAt(e.position); 0 !== o;) {
                for (; i(o);)
                    9 === o && e.errors.push(f(e, "Using tabs can lead to unpredictable results", !0)), o = e.input.charCodeAt(++e.position);
                if (t && 35 === o)
                    do
                        o = e.input.charCodeAt(++e.position);
                    while (10 !== o && 13 !== o && 0 !== o);
                if (!r(o))
                    break;
                for (g(e), o = e.input.charCodeAt(e.position), a++, e.lineIndent = 0; 32 === o;)
                    e.lineIndent++, o = e.input.charCodeAt(++e.position);
            } return -1 !== n && 0 !== a && e.lineIndent < n && d(e, "deficient indentation"), a; }
            function E(e) { var t, n = e.position; return t = e.input.charCodeAt(n), 45 !== t && 46 !== t || e.input.charCodeAt(n + 1) !== t || e.input.charCodeAt(n + 2) !== t || (n += 3, t = e.input.charCodeAt(n), 0 !== t && !a(t)) ? !1 : !0; }
            function S(e, t, n) { 1 === n ? t.value += " " : n > 1 && (t.value += V.repeat("\n", n - 1)); }
            function N(e, t, n) { var s, u, l, p, c, f, m, h, d, v = e.kind, g = e.result, A = K.newScalar(); if (A.plainScalar = !0, e.result = A, d = e.input.charCodeAt(e.position), a(d) || o(d) || 35 === d || 38 === d || 42 === d || 33 === d || 124 === d || 62 === d || 39 === d || 34 === d || 37 === d || 64 === d || 96 === d)
                return !1; if ((63 === d || 45 === d) && (u = e.input.charCodeAt(e.position + 1), a(u) || n && o(u)))
                return !1; for (e.kind = "scalar", l = p = e.position, c = !1; 0 !== d;) {
                if (58 === d) {
                    if (u = e.input.charCodeAt(e.position + 1), a(u) || n && o(u))
                        break;
                }
                else if (35 === d) {
                    if (s = e.input.charCodeAt(e.position - 1), a(s))
                        break;
                }
                else {
                    if (e.position === e.lineStart && E(e) || n && o(d))
                        break;
                    if (r(d)) {
                        if (f = e.line, m = e.lineStart, h = e.lineIndent, T(e, !1, -1), e.lineIndent >= t) {
                            c = !0, d = e.input.charCodeAt(e.position);
                            continue;
                        }
                        e.position = p, e.line = f, e.lineStart = m, e.lineIndent = h;
                        break;
                    }
                }
                if (c && (y(e, l, p, !1), S(e, A, e.line - f), l = p = e.position, c = !1), i(d) || (p = e.position + 1), d = e.input.charCodeAt(++e.position), e.position >= e.input.length)
                    return !1;
            } return y(e, l, p, !1), -1 != e.result.startPosition ? (A.rawValue = e.input.substring(A.startPosition, A.endPosition), !0) : (e.kind = v, e.result = g, !1); }
            function _(e, t) { var n, i, a; if (n = e.input.charCodeAt(e.position), 39 !== n)
                return !1; var o = K.newScalar(); for (o.singleQuoted = !0, e.kind = "scalar", e.result = o, o.startPosition = e.position, e.position++, i = a = e.position; 0 !== (n = e.input.charCodeAt(e.position));)
                if (39 === n) {
                    if (y(e, i, e.position, !0), n = e.input.charCodeAt(++e.position), o.endPosition = e.position, 39 !== n)
                        return !0;
                    i = a = e.position, e.position++;
                }
                else
                    r(n) ? (y(e, i, a, !0), S(e, o, T(e, !1, t)), i = a = e.position) : e.position === e.lineStart && E(e) ? h(e, "unexpected end of the document within a single quoted scalar") : (e.position++, a = e.position, o.endPosition = e.position); h(e, "unexpected end of the stream within a single quoted scalar"); }
            function b(e, t) { var n, i, a, o, l, p; if (p = e.input.charCodeAt(e.position), 34 !== p)
                return !1; e.kind = "scalar"; var f = K.newScalar(); for (f.doubleQuoted = !0, e.result = f, f.startPosition = e.position, e.position++, n = i = e.position; 0 !== (p = e.input.charCodeAt(e.position));) {
                if (34 === p)
                    return y(e, n, e.position, !0), e.position++, f.endPosition = e.position, f.rawValue = e.input.substring(f.startPosition, f.endPosition), !0;
                if (92 === p) {
                    if (y(e, n, e.position, !0), p = e.input.charCodeAt(++e.position), r(p))
                        T(e, !1, t);
                    else if (256 > p && (e.allowAnyEscape ? se[p] : ae[p]))
                        f.value += e.allowAnyEscape ? ue[p] : oe[p], e.position++;
                    else if ((l = u(p)) > 0) {
                        for (a = l, o = 0; a > 0; a--)
                            p = e.input.charCodeAt(++e.position), (l = s(p)) >= 0 ? o = (o << 4) + l : h(e, "expected hexadecimal character");
                        f.value += c(o), e.position++;
                    }
                    else
                        h(e, "unknown escape sequence");
                    n = i = e.position;
                }
                else
                    r(p) ? (y(e, n, i, !0), S(e, f, T(e, !1, t)), n = i = e.position) : e.position === e.lineStart && E(e) ? h(e, "unexpected end of the document within a double quoted scalar") : (e.position++, i = e.position);
            } h(e, "unexpected end of the stream within a double quoted scalar"); }
            function I(e, t) { var n, r, i, o, s, u, l, p, c, f, m, d = !0, y = e.tag, g = e.anchor; if (m = e.input.charCodeAt(e.position), 91 === m)
                o = 93, l = !1, r = K.newItems(), r.startPosition = e.position;
            else {
                if (123 !== m)
                    return !1;
                o = 125, l = !0, r = K.newMap(), r.startPosition = e.position;
            } for (null !== e.anchor && (r.anchorId = e.anchor, e.anchorMap[e.anchor] = r), m = e.input.charCodeAt(++e.position); 0 !== m;) {
                if (T(e, !0, t), m = e.input.charCodeAt(e.position), m === o)
                    return e.position++, e.tag = y, e.anchor = g, e.kind = l ? "mapping" : "sequence", e.result = r, r.endPosition = e.position, !0;
                if (!d) {
                    var A = e.position;
                    h(e, "missed comma between flow collection entries"), e.position = A + 1;
                }
                if (c = p = f = null, s = u = !1, 63 === m && (i = e.input.charCodeAt(e.position + 1), a(i) && (s = u = !0, e.position++, T(e, !0, t))), n = e.line, O(e, t, G, !1, !0), c = e.tag, p = e.result, T(e, !0, t), m = e.input.charCodeAt(e.position), !u && e.line !== n || 58 !== m || (s = !0, m = e.input.charCodeAt(++e.position), T(e, !0, t), O(e, t, G, !1, !0), f = e.result), l)
                    v(e, r, c, p, f);
                else if (s) {
                    var E = v(e, null, c, p, f);
                    E.parent = r, r.items.push(E);
                }
                else
                    p.parent = r, r.items.push(p);
                r.endPosition = e.position + 1, T(e, !0, t), m = e.input.charCodeAt(e.position), 44 === m ? (d = !0, m = e.input.charCodeAt(++e.position)) : d = !1;
            } h(e, "unexpected end of the stream within a flow collection"); }
            function R(e, t) { var n, a, o, s, u = J, p = !1, c = t, f = 0, m = !1; if (s = e.input.charCodeAt(e.position), 124 === s)
                a = !1;
            else {
                if (62 !== s)
                    return !1;
                a = !0;
            } var d = K.newScalar(); for (e.kind = "scalar", e.result = d, d.startPosition = e.position; 0 !== s;)
                if (s = e.input.charCodeAt(++e.position), 43 === s || 45 === s)
                    J === u ? u = 43 === s ? Z : Q : h(e, "repeat of a chomping mode identifier");
                else {
                    if (!((o = l(s)) >= 0))
                        break;
                    0 === o ? h(e, "bad explicit indentation width of a block scalar; it cannot be less than one") : p ? h(e, "repeat of an indentation width identifier") : (c = t + o - 1, p = !0);
                } if (i(s)) {
                do
                    s = e.input.charCodeAt(++e.position);
                while (i(s));
                if (35 === s)
                    do
                        s = e.input.charCodeAt(++e.position);
                    while (!r(s) && 0 !== s);
            } for (; 0 !== s;) {
                for (g(e), e.lineIndent = 0, s = e.input.charCodeAt(e.position); (!p || e.lineIndent < c) && 32 === s;)
                    e.lineIndent++, s = e.input.charCodeAt(++e.position);
                if (!p && e.lineIndent > c && (c = e.lineIndent), r(s))
                    f++;
                else {
                    if (e.lineIndent < c) {
                        u === Z ? d.value += V.repeat("\n", f) : u === J && p && (d.value += "\n");
                        break;
                    }
                    for (a ? i(s) ? (m = !0, d.value += V.repeat("\n", f + 1)) : m ? (m = !1, d.value += V.repeat("\n", f + 1)) : 0 === f ? p && (d.value += " ") : d.value += V.repeat("\n", f) : p && (d.value += V.repeat("\n", f + 1)), p = !0, f = 0, n = e.position; !r(s) && 0 !== s;)
                        s = e.input.charCodeAt(++e.position);
                    y(e, n, e.position, !1);
                }
            } d.endPosition = e.position; for (var v = e.position - 1, A = !1;;) {
                var T = e.input[v];
                if ("\r" == T || "\n" == T) {
                    A && v--;
                    break;
                }
                if (" " != T && "	" != T)
                    break;
                v--;
            } return d.endPosition = v, d.rawValue = e.input.substring(d.startPosition, d.endPosition), !0; }
            function M(e, t) { var n, r, i, o = e.tag, s = e.anchor, u = K.newItems(), l = !1; for (null !== e.anchor && (u.anchorId = e.anchor, e.anchorMap[e.anchor] = u), u.startPosition = e.position, i = e.input.charCodeAt(e.position); 0 !== i && 45 === i && (r = e.input.charCodeAt(e.position + 1), a(r));)
                if (l = !0, e.position++, T(e, !0, -1) && e.lineIndent <= t)
                    u.items.push(null), i = e.input.charCodeAt(e.position);
                else if (n = e.line, O(e, t, z, !1, !0), e.result.parent = u, u.items.push(e.result), T(e, !0, -1), i = e.input.charCodeAt(e.position), (e.line === n || e.lineIndent > t) && 0 !== i)
                    h(e, "bad indentation of a sequence entry");
                else if (e.lineIndent < t)
                    break; return u.endPosition = e.position, l ? (e.tag = o, e.anchor = s, e.kind = "sequence", e.result = u, u.endPosition = e.position, !0) : !1; }
            function w(e, t, n) { var o, s, u, l, p = e.tag, c = e.anchor, f = K.newMap(), m = null, d = null, y = null, g = !1, A = !1; for (f.startPosition = e.position, null !== e.anchor && (f.anchorId = e.anchor, e.anchorMap[e.anchor] = f), l = e.input.charCodeAt(e.position); 0 !== l;) {
                if (o = e.input.charCodeAt(e.position + 1), u = e.line, 63 !== l && 58 !== l || !a(o)) {
                    if (!O(e, n, X, !1, !0))
                        break;
                    if (e.line === u) {
                        for (l = e.input.charCodeAt(e.position); i(l);)
                            l = e.input.charCodeAt(++e.position);
                        if (58 === l)
                            l = e.input.charCodeAt(++e.position), a(l) || h(e, "a whitespace character is expected after the key-value separator within a block mapping"), g && (v(e, f, m, d, null), m = d = y = null), A = !0, g = !1, s = !1, m = e.tag, d = e.result;
                        else {
                            if (e.position == e.lineStart && E(e))
                                break;
                            if (!A)
                                return e.tag = p, e.anchor = c, !0;
                            h(e, "can not read an implicit mapping pair; a colon is missed");
                        }
                    }
                    else {
                        if (!A)
                            return e.tag = p, e.anchor = c, !0;
                        for (h(e, "can not read a block mapping entry; a multiline key may not be an implicit key"); e.position > 0;)
                            if (l = e.input.charCodeAt(--e.position), r(l)) {
                                e.position++;
                                break;
                            }
                    }
                }
                else
                    63 === l ? (g && (v(e, f, m, d, null), m = d = y = null), A = !0, g = !0, s = !0) : g ? (g = !1, s = !0) : h(e, "incomplete explicit mapping pair; a key node is missed"), e.position += 1, l = o;
                if ((e.line === u || e.lineIndent > t) && (O(e, t, $, !0, s) && (g ? d = e.result : y = e.result), g || (v(e, f, m, d, y), m = d = y = null), T(e, !0, -1), l = e.input.charCodeAt(e.position)), e.lineIndent > t && 0 !== l)
                    h(e, "bad indentation of a mapping entry");
                else if (e.lineIndent < t)
                    break;
            } return g && v(e, f, m, d, null), A && (e.tag = p, e.anchor = c, e.kind = "mapping", e.result = f), A; }
            function C(e) { var t, n, r, i, o = !1, s = !1; if (i = e.input.charCodeAt(e.position), 33 !== i)
                return !1; if (null !== e.tag && h(e, "duplication of a tag property"), i = e.input.charCodeAt(++e.position), 60 === i ? (o = !0, i = e.input.charCodeAt(++e.position)) : 33 === i ? (s = !0, n = "!!", i = e.input.charCodeAt(++e.position)) : n = "!", t = e.position, o) {
                do
                    i = e.input.charCodeAt(++e.position);
                while (0 !== i && 62 !== i);
                e.position < e.length ? (r = e.input.slice(t, e.position), i = e.input.charCodeAt(++e.position)) : h(e, "unexpected end of the stream within a verbatim tag");
            }
            else {
                for (; 0 !== i && !a(i);)
                    33 === i && (s ? h(e, "tag suffix cannot contain exclamation marks") : (n = e.input.slice(t - 1, e.position + 1), re.test(n) || h(e, "named tag handle cannot contain such characters"), s = !0, t = e.position + 1)), i = e.input.charCodeAt(++e.position);
                r = e.input.slice(t, e.position), ne.test(r) && h(e, "tag suffix cannot contain flow indicator characters");
            } return r && !ie.test(r) && h(e, "tag name cannot contain such characters: " + r), o ? e.tag = r : Y.call(e.tagMap, n) ? e.tag = e.tagMap[n] + r : "!" === n ? e.tag = "!" + r : "!!" === n ? e.tag = "tag:yaml.org,2002:" + r : h(e, 'undeclared tag handle "' + n + '"'), !0; }
            function L(e) { var t, n; if (n = e.input.charCodeAt(e.position), 38 !== n)
                return !1; for (null !== e.anchor && h(e, "duplication of an anchor property"), n = e.input.charCodeAt(++e.position), t = e.position; 0 !== n && !a(n) && !o(n);)
                n = e.input.charCodeAt(++e.position); return e.position === t && h(e, "name of an anchor node must contain at least one character"), e.anchor = e.input.slice(t, e.position), !0; }
            function P(e) { var t, n, r; e.length, e.input; if (r = e.input.charCodeAt(e.position), 42 !== r)
                return !1; for (r = e.input.charCodeAt(++e.position), t = e.position; 0 !== r && !a(r) && !o(r);)
                r = e.input.charCodeAt(++e.position); return e.position <= t && (h(e, "name of an alias node must contain at least one character"), e.position = t + 1), n = e.input.slice(t, e.position), e.anchorMap.hasOwnProperty(n) || (h(e, 'unidentified alias "' + n + '"'), e.position <= t && (e.position = t + 1)), e.result = K.newAnchorRef(n, t, e.position, e.anchorMap[n]), T(e, !0, -1), !0; }
            function O(e, t, n, r, i) {
                var a, o, s, u, l, p, c, f, d = 1, y = !1, v = !1;
                e.tag = null, e.anchor = null, e.kind = null, e.result = null, a = o = s = $ === n || z === n, r && T(e, !0, -1) && (y = !0, e.lineIndent > t ? d = 1 : e.lineIndent === t ? d = 0 : e.lineIndent < t && (d = -1));
                var g = e.position;
                e.position - e.lineStart;
                if (1 === d)
                    for (; C(e) || L(e);)
                        T(e, !0, -1) ? (y = !0, s = a, e.lineIndent > t ? d = 1 : e.lineIndent === t ? d = 0 : e.lineIndent < t && (d = -1)) : s = !1;
                if (s && (s = y || i), (1 === d || $ === n) && (c = G === n || X === n ? t : t + 1, f = e.position - e.lineStart, 1 === d ? s && (M(e, f) || w(e, f, c)) || I(e, c) ? v = !0 : (o && R(e, c) || _(e, c) || b(e, c) ? v = !0 : P(e) ? (v = !0, (null !== e.tag || null !== e.anchor) && h(e, "alias node should not have any properties")) : N(e, c, G === n) && (v = !0, null === e.tag && (e.tag = "?")), null !== e.anchor && (e.anchorMap[e.anchor] = e.result, e.result.anchorId = e.anchor)) : 0 === d && (v = s && M(e, f))), null !== e.tag && "!" !== e.tag)
                    if ("!include" == e.tag)
                        e.result || (e.result = K.newScalar(), e.result.startPosition = e.position, e.result.endPosition = e.position,
                            h(e, "!include without value")), e.result.kind = K.Kind.INCLUDE_REF;
                    else if ("?" === e.tag)
                        for (u = 0, l = e.implicitTypes.length; l > u; u += 1) {
                            p = e.implicitTypes[u];
                            var A = e.result.value;
                            if (p.resolve(A)) {
                                e.result.valueObject = p.construct(e.result.value), e.tag = p.tag, null !== e.anchor && (e.result.anchorId = e.anchor, e.anchorMap[e.anchor] = e.result);
                                break;
                            }
                        }
                    else
                        Y.call(e.typeMap, e.tag) ? (p = e.typeMap[e.tag], null !== e.result && p.kind !== e.kind && h(e, "unacceptable node kind for !<" + e.tag + '> tag; it should be "' + p.kind + '", not "' + e.kind + '"'), p.resolve(e.result) ? (e.result = p.construct(e.result), null !== e.anchor && (e.result.anchorId = e.anchor, e.anchorMap[e.anchor] = e.result)) : h(e, "cannot resolve a node with !<" + e.tag + "> explicit tag")) : m(e, g, "unknown tag <" + e.tag + ">", !1, !0);
                return null !== e.tag || null !== e.anchor || v;
            }
            function D(e) { var t, n, o, s, u = e.position, l = !1; for (e.version = null, e.checkLineBreaks = e.legacy, e.tagMap = {}, e.anchorMap = {}; 0 !== (s = e.input.charCodeAt(e.position)) && (T(e, !0, -1), s = e.input.charCodeAt(e.position), !(e.lineIndent > 0 || 37 !== s));) {
                for (l = !0, s = e.input.charCodeAt(++e.position), t = e.position; 0 !== s && !a(s);)
                    s = e.input.charCodeAt(++e.position);
                for (n = e.input.slice(t, e.position), o = [], n.length < 1 && h(e, "directive name must not be less than one character in length"); 0 !== s;) {
                    for (; i(s);)
                        s = e.input.charCodeAt(++e.position);
                    if (35 === s) {
                        do
                            s = e.input.charCodeAt(++e.position);
                        while (0 !== s && !r(s));
                        break;
                    }
                    if (r(s))
                        break;
                    for (t = e.position; 0 !== s && !a(s);)
                        s = e.input.charCodeAt(++e.position);
                    o.push(e.input.slice(t, e.position));
                }
                0 !== s && g(e), Y.call(ce, n) ? ce[n](e, n, o) : (d(e, 'unknown document directive "' + n + '"'), e.position++);
            } return T(e, !0, -1), 0 === e.lineIndent && 45 === e.input.charCodeAt(e.position) && 45 === e.input.charCodeAt(e.position + 1) && 45 === e.input.charCodeAt(e.position + 2) ? (e.position += 3, T(e, !0, -1)) : l && h(e, "directives end mark is expected"), O(e, e.lineIndent - 1, $, !1, !0), T(e, !0, -1), e.checkLineBreaks && te.test(e.input.slice(u, e.position)) && d(e, "non-ASCII line breaks are interpreted as content"), e.documents.push(e.result), e.position === e.lineStart && E(e) ? void (46 === e.input.charCodeAt(e.position) && (e.position += 3, T(e, !0, -1))) : void (e.position < e.length - 1 && h(e, "end of the stream or a document separator is expected")); }
            function U(e, t) { e = String(e), t = t || {}, 0 !== e.length && (10 !== e.charCodeAt(e.length - 1) && 13 !== e.charCodeAt(e.length - 1) && (e += "\n"), 65279 === e.charCodeAt(0) && (e = e.slice(1))); var n = new pe(e, t); for (ee.test(n.input) && h(n, "the stream contains non-printable characters"), n.input += "\x00"; 32 === n.input.charCodeAt(n.position);)
                n.lineIndent += 1, n.position += 1; for (; n.position < n.length - 1;) {
                var r = n.position;
                if (D(n), n.position <= r)
                    for (; n.position < n.length - 1; n.position++) {
                        var i = n.input.charAt(n.position);
                        if ("\n" == i)
                            break;
                    }
            } return n.documents.forEach(function (e) { return e.errors = n.errors; }), n.documents; }
            function x(e, t, n) { void 0 === n && (n = {}); var r, i, a = U(e, n); for (r = 0, i = a.length; i > r; r += 1)
                t(a[r]); }
            function k(e, t) { void 0 === t && (t = {}); var n = U(e, t); if (0 === n.length)
                return void 0; if (1 === n.length) {
                var r = n[0];
                return r.endPosition = e.length, r.startPosition > r.endPosition && (r.startPosition = r.endPosition), r;
            } var i = new j("expected a single document in the stream, but found more"); return i.mark = new W("", "", 0, 0, 0), i.mark.position = n[0].endPosition, n[0].errors.push(i), n[0]; }
            function F(e, t, n) { void 0 === n && (n = {}), x(e, t, V.extend({ schema: q }, n)); }
            function B(e, t) { return void 0 === t && (t = {}), k(e, V.extend({ schema: q }, t)); }
            Object.defineProperty(t, "__esModule", { value: !0 });
            for (var K = n(96), V = n(135), j = n(95), W = n(136), q = n(140), H = n(141), Y = Object.prototype.hasOwnProperty, G = 1, X = 2, z = 3, $ = 4, J = 1, Q = 2, Z = 3, ee = /[\x00-\x08\x0B\x0C\x0E-\x1F\x7F-\x84\x86-\x9F\uD800-\uDFFF\uFFFE\uFFFF]/, te = /[\x85\u2028\u2029]/, ne = /[,\[\]\{\}]/, re = /^(?:!|!!|![a-z\-]+!)$/i, ie = /^(?:!|[^,\[\]\{\}])(?:%[0-9a-f]{2}|[0-9a-z\-#;\/\?:@&=\+\$,_\.!~\*'\(\)\[\]])*$/i, ae = new Array(256), oe = new Array(256), se = new Array(256), ue = new Array(256), le = 0; 256 > le; le++)
                ue[le] = oe[le] = p(le), ae[le] = oe[le] ? 1 : 0, se[le] = 1, ae[le] || (ue[le] = "\\" + String.fromCharCode(le));
            var pe = function () { function e(e, t) { this.errorMap = {}, this.errors = [], this.lines = [], this.input = e, this.filename = t.filename || null, this.schema = t.schema || H, this.onWarning = t.onWarning || null, this.legacy = t.legacy || !1, this.allowAnyEscape = t.allowAnyEscape || !1, this.ignoreDuplicateKeys = t.ignoreDuplicateKeys || !1, this.implicitTypes = this.schema.compiledImplicit, this.typeMap = this.schema.compiledTypeMap, this.length = e.length, this.position = 0, this.line = 0, this.lineStart = 0, this.lineIndent = 0, this.documents = []; } return e; }(), ce = { YAML: function (e, t, n) { var r, i, a; null !== e.version && h(e, "duplication of %YAML directive"), 1 !== n.length && h(e, "YAML directive accepts exactly one argument"), r = /^([0-9]+)\.([0-9]+)$/.exec(n[0]), null === r && h(e, "ill-formed argument of the YAML directive"), i = parseInt(r[1], 10), a = parseInt(r[2], 10), 1 !== i && h(e, "found incompatible YAML document (version 1.2 is required)"), e.version = n[0], e.checkLineBreaks = 2 > a, 2 !== a && h(e, "found incompatible YAML document (version 1.2 is required)"); }, TAG: function (e, t, n) { var r, i; 2 !== n.length && h(e, "TAG directive accepts exactly two arguments"), r = n[0], i = n[1], re.test(r) || h(e, "ill-formed tag handle (first argument) of the TAG directive"), Y.call(e.tagMap, r) && h(e, 'there is a previously declared suffix for "' + r + '" tag handle'), ie.test(i) || h(e, "ill-formed tag prefix (second argument) of the TAG directive"), e.tagMap[r] = i; } };
            (function () { function e() { } return e; })();
            t.loadAll = x, t.load = k, t.safeLoadAll = F, t.safeLoad = B, e.exports.loadAll = x, e.exports.load = k, e.exports.safeLoadAll = F, e.exports.safeLoad = B;
        }, function (e, t, n) {
            "use strict";
            function r(e, t) { var n, r, i, a, o, s, u; if (null === t)
                return {}; for (n = {}, r = Object.keys(t), i = 0, a = r.length; a > i; i += 1)
                o = r[i], s = String(t[o]), "!!" === o.slice(0, 2) && (o = "tag:yaml.org,2002:" + o.slice(2)), u = e.compiledTypeMap[o], u && C.call(u.styleAliases, s) && (s = u.styleAliases[s]), n[o] = s; return n; }
            function i(e) { var t, n, r; if (t = e.toString(16).toUpperCase(), 255 >= e)
                n = "x", r = 2;
            else if (65535 >= e)
                n = "u", r = 4;
            else {
                if (!(4294967295 >= e))
                    throw new I("code point within a string may not be greater than 0xFFFFFFFF");
                n = "U", r = 8;
            } return "\\" + n + b.repeat("0", r - t.length) + t; }
            function a(e) { this.schema = e.schema || R, this.indent = Math.max(1, e.indent || 2), this.skipInvalid = e.skipInvalid || !1, this.flowLevel = b.isNothing(e.flowLevel) ? -1 : e.flowLevel, this.styleMap = r(this.schema, e.styles || null), this.implicitTypes = this.schema.compiledImplicit, this.explicitTypes = this.schema.compiledExplicit, this.tag = null, this.result = "", this.duplicates = [], this.usedDuplicates = null; }
            function o(e, t) { for (var n, r = b.repeat(" ", t), i = 0, a = -1, o = "", s = e.length; s > i;)
                a = e.indexOf("\n", i), -1 === a ? (n = e.slice(i), i = s) : (n = e.slice(i, a + 1), i = a + 1), n.length && "\n" !== n && (o += r), o += n; return o; }
            function s(e, t) { return "\n" + b.repeat(" ", e.indent * t); }
            function u(e, t) { var n, r, i; for (n = 0, r = e.implicitTypes.length; r > n; n += 1)
                if (i = e.implicitTypes[n], i.resolve(t))
                    return !0; return !1; }
            function l(e) { this.source = e, this.result = "", this.checkpoint = 0; }
            function p(e, t, n) { var r, i, a, s, p, f, d, y, v, g, A, T, E, S, N, _, b, I, R, M, w; if (0 === t.length)
                return void (e.dump = "''"); if (0 == t.indexOf("!include"))
                return void (e.dump = "" + t); if (0 == t.indexOf("!$$$novalue"))
                return void (e.dump = ""); if (-1 !== te.indexOf(t))
                return void (e.dump = "'" + t + "'"); for (r = !0, i = t.length ? t.charCodeAt(0) : 0, a = D === i || D === t.charCodeAt(t.length - 1), (W === i || Y === i || G === i || $ === i) && (r = !1), a ? (r = !1, s = !1, p = !1) : (s = !0, p = !0), f = !0, d = new l(t), y = !1, v = 0, g = 0, A = e.indent * n, T = 80, 40 > A ? T -= A : T = 40, S = 0; S < t.length; S++) {
                if (E = t.charCodeAt(S), r) {
                    if (m(E))
                        continue;
                    r = !1;
                }
                f && E === K && (f = !1), N = ee[E], _ = h(E), (N || _) && (E !== P && E !== x && E !== K ? (s = !1, p = !1) : E === P && (y = !0, f = !1, S > 0 && (b = t.charCodeAt(S - 1), b === D && (p = !1, s = !1)), s && (I = S - v, v = S, I > g && (g = I))), E !== x && (f = !1), d.takeUpTo(S), d.escapeChar());
            } if (r && u(e, t) && (r = !1), R = "", (s || p) && (M = 0, t.charCodeAt(t.length - 1) === P && (M += 1, t.charCodeAt(t.length - 2) === P && (M += 1)), 0 === M ? R = "-" : 2 === M && (R = "+")), p && T > g && (s = !1), y || (p = !1), r)
                e.dump = t;
            else if (f)
                e.dump = "'" + t + "'";
            else if (s)
                w = c(t, T), e.dump = ">" + R + "\n" + o(w, A);
            else if (p)
                R || (t = t.replace(/\n$/, "")), e.dump = "|" + R + "\n" + o(t, A);
            else {
                if (!d)
                    throw new Error("Failed to dump scalar value");
                d.finish(), e.dump = '"' + d.result + '"';
            } }
            function c(e, t) { var n, r = "", i = 0, a = e.length, o = /\n+$/.exec(e); for (o && (a = o.index + 1); a > i;)
                n = e.indexOf("\n", i), n > a || -1 === n ? (r && (r += "\n\n"), r += f(e.slice(i, a), t), i = a) : (r && (r += "\n\n"), r += f(e.slice(i, n), t), i = n + 1); return o && "\n" !== o[0] && (r += o[0]), r; }
            function f(e, t) { if ("" === e)
                return e; for (var n, r, i, a = /[^\s] [^\s]/g, o = "", s = 0, u = 0, l = a.exec(e); l;)
                n = l.index, n - u > t && (r = s !== u ? s : n, o && (o += "\n"), i = e.slice(u, r), o += i, u = r + 1), s = n + 1, l = a.exec(e); return o && (o += "\n"), o += u !== s && e.length - u > t ? e.slice(u, s) + "\n" + e.slice(s + 1) : e.slice(u); }
            function m(e) { return L !== e && P !== e && O !== e && j !== e && X !== e && z !== e && J !== e && Z !== e && k !== e && B !== e && V !== e && U !== e && Q !== e && H !== e && K !== e && x !== e && F !== e && q !== e && !ee[e] && !h(e); }
            function h(e) { return !(e >= 32 && 126 >= e || 133 === e || e >= 160 && 55295 >= e || e >= 57344 && 65533 >= e || e >= 65536 && 1114111 >= e); }
            function d(e, t, n) { var r, i, a = "", o = e.tag; for (r = 0, i = n.length; i > r; r += 1)
                T(e, t, n[r], !1, !1) && (0 !== r && (a += ", "), a += e.dump); e.tag = o, e.dump = "[" + a + "]"; }
            function y(e, t, n, r) { var i, a, o = "", u = e.tag; for (i = 0, a = n.length; a > i; i += 1)
                T(e, t + 1, n[i], !0, !0) && (r && 0 === i || (o += s(e, t)), o += "- " + e.dump); e.tag = u, e.dump = o || "[]"; }
            function v(e, t, n) { var r, i, a, o, s, u = "", l = e.tag, p = Object.keys(n); for (r = 0, i = p.length; i > r; r += 1)
                s = "", 0 !== r && (s += ", "), a = p[r], o = n[a], T(e, t, a, !1, !1) && (e.dump.length > 1024 && (s += "? "), s += e.dump + ": ", T(e, t, o, !1, !1) && (s += e.dump, u += s)); e.tag = l, e.dump = "{" + u + "}"; }
            function g(e, t, n, r) { var i, a, o, u, l, p, c = "", f = e.tag, m = Object.keys(n); for (i = 0, a = m.length; a > i; i += 1)
                p = "", r && 0 === i || (p += s(e, t)), o = m[i], u = n[o], T(e, t + 1, o, !0, !0) && (l = null !== e.tag && "?" !== e.tag || e.dump && e.dump.length > 1024, l && (p += e.dump && P === e.dump.charCodeAt(0) ? "?" : "? "), p += e.dump, l && (p += s(e, t)), T(e, t + 1, u, !0, l) && (p += e.dump && P === e.dump.charCodeAt(0) ? ":" : ": ", p += e.dump, c += p)); e.tag = f, e.dump = c || "{}"; }
            function A(e, t, n) { var r, i, a, o, s, u; for (i = n ? e.explicitTypes : e.implicitTypes, a = 0, o = i.length; o > a; a += 1)
                if (s = i[a], (s.instanceOf || s.predicate) && (!s.instanceOf || "object" == typeof t && t instanceof s.instanceOf) && (!s.predicate || s.predicate(t))) {
                    if (e.tag = n ? s.tag : "?", s.represent) {
                        if (u = e.styleMap[s.tag] || s.defaultStyle, "[object Function]" === w.call(s.represent))
                            r = s.represent(t, u);
                        else {
                            if (!C.call(s.represent, u))
                                throw new I("!<" + s.tag + '> tag resolver accepts not "' + u + '" style');
                            r = s.represent[u](t, u);
                        }
                        e.dump = r;
                    }
                    return !0;
                } return !1; }
            function T(e, t, n, r, i) { e.tag = null, e.dump = n, A(e, n, !1) || A(e, n, !0); var a = w.call(e.dump); r && (r = 0 > e.flowLevel || e.flowLevel > t), (null !== e.tag && "?" !== e.tag || 2 !== e.indent && t > 0) && (i = !1); var o, s, u = "[object Object]" === a || "[object Array]" === a; if (u && (o = e.duplicates.indexOf(n), s = -1 !== o), s && e.usedDuplicates[o])
                e.dump = "*ref_" + o;
            else {
                if (u && s && !e.usedDuplicates[o] && (e.usedDuplicates[o] = !0), "[object Object]" === a)
                    r && 0 !== Object.keys(e.dump).length ? (g(e, t, e.dump, i), s && (e.dump = "&ref_" + o + (0 === t ? "\n" : "") + e.dump)) : (v(e, t, e.dump), s && (e.dump = "&ref_" + o + " " + e.dump));
                else if ("[object Array]" === a)
                    r && 0 !== e.dump.length ? (y(e, t, e.dump, i), s && (e.dump = "&ref_" + o + (0 === t ? "\n" : "") + e.dump)) : (d(e, t, e.dump), s && (e.dump = "&ref_" + o + " " + e.dump));
                else {
                    if ("[object String]" !== a) {
                        if (e.skipInvalid)
                            return !1;
                        throw new I("unacceptable kind of an object to dump " + a);
                    }
                    "?" !== e.tag && p(e, e.dump, t);
                }
                null !== e.tag && "?" !== e.tag && (e.dump = "!<" + e.tag + "> " + e.dump);
            } return !0; }
            function E(e, t) { var n, r, i = [], a = []; for (S(e, i, a), n = 0, r = a.length; r > n; n += 1)
                t.duplicates.push(i[a[n]]); t.usedDuplicates = new Array(r); }
            function S(e, t, n) { var r, i, a; w.call(e); if (null !== e && "object" == typeof e)
                if (i = t.indexOf(e), -1 !== i)
                    -1 === n.indexOf(i) && n.push(i);
                else if (t.push(e), Array.isArray(e))
                    for (i = 0, a = e.length; a > i; i += 1)
                        S(e[i], t, n);
                else
                    for (r = Object.keys(e), i = 0, a = r.length; a > i; i += 1)
                        S(e[r[i]], t, n); }
            function N(e, t) { t = t || {}; var n = new a(t); return E(e, n), T(n, 0, e, !0, !0) ? n.dump + "\n" : ""; }
            function _(e, t) { return N(e, b.extend({ schema: M }, t)); }
            Object.defineProperty(t, "__esModule", { value: !0 });
            var b = n(135), I = n(95), R = n(141), M = n(140), w = Object.prototype.toString, C = Object.prototype.hasOwnProperty, L = 9, P = 10, O = 13, D = 32, U = 33, x = 34, k = 35, F = 37, B = 38, K = 39, V = 42, j = 44, W = 45, q = 58, H = 62, Y = 63, G = 64, X = 91, z = 93, $ = 96, J = 123, Q = 124, Z = 125, ee = {};
            ee[0] = "\\0", ee[7] = "\\a", ee[8] = "\\b", ee[9] = "\\t", ee[10] = "\\n", ee[11] = "\\v", ee[12] = "\\f", ee[13] = "\\r", ee[27] = "\\e", ee[34] = '\\"', ee[92] = "\\\\", ee[133] = "\\N", ee[160] = "\\_", ee[8232] = "\\L", ee[8233] = "\\P";
            var te = ["y", "Y", "yes", "Yes", "YES", "on", "On", "ON", "n", "N", "no", "No", "NO", "off", "Off", "OFF"];
            l.prototype.takeUpTo = function (e) { var t; if (e < this.checkpoint)
                throw t = new Error("position should be > checkpoint"), t.position = e, t.checkpoint = this.checkpoint, t; return this.result += this.source.slice(this.checkpoint, e), this.checkpoint = e, this; }, l.prototype.escapeChar = function () { var e, t; return e = this.source.charCodeAt(this.checkpoint), t = ee[e] || i(e), this.result += t, this.checkpoint += 1, this; }, l.prototype.finish = function () { this.source.length > this.checkpoint && this.takeUpTo(this.source.length); }, t.dump = N, t.safeDump = _;
        }, function (e, t, n) {
            "use strict";
            var r = function () { function e(e, t, n) { void 0 === t && (t = null), void 0 === n && (n = !1), this.name = "YAMLException", this.reason = e, this.mark = t, this.message = this.toString(!1), this.isWarning = n; } return e.isInstance = function (t) { if (null != t && t.getClassIdentifier && "function" == typeof t.getClassIdentifier)
                for (var n = 0, r = t.getClassIdentifier(); n < r.length; n++) {
                    var i = r[n];
                    if (i == e.CLASS_IDENTIFIER)
                        return !0;
                } return !1; }, e.prototype.getClassIdentifier = function () { var t = []; return t.concat(e.CLASS_IDENTIFIER); }, e.prototype.toString = function (e) { void 0 === e && (e = !1); var t; return t = "JS-YAML: " + (this.reason || "(unknown reason)"), !e && this.mark && (t += " " + this.mark.toString()), t; }, e.CLASS_IDENTIFIER = "yaml-ast-parser.YAMLException", e; }();
            e.exports = r;
        }, function (e, t, n) {
            "use strict";
            function r(e, t) { var n = t ? t.endPosition : e.endPosition + 1, r = { key: e, value: t, startPosition: e.startPosition, endPosition: n, kind: l.MAPPING, parent: null, errors: [] }; return r; }
            function i(e, t, n, r) { return { errors: [], referencesAnchor: e, value: r, startPosition: t, endPosition: n, kind: l.ANCHOR_REF, parent: null }; }
            function a(e) { return void 0 === e && (e = ""), { errors: [], startPosition: -1, endPosition: -1, value: e, kind: l.SCALAR, parent: null, doubleQuoted: !1, rawValue: e }; }
            function o() { return { errors: [], startPosition: -1, endPosition: -1, items: [], kind: l.SEQ, parent: null }; }
            function s() { return o(); }
            function u(e) { return { errors: [], startPosition: -1, endPosition: -1, mappings: e ? e : [], kind: l.MAP, parent: null }; }
            Object.defineProperty(t, "__esModule", { value: !0 });
            var l;
            !function (e) { e[e.SCALAR = 0] = "SCALAR", e[e.MAPPING = 1] = "MAPPING", e[e.MAP = 2] = "MAP", e[e.SEQ = 3] = "SEQ", e[e.ANCHOR_REF = 4] = "ANCHOR_REF", e[e.INCLUDE_REF = 5] = "INCLUDE_REF"; }(l = t.Kind || (t.Kind = {})), t.newMapping = r, t.newAnchorRef = i, t.newScalar = a, t.newItems = o, t.newSeq = s, t.newMap = u;
        }, function (e, t, n) {
            "use strict";
            function r(e) { if (["true", "True", "TRUE"].lastIndexOf(e) >= 0)
                return !0; if (["false", "False", "FALSE"].lastIndexOf(e) >= 0)
                return !1; throw 'Invalid boolean "' + e + '"'; }
            function i(e) { return 0 === e.lastIndexOf("0o", 0) ? parseInt(e.substring(2), 8) : parseInt(e); }
            function a(e) { var t = i(e); if (isNaN(t))
                throw 'Invalid integer "' + e + '"'; return t; }
            function o(e) { if ([".nan", ".NaN", ".NAN"].lastIndexOf(e) >= 0)
                return NaN; var t = /^([-+])?(?:\.inf|\.Inf|\.INF)$/, n = t.exec(e); if (n)
                return "-" === n[1] ? -(1 / 0) : 1 / 0; var r = parseFloat(e); if (!isNaN(r))
                return r; throw 'Invalid float "' + e + '"'; }
            function s(e) { if (void 0 === e)
                return u["null"]; if (e.doubleQuoted || !e.plainScalar || e.singleQuoted)
                return u.string; var t = e.value; if (["null", "Null", "NULL", "~", ""].indexOf(t) >= 0)
                return u["null"]; if (null === t || void 0 === t)
                return u["null"]; if (["true", "True", "TRUE", "false", "False", "FALSE"].indexOf(t) >= 0)
                return u.bool; var n = /^[-+]?[0-9]+$/, r = /^0o[0-7]+$/, i = /^0x[0-9a-fA-F]+$/; if (n.test(t) || r.test(t) || i.test(t))
                return u["int"]; var a = /^[-+]?(\.[0-9]+|[0-9]+(\.[0-9]*)?)([eE][-+]?[0-9]+)?$/, o = /^[-+]?(\.inf|\.Inf|\.INF)$/; return a.test(t) || o.test(t) || [".nan", ".NaN", ".NAN"].indexOf(t) >= 0 ? u["float"] : u.string; }
            Object.defineProperty(t, "__esModule", { value: !0 }), t.parseYamlBoolean = r, t.parseYamlInteger = a, t.parseYamlFloat = o;
            var u;
            !function (e) { e[e["null"] = 0] = "null", e[e.bool = 1] = "bool", e[e["int"] = 2] = "int", e[e["float"] = 3] = "float", e[e.string = 4] = "string"; }(u = t.ScalarType || (t.ScalarType = {})), t.determineScalarType = s;
        }, function (e, t, n) {
            "use strict";
            function r(e, t) { return { name: e, methods: [], typeParameters: [], typeParameterConstraint: [], "implements": [], fields: [], isInterface: t, annotations: [], "extends": [], moduleName: null, annotationOverridings: {} }; }
            function i(e, t, n) { return a.parseStruct(e, t, n); }
            t.helpers = n(137);
            var a = n(138), o = function () { function e() { } return e; }();
            t.EnumDeclaration = o, function (e) { e[e.BASIC = 0] = "BASIC", e[e.ARRAY = 1] = "ARRAY", e[e.UNION = 2] = "UNION"; }(t.TypeKind || (t.TypeKind = {}));
            t.TypeKind;
            t.classDecl = r, t.parseStruct = i;
        }, function (e, t, n) {
            "use strict";
            function r(e, t) { return Object.prototype.hasOwnProperty.call(e, t); }
            e.exports = function (e, t, n, i) { t = t || "&", n = n || "="; var a = {}; if ("string" != typeof e || 0 === e.length)
                return a; var o = /\+/g; e = e.split(t); var s = 1e3; i && "number" == typeof i.maxKeys && (s = i.maxKeys); var u = e.length; s > 0 && u > s && (u = s); for (var l = 0; u > l; ++l) {
                var p, c, f, m, h = e[l].replace(o, "%20"), d = h.indexOf(n);
                d >= 0 ? (p = h.substr(0, d), c = h.substr(d + 1)) : (p = h, c = ""), f = decodeURIComponent(p), m = decodeURIComponent(c), r(a, f) ? Array.isArray(a[f]) ? a[f].push(m) : a[f] = [a[f], m] : a[f] = m;
            } return a; };
        }, function (e, t, n) {
            "use strict";
            var r = function (e) { switch (typeof e) {
                case "string": return e;
                case "boolean": return e ? "true" : "false";
                case "number": return isFinite(e) ? e : "";
                default: return "";
            } };
            e.exports = function (e, t, n, i) { return t = t || "&", n = n || "=", null === e && (e = void 0), "object" == typeof e ? Object.keys(e).map(function (i) { var a = encodeURIComponent(r(i)) + n; return Array.isArray(e[i]) ? e[i].map(function (e) { return a + encodeURIComponent(r(e)); }).join(t) : a + encodeURIComponent(r(e[i])); }).join(t) : i ? encodeURIComponent(r(i)) + n + encodeURIComponent(r(e)) : ""; };
        }, function (e, t, n) {
            "use strict";
            function r() { return new _(_.OK, "", "", null); }
            function i(e, t, n, r, i) { void 0 === n && (n = {}), void 0 === r && (r = _.ERROR), void 0 === i && (i = !1); var a = b(e, n); return new _(r, e.code, a, t, i); }
            function a() { return ne; }
            function o(e, t) { return new ee(e, t); }
            function s(e, t) { return new te(e, t); }
            function u(e, n) { var r = new Q(e); return n.forEach(function (e) { return r.addSuper(e); }), r.isSubTypeOf(t.NIL) && (r.nullable = !0), r; }
            function l(e) { return u(e, [t.OBJECT]); }
            function p(e, t, n) { if (t.isScalar() && n.isScalar()) {
                if (-1 != t.allSubTypes().indexOf(n))
                    return t;
                if (-1 != n.allSubTypes().indexOf(t))
                    return n;
            } var r = t.oneMeta(C.Discriminator), i = n.oneMeta(C.Discriminator); if (r && i && r.property === i.property) {
                var a = t.descValue(), o = n.descValue();
                if (a !== o) {
                    var s = e[r.property];
                    if (s === a)
                        return t;
                    if (s === o)
                        return n;
                }
            } return null; }
            function c(e) { return parseFloat(e) != parseInt(e) || isNaN(e) ? !1 : !0; }
            function f(e) { for (var t = []; null != e;) {
                if (null != e.name()) {
                    t.push(e.name());
                    break;
                }
                if (!(e instanceof Q))
                    break;
                var n = e.contextMeta();
                if (null == n)
                    break;
                t.push(n.path()), e = n._owner;
            } return t.reverse(); }
            function m(e, n, a) { var o = n.metaOfType(C.Discriminator); if (0 == o.length)
                return null; var s = o[0].value(), u = E.find([n].concat(n.allSuperTypes()), function (e) { return e.getExtra(t.GLOBAL); }); if (!u)
                return null; var l = u.name(), p = n.metaOfType(C.DiscriminatorValue); if (0 != p.length && (l = p[0].value()), l) {
                if (e.hasOwnProperty(s)) {
                    var c = e[s];
                    if (c != l) {
                        var f = i(_.CODE_INCORRECT_DISCRIMINATOR, this, { rootType: u.name(), value: c, propName: s }, _.WARNING);
                        return h(f, { name: s, child: a }), f;
                    }
                    return r();
                }
                var m = i(_.CODE_MISSING_DISCRIMINATOR, this, { rootType: u.name(), propName: s });
                return h(m, a), m;
            } }
            function h(e, t) { if (e.getValidationPath()) {
                for (var n = d(t), r = n; r.child;)
                    r = r.child;
                r.child = e.getValidationPath(), e.setValidationPath(n);
            }
            else
                e.setValidationPath(t); e.getSubStatuses().forEach(function (e) { h(e, t); }); }
            function d(e) { if (e) {
                for (var t = e, n = null, r = null; t;)
                    if (n) {
                        var i = { name: t.name };
                        r.child = i, t = t.child, r = i;
                    }
                    else
                        n = { name: t.name }, r = n, t = t.child, r = n;
                return n;
            } return null; }
            function y(e) { for (var t = N.getAnnotationValidationPlugins(), n = [], r = 0, i = t; r < i.length; r++) {
                var a = i[r], o = a.process(e);
                o && o.forEach(function (t) { n.push(g(t, a.id(), e.entry())); });
            } return n; }
            function v(e, t) { for (var n = N.getTypeValidationPlugins(), r = [], i = 0, a = n; i < a.length; i++) {
                var o = a[i], s = o.process(e, t);
                s && s.forEach(function (t) { r.push(g(t, o.id(), e)); });
            } return r; }
            function g(e, n, r) { var i = e.isWarning ? _.WARNING : _.ERROR, a = e.issueCode || n, o = e.message || b(t.messageRegistry.PLUGIN_REPORTS_AN_ERROR, { pluginId: n }), s = new _(i, a, o, r); return s.setValidationPath(e.path), s; }
            function A(e) { if (!e)
                return null; if (e = e.trim(), 0 == e.length)
                return null; if ("#" == e.charAt(0) && (e = e.substring(1)), "/" == e.charAt(0) && (e = e.substring(1)), 0 == e.length)
                return null; for (var t = e.split("/"), n = { name: t[0] }, r = n, i = 1; i < t.length; i++) {
                var a = { name: t[i] };
                r.child = a, r = a;
            } return n; }
            var T = this && this.__extends || function (e, t) { function n() { this.constructor = e; } for (var r in t)
                t.hasOwnProperty(r) && (e[r] = t[r]); e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype, new n); }, E = n(70), S = n(111), N = n(102);
            t.messageRegistry = n(152);
            var _ = function () { function e(e, t, n, r, i) { void 0 === i && (i = !1), this.takeNodeFromSource = i, this.subStatus = [], this.severity = e, this.code = t, this.message = n, this.source = r; } return e.prototype.getValidationPath = function () { return this.vp; }, e.prototype.getValidationPathAsString = function () { if (!this.vp)
                return ""; for (var e = "", t = this.vp; t;)
                e += t.name, t.child && (e += "/"), t = t.child; return e; }, e.prototype.setValidationPath = function (e) { this.vp = e; }, e.prototype.addSubStatus = function (t, n) { if (void 0 === n && (n = null), t) {
                n && h(t, { name: n }), this.subStatus.push(t);
                var r = e.OK;
                t.isOk() || (t.isError() ? r = e.ERROR : t.isWarning() ? r = e.WARNING : t.isInfo() && (r = e.INFO)), this.severity < r && (this.severity = r, this.message = t.getMessage());
            } }, e.prototype.getErrors = function () { if (this.isError() || this.isWarning()) {
                if (this.subStatus.length > 0) {
                    var e = [];
                    return this.subStatus.forEach(function (t) { return e = e.concat(t.getErrors()); }), e;
                }
                return [this];
            } return []; }, e.prototype.getSubStatuses = function () { return this.subStatus; }, e.prototype.getSeverity = function () { return this.severity; }, e.prototype.getMessage = function () { return this.message; }, e.prototype.setMessage = function (e) { this.message = e; }, e.prototype.getSource = function () { return this.source; }, e.prototype.getCode = function () { return this.code; }, e.prototype.setCode = function (e) { this.code = e; }, e.prototype.isWarning = function () { return this.severity == e.WARNING; }, e.prototype.isError = function () { return this.severity == e.ERROR; }, e.prototype.isOk = function () { return this.severity === e.OK; }, e.prototype.isInfo = function () { return this.severity === e.INFO; }, e.prototype.setSource = function (e) { this.source = e; }, e.prototype.toString = function () { return this.isOk() ? "OK" : this.message; }, e.prototype.getExtra = function (e) { return this.takeNodeFromSource && e == N.SOURCE_EXTRA && this.source instanceof I ? this.source.node() : null; }, e.prototype.putExtra = function (e, t) { }, e.prototype.setInternalRange = function (e) { this.internalRange = e; }, e.prototype.getInternalRange = function () { return this.internalRange; }, e.prototype.getInternalPath = function () { return this.internalPath; }, e.prototype.setInternalPath = function (e) { this.internalPath = e; }, e.prototype.getFilePath = function () { return this.filePath; }, e.prototype.setFilePath = function (e) { this.filePath = e; }, e.CODE_CONFLICTING_TYPE_KIND = 4, e.CODE_INCORRECT_DISCRIMINATOR = t.messageRegistry.INCORRECT_DISCRIMINATOR, e.CODE_MISSING_DISCRIMINATOR = t.messageRegistry.MISSING_DISCRIMINATOR, e.ERROR = 3, e.INFO = 1, e.OK = 0, e.WARNING = 2, e; }();
            t.Status = _, t.ok = r, t.SCHEMA_AND_TYPE = N.SCHEMA_AND_TYPE_EXTRA, t.GLOBAL = N.GLOBAL_EXTRA, t.TOPLEVEL = N.TOP_LEVEL_EXTRA, t.SOURCE_EXTRA = N.SOURCE_EXTRA;
            var b = function (e, n) { for (var r = "", i = e.message, a = 0, o = i.indexOf("{{"); o >= 0; o = i.indexOf("{{", a)) {
                if (r += i.substring(a, o), a = i.indexOf("}}", o), 0 > a) {
                    a = o;
                    break;
                }
                o += "{{".length;
                var s = i.substring(o, a);
                a += "}}".length;
                var u = n[s];
                if (void 0 === u)
                    throw new Error(b(t.messageRegistry.MESSAGE_PARAMETER_NO_VALUE, { paramName: s }));
                r += u;
            } return r += i.substring(a, i.length); };
            t.error = i;
            var I = function () { function e(e) { this._inheritable = e, this._annotations = []; } return e.prototype.node = function () { return this._node; }, e.prototype.setNode = function (e) { this._node = e; }, e.prototype.owner = function () { return this._owner; }, e.prototype.isInheritable = function () { return this._inheritable; }, e.prototype.validateSelf = function (e) { for (var t = r(), n = 0, i = this._annotations; n < i.length; n++) {
                var a = i[n], o = a.validateSelf(e);
                o.isOk() || t.addSubStatus(o);
            } for (var s = new ve(this, e), u = y(s), l = 0, p = u; l < p.length; l++) {
                var c = p[l];
                t.addSubStatus(c);
            } return h(t, { name: this.facetName() }), t; }, e.prototype.requiredTypes = function () { return []; }, e.prototype.annotations = function () { return this._annotations; }, e.prototype.addAnnotation = function (e) { this._annotations.push(e); }, e; }();
            t.TypeInformation = I;
            var R = null, M = function (e) { function t(t) { void 0 === t && (t = !0), e.call(this, t); } return T(t, e), t.prototype.intersect = function (e, n) { var r = e.id() + "" + n.id(); if (t.intersections.hasOwnProperty(r))
                return t.intersections[r]; var i = s(r, [e, n]); return t.intersections[r] = i, i; }, t.prototype.release = function (e) { delete t.intersections[e.name()]; }, t.prototype.nothing = function (e, t) { return void 0 === t && (t = "Conflicting restrictions"), new ae(R, t, e); }, t.prototype.composeWith = function (e) { return null; }, t.prototype.preoptimize = function () { null === R && (R = new ie(null, null, "top")), R = R.push(this); try {
                return this.innerOptimize();
            }
            finally {
                R = R.pop();
            } }, t.prototype.innerOptimize = function () { return this; }, t.prototype.tryCompose = function (e) { null === R && (R = new ie(null, null, "top")), R = R.push(this); try {
                return this.composeWith(e);
            }
            finally {
                R = R.pop();
            } }, t.prototype.kind = function () { return N.MetaInformationKind.Constraint; }, t.prototype.conflictMessage = function (e, t) { return null; }, t.intersections = {}, t; }(I);
            t.Constraint = M;
            var w = n(105), C = n(106), L = n(104), P = n(105), O = n(106), D = n(106), U = n(105), x = n(105), k = n(142), F = n(106), B = n(105);
            t.autoCloseFlag = !1;
            var K = function () { function e(e) { void 0 === e && (e = null), this._parent = e, this._types = {}, this.typeList = []; } return e.prototype.getClassIdentifier = function () { var t = []; return t.concat(e.CLASS_IDENTIFIER_TypeRegistry); }, e.isInstance = function (t) { return null != t && t.getClassIdentifier && "function" == typeof t.getClassIdentifier && E.contains(t.getClassIdentifier(), e.CLASS_IDENTIFIER_TypeRegistry); }, e.prototype.put = function (e, t) { this._types[e] = t; }, e.prototype.addType = function (e) { e.isAnonymous() || (this._types[e.name()] = e, this.typeList.push(e)); }, e.prototype.get = function (e) { return this._types.hasOwnProperty(e) ? this._types[e] : null != this._parent ? this._parent.get(e) : null; }, e.prototype.types = function () { return this.typeList; }, e.prototype.typeMap = function () { return this._types; }, e.prototype.parent = function () { return this._parent; }, e.CLASS_IDENTIFIER_TypeRegistry = "typesystem.TypeRegistry", e; }();
            t.TypeRegistry = K;
            var V = function () { function e() { } return e.prototype.getInfos = function (e) { if (e.getExtra("PInfos"))
                return e.getExtra("PInfos"); var t = {}; return e.meta().forEach(function (e) { if (e instanceof w.HasProperty) {
                var n = e.value();
                t[n] = { name: n, type: null };
            } }), e.meta().forEach(function (e) { if (e instanceof w.PropertyIs) {
                var n = e.propertyName();
                t[n] && (t[n].type = e.value());
            } }), e.putExtra("PInfos", t), t; }, e.prototype.validate = function (e, t) { var n = this, r = this.getInfos(e), i = !1; return Object.keys(r).forEach(function (e) { i = i || n.validateInfo(r[e], t); }), i; }, e.prototype.validateInfo = function (e, t) { var n = this; if (t.some(function (t) { return t == e; }))
                return !0; if (e.type instanceof ee) {
                var r = e.type, i = !0;
                return r.options().forEach(function (r) { n.validate(r, [e].concat(t)) || (i = !1); }), i;
            } return e.type.isArray() ? void 0 : this.validate(e.type, [e].concat(t)); }, e.prototype.validateType = function (e) { var t = this, n = this.getInfos(e), r = []; return Object.keys(n).forEach(function (e) { t.validateInfo(n[e], []) && r.push(e); }), r; }, e; }(), j = function (e) { function n(n, r, i) { e.call(this, _.ERROR, t.messageRegistry.RESTRICTIONS_CONFLICT.code, null, i), this._conflicting = n, this._stack = r, this.source = i, this.computeMessage(); } return T(n, e), n.prototype.computeMessage = function () { var e = null; if (null != this._stack && this._stack.getRestriction() instanceof w.MinMaxRestriction) {
                var t = this._stack.getRestriction();
                e = this._conflicting.conflictMessage(t.facetPath(), t.value());
            } null == e && (e = this._conflicting + " and " + (null != this._stack ? this._stack.getRestriction().toString() : "")); var n = ""; if (this.source instanceof q) {
                for (var r = [], i = this._stack; i;) {
                    var a = i.getRestriction();
                    if (a instanceof U.PropertyIs) {
                        var o = { name: a.propId() };
                        r.length > 0 && (o.child = r[r.length - 1]), r.push(o);
                    }
                    i = i.pop();
                }
                h(this, r.pop());
                var s = w.anotherRestrictionComponent();
                n = s ? " between types '" + f(this.source) + "' and '" + f(s) + "'" : " in type '" + f(this.source) + "'";
            } this.message = "Restrictions conflict" + n + ": " + e; }, n.prototype.getConflictDescription = function () { var e = ""; return e += "Restrictions coflict:\n", e += this._stack.getRestriction() + " conflicts with " + this._conflicting + "\n", e += "at\n", e += this._stack.pop(); }, n.prototype.getConflicting = function () { return this._conflicting; }, n.prototype.getStack = function () { return this._stack; }, n.prototype.toRestriction = function () { return new ae(this._stack, this.message, this._conflicting); }, n; }(_);
            t.RestrictionsConflict = j;
            var W = 0;
            t.VALIDATED_TYPE = null;
            var q = function () {
                function e(e) { this._name = e, this.metaInfo = [], this._subTypes = [], this.innerid = W++, this.extras = {}, this._locked = !1; }
                return e.prototype.getExtra = function (e) { return this.extras[e]; }, e.prototype.putExtra = function (e, t) { this.extras[e] = t; }, e.prototype.id = function () { return this.innerid; }, e.prototype.knownProperties = function () { return this.metaOfType(B.MatchesProperty); }, e.prototype.lock = function () { this._locked = !0; }, e.prototype.isLocked = function () { return this._locked; }, e.prototype.allFacets = function () { return this.meta(); }, e.prototype.declaredFacets = function () { return this.declaredMeta(); }, e.prototype.isSubTypeOf = function (e) { return e === t.ANY || this === e || this.superTypes().some(function (t) { return t.isSubTypeOf(e); }); }, e.prototype.isSuperTypeOf = function (e) { return this === e || -1 != this.allSubTypes().indexOf(e); }, e.prototype.addMeta = function (e) { this.metaInfo.push(e), e._owner = this; }, e.prototype.name = function () { return this._name; }, e.prototype.label = function () { return this._name; }, e.prototype.subTypes = function () { return this._subTypes; }, e.prototype.superTypes = function () { return []; }, e.prototype.addSupertypeAnnotation = function (e, t) { if (e && 0 != e.length) {
                    this.supertypeAnnotations || (this.supertypeAnnotations = []);
                    var n = this.supertypeAnnotations[t];
                    n || (n = {}, this.supertypeAnnotations[t] = n);
                    for (var r = 0, i = e; r < i.length; r++) {
                        var a = i[r];
                        n[a.facetName()] = a;
                    }
                } }, e.prototype.validateType = function (e) { var n = this; void 0 === e && (e = a()); var r = new _(_.OK, "", "", this); if (this.validateHierarchy(r), this.getExtra(N.PARSE_ERROR) && r.addSubStatus(this.getExtra(N.PARSE_ERROR)), r.isOk()) {
                    if (r.addSubStatus(this.checkConfluent()), this.isExternal() && "external" == this.kind()) {
                        var o = this;
                        if (o.isJSON())
                            try {
                                var s = S.getJSONSchema(o.schema(), o.getContentProvider && o.getContentProvider());
                                s && s.validateSelf();
                            }
                            catch (u) {
                                if ("Maximum call stack size exceeded" == u.message)
                                    return i(t.messageRegistry.CIRCULAR_REFS_IN_JSON_SCHEMA, this);
                                if (ye.isInstance(u)) {
                                    var l = u, p = i(l.messageEntry, this, l.parameters, l.isWarning ? _.WARNING : _.ERROR);
                                    p.setInternalRange(l.internalRange), p.setInternalPath(A(l.internalPath)), p.setFilePath(l.filePath), r.addSubStatus(p);
                                }
                                else
                                    r.addSubStatus(i(t.messageRegistry.JSON_SCHEMA_VALIDATION_EXCEPTION, this, { msg: u.message }));
                            }
                    }
                    r.isOk() && this.superTypes().forEach(function (t) { if (t.isAnonymous()) {
                        var n = t.validateType(e);
                        n.isOk() || (h(n, { name: "type" }), r.addSubStatus(n));
                    } });
                } if (this.getExtra(t.SCHEMA_AND_TYPE) && r.addSubStatus(i(t.messageRegistry.SCHEMA_AND_TYPE, this)), r.isOk() && this.validateMeta(e).getErrors().forEach(function (e) { return r.addSubStatus(e); }), this.isObject()) {
                    var c = {};
                    this.restrictions().forEach(function (e) { e.owner() != n && e instanceof w.HasProperty && (c[e.value()] = !0); }), this.declaredMeta().forEach(function (e) { e instanceof w.HasProperty && delete c[e.value()]; }), this.declaredMeta().forEach(function (e) { if (e instanceof w.PropertyIs) {
                        var a = e;
                        c.hasOwnProperty(a.propertyName()) && r.addSubStatus(i(t.messageRegistry.REQUIRED_OVERRIDE_OPTIONAL, n, { propertyName: a.propertyName() }));
                    } });
                    var f = (new V).validateType(this);
                    f.length > 0 && f.forEach(function (e) { var a = i(t.messageRegistry.CYCLIC_DEPENDENCY, n, { typeName: e }); h(a, { name: e }), r.addSubStatus(a); });
                } if (this.supertypeAnnotations)
                    for (var m = 0; m < this.supertypeAnnotations.length; m++)
                        for (var d = this.supertypeAnnotations[m], g = 0, T = Object.keys(d); g < T.length; g++) {
                            var E = T[g], b = d[E], I = b.validateSelf(e);
                            I.isOk() || (h(I, { name: "type", child: { name: m } }), r.addSubStatus(I));
                        } for (var R = v(this, e), M = 0, C = R; M < C.length; M++) {
                    var L = C[M];
                    r.addSubStatus(L);
                } for (var P = new Ae(this, e), O = y(P), D = 0, U = O; D < U.length; D++) {
                    var L = U[D];
                    r.addSubStatus(L);
                } return r; }, e.prototype.validateHierarchy = function (e) {
                    var n = this;
                    if (this.isAnonymous() || this.getExtra(N.TOP_LEVEL_EXTRA) && a().get(this.name()) && e.addSubStatus(i(t.messageRegistry.REDEFINIG_BUILDTIN, this, { typeName: this.name() })), this.isSubTypeOf(t.RECURRENT) && e.addSubStatus(i(t.messageRegistry.RECURRENT_DEFINITION, this), "type"), this.isSubTypeOf(t.UNKNOWN) && e.addSubStatus(i(t.messageRegistry.INHERITING_UNKNOWN_TYPE, this), "type"), this.isUnion()) {
                        var r = this.typeFamily();
                        r.some(function (e) { return e.isSubTypeOf(t.RECURRENT); }) && e.addSubStatus(i(t.messageRegistry.RECURRENT_UNION_OPTION, this), "type"), r.some(function (e) { return e.isSubTypeOf(t.UNKNOWN); }) && e.addSubStatus(i(t.messageRegistry.UNKNOWN_UNION_OPTION, this), "type");
                    }
                    if (this.isArray()) {
                        var o = this.familyWithArray(), s = this.getExtra(N.HAS_ITEMS) ? "items" : "type";
                        if (-1 != o.indexOf(this) || o.some(function (e) { return e === t.RECURRENT; }))
                            e.addSubStatus(i(t.messageRegistry.RECURRENT_ARRAY_DEFINITION, this), s);
                        else if (o.some(function (e) { return e === t.UNKNOWN; })) {
                            var u = this.oneMeta(x.ComponentShouldBeOfType).value().name();
                            e.addSubStatus(i(t.messageRegistry.UNKNOWN_ARRAY_COMPONENT, this, { componentTypeName: u }), s);
                        }
                    }
                    var l = this.superTypes(), p = !1, c = !1;
                    if (l.length > 1 && l.forEach(function (e) { e.isExternal() ? p = !0 : c = !0; }), p && c && e.addSubStatus(i(t.messageRegistry.EXTERNALS_MIX, this)), this instanceof ee) {
                        var f = this;
                        f.options().forEach(function (r) { r.isExternal() && e.addSubStatus(i(t.messageRegistry.EXTERNALS_MIX, n)); });
                    }
                    if (this.isExternal() && this.getExtra(N.HAS_FACETS)) {
                        var m = i(t.messageRegistry.EXTERNAL_FACET, this, { name: this.getExtra(N.HAS_FACETS) });
                        h(m, { name: this.getExtra(N.HAS_FACETS) }), e.addSubStatus(m);
                    }
                }, e.prototype.familyWithArray = function () { var e = this.allSuperTypes(), t = this.oneMeta(x.ComponentShouldBeOfType); if (t) {
                    var n = t.value();
                    e = e.concat(n.familyWithArray());
                } return e; }, e.prototype.validateMeta = function (e) { var t = new _(_.OK, "", "", this); return this.declaredMeta().forEach(function (n) { n.validateSelf(e).getErrors().forEach(function (e) { return t.addSubStatus(e); }); }), this.validateFacets(t), t; }, e.prototype.validateFacets = function (e) { var n = this, r = {}, a = {}, o = {}; this.meta().forEach(function (e) { if (e instanceof O.FacetDeclaration) {
                    var t = e;
                    r[t.actualName()] = t, t.isOptional() || t.owner() !== n && (o[t.actualName()] = t), t.owner() != n && (a[t.actualName()] = t);
                } }), this.declaredMeta().forEach(function (r) { if (r instanceof O.FacetDeclaration) {
                    var o = r;
                    if (o.owner() == n) {
                        var s = o.actualName();
                        a.hasOwnProperty(s) && e.addSubStatus(i(t.messageRegistry.OVERRIDE_FACET, n, { name: s }));
                        var u = L.getInstance().facetPrototypeWithName(s);
                        (u && u.isApplicable(n) || "type" == s || "properties" == o.facetName() || "schema" == s || "facets" == s || "uses" == s) && e.addSubStatus(i(t.messageRegistry.OVERRIDE_BUILTIN_FACET, n, { name: s })), "(" == s.charAt(0) && e.addSubStatus(i(t.messageRegistry.FACET_START_BRACKET, n, { name: s }));
                    }
                } }); var s = {}; this.meta().forEach(function (e) { e instanceof U.PropertyIs && (s[e.propId()] = !0); }); for (var u = 0, l = this.meta(); u < l.length; u++) {
                    var p = l[u];
                    if (p instanceof D.CustomFacet) {
                        var c = p, f = c.facetName();
                        if (r.hasOwnProperty(f)) {
                            var m = r[f], d = m.value();
                            if (m.owner() == this && c.owner() == this) {
                                var y = i(t.messageRegistry.FACET_CAN_NOT_BE_FIXED_BY_THE_DECLARING_TYPE, c);
                                y.setValidationPath({ name: f }), e.addSubStatus(y);
                            }
                            else {
                                for (var v = d.validateDirect(c.value(), !1, !1), g = 0, A = v.getErrors(); g < A.length; g++) {
                                    var T = A[g];
                                    h(T, { name: f }), e.addSubStatus(T);
                                }
                                delete o[f];
                            }
                        }
                        else
                            this.isExternal() ? e.addSubStatus(i(t.messageRegistry.FACET_PROHIBITED_FOR_EXTERNALS, c, { facetName: f }, _.ERROR, !0)) : e.addSubStatus(i(t.messageRegistry.UNKNOWN_FACET, c, { facetName: f }, _.ERROR, !0));
                    }
                } Object.getOwnPropertyNames(o).length > 0 && e.addSubStatus(i(t.messageRegistry.MISSING_REQUIRED_FACETS, this, { facetsList: Object.keys(o).map(function (e) { return "'" + e + "'"; }).join(",") })); }, e.prototype.allSuperTypes = function () { var e = []; return this.fillSuperTypes(e), e; }, e.prototype.fillSuperTypes = function (e) { this.superTypes().forEach(function (t) { E.contains(e, t) || (e.push(t), t.fillSuperTypes(e)); }); }, e.prototype.allSubTypes = function () { var e = []; return this.fillSubTypes(e), e; }, e.prototype.fillSubTypes = function (e) { this.subTypes().forEach(function (t) { E.contains(e, t) || (e.push(t), t.fillSubTypes(e)); }); }, e.prototype.inherit = function (e) { var t = new Q(e); return t.addSuper(this), t; }, e.prototype.isAnonymous = function () { return !this._name || 0 === this._name.length; }, e.prototype.isEmpty = function () { return this.metaInfo.length > 2 ? !1 : 0 == this.metaInfo.filter(function (e) { return e instanceof F.NotScalar ? !1 : e instanceof C.DiscriminatorValue ? e.isStrict() : !0; }).length; }, e.prototype.isArray = function () { return this === t.ARRAY || -1 != this.allSuperTypes().indexOf(t.ARRAY); }, e.prototype.propertySet = function () { var e = []; return this.meta().forEach(function (t) { if (t instanceof U.PropertyIs) {
                    var n = t;
                    e.push(n.propertyName());
                } }), E.uniq(e); }, e.prototype.checkConfluent = function () { if (this.computeConfluent)
                    return r(); this.computeConfluent = !0; var e = w.anotherRestrictionComponentsCount(); try {
                    var t = w.optimize(this.restrictions()), n = E.find(t, function (e) { return e instanceof re; });
                    if (n) {
                        var i = null, a = null;
                        if (n instanceof ae) {
                            var o = n;
                            i = o.getStack(), a = o.another();
                        }
                        var s = new j(a, i, this);
                        return s;
                    }
                    return r();
                }
                finally {
                    this.computeConfluent = !1, w.releaseAnotherRestrictionComponent(e);
                } }, e.prototype.isObject = function () { return this == t.OBJECT || E.some(this.allSuperTypes(), function (e) { return e.isObject(); }); }, e.prototype.isExternal = function () { return this == t.EXTERNAL || -1 != this.allSuperTypes().indexOf(t.EXTERNAL); }, e.prototype.isBoolean = function () { return this == t.BOOLEAN || -1 != this.allSuperTypes().indexOf(t.BOOLEAN); }, e.prototype.isString = function () { return this == t.STRING || -1 != this.allSuperTypes().indexOf(t.STRING); }, e.prototype.isNumber = function () { return this == t.NUMBER || -1 != this.allSuperTypes().indexOf(t.NUMBER); }, e.prototype.isFile = function () { return this == t.FILE || -1 != this.allSuperTypes().indexOf(t.FILE); }, e.prototype.isScalar = function () { return this == t.SCALAR || -1 != this.allSuperTypes().indexOf(t.SCALAR); }, e.prototype.isDateTime = function () { return this == t.DATETIME || -1 != this.allSuperTypes().indexOf(t.DATETIME); }, e.prototype.isDateOnly = function () { return this == t.DATE_ONLY || -1 != this.allSuperTypes().indexOf(t.DATE_ONLY); }, e.prototype.isTimeOnly = function () { return this == t.TIME_ONLY || -1 != this.allSuperTypes().indexOf(t.TIME_ONLY); }, e.prototype.isInteger = function () { return this == t.INTEGER || -1 != this.allSuperTypes().indexOf(t.INTEGER); }, e.prototype.isDateTimeOnly = function () { return this == t.DATETIME_ONLY || -1 != this.allSuperTypes().indexOf(t.DATETIME_ONLY); }, e.prototype.isUnknown = function () { return this == t.UNKNOWN || -1 != this.allSuperTypes().indexOf(t.UNKNOWN); }, e.prototype.isRecurrent = function () { return this == t.RECURRENT || -1 != this.allSuperTypes().indexOf(t.RECURRENT); }, e.prototype.isBuiltin = function () { return -1 != this.metaInfo.indexOf($); }, e.prototype.exampleObject = function () { return k.example(this); }, e.prototype.isPolymorphic = function () { return this.meta().some(function (e) { return e instanceof Y; }); }, e.prototype.restrictions = function (e) { if (void 0 === e && (e = !1), this.isUnion()) {
                    var t = [];
                    return this.superTypes().forEach(function (e) { t = t.concat(e.restrictions()); }), t = t.concat(this.meta().filter(function (e) { return e instanceof M; }));
                } var n = [], r = null; return this.meta().forEach(function (t) { if (t instanceof M) {
                    if (t instanceof oe && e) {
                        if (r)
                            return;
                        r = t;
                    }
                    n.push(t);
                } }), n; }, e.prototype.customFacets = function () { return this.declaredMeta().filter(function (e) { return e instanceof C.CustomFacet; }); }, e.prototype.allCustomFacets = function () { return this.meta().filter(function (e) { return e instanceof C.CustomFacet; }); }, e.prototype.isUnion = function () { var e = !1; return this.isBuiltin() ? !1 : (this.allSuperTypes().forEach(function (t) { return e = e || t instanceof ee; }), e); }, e.prototype.isIntersection = function () { var e = !1; return this.isBuiltin() ? !1 : (this.allSuperTypes().forEach(function (t) { return e = e || t instanceof te; }), e); }, e.prototype.meta = function () { return [].concat(this.metaInfo); }, e.prototype.validateDirect = function (e, n, r, a) { var o = this; void 0 === n && (n = !1), void 0 === r && (r = !0), void 0 === a && (a = null); var s = t.VALIDATED_TYPE; try {
                    var u = t.autoCloseFlag;
                    n && (t.autoCloseFlag = !0), t.VALIDATED_TYPE = this;
                    var l = new _(_.OK, "", "", this);
                    if (!(r || null !== e && void 0 !== e || this.nullable))
                        return i(t.messageRegistry.OBJECT_EXPECTED, this);
                    if (this.restrictions(!0).forEach(function (t) { return l.addSubStatus(t.check(e, a)); }), (n || t.autoCloseFlag) && this.isObject() && !this.oneMeta(P.KnownPropertyRestriction)) {
                        var p = new P.KnownPropertyRestriction(!1);
                        p.patchOwner(this), p.check(e).getErrors().forEach(function (e) { var t = new _(_.WARNING, e.getCode(), e.getMessage(), o); h(t, e.getValidationPath()), l.addSubStatus(t); });
                    }
                }
                finally {
                    t.autoCloseFlag = u, t.VALIDATED_TYPE = s;
                } return l; }, e.prototype.validate = function (e, n, a) { void 0 === n && (n = !1), void 0 === a && (a = !0); var o = t.autoCloseFlag; if (!(a || null !== e && void 0 !== e || this.nullable))
                    return i(t.messageRegistry.NULL_NOT_ALLOWED, this); n && (t.autoCloseFlag = !0); try {
                    for (var s, u = [], l = this.subTypes().concat(this), p = 0, c = l; p < c.length; p++) {
                        var f = c[p], h = m(e, f), d = f.validateDirect(e, n || o);
                        if (h) {
                            if (h.isOk())
                                return d;
                            u.push(h);
                        }
                        else if (d.isOk())
                            return d;
                        s = d;
                    }
                    if (0 == u.length)
                        return s;
                    var y = r();
                    return u.forEach(function (e) { return y.addSubStatus(e); }), u.pop();
                }
                finally {
                    t.autoCloseFlag = o;
                } }, e.prototype.declareMapProperty = function (e, t) { return null != t && this.addMeta(new w.MapPropertyIs(e, t)), t; }, e.prototype.closeUnknownProperties = function () { this.addMeta(new P.KnownPropertyRestriction(!1)); }, e.prototype.canDoAc = function () { for (var e = E.uniq(this.typeFamily()), t = new _(_.OK, "", "", this), n = 0; n < e.length; n++)
                    for (var r = 0; r < e.length; r++)
                        if (n != r) {
                            var i = e[n], a = e[r], o = this.emptyIntersectionOrDiscriminator(i, a);
                            t.addSubStatus(o);
                        } return t; }, e.prototype.emptyIntersectionOrDiscriminator = function (e, t) { if (t === e)
                    return r(); if (t.isScalar() && e.isScalar())
                    return r(); var n = s("", [e, t]), i = n.checkConfluent(); return i.isOk() ? this.checkDiscriminator(e, t) : r(); }, e.prototype.checkDiscriminator = function (e, n) { var a = i(t.messageRegistry.DISCRIMINATOR_NEEDED, this, { name1: e.name(), name2: n.name() }), o = e.oneMeta(C.Discriminator), s = n.oneMeta(C.Discriminator); if (null != o && null != s && o.value() === s.value()) {
                    var u = e.name(), l = n.name(), p = e.oneMeta(C.DiscriminatorValue);
                    null != p && (u = p.value());
                    var c = n.oneMeta(C.DiscriminatorValue);
                    if (null != c && (l = c.value()), u !== l)
                        return r();
                    a = i(t.messageRegistry.SAME_DISCRIMINATOR_VALUE, this, { name1: e.name(), name2: n.name() });
                } return a; }, e.prototype.ac = function (e) { if (!this.isPolymorphic() && !this.isUnion())
                    return this; if (this.isBuiltin())
                    return this; var n = E.uniq(this.typeFamily()); if (0 == n.length)
                    return t.NOTHING; if (this.isScalar())
                    return this.isNumber() ? "number" == typeof e ? this : t.NOTHING : this.isString() ? "string" == typeof e ? this : t.NOTHING : this.isBoolean() ? "boolean" == typeof e ? this : t.NOTHING : this; if (1 === n.length)
                    return n[0]; var r = []; n.forEach(function (t) { var n = t.validateDirect(e, !0); n.isOk() && r.push(t); }); var i = this.discriminate(e, r); return i ? i : t.NOTHING; }, e.prototype.declareProperty = function (e, t, n) { return n || this.addMeta(new w.HasProperty(e)), null != t && this.addMeta(new w.PropertyIs(e, t)), this; }, e.prototype.discriminate = function (e, t) { for (var n = [].concat(t), r = [].concat(t); n.length > 1;) {
                    var i = !1;
                    e: for (var a = 0; a < r.length; a++)
                        for (var o = 0; o < r.length; o++) {
                            var s = r[a], u = r[o];
                            if (s != u) {
                                var l = p(e, s, u);
                                if (l === s) {
                                    r = r.filter(function (e) { return e != u; }), i = !0;
                                    break e;
                                }
                                if (l === u) {
                                    r = r.filter(function (e) { return e != s; }), i = !0;
                                    break e;
                                }
                                r = r.filter(function (e) { return e != s && e != u; }), i = !0;
                                break e;
                            }
                        }
                    n = r;
                } return 1 == n.length ? n[0] : null; }, e.prototype.oneMeta = function (e) { return E.find(this.meta(), function (t) { return t instanceof e; }); }, e.prototype.metaOfType = function (e) { return this.meta().filter(function (t) { return t instanceof e; }); }, e.prototype.declaredMeta = function () { return this.metaInfo; }, e.prototype.descValue = function () { var e = this.oneMeta(C.DiscriminatorValue); return e ? e.value() : this.name(); }, e.prototype.isAbstractOrInternal = function () { return this.metaInfo.some(function (e) { return e instanceof G || e instanceof X; }); }, e.prototype.typeFamily = function () { if (this.isUnion()) {
                    var e = [];
                    return this.allSuperTypes().forEach(function (t) { if (t instanceof ee)
                        for (var n = t.allOptions(), r = 0; r < n.length; r++)
                            e = e.concat(n[r].typeFamily()); }), E.unique(e);
                } var t = []; return this.isAbstractOrInternal() || t.push(this), this.allSubTypes().forEach(function (e) { e.isAbstractOrInternal() || t.push(e); }), E.unique(t); }, e.prototype.hasPropertiesFacet = function () { return this.metaInfo.some(function (e) { return e instanceof C.HasPropertiesFacet; }); }, e;
            }();
            t.AbstractType = q;
            var H = function (e) { function n() { e.apply(this, arguments); } return T(n, e), n.prototype.requiredType = function () { return t.ANY; }, n.prototype.kind = function () { return N.MetaInformationKind.Modifier; }, n; }(I);
            t.Modifier = H;
            var Y = function (e) { function t() { e.call(this, !0); } return T(t, e), t.prototype.facetName = function () { return "polymorphic"; }, t.prototype.value = function () { return !0; }, t; }(H);
            t.Polymorphic = Y;
            var G = function (e) { function t() { e.call(this, !1); } return T(t, e), t.prototype.value = function () { return !0; }, t.prototype.facetName = function () { return "abstract"; }, t; }(H);
            t.Abstract = G;
            var X = function (e) { function t() { e.call(this, !1); } return T(t, e), t.prototype.facetName = function () { return "abstract"; }, t.prototype.value = function () { return !0; }, t; }(H);
            t.Internal = X;
            var z = function (e) { function t() { e.call(this, !1); } return T(t, e), t.prototype.facetName = function () { return "builtIn"; }, t.prototype.value = function () { return !0; }, t; }(H), $ = new z, J = function (e) { function t() { e.apply(this, arguments); } return T(t, e), t.prototype.kind = function () { return "root"; }, t; }(q);
            t.RootType = J;
            var Q = function (e) { function n() { e.apply(this, arguments), this._superTypes = []; } return T(n, e), n.prototype.superTypes = function () { return this._superTypes; }, n.prototype.knownProperties = function () { var e = this.metaOfType(B.MatchesProperty); return this.superTypes().forEach(function (t) { e = e.concat(t.knownProperties()); }), e; }, n.prototype.kind = function () { return "inherited"; }, n.prototype.meta = function () { var t = this, n = e.prototype.meta.call(this), r = !1; return this.superTypes().forEach(function (e) { e.meta().forEach(function (e) { if (e instanceof P.KnownPropertyRestriction) {
                if (r)
                    return;
                var i = new P.KnownPropertyRestriction(!1);
                return i.patchOwner(t), void n.push(i);
            } e.isInheritable() && n.push(e); }); }), n; }, n.prototype.addSuper = function (e) { this._superTypes.push(e), e.isLocked() || e._subTypes.push(this), e.nullable && (this.nullable = !0); }, n.prototype.label = function () { var t = this.metaOfType(x.ComponentShouldBeOfType); return t.length > 0 ? t[0].value().label() + "[]" : e.prototype.label.call(this); }, n.prototype.contextMeta = function () { return this._contextMeta; }, n.prototype.setContextMeta = function (e) { this._contextMeta = e; }, n.prototype.patch = function (e) { for (var n in e)
                e.hasOwnProperty(n) && (this[n] = e[n]); for (var r = 0; r < this._superTypes.length; r++) {
                var i = this._superTypes[r];
                (i == this || i.allSuperTypes().indexOf(this) >= 0) && (this._superTypes[r] = t.RECURRENT);
            } }, n; }(q);
            t.InheritedType = Q;
            var Z = function (e) { function t(t, n) { e.call(this, t), this._options = n; } return T(t, e), t.prototype.allOptions = function () { var e = this, t = []; return this._options.forEach(function (n) { n.kind() == e.kind() ? t = t.concat(n.allOptions()) : t.push(n); }), E.unique(t); }, t.prototype.options = function () { return this._options; }, t; }(q);
            t.DerivedType = Z;
            var ee = function (e) { function n(t, n) { var r = this; e.call(this, t, n), this.options().forEach(function (e) { e.nullable && (r.nullable = !0); }); } return T(n, e), n.prototype.kind = function () { return "union"; }, n.prototype.isSubTypeOf = function (e) { var t = !0; return this.allOptions().forEach(function (n) { n.isSubTypeOf(e) || (t = !1); }), t; }, n.prototype.validate = function (e) { return this.validateDirect(e); }, n.prototype.typeFamily = function () { var e = []; return this.allOptions().forEach(function (t) { e = e.concat(t.typeFamily()); }), e; }, n.prototype.knownProperties = function () { var e = this.metaOfType(B.MatchesProperty); return this.options().forEach(function (t) { e = e.concat(t.knownProperties()); }), e; }, n.prototype.validateDirect = function (e, t) { void 0 === t && (t = !1); var n = new _(_.OK, "", "", this); return this.restrictions().forEach(function (t) { return n.addSubStatus(t.check(e, null)); }), n; }, n.prototype.isUnion = function () { return !0; }, n.prototype.isObject = function () { return E.all(this.allOptions(), function (e) { return e.isObject(); }); }, n.prototype.restrictions = function () { return [new ce(this.allOptions().map(function (e) { return new fe(e.restrictions()); }), t.messageRegistry.UNION_TYPE_FAILURE, t.messageRegistry.UNION_TYPE_FAILURE_DETAILS)]; }, n.prototype.label = function () { return this.options().map(function (e) { return e.label(); }).join("|"); }, n; }(Z);
            t.UnionType = ee;
            var te = function (e) { function t() { e.apply(this, arguments); } return T(t, e), t.prototype.kind = function () { return "intersection"; }, t.prototype.restrictions = function () { var e = []; return this.allOptions().forEach(function (t) { return e = e.concat(t.restrictions()); }), [new fe(e)]; }, t.prototype.label = function () { return this.options().map(function (e) { return e.label(); }).join("&"); }, t.prototype.isIntersection = function () { return !0; }, t; }(Z);
            t.IntersectionType = te;
            var ne = new K;
            t.builtInRegistry = a, t.union = o, t.intersect = s, t.derive = u, t.deriveObjectType = l;
            var re = function (e) { function n() { e.apply(this, arguments); } return T(n, e), n.prototype.check = function (e) { return null === e || void 0 === e ? r() : i(t.messageRegistry.NOTHING, this); }, n.prototype.requiredType = function () { return t.ANY; }, n.prototype.facetName = function () { return "nothing"; }, n.prototype.value = function () { return "!!!"; }, n; }(M);
            t.NothingRestriction = re;
            var ie = function () { function e(e, t, n) { this._previous = e, this._restriction = t, this.id = n; } return e.prototype.getRestriction = function () { return this._restriction; }, e.prototype.pop = function () { return this._previous; }, e.prototype.push = function (t) { return new e(this, t, t.toString()); }, e; }();
            t.RestrictionStackEntry = ie;
            var ae = function (e) { function t(t, n, r) { e.call(this), this._entry = t, this._message = n, this._another = r; } return T(t, e), t.prototype.getMessage = function () { return this._message; }, t.prototype.getStack = function () { return this._entry; }, t.prototype.another = function () { return this._another; }, t; }(re);
            t.NothingRestrictionWithLocation = ae;
            var oe = function (e) { function t() { e.apply(this, arguments); } return T(t, e), t; }(M);
            t.GenericTypeOf = oe;
            var se = function (e) { function n(t) { e.call(this), this.val = t; } return T(n, e), n.prototype.check = function (e) { var n = typeof e; return null === e || void 0 === e ? r() : (Array.isArray(e) && (n = "array"), n === this.val ? r() : i(t.messageRegistry.TYPE_EXPECTED, this, { typeName: this.val })); }, n.prototype.value = function () { return this.val; }, n.prototype.requiredType = function () { return t.ANY; }, n.prototype.facetName = function () { return "typeOf"; }, n.prototype.composeWith = function (e) { if (e instanceof n) {
                var t = e;
                return t.val == this.val ? this : this.nothing(e);
            } return null; }, n.prototype.toString = function () { return "should be of type " + this.val; }, n; }(oe);
            t.TypeOfRestriction = se;
            var ue = function (e) { function n() { e.call(this); } return T(n, e), n.prototype.check = function (e) { return "number" == typeof e && c(e) ? r() : i(t.messageRegistry.INTEGER_EXPECTED, this); }, n.prototype.requiredType = function () { return t.ANY; }, n.prototype.value = function () { return !0; }, n.prototype.facetName = function () { return "should be integer"; }, n; }(oe);
            t.IntegerRestriction = ue;
            var le = function (e) { function n() { e.call(this); } return T(n, e), n.prototype.check = function (e) { return null === e || void 0 == e || "null" === e ? r() : i(t.messageRegistry.NULL_EXPECTED, this); }, n.prototype.requiredType = function () { return t.ANY; }, n.prototype.value = function () { return !0; }, n.prototype.facetName = function () { return "should be null"; }, n; }(oe);
            t.NullRestriction = le;
            var pe = function (e) { function n() { e.call(this); } return T(n, e), n.prototype.check = function (e) { return e ? "number" == typeof e || "boolean" == typeof e || "string" == typeof e ? r() : i(t.messageRegistry.SCALAR_EXPECTED, this) : r(); }, n.prototype.requiredType = function () { return t.ANY; }, n.prototype.facetName = function () { return t.messageRegistry.SHOULD_BE_SCALAR.message; }, n.prototype.value = function () { return !0; }, n; }(oe);
            t.ScalarRestriction = pe;
            var ce = function (e) { function n(t, n, r) { e.call(this), this.val = t, this._extraMessage = n, this._extraOptionMessage = r; } return T(n, e), n.prototype.check = function (e, t) { for (var n = this, a = new _(_.OK, "", "", this), o = [], s = 0; s < this.val.length; s++) {
                var u = this.val[s].check(e, t);
                if (u.isOk())
                    return r();
                o.push(u);
            } if (o.length > 0) {
                for (var l = 0, p = o; l < p.length; l++) {
                    var c = p[l], f = null, m = c.getSource();
                    if (m instanceof I) {
                        var h = m.owner();
                        h && (f = h.label());
                    }
                    c.getErrors().forEach(function (e) { var t = e.getMessage(), r = e.getCode(); if (f && (t = f + ": " + t), n._extraOptionMessage) {
                        var o = i(n._extraOptionMessage, n, { msg: t });
                        t = o.getMessage(), r = o.getCode();
                    } e.setMessage(t), e.setCode(r), a.addSubStatus(e); });
                }
                if (this._extraMessage) {
                    var d = 0;
                    o.forEach(function (e) { return d = Math.max(d, e.getSeverity()); }), a.addSubStatus(new _(d, this._extraMessage.code, this._extraMessage.message, this));
                }
            } return a; }, n.prototype.value = function () { return this.val.map(function (e) { return e.value(); }); }, n.prototype.requiredType = function () { return t.ANY; }, n.prototype.facetName = function () { return "or"; }, n; }(M);
            t.OrRestriction = ce;
            var fe = function (e) { function n(t) { e.call(this), this.val = t; } return T(n, e), n.prototype.value = function () { return this.val.map(function (e) { return e.value(); }); }, n.prototype.options = function () { return this.val; }, n.prototype.check = function (e, t) { for (var n = 0; n < this.val.length; n++) {
                var i = this.val[n].check(e, t);
                if (!i.isOk())
                    return i;
            } return r(); }, n.prototype.requiredType = function () { return t.ANY; }, n.prototype.facetName = function () { return "and"; }, n; }(M);
            t.AndRestriction = fe, t.ANY = new J("any"), t.SCALAR = t.ANY.inherit("scalar"), t.OBJECT = t.ANY.inherit("object"), t.ARRAY = t.ANY.inherit("array"), t.EXTERNAL = t.ANY.inherit("external"), t.NUMBER = t.SCALAR.inherit("number"), t.INTEGER = t.NUMBER.inherit("integer"), t.BOOLEAN = t.SCALAR.inherit("boolean"), t.STRING = t.SCALAR.inherit("string"), t.NIL = t.SCALAR.inherit("nil"), t.DATE_ONLY = t.SCALAR.inherit("date-only"), t.TIME_ONLY = t.SCALAR.inherit("time-only"), t.DATETIME_ONLY = t.SCALAR.inherit("datetime-only"), t.DATETIME = t.SCALAR.inherit("datetime"), t.FILE = t.SCALAR.inherit("file"), t.NOTHING = new J("nothing"), t.UNION = t.ANY.inherit("union"), t.UNKNOWN = t.NOTHING.inherit("unknown"), t.REFERENCE = t.NOTHING.inherit("reference"), t.RECURRENT = t.NOTHING.inherit("recurrent"), t.ANY.addMeta($), t.NIL.addMeta($), t.UNION.addMeta($), t.SCALAR.addMeta($), t.OBJECT.addMeta($), t.ARRAY.addMeta($), t.NUMBER.addMeta($), t.INTEGER.addMeta($), t.BOOLEAN.addMeta($), t.STRING.addMeta($), t.EXTERNAL.addMeta($), t.UNKNOWN.addMeta($), t.RECURRENT.addMeta($), t.DATE_ONLY.addMeta($), t.TIME_ONLY.addMeta($), t.DATETIME_ONLY.addMeta($), t.DATETIME.addMeta($), t.FILE.addMeta($), t.UNKNOWN.addMeta($), t.UNKNOWN.lock(), t.RECURRENT.addMeta($), t.RECURRENT.lock(), t.EXTERNAL.lock(), t.UNION.lock(), t.REFERENCE.lock(), ne.addType(t.ANY), ne.addType(t.SCALAR), ne.addType(t.OBJECT), ne.addType(t.ARRAY), ne.addType(t.NUMBER), ne.addType(t.INTEGER), ne.addType(t.BOOLEAN), ne.addType(t.NIL), ne.addType(t.STRING), ne.addType(t.DATE_ONLY), ne.addType(t.TIME_ONLY), ne.addType(t.DATETIME_ONLY), ne.addType(t.DATETIME), ne.addType(t.FILE), t.NOTHING.addMeta(new re), t.NUMBER.addMeta(new se("number")), t.NUMBER.addMeta(new O.FacetDeclaration("format", t.STRING, !0, !0)), t.BOOLEAN.addMeta(new se("boolean")), t.OBJECT.addMeta(new se("object")), t.ARRAY.addMeta(new se("array")), t.STRING.addMeta(new se("string")), t.INTEGER.addMeta(new ue), t.NIL.addMeta(new le);
            var me = n(143);
            t.DATE_ONLY.addMeta(new me.DateOnlyR), t.TIME_ONLY.addMeta(new me.TimeOnlyR), t.DATETIME_ONLY.addMeta(new me.DateTimeOnlyR), t.DATETIME.addMeta(new me.DateTimeR), t.FILE.addMeta(new se("string"));
            var he = t.ARRAY.inherit("");
            he.addMeta(new x.ComponentShouldBeOfType(t.STRING)), t.FILE.addMeta(new O.FacetDeclaration("fileTypes", he, !0, !0)), t.FILE.addMeta(new O.FacetDeclaration("minLength", t.INTEGER, !0, !0)), t.FILE.addMeta(new O.FacetDeclaration("maxLength", t.INTEGER, !0, !0)), t.DATETIME.addMeta(new O.FacetDeclaration("format", t.STRING, !0, !0)), t.NIL.nullable = !0, t.SCALAR.addMeta(new pe), ne.types().forEach(function (e) { return e.lock(); });
            var de = function (e) { function n(n, r, i, a, o) { void 0 === o && (o = null), e.call(this, n), this._content = r, this.json = i, this.provider = a, this.addMeta(new w.MatchToSchema(r, o ? o : a)), this.addSuper(t.EXTERNAL); } return T(n, e), n.prototype.getContentProvider = function () { return this.provider; }, n.prototype.setContentProvider = function (e) { this.provider = e; }, n.prototype.kind = function () { return "external"; }, n.prototype.isJSON = function () { return this.json; }, n.prototype.schema = function () { return this._content; }, n; }(Q);
            t.ExternalType = de, t.typePath = f;
            var ye = function (e) { function t(t, n) { void 0 === n && (n = {}), e.call(this), this.messageEntry = t, this.parameters = n, this.isWarning = !1, this.message = b(t, n); } return T(t, e), t.prototype.getClassIdentifier = function () { var e = []; return e.concat(t.CLASS_IDENTIFIER_ValidationError); }, t.isInstance = function (e) { return null != e && e.getClassIdentifier && "function" == typeof e.getClassIdentifier && E.contains(e.getClassIdentifier(), t.CLASS_IDENTIFIER_ValidationError); }, t.CLASS_IDENTIFIER_ValidationError = "linter.ValidationError", t; }(Error);
            t.ValidationError = ye, t.setValidationPath = h, t.patchPath = d;
            var ve = function () { function e(e, t) { this._facet = e, this.reg = t; } return e.prototype.kind = function () { return "AnnotatedFacet"; }, e.prototype.annotationsMap = function () { var e = this; return this._annotationsMap || (this._annotationsMap = {}, this.annotations().forEach(function (t) { return e._annotationsMap[t.name()] = t; })), this._annotationsMap; }, e.prototype.annotations = function () { var e = this; return this._annotations || (this._annotations = this._facet.annotations().map(function (t) { return new Te(t, e.reg); })), this._annotations; }, e.prototype.value = function () { return this._facet.value(); }, e.prototype.name = function () { return this._facet.facetName(); }, e.prototype.entry = function () { return this._facet; }, e; }();
            t.AnnotatedFacet = ve;
            var ge = n(103), Ae = function () { function e(e, t) { this._type = e, this.reg = t; } return e.prototype.kind = function () { return "AnnotatedType"; }, e.prototype.annotationsMap = function () { var e = this; return this._annotationsMap || (this._annotationsMap = {}, this.annotations().forEach(function (t) { var n = t.name(), r = n.lastIndexOf("."); r >= 0 && (n = n.substring(r + 1)), e._annotationsMap[n] = t; })), this._annotationsMap; }, e.prototype.annotations = function () { var e = this; return this._annotations || (this._annotations = this._type.meta().filter(function (e) { return e.kind() == N.MetaInformationKind.Annotation; }).map(function (t) { return new Te(t, e.reg); })), this._annotations; }, e.prototype.value = function () { return ge.storeAsJSON(this._type); }, e.prototype.name = function () { return this._type.name(); }, e.prototype.entry = function () { return this._type; }, e; }();
            t.AnnotatedType = Ae;
            var Te = function () { function e(e, t) { this.actual = e; } return e.prototype.name = function () { return this.actual.facetName(); }, e.prototype.value = function () { return this.actual.value(); }, e.prototype.definition = function () { var e = ne.get(this.actual.facetName()); return e; }, e.prototype.annotation = function () { return this.actual; }, e; }();
            t.AnnotationInstance = Te, t.applyAnnotationValidationPlugins = y, t.applyTypeValidationPlugins = v, t.toValidationPath = A;
        }, function (e, t, n) { (function (e) {
            "use strict";
            function n() { var t = e.ramlValidation; if (t) {
                var n = t.typeValidators;
                if (Array.isArray(n))
                    return n;
            } return []; }
            function r() { var t = e.ramlValidation; if (t) {
                var n = t.typesystemAnnotationValidators;
                if (Array.isArray(n))
                    return n;
            } return []; }
            t.REPEAT = "repeat", t.PARSE_ERROR = "parseError", t.TOP_LEVEL_EXTRA = "topLevel", t.DEFINED_IN_TYPES_EXTRA = "definedInTypes", t.USER_DEFINED_EXTRA = "USER_DEFINED", t.SOURCE_EXTRA = "SOURCE", t.SCHEMA_AND_TYPE_EXTRA = "SCHEMA", t.GLOBAL_EXTRA = "GLOBAL", t.HAS_FACETS = "HAS_FACETS", t.HAS_ITEMS = "HAS_ITEMS", function (e) { e[e.Description = 0] = "Description", e[e.NotScalar = 1] = "NotScalar", e[e.DisplayName = 2] = "DisplayName", e[e.Usage = 3] = "Usage", e[e.Annotation = 4] = "Annotation", e[e.FacetDeclaration = 5] = "FacetDeclaration", e[e.CustomFacet = 6] = "CustomFacet", e[e.Example = 7] = "Example", e[e.Required = 8] = "Required", e[e.HasPropertiesFacet = 9] = "HasPropertiesFacet", e[e.AllowedTargets = 10] = "AllowedTargets", e[e.Examples = 11] = "Examples", e[e.XMLInfo = 12] = "XMLInfo", e[e.Default = 13] = "Default", e[e.Constraint = 14] = "Constraint", e[e.Modifier = 15] = "Modifier", e[e.Discriminator = 16] = "Discriminator", e[e.DiscriminatorValue = 17] = "DiscriminatorValue"; }(t.MetaInformationKind || (t.MetaInformationKind = {}));
            t.MetaInformationKind;
            t.getTypeValidationPlugins = n, t.getAnnotationValidationPlugins = r;
        }).call(t, function () { return this; }()); }, function (e, t, n) {
            "use strict";
            function r(e, t, n, r) { return void 0 === n && (n = T.builtInRegistry()), v(e, new D(null, t, !1, r), n); }
            function i(e, t, n) { return void 0 === t && (t = T.builtInRegistry()), u(new D(null, e, !1, n), t); }
            function a(e) { return "?" == e.charAt(e.length - 1); }
            function o(e, t) { void 0 === t && (t = T.builtInRegistry()); var n = e.provider && e.provider(); return u(new D(null, e, !1, n), t); }
            function s(e) { return new F(e); }
            function u(e, t) { var n = new x; if (e.anchor) {
                if (e.anchor().__$$)
                    return e.anchor().__$$;
                e.anchor().__$$ = n;
            } var r = e.childWithKey("types"); r && r.kind() === O.ARRAY && (r = s(r)); var i = e.childWithKey("schemas"); i && i.kind() === O.ARRAY && (i = s(i)); var a = new k(r, i, t, n); r && r.kind() !== O.SCALAR && r.children().filter(function (e) { return e.key() && !0; }).forEach(function (e) { var t = T.derive(e.key(), [T.REFERENCE]); n.add(t), a.addType(t); }), i && i.kind() !== O.SCALAR && i.children().filter(function (e) { return e.key() && !0; }).forEach(function (e) { var t = T.derive(e.key(), [T.REFERENCE]); n.add(t), a.addType(t); }); var o = e.childWithKey("uses"); o && o.kind() === O.ARRAY && (o = s(o)), o && o.kind() === O.MAP && o.children().forEach(function (e) { n.addLibrary(e.key(), u(e, t)); }), r && r.kind() !== O.SCALAR && r.children().filter(function (e) { return e.key() && !0; }).forEach(function (e) { a.get(e.key()); }), i && i.kind() !== O.SCALAR && i.children().filter(function (e) { return e.key() && !0; }).forEach(function (e) { a.get(e.key()); }), a.types().forEach(function (e) { return n.add(e); }); var r = e.childWithKey("annotationTypes"); return r && r.kind() === O.ARRAY && (r = s(r)), null != r && r.kind() === O.MAP && r.children().forEach(function (e) { n.addAnnotationType(v(e.key(), e, a, !1, !0, !1)); }), n; }
            function l(e, t) { var n = new U, r = !1, i = e.childWithKey("required"); if (i) {
                var o = i.value();
                "boolean" == typeof o && (r = !0), o === !1 && (n.optional = !0, n.id = e.key());
            } var s = e.key(); return !r && a(e.key()) && (s = s.substr(0, s.length - 1), n.optional = !0), 0 == s.length || "/.*/" === s ? n.additonal = !0 : "/" == s.charAt(0) && "/" == s.charAt(s.length - 1) && (s = s.substring(1, s.length - 1), n.regExp = !0), n.type = v(null, e, t, !1, !1, !1), n.id = s, n; }
            function p(e) { var t = new B; t.name = e.name(), t.superTypes = e.superTypes().map(function (e) { return m(e); }), t.annotations = [], t.customFacets = [], t.facetDeclarations = [], t.basicFacets = [], t.properties = []; var n = {}; return e.declaredMeta().forEach(function (e) { if (e instanceof R.Annotation)
                t.annotations.push(e);
            else if (e instanceof R.CustomFacet)
                t.customFacets.push(e);
            else if (e instanceof R.NotScalar)
                t.notAScalar = !0;
            else if (e instanceof M.FacetDeclaration)
                t.facetDeclarations.push(e);
            else if (e instanceof N.HasProperty)
                if (n.hasOwnProperty(e.value()))
                    n[e.value()].optional = !1;
                else {
                    var r = new U;
                    r.optional = !1, r.id = e.value(), r.type = T.ANY, n[e.value()] = r;
                }
            else if (e instanceof N.AdditionalPropertyIs) {
                var r = new U;
                r.optional = !1, r.id = "/.*/", r.additonal = !0, r.type = e.value(), n["/.*/"] = r;
            }
            else if (e instanceof N.MapPropertyIs) {
                var r = new U;
                r.optional = !1, r.id = e.regexpValue(), r.regExp = !0, r.type = e.value(), n[e.regexpValue()] = r;
            }
            else if (e instanceof N.PropertyIs)
                if (n.hasOwnProperty(e.propertyName()))
                    n[e.propertyName()].type = e.value();
                else {
                    var r = new U;
                    r.optional = !0, r.id = e.propertyName(), r.type = e.value(), n[e.propertyName()] = r;
                }
            else
                e instanceof N.KnownPropertyRestriction ? t.additionalProperties = e.value() : e instanceof R.DiscriminatorValue ? e.isStrict() && t.basicFacets.push(e) : e instanceof R.HasPropertiesFacet || t.basicFacets.push(e); }), Object.keys(n).forEach(function (e) { return t.properties.push(n[e]); }), t; }
            function c(e) { return e instanceof _.AbstractType ? p(e).toJSON() : f(e); }
            function f(e) { var t = {}, n = {}; e.types().forEach(function (e) { n[e.name()] = c(e); }), Object.keys(n).length > 0 && (t.types = n); var n = {}; return e.annotationTypes().forEach(function (e) { n[e.name()] = c(e); }), Object.keys(n).length > 0 && (t.annotationTypes = n), t; }
            function m(e) { if (e.isAnonymous()) {
                if (e.isArray()) {
                    var t = e.oneMeta(N.ComponentShouldBeOfType);
                    if (t) {
                        var n = t.value();
                        return n.isAnonymous() && n.isUnion() ? "(" + m(n) + ")[]" : m(n) + "[]";
                    }
                }
                return e.isUnion() ? e.options().map(function (e) { return m(e); }).join(" | ") : e.superTypes().map(function (e) { return m(e); }).join(" , ");
            } return e.name(); }
            function h(e, t) {
                if (t === T.ANY || e === t || e.superTypes().some(function (e) { return h(e, t); }))
                    return !0;
                if (e.isUnion() && e.options) {
                    var n = e.options();
                    if (n.some(function (e) { return h(e, t); }))
                        return !0;
                }
                if (t.isUnion() && t.options) {
                    var n = t.options();
                    if (n.some(function (t) { return e == t; }))
                        return !0;
                }
                return !1;
            }
            function d(e, t) { var n = e.requiredType(), r = e.requiredTypes(); return r && r.length > 0 ? r.some(function (e) { return h(t, e); }) : h(t, n); }
            function y(e, t) { for (var n = t.children(), r = 0, i = n; r < i.length; r++) {
                var a = i[r], o = a.key();
                if (o && "(" == o.charAt(0) && ")" == o.charAt(o.length - 1)) {
                    var s = o.substring(1, o.length - 1), u = new R.Annotation(s, a.value());
                    u.setOwnerFacet(e), e.addAnnotation(u);
                }
            } }
            function v(e, t, n, r, i, a, o) { void 0 === n && (n = T.builtInRegistry()), void 0 === r && (r = !1), void 0 === i && (i = !1), void 0 === a && (a = !0), void 0 === o && (o = !1); var p = t.childWithKey("uses"); if (p && (p.kind() === O.ARRAY && (p = s(p)), p.kind() === O.MAP)) {
                var c = new x;
                p.children().forEach(function (e) { c.addLibrary(e.key(), u(e, T.builtInRegistry())); }), n = new k(null, null, n, c);
            } if (t.kind() == O.SCALAR) {
                var f, m = t.value();
                if (f = null == m || "Null" == m || "NULL" == m ? T.STRING : b.parseToType("" + m, n, t), null == e)
                    return f;
                var h = T.derive(e, [f]);
                return k.isInstance(n) && (h = g(h, n)), h;
            } if (t.kind() == O.ARRAY) {
                var A = [];
                t.children().forEach(function (e) { A.push(b.parseToType("" + e.value(), n, t)); });
                var h = T.derive(e, A);
                return k.isInstance(n) && (h = g(h, n)), h;
            } var N = [], _ = t.childWithKey("type"), M = !1; _ ? t.childWithKey("schema") && (M = !0) : _ = t.childWithKey("schema"); var w = []; if (!_ || o)
                N = r ? t.childWithKey("properties") ? [T.OBJECT] : [T.ANY] : t.childWithKey("properties") ? [T.OBJECT] : [T.STRING];
            else {
                var L = [], D = _.childWithKey("value");
                if (!D || D.kind() != O.SCALAR && D.kind() != O.ARRAY || (L = [_.children().filter(function (e) { var t = e.key(); return t ? "(" == t.charAt(0) && ")" == t.charAt(t.length - 1) : !1; })], _ = D), _.kind() == O.SCALAR) {
                    var m = _.value();
                    if (null == m || "Null" == m || "NULL" == m)
                        N = [T.STRING];
                    else {
                        var U = _.contentProvider ? _.contentProvider() : null;
                        N = [b.parseToType("" + m, n, t, U)];
                    }
                }
                else
                    _.kind() == O.ARRAY ? N = _.children().map(function (e) { var t = e.childWithKey("value"); return !t || t.kind() != O.SCALAR && t.kind() != O.ARRAY ? L.push([]) : (L.push(e.children().filter(function (e) { var t = e.key(); return t ? "(" == t.charAt(0) && ")" == t.charAt(t.length - 1) : !1; })), e = t), e.value(); }).map(function (e) { return b.parseToType("" + e, n, t); }) : _.kind() == O.MAP && (N = [v("", _, n, !1, !1, !1)]);
                if (L.length > 0 && L.filter(function (e) { return e.length > 0; }).length > 0)
                    for (var F = 0, B = L; F < B.length; F++) {
                        var K = B[F], V = [];
                        w.push(V);
                        for (var j = 0, W = K; j < W.length; j++) {
                            var q = W[j], H = q.key(), Y = H.substring(1, H.length - 1), G = new R.Annotation(Y, q.value());
                            V.push(G);
                        }
                    }
            } for (var X = T.derive(e, N), z = 0; z < w.length; z++) {
                var $ = w[z];
                X.addSupertypeAnnotation($, z);
            } k.isInstance(n) && (X = g(X, n)); var J = X, Q = null; if (t.children().forEach(function (e) { var r = e.key(); D = e.childWithKey("value"); var a = e; if ("example" != r && D && (a = D), r && "type" !== r && "uses" !== r && "schema" !== r && ("properties" != r && "additionalProperties" != r || !X.isSubTypeOf(T.OBJECT))) {
                var o;
                if ("items" == r) {
                    if (X.isSubTypeOf(T.ARRAY)) {
                        var s = [];
                        if (a.kind() == O.SCALAR) {
                            var u = a.value();
                            s = null == u || "Null" == u || "NULL" == u ? [T.STRING] : [b.parseToType("" + u, n, t)];
                        }
                        else if (a.kind() == O.ARRAY) {
                            s = a.children().map(function (e) { var t = e.childWithKey("value"); return !t || t.kind() != O.SCALAR && t.kind() != O.ARRAY ? L.push([]) : (L.push(e.children().filter(function (e) { var t = e.key(); return t ? "(" == t.charAt(0) && ")" == t.charAt(t.length - 1) : !1; })), e = t), e.value(); }).map(function (e) { return b.parseToType("" + e, n, t); });
                            var l = T.error(E.ITEMS_SHOULD_BE_REFERENCE_OR_INLINE_TYPE, J);
                            l.setValidationPath({ name: "items" }), X.putExtra(S.PARSE_ERROR, l);
                        }
                        else
                            a.kind() == O.MAP && (s = [v("", a, n, !1, !1, !1)]);
                        var p = 1 == s.length ? s[0] : T.derive("", s);
                        return o = new C.ComponentShouldBeOfType(p), J.addMeta(o), J.putExtra(S.HAS_ITEMS, !0), D && y(o, e), o;
                    }
                }
                else {
                    if ("facets" === r)
                        return void (Q = r);
                    if ("default" == r || "xml" == r || "required" == r)
                        Q = r;
                    else if ("(" == r.charAt(0) && ")" == r.charAt(r.length - 1))
                        return void X.addMeta(new R.Annotation(r.substr(1, r.length - 2), a.value()));
                    if (o = I.getInstance().buildFacet(r, a.value()), o && ("format" != r || d(o, X)))
                        o.setNode(a), X.addMeta(o);
                    else if (i && "allowedTargets" === r)
                        X.addMeta(new R.AllowedTargets(a.value()));
                    else {
                        var c = new R.CustomFacet(r, a.value());
                        c.setNode(a), X.addMeta(c);
                    }
                }
                o && y(o, e);
            } }), 0 == X.metaOfType(R.DiscriminatorValue).length && X.addMeta(new R.DiscriminatorValue(X.name(), !1)), X.isSubTypeOf(T.OBJECT)) {
                var Z = t.childWithKey("properties"), ee = !1;
                if (Z)
                    if (X.addMeta(new R.HasPropertiesFacet), Z.kind() == O.MAP)
                        Z.children().forEach(function (e) { ee = !0, l(e, n).add(X); });
                    else {
                        var te = T.error(E.PROPERTIES_MAP, J);
                        te.setValidationPath({ name: "properties" }), X.putExtra(S.PARSE_ERROR, te);
                    }
                var ne = t.childWithKey("additionalProperties");
                if (ne)
                    if (D = ne.childWithKey("value"), D && (ne = D), "boolean" == typeof ne.value())
                        X.addMeta(new P.KnownPropertyRestriction(ne.value()));
                    else {
                        var te = T.error(E.ADDITIONAL_PROPERTIES_BOOLEAN, J);
                        te.setValidationPath({ name: "additionalProperties" }), X.putExtra(S.PARSE_ERROR, te);
                    }
            } var Z = t.childWithKey("facets"); if (Z)
                if (Z.kind() == O.MAP)
                    Z.children().forEach(function (e) { var t = l(e, n); X.addMeta(new R.FacetDeclaration(t.id, t.type, t.optional)); });
                else {
                    var te = T.error(E.FACETS_MAP, J);
                    te.setValidationPath({ name: "facets" }), X.putExtra(S.PARSE_ERROR, te);
                } return X.isAnonymous() && X.isEmpty() && 1 == X.superTypes().length ? X.superTypes()[0] : (t.kind() != O.SCALAR && X.addMeta(new R.NotScalar), M && J.putExtra(T.SCHEMA_AND_TYPE, !0), J.putExtra(T.GLOBAL, a), J.putExtra(T.SOURCE_EXTRA, t), J.putExtra(S.HAS_FACETS, Q), J); }
            function g(e, t) { for (var n, r = t; r && !(n = r.typeMap()[e.name()]);)
                r = r.parent(); return null != n && n.isSubTypeOf(T.REFERENCE) ? null != n && n.isSubTypeOf(T.REFERENCE) && (n.patch(e), e = n) : t.addType(e), e.putExtra(S.TOP_LEVEL_EXTRA, !0), e; }
            var A = this && this.__extends || function (e, t) { function n() { this.constructor = e; } for (var r in t)
                t.hasOwnProperty(r) && (e[r] = t[r]); e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype, new n); }, T = n(101), E = T.messageRegistry, S = n(102), N = n(105), _ = n(101), b = n(144), I = n(104), R = n(106), M = n(106), w = n(101), C = n(105), L = n(70), P = n(105);
            !function (e) { e[e.SCALAR = 0] = "SCALAR", e[e.ARRAY = 1] = "ARRAY", e[e.MAP = 2] = "MAP"; }(t.NodeKind || (t.NodeKind = {}));
            var O = t.NodeKind, D = function () { function e(e, t, n, r) { void 0 === n && (n = !1), this._key = e, this.obj = t, this.inArr = n, this.provider = r; } return e.prototype.value = function () { return this.obj; }, e.prototype.key = function () { if (!this._key && this.kind() === O.MAP && this.inArr) {
                var e = Object.keys(this.obj);
                if (1 === e.length)
                    return e[0];
            } return this._key; }, e.prototype.childWithKey = function (t) { return null == this.obj ? null : this.obj.hasOwnProperty(t) ? new e(t, this.obj[t], !1, this.contentProvider()) : null; }, e.prototype.children = function () { var t = this; return Array.isArray(this.obj) ? this.obj.map(function (n) { return new e(null, n, !0, t.contentProvider()); }) : this.obj && "object" == typeof this.obj ? Object.keys(this.obj).map(function (n) { return new e(n, t.obj[n], !1, t.provider); }) : []; }, e.prototype.kind = function () { return this.obj ? Array.isArray(this.obj) ? O.ARRAY : "object" == typeof this.obj ? O.MAP : O.SCALAR : O.SCALAR; }, e.prototype.contentProvider = function () { return this.provider; }, e; }();
            t.parseJSON = r, t.parseJSONTypeCollection = i;
            var U = function () { function e() { } return e.prototype.add = function (e) { this.optional || this.additonal || this.regExp || this.type.isSubTypeOf(T.NIL) || e.addMeta(new N.HasProperty(this.id)); var t; t = this.additonal ? new N.AdditionalPropertyIs(this.type) : this.regExp ? new N.MapPropertyIs(this.id, this.type) : new N.PropertyIs(this.id, this.type, this.optional), null != t && (e.addMeta(t), this.type instanceof T.InheritedType && null == this.type.name() && this.type.setContextMeta(t)); }, e; }();
            t.PropertyBean = U;
            var x = function () { function e() { this._types = [], this._typeMap = {}, this.uses = {}, this._annotationTypes = [], this._annotationTypeMap = {}; } return e.prototype.library = function (e) { return this.uses[e]; }, e.prototype.addLibrary = function (e, t) { this.uses[e] = t; }, e.prototype.add = function (e) { this._types.push(e), this._typeMap[e.name()] = e; }, e.prototype.getType = function (e) { return this._typeMap.hasOwnProperty(e) ? this._typeMap[e] : null; }, e.prototype.addAnnotationType = function (e) { this._annotationTypes.push(e), this._annotationTypeMap[e.name()] = e; }, e.prototype.getAnnotationType = function (e) { return this._annotationTypeMap.hasOwnProperty(e) ? this._annotationTypeMap[e] : null; }, e.prototype.types = function () { return this._types; }, e.prototype.annotationTypes = function () { return this._annotationTypes; }, e.prototype.getAnnotationTypeRegistry = function () { var e = this, t = new w.TypeRegistry(T.builtInRegistry()); return this.annotationTypes().forEach(function (e) { return t.addType(e); }), Object.keys(this.uses).forEach(function (n) { e.uses[n].annotationTypes().forEach(function (e) { return t.put(n + "." + e.name(), e); }); }), t; }, e.prototype.getTypeRegistry = function () { var e = this, t = new w.TypeRegistry(T.builtInRegistry()); return this.types().forEach(function (e) { return t.addType(e); }), Object.keys(this.uses).forEach(function (n) { e.uses[n].types().forEach(function (e) { return t.put(n + "." + e.name(), e); }); }), t; }, e; }();
            t.TypeCollection = x;
            var k = function (e) { function t(t, n, r, i) { e.call(this, r), this.toParse = t, this.schemas = n, this._c = i, this.parsing = {}; } return A(t, e), t.prototype.getClassIdentifier = function () { var n = e.prototype.getClassIdentifier.call(this); return n.concat(t.CLASS_IDENTIFIER_AccumulatingRegistry); }, t.isInstance = function (e) { return null != e && e.getClassIdentifier && "function" == typeof e.getClassIdentifier && L.contains(e.getClassIdentifier(), t.CLASS_IDENTIFIER_AccumulatingRegistry); }, t.prototype.get = function (t) { var n = e.prototype.get.call(this, t); if (!n || n.isSubTypeOf(T.REFERENCE)) {
                var r = this.toParse ? this.toParse.childWithKey(t) : null;
                if (r || (r = this.schemas ? this.schemas.childWithKey(t) : null), r) {
                    if (this.parsing[t]) {
                        var i = T.derive(t, [T.RECURRENT]);
                        return n && n.isSubTypeOf(T.REFERENCE) ? n.patch(i) : n = i, n;
                    }
                    this.parsing[t] = !0;
                    try {
                        var a = v(t, r, this);
                    }
                    finally {
                        delete this.parsing[t];
                    }
                    return a;
                }
                var o = t.indexOf(".");
                if (-1 != o) {
                    var s = t.substring(0, o), u = t.substr(o + 1), l = this._c.library(s);
                    if (l) {
                        var p = l.getType(u);
                        if (p)
                            return p;
                    }
                }
            } return n; }, t.CLASS_IDENTIFIER_AccumulatingRegistry = "parse.AccumulatingRegistry", t; }(T.TypeRegistry);
            t.AccumulatingRegistry = k, t.parseTypes = o;
            var F = function () { function e(e) { this.n = e; } return e.prototype.key = function () { return null; }, e.prototype.value = function () { return null; }, e.prototype.childWithKey = function (e) { for (var t = this.children(), n = 0; n < t.length; n++)
                if (t[n].key() == e)
                    return t[n]; return null; }, e.prototype.children = function () { return this.n.children().map(function (e) { var t = e.children(); return 1 == t.length ? t[0] : e; }); }, e.prototype.kind = function () { return O.MAP; }, e; }();
            t.parseTypeCollection = u, t.parsePropertyBean = l;
            var B = function () { function e() { } return e.prototype.toJSON = function () { var e = {}; if (this.superTypes && this.superTypes.length > 0 && (1 == this.superTypes.length ? e.type = this.superTypes[0] : e.type = this.superTypes), this.customFacets && this.customFacets.forEach(function (t) { return e[t.facetName()] = t.value(); }), this.annotations && this.annotations.forEach(function (t) { return e["(" + t.facetName() + ")"] = t.value(); }), this.facetDeclarations && this.facetDeclarations.length > 0) {
                var t = {};
                this.facetDeclarations.forEach(function (e) { var n = e.facetName(); e.isOptional() && (n += "?"); var r = null; r = e.type().isAnonymous() ? e.type().isEmpty() ? m(e.type()) : p(e.type()).toJSON() : m(e.type()), t[n] = r; }), e.facets = t;
            } if (this.properties && this.properties.length > 0) {
                var n = {};
                this.properties.forEach(function (e) { var t = e.id; e.optional && (t += "?"), e.additonal && (t = "/.*/"), e.regExp && (t = "/" + t + "/"); var r = null; r = e.type.isAnonymous() ? e.type.isEmpty() ? m(e.type) : p(e.type).toJSON() : m(e.type), n[t] = r; }), e.properties = n;
            } return this.basicFacets && this.basicFacets.forEach(function (t) { e[t.facetName()] = t.value(); }), 1 == Object.keys(e).length && !this.notAScalar && e.type ? e.type : (void 0 !== this.additionalProperties && (e.additionalProperties = this.additionalProperties), e); }, e; }();
            t.TypeProto = B, t.toProto = p, t.storeAsJSON = c, t.parse = v;
        }, function (e, t, n) {
            "use strict";
            function r() { return h ? h : h = new m; }
            var i = n(101), a = n(106), o = n(101), s = n(105), u = n(106), l = n(106), p = n(106), c = n(105), f = function () { function e(e, t) { this._construct = e, this._constructWithValue = t; } return e.prototype.isSimple = function () { return null != this._constructWithValue; }, e.prototype.newInstance = function () { return this._construct(); }, e.prototype.createWithValue = function (e) { return this._constructWithValue(e); }, e.prototype.isApplicable = function (e) { var t = this.newInstance(), n = t.requiredType(), r = t.requiredTypes(); return r && r.length > 0 ? r.some(function (t) { return e.isSubTypeOf(t); }) : e.isSubTypeOf(n); }, e.prototype.isInheritable = function () { return this.newInstance().isInheritable(); }, e.prototype.isConstraint = function () { return this.newInstance() instanceof i.Constraint; }, e.prototype.isMeta = function () { return !this.isConstraint(); }, e.prototype.name = function () { return this.newInstance().facetName(); }, e; }();
            t.FacetPrototype = f;
            var m = function () { function e() { var e = this; this.constraints = [new f(function () { return new s.MinProperties(1); }, function (e) { return new s.MinProperties(e); }), new f(function () { return new s.MaxProperties(1); }, function (e) { return new s.MaxProperties(e); }), new f(function () { return new s.MinItems(1); }, function (e) { return new s.MinItems(e); }), new f(function () { return new s.MaxItems(1); }, function (e) { return new s.MaxItems(e); }), new f(function () { return new s.MinLength(1); }, function (e) { return new s.MinLength(e); }), new f(function () { return new s.MaxLength(1); }, function (e) { return new s.MaxLength(e); }), new f(function () { return new s.Minimum(1); }, function (e) { return new s.Minimum(e); }), new f(function () { return new c.MultipleOf(1); }, function (e) { return new c.MultipleOf(e); }), new f(function () { return new s.Maximum(1); }, function (e) { return new s.Maximum(e); }), new f(function () { return new s.Enum([""]); }, function (e) { return new s.Enum(e); }), new f(function () { return new s.Pattern("."); }, function (e) { return new s.Pattern(e); }), new f(function () { return new s.Format(""); }, function (e) { return new s.Format(e); }), new f(function () { return new s.PropertyIs("x", i.ANY); }, null), new f(function () { return new s.AdditionalPropertyIs(i.ANY); }, null), new f(function () { return new s.MapPropertyIs(".", i.ANY); }, null), new f(function () { return new s.HasProperty("x"); }, null), new f(function () { return new s.UniqueItems(!0); }, function (e) { return new s.UniqueItems(e); }), new f(function () { return new s.ComponentShouldBeOfType(i.ANY); }, null), new f(function () { return new s.KnownPropertyRestriction(!1); }, function (e) { return new s.KnownPropertyRestriction(e); }), new f(function () { return new s.FileTypes([""]); }, function (e) { return new s.FileTypes(e); })], this.meta = [new f(function () { return new a.Discriminator("kind"); }, function (e) { return new a.Discriminator(e); }), new f(function () { return new a.DiscriminatorValue("x"); }, function (e) { return new a.DiscriminatorValue(e); }), new f(function () { return new u.Default(""); }, function (e) { return new u.Default(e); }), new f(function () { return new u.Example(""); }, function (e) { return new u.Example(e); }), new f(function () { return new p.Required(!0); }, function (e) { return new p.Required(e); }), new f(function () { return new a.Examples({}); }, function (e) { return new a.Examples(e); }), new f(function () { return new u.Description(""); }, function (e) { return new u.Description(e); }), new f(function () { return new u.DisplayName(""); }, function (e) { return new u.DisplayName(e); }), new f(function () { return new o.Abstract; }, function (e) { return new o.Abstract; }), new f(function () { return new o.Polymorphic; }, function (e) { return new o.Polymorphic; }), new f(function () { return new l.XMLInfo({}); }, function (e) { return new l.XMLInfo(e); })], this.known = {}, this.allPrototypes().forEach(function (t) { return e.known[t.name()] = t; }); } return e.prototype.allPrototypes = function () { return this.meta.concat(this.constraints); }, e.prototype.buildFacet = function (e, t) { return this.known.hasOwnProperty(e) && this.known[e].isSimple() ? this.known[e].createWithValue(t) : null; }, e.prototype.facetPrototypeWithName = function (e) { return this.known.hasOwnProperty(e) ? this.known[e] : null; }, e.prototype.applyableTo = function (e) { return this.allPrototypes().filter(function (t) { return t.isApplicable(e); }); }, e.prototype.allMeta = function () { return this.allPrototypes().filter(function (e) { return e.isMeta(); }); }, e; }();
            t.Registry = m;
            var h;
            t.getInstance = r;
        }, function (e, t, n) {
            "use strict";
            function r() { return N.length > 0 ? N[N.length - 1] : null; }
            function i(e) { for (var t; e;)
                t = e.owner(), e = t instanceof f.InheritedType ? t.contextMeta() : null; N.push(t); }
            function a(e) { for (void 0 === e && (e = 0); N.length > e;)
                N.pop(); }
            function o() { return N.length; }
            function s(e) { return parseFloat(e) != parseInt(e) || isNaN(e) ? !1 : !0; }
            function u(e) { e = e.map(function (e) { return e.preoptimize(); }); var t = []; e.forEach(function (e) { if (e instanceof y.AndRestriction) {
                var n = e;
                n.options().forEach(function (e) { t.push(e); });
            }
            else
                t.push(e); }); for (var n = !0; n;) {
                n = !1;
                for (var r = 0; r < t.length; r++) {
                    for (var i = 0; i < t.length; i++) {
                        var a = t[r], o = t[i];
                        if (a !== o) {
                            var s = a.tryCompose(o);
                            if (s) {
                                var u = t.filter(function (e) { return e !== a && e !== o; });
                                u.push(s), n = !0, t = u;
                                break;
                            }
                        }
                    }
                    if (n)
                        break;
                }
            } return t; }
            function l(e) { if (!e.isSubTypeOf(f.UNKNOWN))
                return null; if (null != e.name())
                return e; for (var t = 0, n = e.superTypes(); t < n.length; t++) {
                var r = n[t], i = l(r);
                if (null != i)
                    return i;
            } return e; }
            function p(e, t, n, r, i) { if (void 0 === i && (i = !1), e.isExternal()) {
                var a = void 0;
                return a = i ? f.error(m.EXTERNAL_IN_FACET_DEFINITION, r) : f.error(m.EXTERNAL_IN_PROPERTY_DEFINITION, r), f.setValidationPath(a, { name: t }), a;
            } if (e.isSubTypeOf(f.UNKNOWN) || e.isSubTypeOf(f.RECURRENT)) {
                var o = l(e), a = void 0;
                return a = i ? f.error(m.UNKNOWN_IN_FACET_DEFINITION, r, { facetName: t, msg: o.name() }) : f.error(m.UNKNOWN_IN_PROPERTY_DEFINITION, r, { propName: t, typeName: o.name() }), f.setValidationPath(a, { name: t, child: { name: "type" } }), a;
            } if (e.isAnonymous()) {
                var s = e.validateType(n);
                if (!s.isOk()) {
                    var u;
                    return u = i ? f.error(m.ERROR_IN_FACET_RANGE, r, { facetName: t, msg: s.getMessage() }) : f.error(m.ERROR_IN_RANGE, r, { propName: t, msg: s.getMessage() }), s.getErrors().forEach(function (e) { u.addSubStatus(e); }), f.setValidationPath(u, { name: t }), u;
                }
                return s;
            } if (e.isUnion()) {
                var p = d.find(e.typeFamily(), function (e) { return e.isSubTypeOf(f.UNKNOWN); });
                if (p) {
                    var a = void 0;
                    return a = i ? f.error(m.UNKNOWN_IN_FACET_DEFINITION, r, { facetName: t, msg: p.name() }) : f.error(m.UNKNOWN_IN_PROPERTY_DEFINITION, r, { propName: t, typeName: p.name() }), f.setValidationPath(a, { name: t }), a;
                }
            } return f.ok(); }
            var c = this && this.__extends || function (e, t) { function n() { this.constructor = e; } for (var r in t)
                t.hasOwnProperty(r) && (e[r] = t[r]); e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype, new n); }, f = n(101), m = f.messageRegistry, h = n(111), d = n(70), y = n(101), v = n(101), g = function (e) { function t(t) { e.call(this), this._type = t; } return c(t, e), t.prototype.matches = function (e) { return !1; }, t.prototype.check = function (e, t) { throw new Error(m.SHOULD_BE_NEVER_CALLED.message); }, t.prototype.patchPath = function (e, t) { if (e) {
                for (var n = e, r = null, i = null; n;)
                    if (r) {
                        var a = { name: n.name };
                        i.child = a, n = n.child, i = a;
                    }
                    else
                        r = { name: n.name }, i = r;
                return r.child = { name: t }, r;
            } return { name: t }; }, t.prototype.validateProp = function (e, t, n, r) { var i = e[t], a = n.validate(i, !1, !1); if (!a.isOk()) {
                if (n.isUnknown() || n.isRecurrent()) {
                    var o = f.error(m.VALIDATING_AGAINS_UNKNOWN, this, { typeName: n.name() });
                    return f.setValidationPath(o, this.patchPath(r, t)), o;
                }
                var o = new v.Status(v.Status.OK, "", "", this);
                return a.getErrors().forEach(function (e) { return o.addSubStatus(e); }), f.setValidationPath(o, this.patchPath(r, t)), o;
            } return f.ok(); }, t.prototype.validateSelf = function (e) { return p(this._type, this.propId(), e, this, !1); }, t; }(f.Constraint);
            t.MatchesProperty = g;
            var A = function (e) { function t(t, n) { e.call(this), this._value = t, this.provider = n; } return c(t, e), t.prototype.value = function () { return this._value; }, t.prototype.check = function (e) { var t = null, n = this.value(); if ("{" == n.charAt(0))
                try {
                    t = h.getJSONSchema(n, this.provider);
                }
                catch (r) {
                    if (f.ValidationError.isInstance(r)) {
                        var i = r, a = i.isWarning ? f.Status.WARNING : f.Status.ERROR, o = f.error(i.messageEntry, this, i.parameters, a, i.parameters);
                        return o;
                    }
                    return f.error(m.INCORRECT_SCHEMA, this, { msg: r.message });
                } if ("<" == n.charAt(0))
                try {
                    t = h.getXMLSchema(n, this.provider);
                }
                catch (r) {
                    return f.ok();
                } if (t)
                try {
                    "string" == typeof e ? t.validate(e) : t.validateObject(e);
                }
                catch (r) {
                    if (f.ValidationError.isInstance(r)) {
                        var i = r, s = f.Status.ERROR;
                        i.isWarning && (s = f.Status.WARNING);
                        var u = f.error(i.messageEntry, this, i.parameters, s);
                        if (u.setInternalRange(i.internalRange), u.setInternalPath(f.toValidationPath(i.internalPath)), u.setFilePath(i.filePath), !i.additionalErrors || 0 == i.additionalErrors.length)
                            return u;
                        var l = f.ok();
                        l.addSubStatus(u);
                        for (var p = 0, c = i.additionalErrors; p < c.length; p++) {
                            var d = c[p], y = f.error(d.messageEntry, this, d.parameters, s);
                            y.setInternalRange(d.internalRange), y.setInternalPath(f.toValidationPath(d.internalPath)), y.setFilePath(d.filePath), l.addSubStatus(y);
                        }
                        return l;
                    }
                    return "!_PERF_!" == r.message ? f.error(m.UNABLE_TO_VALIDATE_XML, this, {}, f.Status.WARNING) : "Maximum call stack size exceeded" == r.message ? f.error(m.CIRCULAR_REFS_IN_JSON_SCHEMA, this) : f.error(m.EXAMPLE_SCHEMA_FAILURE, this, { msg: r.message });
                } return f.ok(); }, t.prototype.facetName = function () { return "schema"; }, t.prototype.requiredType = function () { return f.EXTERNAL; }, t; }(f.Constraint);
            t.MatchToSchema = A;
            var T = function (e) { function t(t) { e.call(this), this._value = t; } return c(t, e), t.prototype.facetName = function () { return "closed"; }, t.prototype.requiredType = function () { return f.OBJECT; }, t.prototype.value = function () { return this._value; }, t.prototype.patchOwner = function (e) { this._owner = e; }, t.prototype.check = function (e) { var t = this; if (this._value === !1 && e && "object" == typeof e && !Array.isArray(e)) {
                var n = {};
                Object.getOwnPropertyNames(e).forEach(function (e) { return n[e] = !0; });
                var r = this.owner().knownProperties();
                Object.getOwnPropertyNames(e).forEach(function (e) { r.forEach(function (t) { t.matches(e) && delete n[e]; }); });
                var i = Object.keys(n);
                if ((this.owner().hasPropertiesFacet() || r.length > 0) && i.length > 0) {
                    var a = new f.Status(f.Status.OK, "", "", this);
                    return i.forEach(function (e) { var n = f.error(m.UNKNOWN_PROPERTY, t, { propName: e }); f.setValidationPath(n, { name: e }), a.addSubStatus(n); }), a;
                }
            } return f.ok(); }, t.prototype.composeWith = function (e) { if (!this._value)
                return null; if (e instanceof t) {
                var n = e;
                if (d.isEqual(this.owner().propertySet(), n.owner().propertySet()))
                    return n;
            } if (e instanceof E) {
                var r = e, i = r.value(), a = this.owner().propertySet();
                if (-1 == a.indexOf(i))
                    return this.nothing(r);
            } }, t; }(f.Constraint);
            t.KnownPropertyRestriction = T;
            var E = function (e) { function t(t) { e.call(this), this.name = t; } return c(t, e), t.prototype.check = function (e) { return e && "object" == typeof e && !Array.isArray(e) ? e.hasOwnProperty(this.name) ? f.ok() : f.error(m.REQUIRED_PROPERTY_MISSING, this, { propName: this.name }) : f.ok(); }, t.prototype.requiredType = function () { return f.OBJECT; }, t.prototype.facetName = function () { return "hasProperty"; }, t.prototype.value = function () { return this.name; }, t.prototype.composeWith = function (e) { if (e instanceof t) {
                var n = e;
                if (n.name === this.name)
                    return this;
            } return null; }, t; }(f.Constraint);
            t.HasProperty = E;
            var S = function (e) { function t(t, n, r) { void 0 === r && (r = !1), e.call(this, n), this.name = t, this.type = n, this.optional = r; } return c(t, e), t.prototype.matches = function (e) { return e === this.name; }, t.prototype.path = function () { return this.name; }, t.prototype.check = function (e, t) { if (e && "object" == typeof e && e.hasOwnProperty(this.name)) {
                var n = this.validateProp(e, this.name, this.type, t);
                return !n.isOk() && this.optional && null == e[this.name] ? f.ok() : n;
            } return f.ok(); }, t.prototype.requiredType = function () { return f.OBJECT; }, t.prototype.propId = function () { return this.name; }, t.prototype.propertyName = function () { return this.name; }, t.prototype.facetName = function () { return "propertyIs"; }, t.prototype.value = function () { return this.type; }, t.prototype.composeWith = function (e) { if (e instanceof t) {
                var n = e;
                if (n.name === this.name) {
                    if (-1 != this.type.typeFamily().indexOf(n.type))
                        return n;
                    if (-1 != n.type.typeFamily().indexOf(this.type))
                        return this;
                    i(e);
                    var r = this.intersect(this.type, n.type);
                    try {
                        var a = r.checkConfluent();
                        if (!a.isOk()) {
                            var o = a;
                            return o.toRestriction();
                        }
                        return new t(this.name, r);
                    }
                    finally {
                        this.release(r);
                    }
                }
            } return null; }, t; }(g);
            t.PropertyIs = S;
            var N = [];
            t.anotherRestrictionComponent = r, t.releaseAnotherRestrictionComponent = a, t.anotherRestrictionComponentsCount = o;
            var _ = function (e) { function t(t, n) { e.call(this, n), this.regexp = t, this.type = n; } return c(t, e), t.prototype.path = function () { return "/" + this.regexp + "/"; }, t.prototype.matches = function (e) { return e.match(this.regexp) ? !0 : !1; }, t.prototype.requiredType = function () { return f.OBJECT; }, t.prototype.propId = function () { return "[" + this.regexp + "]"; }, t.prototype.facetName = function () { return "mapPropertyIs"; }, t.prototype.value = function () { return this.type; }, t.prototype.regexpValue = function () { return this.regexp; }, t.prototype.validateSelf = function (t) { var n = this.checkValue(); return n ? f.error(m.INVALID_REGEXP, this, { msg: n }) : e.prototype.validateSelf.call(this, t); }, t.prototype.checkValue = function () { try {
                new RegExp(this.regexp);
            }
            catch (e) {
                return e.message;
            } return null; }, t.prototype.composeWith = function (e) { if (e instanceof t) {
                var n = e;
                if (n.regexp === this.regexp) {
                    if (-1 != this.type.typeFamily().indexOf(n.type))
                        return n;
                    if (-1 != n.type.typeFamily().indexOf(this.type))
                        return this;
                    var r = this.intersect(this.type, n.type);
                    try {
                        var i = r.checkConfluent();
                        if (!i.isOk()) {
                            var a = i;
                            return a.toRestriction();
                        }
                        return new t(this.regexp, r);
                    }
                    finally {
                        this.release(r);
                    }
                }
            } return null; }, t.prototype.check = function (e, t) { if (e && "object" == typeof e) {
                var n = {};
                null != this._owner && this._owner.meta().filter(function (e) { return e instanceof S; }).forEach(function (e) { n[e.propertyName()] = !0; });
                for (var r = new f.Status(f.Status.OK, "", "", this), i = 0, a = Object.getOwnPropertyNames(e); i < a.length; i++) {
                    var o = a[i];
                    if (!n[o] && o.match(this.regexp)) {
                        var s = this.validateProp(e, o, this.type, t);
                        s.isOk() || r.addSubStatus(s);
                    }
                }
                return r;
            } return f.ok(); }, t; }(g);
            t.MapPropertyIs = _;
            var b = function (e) { function t(t) { e.call(this, t), this.type = t; } return c(t, e), t.prototype.path = function () { return this.facetName(); }, t.prototype.matches = function (e) { return !0; }, t.prototype.requiredType = function () { return f.OBJECT; }, t.prototype.propId = function () { return "[]"; }, t.prototype.facetName = function () { return "additionalProperties"; }, t.prototype.value = function () { return this.type; }, t.prototype.match = function (e) { for (var t = this.owner().metaOfType(S), n = this.owner().metaOfType(_), r = 0; r < t.length; r++)
                if (t[r].matches(e))
                    return !0; for (var r = 0; r < n.length; r++)
                if (n[r].matches(e))
                    return !0; return !1; }, t.prototype.composeWith = function (e) { if (e instanceof t) {
                var n = e;
                if (-1 != this.type.typeFamily().indexOf(n.type))
                    return n;
                if (-1 != n.type.typeFamily().indexOf(this.type))
                    return this;
                var r = this.intersect(this.type, n.type);
                try {
                    var i = r.checkConfluent();
                    if (!i.isOk()) {
                        var a = i;
                        return a.toRestriction();
                    }
                    return new t(r);
                }
                finally {
                    this.release(r);
                }
            } return null; }, t.prototype.check = function (e, t) { var n = this, r = this.type, i = new f.Status(f.Status.OK, "", "", this); return e && "object" == typeof e && Object.getOwnPropertyNames(e).forEach(function (a) { if (!n.match(a)) {
                var o = n.validateProp(e, a, r, t);
                o.isOk() || i.addSubStatus(o);
            } }), i; }, t; }(g);
            t.AdditionalPropertyIs = b;
            var I = function (e) { function t() { e.apply(this, arguments); } return c(t, e), t.prototype.requiredTypes = function () { return []; }, t.prototype.checkOwner = function (e) { var t = !1; if (e.isUnion())
                for (var n = e.typeFamily(), r = 0, i = n; r < i.length; r++) {
                    var a = i[r];
                    if (this.owner().isSubTypeOf(a)) {
                        t = !0;
                        break;
                    }
                }
            else
                t = this.owner().isSubTypeOf(e); return t; }, t.prototype.validateSelf = function (t) { var n = this, r = e.prototype.validateSelf.call(this, t), i = !1; if (this.checkOwner(this.requiredType()))
                if (this.requiredTypes() && this.requiredTypes().length > 0) {
                    var a = (this.owner(), d.find(this.requiredTypes(), function (e) { return n.checkOwner(e); }));
                    a && (i = !0);
                }
                else
                    i = !0; var o; if (i)
                o = this.checkValue();
            else {
                var s = this.requiredType().name();
                this.requiredTypes() && this.requiredTypes().length > 0 && (s = "[" + this.requiredTypes().map(function (e) { return e.name(); }).join() + "]");
                var o = f.error(m.FACET_USAGE_RESTRICTION, this, { facetName: this.facetName(), typeNames: s });
            } if (o && !o.isOk())
                return f.setValidationPath(o, { name: this.facetName() }), o; var u = [r, o].filter(function (e) { return e && !e.isOk(); }); if (0 == u.length)
                return f.ok(); if (1 == u.length)
                return u[0]; for (var l = f.ok(), p = 0, c = u; p < c.length; p++) {
                var h = c[p];
                l.addSubStatus(h);
            } return l; }, t; }(f.Constraint);
            t.FacetRestriction = I;
            var R = function (e) { function t(t, n, r, i, a, o) { e.call(this), this._facetName = t, this._value = n, this._max = r, this._opposite = i, this._requiredType = a, this._isInt = o; } return c(t, e), t.prototype.facetName = function () { return this._facetName; }, t.prototype.isIntConstraint = function () { return this._isInt; }, t.prototype.isMax = function () { return this._max; }, t.prototype.value = function () { return this._value; }, t.prototype.check = function (e) { var t = this.extractValue(e); if ("number" == typeof t)
                if (this.isMax()) {
                    if (this.value() < t)
                        return this.createError();
                }
                else if (this.value() > t)
                    return this.createError(); return f.ok(); }, t.prototype.createError = function () { return new v.Status(v.Status.ERROR, m.MINMAX_RESTRICTION_VIOLATION.code, this.toString(), this); }, t.prototype.minValue = function () { return this._isInt ? 0 : Number.NEGATIVE_INFINITY; }, t.prototype.requiredType = function () { return this._requiredType; }, t.prototype.checkValue = function () { return "number" != typeof this._value ? f.error(m.FACET_REQUIRE_NUMBER, this, { facetName: this.facetName() }, f.Status.ERROR, !0) : this.isIntConstraint() && !s(this.value()) ? f.error(m.FACET_REQUIRE_INTEGER, this, { facetName: this.facetName() }, f.Status.ERROR, !0) : this.value() < this.minValue() ? f.error(m.MIN_VALUE, this, { facetName: this.facetName(), minValue: this.minValue() }, f.Status.ERROR, !0) : void 0; }, t.prototype.composeWith = function (e) { if (e instanceof t) {
                var n = e;
                if (n.facetName() == this.facetName() && n.isMax() == this.isMax())
                    return this.isMax() ? this.value() < n.value() ? n : this : this.value() > n.value() ? n : this;
                if (n.facetName() === this._opposite)
                    if (this.isMax()) {
                        if (n.value() > this.value())
                            return this.nothing(e);
                    }
                    else if (n.value() < this.value())
                        return this.nothing(e);
            } return null; }, t.prototype.facetPath = function () { var e = [this.facetName()], t = this._owner; if (null != t && t instanceof f.InheritedType) {
                var n = t;
                e = f.typePath(n).concat(e);
            } return e.join("."); }, t.prototype.toString = function () { return "'" + this.facetPath() + "=" + this.value() + "' i.e. " + this.textMessagePart() + " " + this.value(); }, t.prototype.conflictMessage = function (e, t) { var n = this.isMax() ? ["less", "higher"] : ["higher", "less"]; return "['" + this.facetPath() + "=" + this.value() + "' is " + n[0] + " than '" + e + "=" + t + "'. The " + this._opposite + " cannot be " + n[1] + " than the " + this.facetName() + ".]"; }, t; }(I);
            t.MinMaxRestriction = R;
            var M = function (e) { function t(t) { e.call(this), this._value = t; } return c(t, e), t.prototype.value = function () { return this._value; }, t.prototype.check = function (e) { if ("number" == typeof e) {
                var t = e / this.value();
                if (!s(t))
                    return f.error(m.EVEN_RATIO, this, { val1: e, val2: this.value() });
            } return f.ok(); }, t.prototype.composeWith = function (e) { return null; }, t.prototype.facetName = function () { return "multipleOf"; }, t.prototype.checkValue = function () { return "number" != typeof this._value ? f.error(m.FACET_REQUIRE_NUMBER, this, { facetName: this.facetName() }, f.Status.ERROR, !0) : this._value <= 0 ? f.error(m.VALUE_SHOULD_BE_POSITIVE, this, { facetName: this.facetName() }, f.Status.ERROR, !0) : null; }, t.prototype.requiredType = function () { return f.NUMBER; }, t; }(I);
            t.MultipleOf = M;
            var w = function (e) { function t(t) { e.call(this, "maximum", t, !0, "minimum", f.NUMBER, !1); } return c(t, e), t.prototype.extractValue = function (e) { return e; }, t.prototype.textMessagePart = function () { return m.VALUE_SHOULD_NOT_BE_MORE.message; }, t; }(R);
            t.Maximum = w;
            var C = function (e) { function t(t) { e.call(this, "minimum", t, !1, "maximum", f.NUMBER, !1); } return c(t, e), t.prototype.extractValue = function (e) { return e; }, t.prototype.textMessagePart = function () { return m.VALUE_SHOULD_NOT_BE_LESS.message; }, t; }(R);
            t.Minimum = C;
            var L = function (e) { function t(t) { e.call(this, "maxItems", t, !0, "minItems", f.ARRAY, !0); } return c(t, e), t.prototype.extractValue = function (e) { return Array.isArray(e) ? e.length : void 0; }, t.prototype.textMessagePart = function () { return m.ARRAY_ITEMS_COUNT_SHOULD_NOT_BE_MORE.message; }, t; }(R);
            t.MaxItems = L;
            var P = function (e) { function t(t) { e.call(this, "minItems", t, !1, "maxItems", f.ARRAY, !0); } return c(t, e), t.prototype.extractValue = function (e) { return Array.isArray(e) ? e.length : void 0; }, t.prototype.textMessagePart = function () { return m.ARRAY_ITEMS_COUNT_SHOULD_NOT_BE_LESS.message; }, t; }(R);
            t.MinItems = P;
            var O = function (e) { function t(t) { e.call(this, "maxLength", t, !0, "minLength", new f.UnionType("string and file", [f.STRING, f.FILE]), !0); } return c(t, e), t.prototype.extractValue = function (e) { return "string" == typeof e ? e.length : 0; }, t.prototype.textMessagePart = function () { return m.STRING_SHOULD_NOT_BE_MORE.message; }, t; }(R);
            t.MaxLength = O;
            var D = function (e) { function t(t) { e.call(this, "minLength", t, !1, "maxLength", new f.UnionType("string and file", [f.STRING, f.FILE]), !0); } return c(t, e), t.prototype.extractValue = function (e) { return "string" == typeof e ? e.length : 0; }, t.prototype.textMessagePart = function () { return m.STRING_SHOULD_NOT_BE_LESS.message; }, t; }(R);
            t.MinLength = D;
            var U = function (e) {
                function t(t) {
                    e.call(this, "maxProperties", t, !0, "minProperties", f.OBJECT, !0);
                }
                return c(t, e), t.prototype.extractValue = function (e) { return Object.keys(e).length; }, t.prototype.textMessagePart = function () { return m.OBJECT_PROPERTIES_SHOULD_NOT_BE_MORE.message; }, t;
            }(R);
            t.MaxProperties = U;
            var x = function (e) { function t(t) { e.call(this, "minProperties", t, !1, "maxProperties", f.OBJECT, !0); } return c(t, e), t.prototype.extractValue = function (e) { return Object.keys(e).length; }, t.prototype.textMessagePart = function () { return m.OBJECT_PROPERTIES_SHOULD_NOT_BE_LESS.message; }, t; }(R);
            t.MinProperties = x;
            var k = function (e) { function t(t) { e.call(this), this._value = t; } return c(t, e), t.prototype.facetName = function () { return "uniqueItems"; }, t.prototype.requiredType = function () { return f.ARRAY; }, t.prototype.check = function (e) { if (!this._value)
                return f.ok(); if (Array.isArray(e)) {
                var t = e;
                if (d.unique(t).length != t.length)
                    return f.error(m.MUST_BE_UNIQUE, this);
            } return f.ok(); }, t.prototype.composeWith = function (e) { if (e instanceof t) {
                var n = e;
                if (n._value == this._value)
                    return this;
            } return null; }, t.prototype.value = function () { return this._value; }, t.prototype.checkValue = function () { return "boolean" != typeof this._value ? f.error(m.UNIQUE_ITEMS_BOOLEAN, this) : null; }, t.prototype.toString = function () { return m.MUST_BE_UNIQUE.message; }, t; }(I);
            t.UniqueItems = k;
            var F = function (e) { function t(t) { e.call(this), this.type = t; } return c(t, e), t.prototype.facetName = function () { return "items"; }, t.prototype.requiredType = function () { return f.ARRAY; }, t.prototype.toString = function () { return f.error(m.ITEMS_SHOULD_BE_OF_TYPE, this, { type: this.type }).getMessage(); }, t.prototype.check = function (e) { var t = new f.Status(f.Status.OK, "", "", this); if (Array.isArray(e))
                for (var n = e, r = 0; r < n.length; r++) {
                    var i = this.type.validate(n[r], !1, !1);
                    if (!i.isOk()) {
                        var a = this.type;
                        if (a.isUnknown() || a.isRecurrent()) {
                            var o = f.error(m.ARRAY_AGAINST_UNKNOWN, this, { typeName: a.name() });
                            return o;
                        }
                    }
                    f.setValidationPath(i, { name: "" + r }), t.addSubStatus(i);
                } return t; }, t.prototype.validateSelf = function (t) { var n = e.prototype.validateSelf.call(this, t); if (this.type.isAnonymous()) {
                var r = this.type.validateType(t);
                return r.isOk() || n.addSubStatus(f.error(m.INVALID_COMPONENT_TYPE, this, { msg: n.getMessage() })), n;
            } if (this.type.isExternal())
                n.addSubStatus(f.error(m.EXTERNAL_AS_COMPONENT, this));
            else if (this.type.isSubTypeOf(f.UNKNOWN) || this.type.isSubTypeOf(f.RECURRENT))
                n.addSubStatus(f.error(m.UNKNOWN_AS_COMPONENT, this, { typeName: this.type.name() }));
            else if (this.type.isUnion()) {
                var i = d.find(this.type.typeFamily(), function (e) { return e.isSubTypeOf(f.UNKNOWN); });
                i && n.addSubStatus(f.error(m.UNKNOWN_AS_COMPONENT, this, { typeName: i.name() }));
            } return n; }, t.prototype.composeWith = function (e) { if (e instanceof t) {
                var n = e;
                if (-1 != this.type.typeFamily().indexOf(n.type))
                    return n;
                if (-1 != n.type.typeFamily().indexOf(this.type))
                    return this;
                var r = this.intersect(this.type, n.type);
                try {
                    var i = r.checkConfluent();
                    if (!i.isOk()) {
                        var a = i;
                        return a.toRestriction();
                    }
                    return new t(r);
                }
                finally {
                    this.release(r);
                }
            } return null; }, t.prototype.checkValue = function () { return null; }, t.prototype.value = function () { return this.type; }, t; }(I);
            t.ComponentShouldBeOfType = F;
            var B = function (e) { function t(t) { e.call(this), this._value = t; } return c(t, e), t.prototype.facetName = function () { return "pattern"; }, t.prototype.requiredType = function () { return f.STRING; }, t.prototype.check = function (e) { if ("string" == typeof e) {
                var t = e;
                try {
                    var n = t.match(this._value), r = !1;
                    if (n)
                        for (var i = 0, a = n; i < a.length; i++) {
                            var o = a[i];
                            if (o.length == t.length) {
                                r = !0;
                                break;
                            }
                        }
                    if (!r)
                        return f.error(m.PATTERN_VIOLATION, this, { value: this.value() });
                }
                catch (s) { }
            } return f.ok(); }, t.prototype.composeWith = function (e) { if (e instanceof t) {
                var n = e;
                return n._value === this._value ? this : this.nothing(e, f.error(m.SHOULD_PASS_REXEXP, this, { name: "pattern restrictions" }).getMessage());
            } return null; }, t.prototype.value = function () { return this._value; }, t.prototype.checkValue = function () { try {
                new RegExp(this._value);
            }
            catch (e) {
                return f.error(m.INVALID_REGEXP, this, { msg: e.message }, f.Status.ERROR, !0);
            } return null; }, t.prototype.toString = function () { return f.error(m.SHOULD_PASS_REXEXP, this, { rexexp: this.value }).getMessage(); }, t; }(I);
            t.Pattern = B;
            var K = function (e) { function t(t) { e.call(this), this._value = t; } return c(t, e), t.prototype.facetName = function () { return "fileTypes"; }, t.prototype.requiredType = function () { return f.FILE; }, t.prototype.check = function (e) { return f.ok(); }, t.prototype.composeWith = function (e) { if (e instanceof t) {
                var n = e, r = d.intersection(this._value, n._value);
                return r.length > 0 ? new t(r) : this.nothing(e, m.NO_COMMON_FILE_TYPES.message);
            } return null; }, t.prototype.value = function () { return this._value; }, t.prototype.checkValue = function () { if (!Array.isArray(this._value))
                return f.error(m.FILE_TYPES_SHOULD_BE_AN_ARRAY, this); for (var e = 0, t = this._value; e < t.length; e++) {
                var n = t[e];
                if ("string" != typeof n)
                    return f.error(m.FILE_TYPES_SHOULD_BE_AN_ARRAY, this);
            } return f.ok(); }, t.prototype.toString = function () { return this.checkValue().isOk() ? f.error(m.SUPPORTED_FILE_TYPES, this, { types: this._value.join(", ") }).getMessage() : m.INVALID_FILETYPES_FACET_VALUE.message; }, t; }(I);
            t.FileTypes = K;
            var V = function (e) { function t(t) { e.call(this), this._value = t; } return c(t, e), t.prototype.facetName = function () { return "format"; }, t.prototype.requiredType = function () { return f.SCALAR; }, t.prototype.requiredTypes = function () { return [f.NUMBER, f.INTEGER, f.DATETIME]; }, t.prototype.check = function (e) { return f.ok(); }, t.prototype.composeWith = function (e) { if (e instanceof t) {
                var n = e;
                return n._value === this._value ? this : this.nothing(e, f.error(m.SHOULD_PASS_REXEXP, this, { name: "Format" }).getMessage());
            } return null; }, t.prototype.value = function () { return this._value; }, t.prototype.checkValue = function () { var e = this; try {
                var t = [];
                if (this.owner().isSubTypeOf(f.INTEGER))
                    t = ["int32", "int64", "int", "long", "int16", "int8"];
                else if (this.owner().isSubTypeOf(f.NUMBER))
                    t = ["int32", "int64", "int", "long", "float", "double", "int16", "int8"];
                else {
                    if (!this.owner().isSubTypeOf(f.DATETIME))
                        return null;
                    t = ["rfc3339", "rfc2616"];
                }
                var n = d.find(t, function (t) { return t == e.value(); });
                if (!n)
                    return f.error(m.ALLOWED_FORMAT_VALUES, this, { allowedValues: t.map(function (e) { return "'" + e + "'"; }).join(", ") }, f.Status.ERROR, !0);
            }
            catch (r) {
                return new v.Status(v.Status.ERROR, "", r.message, this);
            } return null; }, t.prototype.toString = function () { return "should have format:" + this.value; }, t; }(I);
            t.Format = V;
            var j = function (e) { function t(t) { e.call(this), this._value = t; } return c(t, e), t.prototype.facetName = function () { return "enum"; }, t.prototype.requiredType = function () { return f.ANY; }, t.prototype.check = function (e) { if (!this.checkStatus) {
                var t = this.value();
                if (Array.isArray(t) || (t = [t]), !t.some(function (t) { return t == e; })) {
                    var n = Array.isArray(this._value) ? this._value.map(function (e) { return "'" + e + "'"; }).join(", ") : "'" + this._value + "'";
                    return f.error(m.ENUM_RESTRICTION, this, { values: n });
                }
            } return f.ok(); }, t.prototype.composeWith = function (e) { if (e instanceof t) {
                var n = e, r = d.intersection(this._value, n._value);
                return 0 == r.length ? this.nothing(e) : new t(r);
            } return null; }, t.prototype.value = function () { return this._value; }, t.prototype.checkValue = function () { var e = this; if (!this.owner().isSubTypeOf(this.requiredType()))
                return f.error(m.ENUM_OWNER_TYPES, this, { typeNames: this.requiredType().name() }, f.Status.ERROR, !0); if (this.requiredTypes() && this.requiredTypes().length > 0) {
                var t = this.owner(), n = d.find(this.requiredTypes(), function (e) { return t.isSubTypeOf(e); });
                if (!n) {
                    var r = "[" + this.requiredTypes().map(function (e) { return "'" + e.name() + "'"; }).join(", ") + "]";
                    return f.error(m.ENUM_OWNER_TYPES, this, { typeNames: r }, f.Status.ERROR, !0);
                }
            } if (!Array.isArray(this._value))
                return f.error(m.ENUM_ARRAY, this, {}, f.Status.ERROR, !0); var i = f.ok(); this.checkStatus = !0; try {
                this._value.forEach(function (t, n) { var r = e.owner().validate(t); r.isOk() || (f.setValidationPath(r, { name: n }), i.addSubStatus(r)); });
            }
            finally {
                this.checkStatus = !1;
            } return i; }, t.prototype.toString = function () { var e = Array.isArray(this._value) ? this._value.map(function (e) { return "'" + e + "'"; }).join(", ") : "'" + this._value + "'"; return "value should be one of: " + e; }, t; }(I);
            t.Enum = j, t.optimize = u, t.validatePropertyType = p;
        }, function (e, t, n) {
            "use strict";
            function r(e, t) { return m.serializeToXML(e, t); }
            function i(e, t) { if ("string" == typeof e && (t.isObject() || t.isArray() || t.isExternal() || t.isUnion())) {
                var n = e, r = n.trim().charAt(0);
                if (!t.isExternal() && ("{" == r || "[" == r || "null" == n.trim()))
                    try {
                        return JSON.parse(n);
                    }
                    catch (i) {
                        if (t.isObject() || t.isArray()) {
                            var a = s.error(u.CAN_NOT_PARSE_JSON, this, { msg: i.message });
                            return a;
                        }
                    }
                if ("<" == r)
                    try {
                        var o = m.readObject(n, t), l = m.getXmlErrors(o);
                        if (l) {
                            var p = s.error(u.INVALID_XML, null);
                            return l.forEach(function (e) { return p.addSubStatus(e); }), p;
                        }
                        return o;
                    }
                    catch (i) { }
            } return t.getExtra(h.REPEAT) && (e = [e]), e; }
            function a(e, t, n) { t ? s.setValidationPath(e, { name: "examples", child: { name: n } }) : s.setValidationPath(e, { name: "examples", child: { name: n, child: { name: "value" } } }); }
            var o = this && this.__extends || function (e, t) { function n() { this.constructor = e; } for (var r in t)
                t.hasOwnProperty(r) && (e[r] = t[r]); e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype, new n); }, s = n(101), u = s.messageRegistry, l = n(101), p = n(105), c = n(105), f = n(70), m = n(145), h = n(102), d = function (e) { function t(t, n, r) { void 0 === r && (r = !1), e.call(this, r), this._name = t, this._value = n; } return o(t, e), t.prototype.value = function () { return this._value; }, t.prototype.requiredType = function () { return s.ANY; }, t.prototype.facetName = function () { return this._name; }, t.prototype.kind = function () { return null; }, t; }(s.TypeInformation);
            t.MetaInfo = d;
            var y = function (e) { function t(t) { e.call(this, "description", t); } return o(t, e), t.prototype.kind = function () { return h.MetaInformationKind.Description; }, t; }(d);
            t.Description = y;
            var v = function (e) { function t() { e.call(this, "notScalar", !0); } return o(t, e), t.prototype.kind = function () { return h.MetaInformationKind.NotScalar; }, t; }(d);
            t.NotScalar = v;
            var g = function (e) { function t(t) { e.call(this, "displayName", t); } return o(t, e), t.prototype.kind = function () { return h.MetaInformationKind.DisplayName; }, t; }(d);
            t.DisplayName = g;
            var A = function (e) { function t(t) { e.call(this, "usage", t); } return o(t, e), t.prototype.kind = function () { return h.MetaInformationKind.Usage; }, t; }(d);
            t.Usage = A;
            var T = function (e) { function t(t, n) { e.call(this, t, n); } return o(t, e), t.prototype.validateSelf = function (t, n) { void 0 === n && (n = !1); var r = t.get(this.facetName()); if (!r)
                return s.error(u.UNKNOWN_ANNOTATION, this, { facetName: this.facetName() }); var i = s.ok(), a = this.value(); a || r.isString() && (a = ""); var o = r.metaOfType(R), l = n ? "Example" : "TypeDeclaration"; if (o.length > 0) {
                var p = [], c = o.filter(function (e) { var t = e.value(); return Array.isArray(t) ? (p = p.concat(t), t.indexOf(l) >= 0) : (p.push(t), t == l); });
                if (0 == c.length) {
                    var f = p.map(function (e) { return "'" + e + "'"; }).join(", "), m = s.error(u.INVALID_ANNOTATION_LOCATION, this, { aName: e.prototype.facetName.call(this), aValues: f });
                    i.addSubStatus(m);
                }
            } var h = r.validateDirect(a, !0, !1); if (!h.isOk()) {
                var d = s.error(u.INVALID_ANNOTATION_VALUE, this, { msg: h.getMessage() });
                d.addSubStatus(h), i.addSubStatus(d);
            } return s.setValidationPath(i, { name: "(" + this.facetName() + ")" }), i; }, t.prototype.kind = function () { return h.MetaInformationKind.Annotation; }, t.prototype.ownerFacet = function () { return this._ownerFacet; }, t.prototype.setOwnerFacet = function (e) { this._ownerFacet = e; }, t; }(d);
            t.Annotation = T;
            var E = function (e) { function t(t, n, r, i) { void 0 === i && (i = !1), e.call(this, t, n, !0), this.name = t, this._type = n, this.optional = r, this.builtIn = i; } return o(t, e), t.prototype.actualName = function () { return "?" == this.name.charAt(this.name.length - 1) ? this.name.substr(0, this.name.length - 1) : this.name; }, t.prototype.isOptional = function () { return this.optional; }, t.prototype.type = function () { return this._type; }, t.prototype.kind = function () { return h.MetaInformationKind.FacetDeclaration; }, t.prototype.isBuiltIn = function () { return this.builtIn; }, t.prototype.validateSelf = function (e) { return c.validatePropertyType(this._type, this.name, e, this, !1); }, t; }(d);
            t.FacetDeclaration = E;
            var S = function (e) { function t(t, n) { e.call(this, t, n, !0); } return o(t, e), t.prototype.kind = function () { return h.MetaInformationKind.CustomFacet; }, t; }(d);
            t.CustomFacet = S;
            var N = [{ propName: "strict", propType: "boolean", messageEntry: u.STRICT_BOOLEAN }, { propName: "displayName", propType: "string", messageEntry: u.DISPLAY_NAME_STRING }, { propName: "description", propType: "string", messageEntry: u.DESCRIPTION_STRING }], _ = function (e) { function t(t) { e.call(this, "example", t); } return o(t, e), t.prototype.validateSelf = function (e) { var t = s.ok(); t.addSubStatus(this.validateValue(e)); var n = this.validateAnnotations(e); return s.setValidationPath(n, { name: this.facetName() }), t.addSubStatus(n), t; }, t.prototype.validateValue = function (e) { var t = this.value(), n = !1, r = s.ok(); if ("object" == typeof t && t && t.value) {
                for (var a = 0, o = N; a < o.length; a++) {
                    var l = o[a], p = l.propName, c = l.propType, f = t[p];
                    if (f && typeof f != c && ("object" == typeof f && Object.keys(f).forEach(function (t) { if ("(" == t.charAt(0) && ")" == t.charAt(t.length - 1)) {
                        var n = new T(t.substring(1, t.length - 1), f[t]), i = n.validateSelf(e, !0);
                        s.setValidationPath(i, { name: "example", child: { name: p, child: { name: t } } }), r.addSubStatus(i);
                    } }), !f.value && typeof f.value != c)) {
                        var m = s.error(l.messageEntry, this), h = f.value ? { name: "value" } : null;
                        s.setValidationPath(m, { name: "example", child: { name: p, child: h } }), r.addSubStatus(m);
                    }
                }
                if (t.strict === !1 || "object" == typeof t.strict && t.strict.value === !1)
                    return r;
                t = t.value, n = !0;
            } var d = t; if (d = i(t, this.owner()), d instanceof s.Status && !d.isOk())
                return s.setValidationPath(d, { name: "example" }), r.addSubStatus(d), r; var y = this.owner().validateDirect(d, !0, !1); if (!y.isOk()) {
                "string" == typeof this.value();
                var v = s.error(u.INVALID_EXMAPLE, this, { msg: y.getMessage() });
                y.getErrors().forEach(function (e) { v.addSubStatus(e), n ? s.setValidationPath(e, { name: "example", child: { name: "value" } }) : s.setValidationPath(e, { name: "example" }); }), r.addSubStatus(v);
            } return r; }, t.prototype.validateAnnotations = function (e) { var t = s.ok(), n = this.value(); if ("object" == typeof n && n && n.value)
                for (var r = Object.keys(n).filter(function (e) { return e.length > 2 && "(" == e.charAt(0) && ")" == e.charAt(e.length - 1); }), i = 0, a = r; i < a.length; i++) {
                    var o = a[i], u = n[o], l = o.substring(1, o.length - 1), p = new T(l, u);
                    t.addSubStatus(p.validateSelf(e, !0));
                } return t; }, t.prototype.example = function () { var e = this.value(); return "object" == typeof e && e && e.value && (e = e.value), i(e, this.owner()); }, t.prototype.asXMLString = function () { var e = this.value(); if ("string" == typeof e && 0 === e.trim().indexOf("<"))
                return e; var t = i(e, this.owner()); return r(t, this.owner()); }, t.prototype.kind = function () { return h.MetaInformationKind.Example; }, t; }(d);
            t.Example = _;
            var b = function (e) { function t(t) { e.call(this, "required", t); } return o(t, e), t.prototype.validateSelf = function (t) { var n = e.prototype.validateSelf.call(this, t); return "boolean" != typeof this.value() && (n = s.error(u.REQUIRED_BOOLEAN, this), s.setValidationPath(n, { name: this.facetName() })), n; }, t.prototype.kind = function () { return h.MetaInformationKind.Required; }, t; }(d);
            t.Required = b;
            var I = function (e) { function t() { e.call(this, "hasPropertiesFacet", null); } return o(t, e), t.prototype.kind = function () { return h.MetaInformationKind.HasPropertiesFacet; }, t; }(d);
            t.HasPropertiesFacet = I;
            var R = function (e) { function t(t) { e.call(this, "allowedTargets", t); } return o(t, e), t.prototype.kind = function () { return h.MetaInformationKind.AllowedTargets; }, t; }(d);
            t.AllowedTargets = R;
            var M = function (e) { function t(t) { e.call(this, "examples", t); } return o(t, e), t.prototype.examples = function () { var e = this, t = this.value(), n = []; return Object.keys(t).forEach(function (r) { if ("object" == typeof t[r] && t[r]) {
                var a = t[r].value;
                a || (a = t[r]);
                var o = i(a, e.owner());
                n.push(o);
            } }), n; }, t.prototype.asXMLStrings = function () { var e = this, t = this.value(), n = {}; return Object.keys(t).forEach(function (a) { var o = t[a]; if ("string" == typeof o && 0 === o.trim().indexOf("<"))
                return void (n[a] = o); var s = i(o, e.owner()); n[a] = r(s, e.owner()); }), n; }, t.prototype.validateSelf = function (e) { var t = this; if ("object" == typeof this.value()) {
                var n = new l.Status(l.Status.OK, "", "", this), r = this.value();
                return r && Object.keys(r).forEach(function (o) { var u = r[o]; if (u) {
                    "object" == typeof u && u.value && Object.keys(u).forEach(function (t) { if ("(" == t.charAt(0) && ")" == t.charAt(t.length - 1)) {
                        var i = new T(t.substring(1, t.length - 1), r[o][t]), a = i.validateSelf(e, !0);
                        s.setValidationPath(a, { name: "examples", child: { name: o, child: { name: t } } }), n.addSubStatus(a);
                    } });
                    var l = u.value, p = !l;
                    if (p)
                        l = u;
                    else {
                        for (var c = 0, f = N; c < f.length; c++) {
                            var m = f[c];
                            t.checkScalarProperty(u, o, m, e, n);
                        }
                        if (u.strict === !1 || "object" == typeof u.strict && u.strict.value === !1)
                            return;
                    }
                    var h = l;
                    if (!t.owner().isExternal() && (h = i(l, t.owner()), h instanceof s.Status))
                        return a(h, p, o), void n.addSubStatus(h);
                    var d = t.owner().validate(h, !0, !1);
                    d.getErrors().forEach(function (e) { n.addSubStatus(e), a(e, p, o); });
                } }), n;
            } return s.error(u.EXMAPLES_MAP, this); }, t.prototype.checkScalarProperty = function (e, t, n, r, i) { var a = n.propName, o = n.propType, u = e[a]; if (u && typeof u != o) {
                var l = null;
                if ("object" == typeof u && (l = { name: "value" }, Object.keys(u).forEach(function (n) { if ("(" == n.charAt(0) && ")" == n.charAt(n.length - 1)) {
                    var o = new T(n.substring(1, n.length - 1), e[a][n]), u = o.validateSelf(r, !0);
                    s.setValidationPath(u, { name: "examples", child: { name: t, child: { name: a, child: { name: n } } } }), i.addSubStatus(u);
                } })), !u.value && typeof u.value != o) {
                    var p = s.error(n.messageEntry, this);
                    s.setValidationPath(p, { name: "examples", child: { name: t, child: { name: a, child: l } } }), i.addSubStatus(p);
                }
            } }, t.prototype.kind = function () { return h.MetaInformationKind.Examples; }, t; }(d);
            t.Examples = M;
            var w = function (e) { function t(t) { e.call(this, "xml", t); } return o(t, e), t.prototype.kind = function () { return h.MetaInformationKind.XMLInfo; }, t; }(d);
            t.XMLInfo = w;
            var C = function (e) { function t(t) { e.call(this, "default", t); } return o(t, e), t.prototype.validateSelf = function (t) { var n = this, r = e.prototype.validateSelf.call(this, t), i = this.owner().validateDirect(this.value(), !0); if (!i.isOk()) {
                var a = s.error(u.INVALID_DEFAULT_VALUE, this, { msg: i.getMessage() });
                i.getErrors().forEach(function (e) { a.addSubStatus(e), s.setValidationPath(e, { name: n.facetName() }); }), r.addSubStatus(a);
            } return r; }, t.prototype.kind = function () { return h.MetaInformationKind.Default; }, t; }(d);
            t.Default = C;
            var L = function (e) { function t(t) { e.call(this, !0), this.property = t; } return o(t, e), t.prototype.requiredType = function () { return s.OBJECT; }, t.prototype.value = function () { return this.property; }, t.prototype.facetName = function () { return "discriminator"; }, t.prototype.validateSelf = function (t) { var n = this, r = e.prototype.validateSelf.call(this, t); if (this.owner().isUnion())
                r = s.error(u.DISCRIMINATOR_FOR_UNION, this);
            else if (this.owner().isSubTypeOf(s.OBJECT))
                if (this.owner().getExtra(s.GLOBAL) === !1)
                    r = s.error(u.DISCRIMINATOR_FOR_INLINE, this);
                else {
                    var i = f.find(this.owner().meta(), function (e) { return e instanceof p.PropertyIs && e.propertyName() == n.value(); });
                    i ? i.value().isScalar() || (r = s.error(u.SCALAR_FOR_DISCRIMINATOR, this)) : r = s.error(u.UNKNOWN_FOR_DISCRIMINATOR, this, { value: this.value() }, s.Status.WARNING);
                }
            else
                r = s.error(u.DISCRIMINATOR_FOR_OBJECT, this); return r.getValidationPath() || s.setValidationPath(r, { name: this.facetName() }), r; }, t.prototype.kind = function () { return h.MetaInformationKind.Discriminator; }, t; }(s.TypeInformation);
            t.Discriminator = L;
            var P = function (e) { function t(t, n) { void 0 === n && (n = !0), e.call(this, !1), this._value = t, this.strict = n; } return o(t, e), t.prototype.check = function (e, n) { var r = this.owner(), i = this.value(), a = r.metaOfType(L); if (0 == a.length)
                return s.ok(); var o = a[0].value(); if (i) {
                if (e.hasOwnProperty(o)) {
                    for (var u = this.owner().allSubTypes().concat(this.owner()), p = {}, c = 0, f = u; c < f.length; c++) {
                        var m = f[c], h = m.metaOfType(t);
                        h && h.length > 0 && h.forEach(function (e) { return p[e.value()] = !0; });
                    }
                    var d = e[o];
                    if (!p[d]) {
                        var y = s.error(l.Status.CODE_INCORRECT_DISCRIMINATOR, this, { rootType: r.name(), value: d, propName: o }, l.Status.WARNING);
                        return s.setValidationPath(y, { name: o, child: n }), y;
                    }
                    return s.ok();
                }
                var v = s.error(l.Status.CODE_MISSING_DISCRIMINATOR, this, { rootType: r.name(), propName: o });
                return s.setValidationPath(v, n), v;
            } return s.ok(); }, t.prototype.facetName = function () { return "discriminatorValue"; }, t.prototype.validateSelf = function (t) { var n = e.prototype.validateSelf.call(this, t); if (this.strict) {
                var r = this.owner().oneMeta(L);
                if (this.owner().isSubTypeOf(s.OBJECT))
                    if (this.owner().getExtra(s.GLOBAL) === !1)
                        n.addSubStatus(s.error(u.DISCRIMINATOR_FOR_INLINE, this));
                    else if (r) {
                        var i = f.find(this.owner().meta(), function (e) { return e instanceof p.PropertyIs && e.propertyName() == r.value(); });
                        if (i) {
                            var a = i.value().validate(this.value());
                            a.isOk() || n.addSubStatus(s.error(u.INVALID_DISCRIMINATOR_VALUE, this, { msg: a.getMessage() }));
                        }
                    }
                    else
                        n.addSubStatus(s.error(u.DISCRIMINATOR_VALUE_WITHOUT_DISCRIMINATOR, this));
                else
                    n.addSubStatus(s.error(u.DISCRIMINATOR_FOR_OBJECT, this));
            } return n.getValidationPath() || s.setValidationPath(n, { name: this.facetName() }), n; }, t.prototype.requiredType = function () { return s.OBJECT; }, t.prototype.value = function () { return this._value; }, t.prototype.kind = function () { return h.MetaInformationKind.DiscriminatorValue; }, t.prototype.isStrict = function () { return this.strict; }, t; }(s.Constraint);
            t.DiscriminatorValue = P;
        }, function (e, t, n) {
            "use strict";
            function r(e) { o = e; }
            function i(e, t, n) { void 0 === n && (n = null); var r = null; if (e.getExtra(h))
                return e.getExtra(h); if (!e) {
                var d = t("any");
                d || (r = new u.StructuredType(e.name()));
            } if (e.isBuiltin()) {
                var y = "any" != e.name() && "array" != e.name() ? t(e.name()) : null;
                r = y ? y : e.isScalar() ? new u.ValueType(e.name(), null) : new u.StructuredType(e.name());
            }
            else if (e.isObject())
                r = new u.StructuredType(e.name(), null);
            else if (e.isArray()) {
                var v = new u.Array(e.name(), null);
                r = v, e.putExtra(h, r);
                var g = e.oneMeta(p.ComponentShouldBeOfType), A = g ? g.value() : s.ANY;
                v.setComponent(i(A, t));
            }
            else if (e instanceof s.UnionType) {
                var T = new u.Union(e.name(), null);
                0 == e.superTypes().length && T._superTypes.push(i(s.UNION, t, n)), e.putExtra(h, T), e.options().forEach(function (n) { if (null == T.left)
                    T.left = i(n, t);
                else if (null == T.right)
                    T.right = i(n, t);
                else {
                    var r = new u.Union(e.name(), null);
                    r.left = T.right, r.right = i(n, t), T.right = r;
                } }), r = T;
            }
            else if (e.isScalar())
                r = new u.ValueType(e.name(), null);
            else if (e instanceof s.ExternalType) {
                var E = e, S = new u.ExternalType(E.name());
                S.schemaString = E.schema(), r = S;
            } if (r || (r = new u.StructuredType(e.name())), e.superTypes().forEach(function (e) { var n = i(e, t); e.isBuiltin() ? r._superTypes.push(n) : r.addSuperType(n); }), e.isEmpty()) {
                if (e.isArray() && 1 == e.superTypes().length && e.superTypes()[0].isAnonymous()) {
                    var N = r.superTypes()[0];
                    N.setName(e.name()), N._subTypes = N._subTypes.filter(function (e) { return e != r; }), r = N;
                }
                if (e.isUnion() && 1 == e.superTypes().length && e.superTypes()[0].isAnonymous()) {
                    var N = r.superTypes()[0];
                    N.setName(e.name()), N._subTypes = N._subTypes.filter(function (e) { return e != r; }), r = N;
                }
            } e.putExtra(h, r); var _ = l.toProto(e); _.properties.forEach(function (e) { var n = e.regExp ? "/" + e.id + "/" : e.id, a = o ? o(n) : new u.Property(n); a.withDomain(r), a.withRange(i(e.type, t)), e.optional || a.withRequired(!0), e.regExp && a.withKeyRegexp(n); }), _.facetDeclarations.filter(function (e) { return !e.isBuiltIn(); }).forEach(function (e) { var n = o ? o(e.facetName()) : new u.Property(e.facetName()); n.withRange(i(e.type(), t)), r.addFacet(n); }), e.customFacets().forEach(function (e) { r.fixFacet(e.facetName(), e.value()); }); for (var b = { example: !0, examples: !0 }, I = e.meta().filter(function (t) { if (!(t instanceof f.Discriminator || t instanceof f.DiscriminatorValue)) {
                if (!(t instanceof p.FacetRestriction || t instanceof f.MetaInfo || t instanceof p.KnownPropertyRestriction))
                    return !1;
                if (t instanceof f.FacetDeclaration || t instanceof f.CustomFacet)
                    return !1;
            } var n = t.requiredType(), r = n.isUnion() ? n.allOptions() : [n]; if (!m.some(r, function (t) { return e.isSubTypeOf(t); }))
                return !1; var i = t.facetName(); return b[i] ? !1 : "discriminatorValue" == i ? t.isStrict() : "allowedTargets" == i ? !0 : null != c.getInstance().facetPrototypeWithName(i); }), R = 0, M = I; R < M.length; R++) {
                var w = M[R], C = w.facetName();
                "closed" == C && (C = "additionalProperties"), r.fixFacet(C, w.value(), !0);
            } return r.addAdapter(e), e.isEmpty() && r.addAdapter(new u.Empty), r._validator = a(e), e.isBuiltin() ? r.buildIn = !0 : e.subTypes().forEach(function (e) { i(e, t, n); }), r; }
            function a(e) { return function (t) { return e.validate(t, !1).getErrors(); }; }
            var o, s = n(101), u = n(108), l = n(103), p = n(105), c = n(104), f = n(106), m = n(70), h = "nominal";
            t.setPropertyConstructor = r, t.toNominal = i;
        }, function (e, t, n) {
            "use strict";
            function r(e) { c.push(e); }
            function i(e) { var t = e.typeId(); if (!t) {
                var n = e.getAdapter(l.InheritedType);
                t = n && n.id() + "" || "";
            } return t; }
            var a = this && this.__extends || function (e, t) { function n() { this.constructor = e; } for (var r in t)
                t.hasOwnProperty(r) && (e[r] = t[r]); e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype, new n); }, o = n(109), s = n(102), u = n(146), l = n(101), p = n(152), c = [];
            t.registerInjector = r;
            var f = function () { function e() { var e = this; this.adapters = [], c.forEach(function (t) { return t.inject(e); }); } return e.isInstance = function (t) { if (null != t && t.getClassIdentifier && "function" == typeof t.getClassIdentifier)
                for (var n = 0, r = t.getClassIdentifier(); n < r.length; n++) {
                    var i = r[n];
                    if (i == e.CLASS_IDENTIFIER_Adaptable)
                        return !0;
                } return !1; }, e.prototype.getClassIdentifier = function () { var t = []; return t.concat(e.CLASS_IDENTIFIER_Adaptable); }, e.prototype.addAdapter = function (e) { this.adapters.push(e); }, e.prototype.getAdapter = function (e) { var t = null; return this.adapters.forEach(function (n) { n instanceof e && (t = n); }), t; }, e.prototype.getAdapters = function () { return this.adapters; }, e.CLASS_IDENTIFIER_Adaptable = "nominal-types.Adaptable", e; }();
            t.Adaptable = f;
            var m = function (e) { function t(t, n) { void 0 === n && (n = ""), e.call(this), this._name = t, this._description = n, this._tags = [], this._annotations = []; } return a(t, e), t.prototype.nameId = function () { return this._name; }, t.prototype.description = function () { return this._description; }, t.isInstance = function (e) { if (null != e && e.getClassIdentifier && "function" == typeof e.getClassIdentifier)
                for (var n = 0, r = e.getClassIdentifier(); n < r.length; n++) {
                    var i = r[n];
                    if (i == t.CLASS_IDENTIFIER_Described)
                        return !0;
                } return !1; }, t.prototype.getClassIdentifier = function () { var n = e.prototype.getClassIdentifier.call(this); return n.concat(t.CLASS_IDENTIFIER_Described); }, t.prototype.addAnnotation = function (e) { this._annotations.push(e); }, t.prototype.removeAnnotation = function (e) { this._annotations = this._annotations.filter(function (t) { return t != e; }); }, t.prototype.annotations = function () { return [].concat(this._annotations); }, t.prototype.tags = function () { return this._tags; }, t.prototype.withDescription = function (e) { return this._description = e, this; }, t.prototype.setName = function (e) { this._name = e; }, t.CLASS_IDENTIFIER_Described = "nominal-types.Described", t; }(f);
            t.Described = m;
            var h = function (e) { function t(t, n) { e.call(this, t.nameId()), this.type = t, this.parameters = n; } return a(t, e), t.prototype.parameterNames = function () { return Object.keys(this.parameters); }, t.prototype.parameter = function (e) { return this.parameters[e]; }, t.prototype.getType = function () { return this.type; }, t; }(m);
            t.Annotation = h;
            var d = function () { function e() { } return e; }();
            t.Empty = d;
            var y = function () { function e() { } return e.prototype.type = function (e) { return null; }, e.prototype.version = function () { return "Empty"; }, e.prototype.types = function () { return []; }, e.prototype.matched = function () { return {}; }, e; }(), v = new y, g = n(142), A = function (e) {
                function t(t, n, r) { void 0 === n && (n = v), void 0 === r && (r = ""), e.call(this, t), this._universe = n, this._path = r, this._customProperties = [], this._facets = [], this._superTypes = [], this._subTypes = [], this._requirements = [], this._fixedFacets = {}, this._fixedBuildInFacets = {}, this.uc = !1; }
                return a(t, e), t.prototype.properties = function () { return []; }, t.prototype.externalInHierarchy = function () { var e = this.allSuperTypes(), t = null; return e.forEach(function (e) { e instanceof b && (t = e); }), t; }, t.prototype.addFacet = function (e) { this._facets.push(e); }, t.prototype.validate = function (e) { if (!this._validator)
                    throw new Error(p.VALIDATE_ONLY_ON_RUNTIME_TYPES_INSTANCES.message); return this._validator(e); }, t.prototype.allFacets = function (e) { if (void 0 === e && (e = {}), this._allFacets)
                    return this._allFacets; if (e[this.nameId()])
                    return []; e[this.typeId()] = this; var n = {}; return this.superTypes().length > 0 && this.superTypes().forEach(function (r) { r instanceof t && r.allFacets(e).forEach(function (e) { return n[e.nameId()] = e; }); }), this._facets.forEach(function (e) { return n[e.nameId()] = e; }), this._allFacets = Object.keys(n).map(function (e) { return n[e]; }), this._allFacets; }, t.prototype.facets = function () { return [].concat(this._facets); }, t.prototype.facet = function (e) { return u.find(this.allFacets(), function (t) { return t.nameId() == e; }); }, t.prototype.typeId = function () { return this.nameId(); }, t.prototype.allProperties = function (e) { if (void 0 === e && (e = {}), this._props)
                    return this._props; var n = i(this); if (e[n])
                    return []; e[n] = this; var r = {}; this.superTypes().length > 0 && this.superTypes().forEach(function (n) { n instanceof t ? n.allProperties(e).forEach(function (e) { return r[e.nameId()] = e; }) : n.allProperties().forEach(function (e) { return r[e.nameId()] = e; }); }); for (var a in this.fixedFacets())
                    delete r[a]; return this.properties().forEach(function (e) { return r[e.nameId()] = e; }), this._props = Object.keys(r).map(function (e) { return r[e]; }), this._props; }, t.prototype.property = function (e) { return u.find(this.allProperties(), function (t) { return t.nameId() == e; }); }, t.prototype.hasValueTypeInHierarchy = function () { return null != u.find(this.allSuperTypes(), function (e) { var t = e; if (t.uc)
                    return !1; t.uc = !0; try {
                    return e.hasValueTypeInHierarchy();
                }
                finally {
                    t.uc = !1;
                } }); }, t.prototype.isAnnotationType = function () { return !1; }, t.prototype.hasStructure = function () { return !1; }, t.prototype.key = function () { return this._key ? this._key : this._universe && (this._key = this.universe().matched()[this.nameId()], !this._key) ? null : this._key; }, t.prototype.hasArrayInHierarchy = function () { var e = null != u.find(this.allSuperTypes(), function (e) { return e instanceof _; }); return e; }, t.prototype.arrayInHierarchy = function () { var e = this.allSuperTypes(), t = null; return e.forEach(function (e) { e instanceof _ && (t = e); }), t; }, t.prototype.unionInHierarchy = function () { var e = this.allSuperTypes(), t = null; return e.forEach(function (e) { e instanceof N && (t = e); }), t; }, t.prototype.hasExternalInHierarchy = function () { return null != u.find(this.allSuperTypes(), function (e) { var t = e; if (t.uc)
                    return !1; t.uc = !0; try {
                    return e instanceof b;
                }
                finally {
                    t.uc = !1;
                } }); }, t.prototype.hasUnionInHierarchy = function () { return null != u.find(this.allSuperTypes(), function (e) { var t = e; if (t.uc)
                    return !1; t.uc = !0; try {
                    return e.hasUnionInHierarchy();
                }
                finally {
                    t.uc = !1;
                } }); }, t.prototype.fixFacet = function (e, t, n) { void 0 === n && (n = !1), n ? this._fixedBuildInFacets[e] = t : this._fixedFacets[e] = t; }, t.prototype.getFixedFacets = function () { return this.fixedFacets(); }, t.prototype.fixedFacets = function () { return this.collectFixedFacets(!1); }, t.prototype.fixedBuiltInFacets = function () { return this.collectFixedFacets(!0); }, t.prototype.collectFixedFacets = function (e) { for (var t = e ? this._fixedBuildInFacets : this._fixedFacets, n = {}, r = 0, i = Object.keys(t); r < i.length; r++) {
                    var a = i[r];
                    n[a] = t[a];
                } return this.contributeFacets(n), n; }, t.prototype.allFixedFacets = function () { return this.collectAllFixedFacets(!1); }, t.prototype.allFixedBuiltInFacets = function () { return this.collectAllFixedFacets(!0); }, t.prototype.collectAllFixedFacets = function (e) { if (e && this._abf)
                    return this._abf; if (!e && this._af)
                    return this._af; var t = this.allSuperTypes(); t.push(this); var n = {}; return t.forEach(function (t) { for (var r = e ? t.fixedBuiltInFacets() : t.fixedFacets(), i = 0, a = Object.keys(r); i < a.length; i++) {
                    var o = a[i];
                    n[o] = r[o];
                } }), this._af = n, n; }, t.prototype.contributeFacets = function (e) { }, t.prototype.getPath = function () { return this._path; }, t.prototype.setNameAtRuntime = function (e) { this._nameAtRuntime = e; }, t.prototype.getNameAtRuntime = function () { return this._nameAtRuntime; }, t.prototype.universe = function () { return this._universe ? this._universe : new y; }, t.prototype.superTypes = function () { return [].concat(this._superTypes); }, t.prototype.isAssignableFrom = function (e) { if (this.nameId() == e)
                    return this.isUserDefined() ? !1 : !0; for (var t = this.allSuperTypes(), n = 0; n < t.length; n++)
                    if (t[n].nameId() == e)
                        return !0; return !1; }, t.prototype.annotationType = function () { return null; }, t.prototype.subTypes = function () { return [].concat(this._subTypes); }, t.prototype.allSubTypes = function () { var e = []; return this.subTypes().forEach(function (t) { e.push(t), e = e.concat(t.allSubTypes()); }), u.unique(e); }, t.prototype.allSuperTypes = function () { if (this._allSupers)
                    return this._allSupers; var e = []; return this.allSuperTypesRecurrent(this, {}, e), this._allSupers = u.unique(e), this._allSupers; }, t.prototype.allSuperTypesRecurrent = function (e, t, n) { var r = this; e.superTypes().forEach(function (e) { var a = i(e); if (!a) {
                    var o = e.getAdapter(l.InheritedType);
                    a = o && o.id() + "" || "";
                } t[a] || (n.push(e), t[a] = e, r.allSuperTypesRecurrent(e, t, n)); }); }, t.prototype.addSuperType = function (e) { e._subTypes.push(this), this._superTypes.push(e); }, t.prototype.addRequirement = function (e, t) { this._requirements.push(new o.ValueRequirement(e, t)); }, t.prototype.valueRequirements = function () {
                    return this._requirements;
                }, t.prototype.requiredProperties = function () { return this.allProperties().filter(function (e) { return e.isRequired(); }); }, t.prototype.printDetails = function (e, n) { var r = this; e || (e = ""), n || (n = { hideProperties: !1, hideSuperTypeProperties: !1, printStandardSuperclasses: !1 }); var i = "  ", a = "", o = this.getTypeClassName(); a += e + this.nameId() + "[" + o + "]\n"; var s = this.properties(); s && s.length > 0 && !n.hideProperties && (a += e + i + "Properties:\n", s.forEach(function (n) { var r = "", o = n.range(); o instanceof m && (r += o.nameId()), o instanceof t && (r += "[", r += o.getTypeClassName(), r += "]"), a += e + i + i + n.nameId() + " : " + r + "\n"; })); var l = this.superTypes(), p = l; return l && !n.printStandardSuperclasses && (p = u.filter(l, function (e) { var n = e instanceof m ? e.nameId() : "", i = e instanceof t ? e.getTypeClassName() : ""; return !r.isStandardSuperclass(n, i); })), p && p.length > 0 && (a += e + i + "Super types:\n", p.forEach(function (t) { a += t.printDetails(e + i + i, { hideProperties: n.hideSuperTypeProperties, hideSuperTypeProperties: n.hideSuperTypeProperties, printStandardSuperclasses: n.printStandardSuperclasses }); })), a; }, t.prototype.getTypeClassName = function () { return this.constructor.toString().match(/\w+/g)[1]; }, t.prototype.isStandardSuperclass = function (e, t) { return "TypeDeclaration" === e && "NodeClass" === t ? !0 : "ObjectTypeDeclaration" === e && "NodeClass" === t ? !0 : "RAMLLanguageElement" === e && "NodeClass" === t ? !0 : !1; }, t.prototype.examples = function (e) { return g.exampleFromNominal(this, e); }, t.prototype.isGenuineUserDefinedType = function () { if (this.buildIn)
                    return !1; if (this.properties() && this.properties().length > 0)
                    return !0; var e = this.fixedFacets(); if (e && Object.keys(e).length > 0)
                    return !0; var t = this.fixedBuiltInFacets(); return t && Object.keys(t).length > 0 ? !0 : this.isTopLevel() && this.nameId() && this.nameId().length > 0; }, t.prototype.genuineUserDefinedTypeInHierarchy = function () { if (this.isGenuineUserDefinedType())
                    return this; var e = null, t = this.allSuperTypes(); return t.forEach(function (t) { !e && t.isGenuineUserDefinedType() && (e = t); }), e; }, t.prototype.hasGenuineUserDefinedTypeInHierarchy = function () { return null != u.find(this.allSuperTypes(), function (e) { var t = e; if (t.uc)
                    return !1; t.uc = !0; try {
                    return e.isGenuineUserDefinedType();
                }
                finally {
                    t.uc = !1;
                } }); }, t.prototype.customProperties = function () { return [].concat(this._customProperties); }, t.prototype.allCustomProperties = function () { var e = []; return this.superTypes().forEach(function (t) { return e = e.concat(t.allCustomProperties()); }), e = e.concat(this.customProperties()); }, t.prototype.registerCustomProperty = function (e) { if (e.domain() != this)
                    throw new Error(p.SHOULD_BE_ALREADY_OWNED.message); if (-1 != this._customProperties.indexOf(e))
                    throw new Error(p.ALREADY_INCLUDED.message); this._customProperties.push(e); }, t.prototype.setCustom = function (e) { this._isCustom = e; }, t.prototype.isCustom = function () { return this._isCustom; }, t.prototype.isUnion = function () { return !1; }, t.prototype.union = function () { return null; }, t.prototype.isExternal = function () { return !1; }, t.prototype.external = function () { return null; }, t.prototype.isArray = function () { return !1; }, t.prototype.isObject = function () { if ("object" == this.nameId())
                    return !0; for (var e = 0, t = this.allSuperTypes(); e < t.length; e++) {
                    var n = t[e];
                    if (n.isObject())
                        return !0;
                } return !1; }, t.prototype.array = function () { return null; }, t.prototype.isValueType = function () { return !1; }, t.prototype.kind = function () { var e = []; return this.isObject() && e.push("object"), this.isArray() && e.push("array"), this.isValueType() && e.push("value"), this.isUnion() && e.push("union"), this.isAnnotationType() && e.push("annotation"), this.isExternal() && e.push("external"), e; }, t.prototype.isBuiltIn = function () { return this.buildIn; }, t.prototype.setBuiltIn = function (e) { this.buildIn = e; }, t.prototype.isTopLevel = function () { return this.getExtra(s.DEFINED_IN_TYPES_EXTRA) || this.getExtra(s.TOP_LEVEL_EXTRA) ? !0 : !1; }, t.prototype.isUserDefined = function () { return this.getExtra(s.USER_DEFINED_EXTRA) && !this.buildIn; }, t.prototype.putExtra = function (e, t) { var n = this.getExtraAdapter(); n && n.putExtra(e, t); }, t.prototype.getExtra = function (e) { var t = this.getExtraAdapter(); return t ? t.getExtra(e) : null; }, t.prototype.getExtraAdapter = function () { if (this.getAdapters()) {
                    var e = u.find(this.getAdapters(), function (e) { return e.getExtra && "function" == typeof e.getExtra && e.putExtra && "function" == typeof e.putExtra ? !0 : void 0; });
                    return e;
                } return null; }, t;
            }(m);
            t.AbstractType = A;
            var T = function (e) { function t(t, n, r, i) { void 0 === n && (n = null), void 0 === r && (r = ""), void 0 === i && (i = ""), e.call(this, t, n, r); } return a(t, e), t.prototype.hasStructure = function () { return !1; }, t.prototype.hasValueTypeInHierarchy = function () { return !0; }, t.prototype.isValueType = function () { return !0; }, t.prototype.isUnionType = function () { return !1; }, t.prototype.isObject = function () { return !1; }, t; }(A);
            t.ValueType = T;
            var E = function (e) { function t() { e.apply(this, arguments), this._properties = []; } return a(t, e), t.prototype.hasStructure = function () { return !0; }, t.prototype.propertyIndex = function (e) { for (var t = this.properties(), n = 0; n < t.length; n++)
                if (t[n].nameId() == e)
                    return n; return -1; }, t.prototype.addProperty = function (e, t) { return new S(e).withDomain(this).withRange(t); }, t.prototype.allPropertyIndex = function (e) { for (var t = this.allProperties(), n = 0; n < t.length; n++)
                if (t[n].nameId() == e)
                    return n; return -1; }, t.prototype.properties = function () { return [].concat(this._properties); }, t.prototype.registerProperty = function (e) { if (e.domain() != this)
                throw new Error(p.SHOULD_BE_ALREADY_OWNED.message); if (-1 != this._properties.indexOf(e))
                throw new Error(p.ALREADY_INCLUDED.message); this._properties.push(e); }, t; }(A);
            t.StructuredType = E;
            var S = function (e) { function t() { e.apply(this, arguments), this._keyShouldStartFrom = null, this._isRequired = !1, this._isMultiValue = !1, this._descriminates = !1, this._defaultBooleanValue = null, this._defaultIntegerValue = null; } return a(t, e), t.isInstance = function (e) { if (null != e && e.getClassIdentifier && "function" == typeof e.getClassIdentifier)
                for (var n = 0, r = e.getClassIdentifier(); n < r.length; n++) {
                    var i = r[n];
                    if (i == t.CLASS_IDENTIFIER_Property)
                        return !0;
                } return !1; }, t.prototype.getClassIdentifier = function () { var n = e.prototype.getClassIdentifier.call(this); return n.concat(t.CLASS_IDENTIFIER_Property); }, t.prototype.withMultiValue = function (e) { return void 0 === e && (e = !0), this._isMultiValue = e, this; }, t.prototype.withDescriminating = function (e) { return this._descriminates = e, this; }, t.prototype.withRequired = function (e) { return this._isRequired = e, this; }, t.prototype.isRequired = function () { return this._isRequired; }, t.prototype.withKeyRestriction = function (e) { return this._keyShouldStartFrom = e, this; }, t.prototype.withDomain = function (e, t) { return void 0 === t && (t = !1), this._ownerClass = e, t ? e.registerCustomProperty(this) : e.registerProperty(this), this; }, t.prototype.setDefaultVal = function (e) { return this._defaultValue = e, this; }, t.prototype.setDefaultBooleanVal = function (e) { return this._defaultBooleanValue = e, this; }, t.prototype.setDefaultIntegerVal = function (e) { return this._defaultIntegerValue = e, this; }, t.prototype.defaultValue = function () { return null != this._defaultValue ? this._defaultValue : null != this._defaultBooleanValue ? this._defaultBooleanValue : null != this._defaultIntegerValue ? this._defaultIntegerValue : null; }, t.prototype.isPrimitive = function () { return !1; }, t.prototype.withRange = function (e) { return this._nodeRange = e, this; }, t.prototype.isValueProperty = function () { return this._nodeRange.hasValueTypeInHierarchy(); }, t.prototype.enumOptions = function () { return this._enumOptions && "string" == typeof this._enumOptions ? [this._enumOptions + ""] : this._enumOptions; }, t.prototype.keyPrefix = function () { return this._keyShouldStartFrom; }, t.prototype.withEnumOptions = function (e) { return this._enumOptions = e, this; }, t.prototype.withKeyRegexp = function (e) { return this._keyRegexp = e, this; }, t.prototype.getKeyRegexp = function () { return this._keyRegexp; }, t.prototype.matchKey = function (e) { if (null == e)
                return !1; if (null != this._groupName)
                return this._groupName == e; if (null != this._keyShouldStartFrom && 0 == e.indexOf(this._keyShouldStartFrom))
                return !0; if (this._enumOptions && -1 != this._enumOptions.indexOf(e))
                return !0; if (this.getKeyRegexp())
                try {
                    if (new RegExp(this.getKeyRegexp()).test(e))
                        return !0;
                }
                catch (t) { } return !1; }, t.prototype.getFacetValidator = function () { return this.facetValidator; }, t.prototype.setFacetValidator = function (e) { this.facetValidator = e; }, t.prototype.domain = function () { return this._ownerClass; }, t.prototype.range = function () { return this._nodeRange; }, t.prototype.isMultiValue = function () { return this.range() && this.range().hasArrayInHierarchy() ? !0 : this._isMultiValue; }, t.prototype.isDescriminator = function () { return this._descriminates; }, t.CLASS_IDENTIFIER_Property = "nominal-types.Property", t; }(m);
            t.Property = S;
            var N = function (e) { function t() { e.apply(this, arguments); } return a(t, e), t.prototype.key = function () { return null; }, t.prototype.leftType = function () { return this.left; }, t.prototype.rightType = function () { return this.right; }, t.prototype.isUserDefined = function () { return !0; }, t.prototype.unionInHierarchy = function () { return this; }, t.prototype.union = function () { return this; }, t.prototype.hasUnionInHierarchy = function () { return !0; }, t.prototype.isUnion = function () { return !0; }, t.prototype.isObject = function () { return this.leftType().isObject() && this.rightType().isObject(); }, t.prototype.hasArrayInHierarchy = function () { return this.left && this.right ? this.left.hasArrayInHierarchy() || this.right.hasArrayInHierarchy() : this.left ? this.left.hasArrayInHierarchy() : this.right ? this.right.hasArrayInHierarchy() : void 0; }, t; }(A);
            t.Union = N;
            var _ = function (e) { function t() { e.apply(this, arguments); } return a(t, e), t.prototype.hasArrayInHierarchy = function () { return !0; }, t.prototype.isArray = function () { return !0; }, t.prototype.isObject = function () { return !1; }, t.prototype.arrayInHierarchy = function () { return this; }, t.prototype.array = function () { return this; }, t.prototype.isUserDefined = function () { return !0; }, t.prototype.componentType = function () { return this.component; }, t.prototype.setComponent = function (e) { this.component = e; }, t.prototype.key = function () { return null; }, t; }(A);
            t.Array = _;
            var b = function (e) { function t() { e.apply(this, arguments); } return a(t, e), t.prototype.externalInHierarchy = function () { return this; }, t.prototype.typeId = function () { return this.schemaString; }, t.prototype.schema = function () { return this.schemaString; }, t.prototype.isUserDefined = function () { return !0; }, t.prototype.hasExternalInHierarchy = function () { return !0; }, t.prototype.isExternal = function () { return !0; }, t.prototype.external = function () { return this; }, t; }(E);
            t.ExternalType = b;
        }, function (e, t, n) {
            "use strict";
            var r = function () { function e(e, t) { this.name = e, this.value = t; } return e; }();
            t.ValueRequirement = r;
        }, function (e, t, n) {
            "use strict";
            function r(e, t) { o.visit(e, t); }
            function i(e) { return o.serializeToString(e); }
            function a(e) { return o.parse(e); }
            var o = n(144);
            t.visit = r, t.serializeToString = i, t.parse = a;
        }, function (e, t, n) { (function (e) {
            "use strict";
            function r(e, t) { var n = C(t, e), r = E ? _.getValue(n) : !1; if (r && r.provider)
                return r; var i = new R(e, t); return _.setValue(n, i), i; }
            function i(e, t) { var n = (C(t, e), E ? _.getValue(e) : !1); if (n)
                return n; var r = new w(e, t); return E && _.setValue(e, r), r; }
            function a(e, t) { var n = e && e.trim().length > 0 && "{" == e.trim().charAt(0), r = C(t, e), i = E ? _.getValue(r) : !1; if (i)
                return i; try {
                var a = new R(e, t);
                return E && _.setValue(r, a), a;
            }
            catch (o) {
                if (E && y.ValidationError.isInstance(o) && n)
                    return _.setValue(r, o), o;
                try {
                    var a = new w(e, t);
                    return _.setValue(r, a), a;
                }
                catch (o) {
                    if (E) {
                        var s = new y.ValidationError(v.messageRegistry.CAN_NOT_PARSE_SCHEMA);
                        return _.setValue(r, s), s;
                    }
                }
            } }
            function o(e, t, n) { null == n && (n = s(e)), n.length > 0 && (n += ":"); for (var r = e.getElementsByTagName(n + t), i = [], a = 0; a < r.length; a++) {
                var o = r[a];
                o.parentNode === e && i.push(o);
            } return i; }
            function s(e) { var t = ""; if (e) {
                var n = e;
                if (e.ownerDocument && (n = e.ownerDocument), n) {
                    var r = n.documentElement;
                    r && (t = r.prefix);
                }
            } return t; }
            function u(e, t) { void 0 === t && (t = !1); var n, r, i = t ? v.messageRegistry.CAN_NOT_PARSE_JSON : v.messageRegistry.INVALID_JSON_SCHEMA_DETAILS, a = L.length, o = P.length; if (e.substring(0, a) == L)
                n = L, r = a;
            else {
                if (e.substring(0, o) != P)
                    return new y.ValidationError(i, { msg: e });
                n = P, r = o;
            } if (n && r) {
                var s = e.indexOf("\n", r);
                0 > s && (s = e.length);
                var u = e.substring(r).trim(), l = u.indexOf("<");
                0 > l ? l = 0 : l++;
                var p = u.indexOf("\n");
                0 > p && (p = u.length);
                var c = u.lastIndexOf("at", p);
                0 > c ? c = p : c += "at".length;
                var f = u.lastIndexOf(">", c);
                0 > f && (f = c);
                var m = u.substring(l, f), h = u.substring(c, p).trim(), d = h.indexOf(":");
                try {
                    var g = parseInt(h.substring(0, d)) - 1, A = parseInt(h.substring(d + 1, h.length)) - 1, T = n + " '" + m + "'", E = new y.ValidationError(i, { msg: T });
                    return E.internalRange = { start: { line: g, column: A, position: null }, end: { line: g, column: A + m.length, position: null } }, E;
                }
                catch (S) { }
            } return new y.ValidationError(v.messageRegistry.INVALID_JSON_SCHEMA_DETAILS, { msg: e }); }
            function l(e, t, n) { if (!n || "string" != typeof n)
                return null; t = t || g(e, { verbose: !0 }), "#" == n.charAt(0) && (n = n.substring(1)), "/" == n.charAt(0) && (n = n.substring(1)); var r = t; if (n.length > 0)
                for (var i = n.split("/"), a = 0, o = i; a < o.length; a++) {
                    var s = o[a], u = p(r, s);
                    if (null == u)
                        break;
                    r = u;
                } var l = r.loc.start, c = r.loc.end; return { start: { line: l.line - 1, column: l.column - 1, position: l.offset }, end: { line: c.line - 1, column: c.column - 1, position: c.offset } }; }
            function p(e, t) { return "property" == e.type && (e = e.value), "object" == e.type ? f.find(e.children, function (e) { return e.key.value == t; }) : "array" == e.type ? e.children[t] : "array" == e.type ? e : null; }
            function c(e, t) { try {
                if ("string" != typeof e)
                    return;
                g(e, { verbose: !0 });
            }
            catch (n) {
                var r = u(n.message, t);
                throw r;
            } }
            var f = n(146), m = n(147), h = n(148), d = n(76).DOMParser, y = n(101), v = n(101), g = n(183), A = function () { function e() { } return e; }();
            t.ValidationResult = A;
            var T = { errorHandler: { warning: function () { return null; }, error: function () { return null; }, fatalError: function () { return null; } } }, E = !0, S = 5242880, N = function () { function e() { this.errors = {}, this.size = 0; } return e.prototype.getValue = function (e) { var t = this.errors[e]; return t ? t.value : null; }, e.prototype.setValue = function (e, t) { var n = this.errors[e]; if (n)
                n.value = t;
            else
                for (n = { key: e, value: t }, this.top && (this.top.next = n), this.top = n, this.last || (this.last = n), this.errors[e] = n, this.size += e.length; this.size > S && this.last;) {
                    var r = this.last.key;
                    delete this.errors[r], this.size -= r.length, this.last = this.last.next;
                } }, e; }(), _ = new N;
            e.cleanCache = function () { _ = new N; };
            var b = function () { function e() { } return e.prototype.contextPath = function () { return ""; }, e.prototype.normalizePath = function (e) { return ""; }, e.prototype.content = function (e) { return ""; }, e.prototype.hasAsyncRequests = function () { return !1; }, e.prototype.resolvePath = function (e, t) { return ""; }, e.prototype.isAbsolutePath = function (e) { return !1; }, e.prototype.contentAsync = function (e) { var t = this; return { then: function (n) { return n(t.content(e)); }, resolve: function () { return null; } }; }, e.prototype.promiseResolve = function (e) { return { then: function (t) { return t(e); }, resolve: function () { return null; } }; }, e; }(), I = function (e, t, n) { return "__EXAMPLE_" + e + t + n; }, R = function () { function e(e, t) { if (this.schema = e, this.provider = t, this.EXAMPLE_ERROR_ENTRY = v.messageRegistry.CONTENT_DOES_NOT_MATCH_THE_SCHEMA, this.SCHEMA_ERROR_ENTRY = v.messageRegistry.INVALID_JSON_SCHEMA_DETAILS, t ? this.provider = t : this.provider = new b, !e || 0 == e.trim().length || "{" != e.trim().charAt(0))
                throw new y.ValidationError(v.messageRegistry.INVALID_JSON_SCHEMA); c(e, !1); var r = JSON.parse(e); if (r) {
                try {
                    var i = n(173);
                    this.setupId(r, this.provider.contextPath());
                    var a = "" + r.$schema;
                    -1 == a.indexOf("http://json-schema.org/draft-04/") ? r = i.v4(r) : this.fixRequired(r);
                }
                catch (o) {
                    throw new y.ValidationError(v.messageRegistry.INVALID_JSON_SCHEMA_DETAILS, { msg: o.message });
                }
                delete r.$schema, this.jsonSchema = r;
            } } return e.prototype.fixRequired = function (e) { }, e.prototype.getType = function () { return "source.json"; }, e.prototype.validateObject = function (e) { this.validate(JSON.stringify(e)); }, e.prototype.getMissingReferences = function (e, t) { var n = this; void 0 === t && (t = !1); var r = [], i = h.getValidator(); e.forEach(function (e) { return i.setRemoteReference(e.reference, e.content || {}); }); var a = null; if (this.jsonSchema.id && "string" == typeof this.jsonSchema.id) {
                a = this.jsonSchema.id;
                var o = a.indexOf("#");
                -1 != o && (a = a.substr(0, o));
            } try {
                i.validateSchema(this.jsonSchema);
            }
            catch (s) {
                return [];
            } var r = i.getMissingRemoteReferences(), u = []; return r && (u = f.filter(r, function (e) { return !i.isResourceLoaded(e) && e != a; })), t ? u.map(function (e) { return n.provider.normalizePath(e); }) : u; }, e.prototype.getSchemaPath = function (e, t) { if (void 0 === t && (t = !1), !e)
                return ""; if (!e.id)
                return ""; var n = e.id.trim(); if (n.lastIndexOf("#") !== n.length - 1)
                return n; var r = n.substr(0, n.length - 1); return t ? this.provider.normalizePath(r) : r; }, e.prototype.patchSchema = function (e) { var t = this; if (!e)
                return e; if (!e.id)
                return e; var n = e.id.trim(); n.lastIndexOf("#") !== n.length - 1 && (n += "#", e.id = n); var r = n.substr(0, n.length - 1); if (!this.provider.isAbsolutePath(r))
                return e; r = this.provider.normalizePath(r); var i = []; this.collectRefContainers(e, i), i.forEach(function (e) { var n = e.$ref; if ("string" == typeof n && 0 !== n.indexOf("#")) {
                -1 === n.indexOf("#") && (n += "#");
                var i = t.provider.resolvePath(r, n);
                e.$ref = i;
            } }); }, e.prototype.removeFragmentPartOfIDs = function (e) { var t = this; if (e) {
                if (Array.isArray(e))
                    return void e.forEach(function (e) { return t.removeFragmentPartOfIDs(e); });
                if ("object" == typeof e) {
                    var n = e.id;
                    if (n && "string" == typeof e.id) {
                        var r = n.indexOf("#");
                        r >= 0 && (n = n.substring(0, r).trim(), n ? e.id = n : delete e.id);
                    }
                    Object.keys(e).forEach(function (n) { return t.removeFragmentPartOfIDs(e[n]); });
                }
            } }, e.prototype.collectRefContainers = function (e, t) { var n = this; Object.keys(e).forEach(function (r) { return "$ref" === r ? void t.push(e) : void (e[r] && "object" == typeof e[r] && n.collectRefContainers(e[r], t)); }); }, e.prototype.validate = function (e, t) { var r = this; void 0 === t && (t = []); var i = I(e, this.schema, this.provider.contextPath()), a = _.getValue(i); if (a) {
                if (a instanceof Error)
                    throw a;
            }
            else {
                if (0 == t.length && (c(e, !0), this.jsonSchema.id)) {
                    var o = this.jsonSchema.id;
                    if ("#" == o.charAt(o.length - 1)) {
                        var s = o.substring(0, o.length - 1);
                        t.push({ reference: s, content: this.jsonSchema });
                    }
                }
                var u = JSON.parse(e), l = h.getValidator();
                t.forEach(function (e) { return l.setRemoteReference(e.reference, e.content); }), l.validate(u, this.jsonSchema);
                var p = l.getMissingRemoteReferences().filter(function (e) { return !f.find(t, function (t) { return e === t.reference; }); });
                if (!p || 0 === p.length)
                    return void this.acceptErrors(i, l.getLastErrors(), e, !0);
                var m = [];
                p.forEach(function (e) { var t, i = { reference: e }; try {
                    var a = n(173), o = r.provider.content(e);
                    c(o, !0);
                    var s = JSON.parse(o);
                    r.setupId(s, r.provider.normalizePath(e)), t = a.v4(s), delete t.$schema, i.content = t;
                }
                catch (u) {
                    if (y.ValidationError.isInstance(u))
                        throw u.filePath = e, u;
                    i.error = u;
                }
                finally {
                    m.push(i);
                } }), this.provider.hasAsyncRequests() || (m.forEach(function (e) { t.push(e); }), this.validate(e, t));
            } }, e.checkIfNonObjectAssignmentFailure = function (e) { var t = "__$validated", n = "called on non-object"; if (!e)
                return null; if (-1 != e.indexOf(t)) {
                var r = "Cannot assign to read only property '__$validated' of ", i = "Cannot create property '__$validated' on string '";
                return 0 == e.indexOf(r) && e.length > r.length ? e.substr(r.length, e.length - r.length) : 0 == e.indexOf(i) && e.length > i.length + 1 && "'" == e.charAt(e.length - 1) ? e.substr(i.length, e.length - i.length - 1) : "";
            } return -1 != e.indexOf(n) ? "" : null; }, e.prototype.validateSelf = function (t) { var r = this; void 0 === t && (t = []); var i = I("__SCHEMA_VALIDATION__", this.schema, this.provider.contextPath()), a = _.getValue(i); if (a) {
                if (a instanceof Error)
                    throw a;
            }
            else {
                var o = h.getValidator();
                if (0 == t.length && this.jsonSchema.id) {
                    var s = this.jsonSchema.id;
                    if ("#" == s.charAt(s.length - 1)) {
                        var u = s.substring(0, s.length - 1);
                        t.push({ reference: u, content: this.jsonSchema });
                    }
                }
                t.forEach(function (e) { return o.setRemoteReference(e.reference, e.content); });
                try {
                    o.validateSchema(this.jsonSchema);
                }
                catch (a) {
                    var l = e.checkIfNonObjectAssignmentFailure(a.message);
                    if (null !== l) {
                        var p = l, m = "Assignment to non-object.";
                        p && (m = "Unexpected value '" + p + "'"), this.acceptErrors(i, [{ message: m, params: [] }], null, !0, !0);
                    }
                    throw a;
                }
                var d = o.getMissingRemoteReferences().filter(function (e) { return !f.find(t, function (t) { return e === t.reference; }); });
                if (!d || 0 === d.length)
                    return void this.acceptErrors(i, o.getLastErrors(), null, !0, !0);
                var v = [];
                d.forEach(function (e) { var t, i = { reference: e }; try {
                    var a = n(173), o = r.provider.content(e);
                    c(o, !0);
                    var s = JSON.parse(o);
                    r.setupId(s, r.provider.normalizePath(e)), t = a.v4(s), delete t.$schema, i.content = t;
                }
                catch (u) {
                    if (y.ValidationError.isInstance(u))
                        throw u.filePath = e, u;
                    i.error = u;
                }
                finally {
                    v.push(i);
                } }), this.provider.hasAsyncRequests() || (v.forEach(function (e) { t.push(e); }), this.validateSelf(t));
            } }, e.prototype.setupId = function (e, t) { if (t && e) {
                if (this.removeFragmentPartOfIDs(e), e.id)
                    return e.id = e.id.trim(), void (e.id.indexOf("#") < 0 && (e.id = e.id + "#"));
                e.id = t.replace(/\\/g, "/") + "#", this.patchSchema(e);
            } }, e.prototype.acceptErrors = function (t, n, r, i, a) { var o = this; void 0 === i && (i = !1), void 0 === a && (a = !1); var s = null != r, u = null != r ? r : this.schema; if (n && n.length > 0) {
                var p = g(u, { verbose: !0 }), c = n.map(function (t) { var n, i = s && e.EXAMPLE_ERROR_CODES[t.code]; n = i ? o.EXAMPLE_ERROR_ENTRY : o.SCHEMA_ERROR_ENTRY; var c = new y.ValidationError(n, { msg: t.message }); return (i || null == r) && (c.internalRange = l(u, p, t.path)), c.isWarning = a, c.error = t, c.internalPath = t.path, c; }), f = c[0];
                if (f.additionalErrors = c.slice(1), _.setValue(t, f), i)
                    throw f;
            }
            else
                _.setValue(t, 1); }, e.prototype.contentAsync = function (e) { var t, r = this, i = n(173), a = this.provider.contentAsync(e); if (!a)
                return this.provider.promiseResolve({ reference: e, content: null, error: new y.ValidationError(v.messageRegistry.REFERENCE_NOT_FOUND, { ref: e }) }); var o = a.then(function (n) { var a = { reference: e }; try {
                var o = JSON.parse(n);
                r.setupId(o, r.provider.normalizePath(e)), t = i.v4(o), delete t.$schema, a.content = t;
            }
            catch (s) {
                a.error = s;
            } return a; }); return o; }, e.SCHEMA_ERROR_CODES = { KEYWORD_TYPE_EXPECTED: !0, KEYWORD_MUST_BE: !0, KEYWORD_DEPENDENCY: !0, KEYWORD_PATTERN: !0, KEYWORD_UNDEFINED_STRICT: !0, KEYWORD_VALUE_TYPE: !0, CUSTOM_MODE_FORCE_PROPERTIES: !0, UNKNOWN_FORMAT: !0, PARENT_SCHEMA_VALIDATION_FAILED: !0, REF_UNRESOLVED: !0, KEYWORD_UNEXPECTED: !0, SCHEMA_NOT_AN_OBJECT: !0, SCHEMA_NOT_REACHABLE: !0, UNRESOLVABLE_REFERENCE: !0 }, e.EXAMPLE_ERROR_CODES = { MULTIPLE_OF: !0, MAXIMUM: !0, MAXIMUM_EXCLUSIVE: !0, MAX_LENGTH: !0, MIN_LENGTH: !0, PATTERN: !0, ARRAY_ADDITIONAL_ITEMS: !0, ARRAY_LENGTH_LONG: !0, ARRAY_LENGTH_SHORT: !0, ARRAY_UNIQUE: !0, OBJECT_PROPERTIES_MAXIMUM: !0, OBJECT_PROPERTIES_MINIMUM: !0, OBJECT_MISSING_REQUIRED_PROPERTY: !0, OBJECT_ADDITIONAL_PROPERTIES: !0, OBJECT_DEPENDENCY_KEY: !0, ENUM_MISMATCH: !0, ANY_OF_MISSING: !0, ONE_OF_MISSING: !0, ONE_OF_MULTIPLE: !0, NOT_PASSED: !0, INVALID_FORMAT: !0, UNKNOWN_FORMAT: !0, INVALID_TYPE: !0 }, e; }();
            t.JSONSchemaObject = R;
            var M = 10, w = function () { function e(e, t) { if (this.schema = e, this.provider = t, this.extraElementData = null, this.references = {}, this.contentToResult = {}, t || (this.provider = new b), "<" != e.charAt(0))
                throw new y.ValidationError(v.messageRegistry.INVALID_XML_SCHEMA); this.schemaString = this.handleReferenceElement(e); } return e.prototype.getType = function () { return "text.xml"; }, e.prototype.validateObject = function (e) { if (this.extraElementData) {
                var t = Object.keys(e)[0], n = new y.ValidationError(v.messageRegistry.EXTERNAL_TYPE_ERROR, { typeName: this.extraElementData.requestedName, objectName: t });
                if (!this.extraElementData.type && !this.extraElementData.originalName)
                    return void this.acceptErrors("key", [n], !0);
                if (this.extraElementData.originalName && t !== this.extraElementData.originalName)
                    return void this.acceptErrors("key", [n], !0);
                if (this.extraElementData.type) {
                    var r = e[t];
                    delete e[t], e[this.extraElementData.name] = r;
                }
            } this.validate(m.jsonToXml(e)); }, e.prototype.collectReferences = function (e, t, n) { var r, i = this; r = new d(T).parseFromString(e); var a = o(r, "schema", this.namspacePrefix)[0], s = o(a, "import", this.namspacePrefix), u = o(a, "include", this.namspacePrefix), l = s.concat(u); return l.forEach(function (e) { var r = e.getAttribute("schemaLocation"); if (r) {
                var a = i.provider.resolvePath(t, r), o = n[a];
                if (!o) {
                    var s, u = Object.keys(n).length, l = i.provider.content(a);
                    try {
                        s = i.collectReferences(l, a, n);
                    }
                    catch (p) {
                        s = l;
                    }
                    o = m.createXmlSchemaReference(a, u, s), n[a] = o;
                }
                e.setAttribute("schemaLocation", "file_" + o.virtualIndex + ".xsd");
            } }), r.toString(); }, e.prototype.getMissingReferences = function () { var e, t = this; e = new d(T).parseFromString(this.schemaString); var n = o(e, "schema", this.namspacePrefix)[0], r = o(n, "import", this.namspacePrefix), i = o(n, "include", this.namspacePrefix), a = r.concat(i), s = []; return a.forEach(function (e) { var n = e.getAttribute("schemaLocation"); if (n) {
                var r = t.provider.resolvePath(t.provider.contextPath(), n);
                s.push(r);
            } }), s; }, e.prototype.collectReferencesAsync = function (e, t, n) { var r, i = this; r = new d(T).parseFromString(e); var a = o(r, "schema", this.namspacePrefix)[0], s = o(a, "import", this.namspacePrefix), u = o(a, "include", this.namspacePrefix), l = s.concat(u); return Promise.all(l.map(function (e) { var r = e.getAttribute("schemaLocation"); if (r) {
                var a = i.provider.resolvePath(t, r), o = n[a];
                return o ? (e.setAttribute("schemaLocation", "file_" + o.virtualIndex + ".xsd"), {}) : i.provider.contentAsync(a).then(function (t) { return i.collectReferencesAsync(t, a, n).then(function (e) { return e; }, function (e) { return t; }).then(function (t) { var r = Object.keys(n).length; return o = m.createXmlSchemaReference(a, r, t), n[a] = o, e.setAttribute("schemaLocation", "file_" + o.virtualIndex + ".xsd"), {}; }); });
            } return {}; })).then(function (e) { return Promise.resolve(r.toString()); }); }, e.prototype.loadSchemaReferencesAsync = function () { return this.collectReferencesAsync(this.schemaString, this.provider.contextPath(), {}); }, e.prototype.validate = function (e) { try {
                var t = this.contentToResult[e];
                if (t === !1)
                    return;
                if (t)
                    throw t;
                var n = {}, r = this.collectReferences(this.schemaString, this.provider.contextPath(), n), i = m.getValidator(r);
                if (this.provider.hasAsyncRequests())
                    return;
                var a = i.validate(e, Object.keys(n).map(function (e) { return n[e]; }));
                this.acceptErrors("key", a, !0), this.contentToResult[e] = !1, Object.keys(this.contentToResult).length > M && (this.contentToResult = {});
            }
            catch (o) {
                throw this.contentToResult[e] = o, o;
            } }, e.prototype.handleReferenceElement = function (e) { var t = new d(T).parseFromString(e); this.namspacePrefix = s(t); var n = o(t, "schema", this.namspacePrefix)[0], r = o(n, "element", this.namspacePrefix), i = f.find(r, function (e) { return "true" === e.getAttribute("extraelement"); }); if (!i)
                return e; var a = {}; return a.name = i.getAttribute("name"), a.type = i.getAttribute("type"), a.originalName = i.getAttribute("originalname"), a.requestedName = i.getAttribute("requestedname"), a.type || n.removeChild(i), i.removeAttribute("originalname"), i.removeAttribute("requestedname"), i.removeAttribute("extraelement"), this.extraElementData = a, t.toString(); }, e.prototype.acceptErrors = function (e, t, n) { if (void 0 === n && (n = !1), t && t.length > 0) {
                var r = t.map(function (e) { return e.message; }).join(", "), i = new y.ValidationError(v.messageRegistry.CONTENT_DOES_NOT_MATCH_THE_SCHEMA, { msg: r });
                if (i.errors = t, _.setValue(e, i), n)
                    throw i;
            }
            else
                ; }, e; }();
            t.XMLSchemaObject = w, t.getJSONSchema = r;
            var C = function (e, t) { var n = ""; e && (n = e.contextPath()); var r = "__SCHEMA_" + t + n; return r; };
            t.getXMLSchema = i, t.createSchema = a;
            var L = "Cannot tokenize symbol", P = "Unexpected token";
            t.messageToValidationError = u, t.getJSONRange = l, t.tryParseJSON = c;
        }).call(t, function () { return this; }()); }, function (e, t, n) {
            function r(e) { if (k && I) {
                var t, n = k(e);
                for (t = 0; t < n.length; t += 1)
                    I(e, n[t], { value: e[n[t]], writable: !1, enumerable: !1, configurable: !1 });
            } }
            function i(e) { function t(t) { I(e, t, { get: function () { return e._getter(t); }, set: function (n) { e._setter(t, n); }, enumerable: !0, configurable: !1 }); } if (I) {
                if (e.length > M)
                    throw new RangeError("Array too large for polyfill");
                var n;
                for (n = 0; n < e.length; n += 1)
                    t(n);
            } }
            function a(e, t) { var n = 32 - t; return e << n >> n; }
            function o(e, t) { var n = 32 - t; return e << n >>> n; }
            function s(e) { return [255 & e]; }
            function u(e) { return a(e[0], 8); }
            function l(e) { return [255 & e]; }
            function p(e) { return o(e[0], 8); }
            function c(e) { return e = x(Number(e)), [0 > e ? 0 : e > 255 ? 255 : 255 & e]; }
            function f(e) { return [e >> 8 & 255, 255 & e]; }
            function m(e) { return a(e[0] << 8 | e[1], 16); }
            function h(e) { return [e >> 8 & 255, 255 & e]; }
            function d(e) { return o(e[0] << 8 | e[1], 16); }
            function y(e) { return [e >> 24 & 255, e >> 16 & 255, e >> 8 & 255, 255 & e]; }
            function v(e) { return a(e[0] << 24 | e[1] << 16 | e[2] << 8 | e[3], 32); }
            function g(e) { return [e >> 24 & 255, e >> 16 & 255, e >> 8 & 255, 255 & e]; }
            function A(e) { return o(e[0] << 24 | e[1] << 16 | e[2] << 8 | e[3], 32); }
            function T(e, t, n) { function r(e) { var t = P(e), n = e - t; return .5 > n ? t : n > .5 ? t + 1 : t % 2 ? t + 1 : t; } var i, a, o, s, u, l, p, c = (1 << t - 1) - 1; for (e !== e ? (a = (1 << t) - 1, o = U(2, n - 1), i = 0) : e === 1 / 0 || e === -(1 / 0) ? (a = (1 << t) - 1, o = 0, i = 0 > e ? 1 : 0) : 0 === e ? (a = 0, o = 0, i = 1 / e === -(1 / 0) ? 1 : 0) : (i = 0 > e, e = L(e), e >= U(2, 1 - c) ? (a = D(P(O(e) / C), 1023), o = r(e / U(2, a) * U(2, n)), o / U(2, n) >= 2 && (a += 1, o = 1), a > c ? (a = (1 << t) - 1, o = 0) : (a += c, o -= U(2, n))) : (a = 0, o = r(e / U(2, 1 - c - n)))), u = [], s = n; s; s -= 1)
                u.push(o % 2 ? 1 : 0), o = P(o / 2); for (s = t; s; s -= 1)
                u.push(a % 2 ? 1 : 0), a = P(a / 2); for (u.push(i ? 1 : 0), u.reverse(), l = u.join(""), p = []; l.length;)
                p.push(parseInt(l.substring(0, 8), 2)), l = l.substring(8); return p; }
            function E(e, t, n) { var r, i, a, o, s, u, l, p, c = []; for (r = e.length; r; r -= 1)
                for (a = e[r - 1], i = 8; i; i -= 1)
                    c.push(a % 2 ? 1 : 0), a >>= 1; return c.reverse(), o = c.join(""), s = (1 << t - 1) - 1, u = parseInt(o.substring(0, 1), 2) ? -1 : 1, l = parseInt(o.substring(1, 1 + t), 2), p = parseInt(o.substring(1 + t), 2), l === (1 << t) - 1 ? 0 !== p ? NaN : u * (1 / 0) : l > 0 ? u * U(2, l - s) * (1 + p / U(2, n)) : 0 !== p ? u * U(2, -(s - 1)) * (p / U(2, n)) : 0 > u ? -0 : 0; }
            function S(e) { return E(e, 11, 52); }
            function N(e) { return T(e, 11, 52); }
            function _(e) { return E(e, 8, 23); }
            function b(e) { return T(e, 8, 23); }
            var I, R = void 0, M = 1e5, w = function () { var e = Object.prototype.toString, t = Object.prototype.hasOwnProperty; return { Class: function (t) { return e.call(t).replace(/^\[object *|\]$/g, ""); }, HasProperty: function (e, t) { return t in e; }, HasOwnProperty: function (e, n) { return t.call(e, n); }, IsCallable: function (e) { return "function" == typeof e; }, ToInt32: function (e) { return e >> 0; }, ToUint32: function (e) { return e >>> 0; } }; }(), C = Math.LN2, L = Math.abs, P = Math.floor, O = Math.log, D = Math.min, U = Math.pow, x = Math.round;
            I = Object.defineProperty && function () { try {
                return Object.defineProperty({}, "x", {}), !0;
            }
            catch (e) {
                return !1;
            } }() ? Object.defineProperty : function (e, t, n) { if (!e === Object(e))
                throw new TypeError("Object.defineProperty called on non-object"); return w.HasProperty(n, "get") && Object.prototype.__defineGetter__ && Object.prototype.__defineGetter__.call(e, t, n.get), w.HasProperty(n, "set") && Object.prototype.__defineSetter__ && Object.prototype.__defineSetter__.call(e, t, n.set), w.HasProperty(n, "value") && (e[t] = n.value), e; };
            var k = Object.getOwnPropertyNames || function (e) { if (e !== Object(e))
                throw new TypeError("Object.getOwnPropertyNames called on non-object"); var t, n = []; for (t in e)
                w.HasOwnProperty(e, t) && n.push(t); return n; };
            !function () {
                function e(e, t, o) {
                    var s;
                    return s = function (e, t, a) { var o, u, l, p; if (arguments.length && "number" != typeof arguments[0])
                        if ("object" == typeof arguments[0] && arguments[0].constructor === s)
                            for (o = arguments[0], this.length = o.length, this.byteLength = this.length * this.BYTES_PER_ELEMENT, this.buffer = new n(this.byteLength), this.byteOffset = 0, l = 0; l < this.length; l += 1)
                                this._setter(l, o._getter(l));
                        else if ("object" != typeof arguments[0] || (arguments[0] instanceof n || "ArrayBuffer" === w.Class(arguments[0]))) {
                            if ("object" != typeof arguments[0] || !(arguments[0] instanceof n || "ArrayBuffer" === w.Class(arguments[0])))
                                throw new TypeError("Unexpected argument type(s)");
                            if (this.buffer = e, this.byteOffset = w.ToUint32(t), this.byteOffset > this.buffer.byteLength)
                                throw new RangeError("byteOffset out of range");
                            if (this.byteOffset % this.BYTES_PER_ELEMENT)
                                throw new RangeError("ArrayBuffer length minus the byteOffset is not a multiple of the element size.");
                            if (arguments.length < 3) {
                                if (this.byteLength = this.buffer.byteLength - this.byteOffset, this.byteLength % this.BYTES_PER_ELEMENT)
                                    throw new RangeError("length of buffer minus byteOffset not a multiple of the element size");
                                this.length = this.byteLength / this.BYTES_PER_ELEMENT;
                            }
                            else
                                this.length = w.ToUint32(a), this.byteLength = this.length * this.BYTES_PER_ELEMENT;
                            if (this.byteOffset + this.byteLength > this.buffer.byteLength)
                                throw new RangeError("byteOffset and length reference an area beyond the end of the buffer");
                        }
                        else
                            for (u = arguments[0], this.length = w.ToUint32(u.length), this.byteLength = this.length * this.BYTES_PER_ELEMENT, this.buffer = new n(this.byteLength), this.byteOffset = 0, l = 0; l < this.length; l += 1)
                                p = u[l], this._setter(l, Number(p));
                    else {
                        if (this.length = w.ToInt32(arguments[0]), 0 > a)
                            throw new RangeError("ArrayBufferView size is not a small enough positive integer");
                        this.byteLength = this.length * this.BYTES_PER_ELEMENT, this.buffer = new n(this.byteLength), this.byteOffset = 0;
                    } this.constructor = s, r(this), i(this); }, s.prototype = new a, s.prototype.BYTES_PER_ELEMENT = e, s.prototype._pack = t, s.prototype._unpack = o, s.BYTES_PER_ELEMENT = e, s.prototype._getter = function (e) { if (arguments.length < 1)
                        throw new SyntaxError("Not enough arguments"); if (e = w.ToUint32(e), e >= this.length)
                        return R; var t, n, r = []; for (t = 0, n = this.byteOffset + e * this.BYTES_PER_ELEMENT; t < this.BYTES_PER_ELEMENT; t += 1, n += 1)
                        r.push(this.buffer._bytes[n]); return this._unpack(r); }, s.prototype.get = s.prototype._getter,
                        s.prototype._setter = function (e, t) { if (arguments.length < 2)
                            throw new SyntaxError("Not enough arguments"); if (e = w.ToUint32(e), e >= this.length)
                            return R; var n, r, i = this._pack(t); for (n = 0, r = this.byteOffset + e * this.BYTES_PER_ELEMENT; n < this.BYTES_PER_ELEMENT; n += 1, r += 1)
                            this.buffer._bytes[r] = i[n]; }, s.prototype.set = function (e, t) { if (arguments.length < 1)
                        throw new SyntaxError("Not enough arguments"); var n, r, i, a, o, s, u, l, p, c; if ("object" == typeof arguments[0] && arguments[0].constructor === this.constructor) {
                        if (n = arguments[0], i = w.ToUint32(arguments[1]), i + n.length > this.length)
                            throw new RangeError("Offset plus length of array is out of range");
                        if (l = this.byteOffset + i * this.BYTES_PER_ELEMENT, p = n.length * this.BYTES_PER_ELEMENT, n.buffer === this.buffer) {
                            for (c = [], o = 0, s = n.byteOffset; p > o; o += 1, s += 1)
                                c[o] = n.buffer._bytes[s];
                            for (o = 0, u = l; p > o; o += 1, u += 1)
                                this.buffer._bytes[u] = c[o];
                        }
                        else
                            for (o = 0, s = n.byteOffset, u = l; p > o; o += 1, s += 1, u += 1)
                                this.buffer._bytes[u] = n.buffer._bytes[s];
                    }
                    else {
                        if ("object" != typeof arguments[0] || "undefined" == typeof arguments[0].length)
                            throw new TypeError("Unexpected argument type(s)");
                        if (r = arguments[0], a = w.ToUint32(r.length), i = w.ToUint32(arguments[1]), i + a > this.length)
                            throw new RangeError("Offset plus length of array is out of range");
                        for (o = 0; a > o; o += 1)
                            s = r[o], this._setter(i + o, Number(s));
                    } }, s.prototype.subarray = function (e, t) { function n(e, t, n) { return t > e ? t : e > n ? n : e; } e = w.ToInt32(e), t = w.ToInt32(t), arguments.length < 1 && (e = 0), arguments.length < 2 && (t = this.length), 0 > e && (e = this.length + e), 0 > t && (t = this.length + t), e = n(e, 0, this.length), t = n(t, 0, this.length); var r = t - e; return 0 > r && (r = 0), new this.constructor(this.buffer, this.byteOffset + e * this.BYTES_PER_ELEMENT, r); }, s;
                }
                var n = function (e) { if (e = w.ToInt32(e), 0 > e)
                    throw new RangeError("ArrayBuffer size is not a small enough positive integer"); this.byteLength = e, this._bytes = [], this._bytes.length = e; var t; for (t = 0; t < this.byteLength; t += 1)
                    this._bytes[t] = 0; r(this); };
                t.ArrayBuffer = t.ArrayBuffer || n;
                var a = function () { }, o = e(1, s, u), T = e(1, l, p), E = e(1, c, p), I = e(2, f, m), M = e(2, h, d), C = e(4, y, v), L = e(4, g, A), P = e(4, b, _), O = e(8, N, S);
                t.Int8Array = t.Int8Array || o, t.Uint8Array = t.Uint8Array || T, t.Uint8ClampedArray = t.Uint8ClampedArray || E, t.Int16Array = t.Int16Array || I, t.Uint16Array = t.Uint16Array || M, t.Int32Array = t.Int32Array || C, t.Uint32Array = t.Uint32Array || L, t.Float32Array = t.Float32Array || P, t.Float64Array = t.Float64Array || O;
            }(), function () { function e(e, t) { return w.IsCallable(e.get) ? e.get(t) : e[t]; } function n(n) { return function (r, i) { if (r = w.ToUint32(r), r + n.BYTES_PER_ELEMENT > this.byteLength)
                throw new RangeError("Array index out of range"); r += this.byteOffset; var o, s = new t.Uint8Array(this.buffer, r, n.BYTES_PER_ELEMENT), u = []; for (o = 0; o < n.BYTES_PER_ELEMENT; o += 1)
                u.push(e(s, o)); return Boolean(i) === Boolean(a) && u.reverse(), e(new n(new t.Uint8Array(u).buffer), 0); }; } function i(n) { return function (r, i, o) { if (r = w.ToUint32(r), r + n.BYTES_PER_ELEMENT > this.byteLength)
                throw new RangeError("Array index out of range"); var s, u, l = new n([i]), p = new t.Uint8Array(l.buffer), c = []; for (s = 0; s < n.BYTES_PER_ELEMENT; s += 1)
                c.push(e(p, s)); Boolean(o) === Boolean(a) && c.reverse(), u = new t.Uint8Array(this.buffer, r, n.BYTES_PER_ELEMENT), u.set(c); }; } var a = function () { var n = new t.Uint16Array([4660]), r = new t.Uint8Array(n.buffer); return 18 === e(r, 0); }(), o = function (e, n, i) { if (0 === arguments.length)
                e = new t.ArrayBuffer(0);
            else if (!(e instanceof t.ArrayBuffer || "ArrayBuffer" === w.Class(e)))
                throw new TypeError("TypeError"); if (this.buffer = e || new t.ArrayBuffer(0), this.byteOffset = w.ToUint32(n), this.byteOffset > this.buffer.byteLength)
                throw new RangeError("byteOffset out of range"); if (arguments.length < 3 ? this.byteLength = this.buffer.byteLength - this.byteOffset : this.byteLength = w.ToUint32(i), this.byteOffset + this.byteLength > this.buffer.byteLength)
                throw new RangeError("byteOffset and length reference an area beyond the end of the buffer"); r(this); }; o.prototype.getUint8 = n(t.Uint8Array), o.prototype.getInt8 = n(t.Int8Array), o.prototype.getUint16 = n(t.Uint16Array), o.prototype.getInt16 = n(t.Int16Array), o.prototype.getUint32 = n(t.Uint32Array), o.prototype.getInt32 = n(t.Int32Array), o.prototype.getFloat32 = n(t.Float32Array), o.prototype.getFloat64 = n(t.Float64Array), o.prototype.setUint8 = i(t.Uint8Array), o.prototype.setInt8 = i(t.Int8Array), o.prototype.setUint16 = i(t.Uint16Array), o.prototype.setInt16 = i(t.Int16Array), o.prototype.setUint32 = i(t.Uint32Array), o.prototype.setInt32 = i(t.Int32Array), o.prototype.setFloat32 = i(t.Float32Array), o.prototype.setFloat64 = i(t.Float64Array), t.DataView = t.DataView || o; }();
        }, function (e, t, n) {
            (function (e, r) {
                "use strict";
                function i() { function e() { } try {
                    var t = new Uint8Array(1);
                    return t.foo = function () { return 42; }, t.constructor = e, 42 === t.foo() && t.constructor === e && "function" == typeof t.subarray && 0 === t.subarray(1, 1).byteLength;
                }
                catch (n) {
                    return !1;
                } }
                function a() { return e.TYPED_ARRAY_SUPPORT ? 2147483647 : 1073741823; }
                function e(t) { return this instanceof e ? (e.TYPED_ARRAY_SUPPORT || (this.length = 0, this.parent = void 0), "number" == typeof t ? o(this, t) : "string" == typeof t ? s(this, t, arguments.length > 1 ? arguments[1] : "utf8") : u(this, t)) : arguments.length > 1 ? new e(t, arguments[1]) : new e(t); }
                function o(t, n) { if (t = d(t, 0 > n ? 0 : 0 | y(n)), !e.TYPED_ARRAY_SUPPORT)
                    for (var r = 0; n > r; r++)
                        t[r] = 0; return t; }
                function s(e, t, n) { ("string" != typeof n || "" === n) && (n = "utf8"); var r = 0 | g(t, n); return e = d(e, r), e.write(t, n), e; }
                function u(t, n) { if (e.isBuffer(n))
                    return l(t, n); if ($(n))
                    return p(t, n); if (null == n)
                    throw new TypeError("must start with number, buffer, array or string"); if ("undefined" != typeof ArrayBuffer) {
                    if (n.buffer instanceof ArrayBuffer)
                        return c(t, n);
                    if (n instanceof ArrayBuffer)
                        return f(t, n);
                } return n.length ? m(t, n) : h(t, n); }
                function l(e, t) { var n = 0 | y(t.length); return e = d(e, n), t.copy(e, 0, 0, n), e; }
                function p(e, t) { var n = 0 | y(t.length); e = d(e, n); for (var r = 0; n > r; r += 1)
                    e[r] = 255 & t[r]; return e; }
                function c(e, t) { var n = 0 | y(t.length); e = d(e, n); for (var r = 0; n > r; r += 1)
                    e[r] = 255 & t[r]; return e; }
                function f(t, n) { return e.TYPED_ARRAY_SUPPORT ? (n.byteLength, t = e._augment(new Uint8Array(n))) : t = c(t, new Uint8Array(n)), t; }
                function m(e, t) { var n = 0 | y(t.length); e = d(e, n); for (var r = 0; n > r; r += 1)
                    e[r] = 255 & t[r]; return e; }
                function h(e, t) { var n, r = 0; "Buffer" === t.type && $(t.data) && (n = t.data, r = 0 | y(n.length)), e = d(e, r); for (var i = 0; r > i; i += 1)
                    e[i] = 255 & n[i]; return e; }
                function d(t, n) { e.TYPED_ARRAY_SUPPORT ? (t = e._augment(new Uint8Array(n)), t.__proto__ = e.prototype) : (t.length = n, t._isBuffer = !0); var r = 0 !== n && n <= e.poolSize >>> 1; return r && (t.parent = J), t; }
                function y(e) { if (e >= a())
                    throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + a().toString(16) + " bytes"); return 0 | e; }
                function v(t, n) { if (!(this instanceof v))
                    return new v(t, n); var r = new e(t, n); return delete r.parent, r; }
                function g(e, t) { "string" != typeof e && (e = "" + e); var n = e.length; if (0 === n)
                    return 0; for (var r = !1;;)
                    switch (t) {
                        case "ascii":
                        case "binary":
                        case "raw":
                        case "raws": return n;
                        case "utf8":
                        case "utf-8": return W(e).length;
                        case "ucs2":
                        case "ucs-2":
                        case "utf16le":
                        case "utf-16le": return 2 * n;
                        case "hex": return n >>> 1;
                        case "base64": return Y(e).length;
                        default:
                            if (r)
                                return W(e).length;
                            t = ("" + t).toLowerCase(), r = !0;
                    } }
                function A(e, t, n) { var r = !1; if (t = 0 | t, n = void 0 === n || n === 1 / 0 ? this.length : 0 | n, e || (e = "utf8"), 0 > t && (t = 0), n > this.length && (n = this.length), t >= n)
                    return ""; for (;;)
                    switch (e) {
                        case "hex": return L(this, t, n);
                        case "utf8":
                        case "utf-8": return R(this, t, n);
                        case "ascii": return w(this, t, n);
                        case "binary": return C(this, t, n);
                        case "base64": return I(this, t, n);
                        case "ucs2":
                        case "ucs-2":
                        case "utf16le":
                        case "utf-16le": return P(this, t, n);
                        default:
                            if (r)
                                throw new TypeError("Unknown encoding: " + e);
                            e = (e + "").toLowerCase(), r = !0;
                    } }
                function T(e, t, n, r) { n = Number(n) || 0; var i = e.length - n; r ? (r = Number(r), r > i && (r = i)) : r = i; var a = t.length; if (a % 2 !== 0)
                    throw new Error("Invalid hex string"); r > a / 2 && (r = a / 2); for (var o = 0; r > o; o++) {
                    var s = parseInt(t.substr(2 * o, 2), 16);
                    if (isNaN(s))
                        throw new Error("Invalid hex string");
                    e[n + o] = s;
                } return o; }
                function E(e, t, n, r) { return G(W(t, e.length - n), e, n, r); }
                function S(e, t, n, r) { return G(q(t), e, n, r); }
                function N(e, t, n, r) { return S(e, t, n, r); }
                function _(e, t, n, r) { return G(Y(t), e, n, r); }
                function b(e, t, n, r) { return G(H(t, e.length - n), e, n, r); }
                function I(e, t, n) { return 0 === t && n === e.length ? X.fromByteArray(e) : X.fromByteArray(e.slice(t, n)); }
                function R(e, t, n) { n = Math.min(e.length, n); for (var r = [], i = t; n > i;) {
                    var a = e[i], o = null, s = a > 239 ? 4 : a > 223 ? 3 : a > 191 ? 2 : 1;
                    if (n >= i + s) {
                        var u, l, p, c;
                        switch (s) {
                            case 1:
                                128 > a && (o = a);
                                break;
                            case 2:
                                u = e[i + 1], 128 === (192 & u) && (c = (31 & a) << 6 | 63 & u, c > 127 && (o = c));
                                break;
                            case 3:
                                u = e[i + 1], l = e[i + 2], 128 === (192 & u) && 128 === (192 & l) && (c = (15 & a) << 12 | (63 & u) << 6 | 63 & l, c > 2047 && (55296 > c || c > 57343) && (o = c));
                                break;
                            case 4: u = e[i + 1], l = e[i + 2], p = e[i + 3], 128 === (192 & u) && 128 === (192 & l) && 128 === (192 & p) && (c = (15 & a) << 18 | (63 & u) << 12 | (63 & l) << 6 | 63 & p, c > 65535 && 1114112 > c && (o = c));
                        }
                    }
                    null === o ? (o = 65533, s = 1) : o > 65535 && (o -= 65536, r.push(o >>> 10 & 1023 | 55296), o = 56320 | 1023 & o), r.push(o), i += s;
                } return M(r); }
                function M(e) { var t = e.length; if (Q >= t)
                    return String.fromCharCode.apply(String, e); for (var n = "", r = 0; t > r;)
                    n += String.fromCharCode.apply(String, e.slice(r, r += Q)); return n; }
                function w(e, t, n) { var r = ""; n = Math.min(e.length, n); for (var i = t; n > i; i++)
                    r += String.fromCharCode(127 & e[i]); return r; }
                function C(e, t, n) { var r = ""; n = Math.min(e.length, n); for (var i = t; n > i; i++)
                    r += String.fromCharCode(e[i]); return r; }
                function L(e, t, n) { var r = e.length; (!t || 0 > t) && (t = 0), (!n || 0 > n || n > r) && (n = r); for (var i = "", a = t; n > a; a++)
                    i += j(e[a]); return i; }
                function P(e, t, n) { for (var r = e.slice(t, n), i = "", a = 0; a < r.length; a += 2)
                    i += String.fromCharCode(r[a] + 256 * r[a + 1]); return i; }
                function O(e, t, n) { if (e % 1 !== 0 || 0 > e)
                    throw new RangeError("offset is not uint"); if (e + t > n)
                    throw new RangeError("Trying to access beyond buffer length"); }
                function D(t, n, r, i, a, o) { if (!e.isBuffer(t))
                    throw new TypeError("buffer must be a Buffer instance"); if (n > a || o > n)
                    throw new RangeError("value is out of bounds"); if (r + i > t.length)
                    throw new RangeError("index out of range"); }
                function U(e, t, n, r) { 0 > t && (t = 65535 + t + 1); for (var i = 0, a = Math.min(e.length - n, 2); a > i; i++)
                    e[n + i] = (t & 255 << 8 * (r ? i : 1 - i)) >>> 8 * (r ? i : 1 - i); }
                function x(e, t, n, r) { 0 > t && (t = 4294967295 + t + 1); for (var i = 0, a = Math.min(e.length - n, 4); a > i; i++)
                    e[n + i] = t >>> 8 * (r ? i : 3 - i) & 255; }
                function k(e, t, n, r, i, a) { if (t > i || a > t)
                    throw new RangeError("value is out of bounds"); if (n + r > e.length)
                    throw new RangeError("index out of range"); if (0 > n)
                    throw new RangeError("index out of range"); }
                function F(e, t, n, r, i) { return i || k(e, t, n, 4, 3.4028234663852886e38, -3.4028234663852886e38), z.write(e, t, n, r, 23, 4), n + 4; }
                function B(e, t, n, r, i) { return i || k(e, t, n, 8, 1.7976931348623157e308, -1.7976931348623157e308), z.write(e, t, n, r, 52, 8), n + 8; }
                function K(e) { if (e = V(e).replace(ee, ""), e.length < 2)
                    return ""; for (; e.length % 4 !== 0;)
                    e += "="; return e; }
                function V(e) { return e.trim ? e.trim() : e.replace(/^\s+|\s+$/g, ""); }
                function j(e) { return 16 > e ? "0" + e.toString(16) : e.toString(16); }
                function W(e, t) { t = t || 1 / 0; for (var n, r = e.length, i = null, a = [], o = 0; r > o; o++) {
                    if (n = e.charCodeAt(o), n > 55295 && 57344 > n) {
                        if (!i) {
                            if (n > 56319) {
                                (t -= 3) > -1 && a.push(239, 191, 189);
                                continue;
                            }
                            if (o + 1 === r) {
                                (t -= 3) > -1 && a.push(239, 191, 189);
                                continue;
                            }
                            i = n;
                            continue;
                        }
                        if (56320 > n) {
                            (t -= 3) > -1 && a.push(239, 191, 189), i = n;
                            continue;
                        }
                        n = (i - 55296 << 10 | n - 56320) + 65536;
                    }
                    else
                        i && (t -= 3) > -1 && a.push(239, 191, 189);
                    if (i = null, 128 > n) {
                        if ((t -= 1) < 0)
                            break;
                        a.push(n);
                    }
                    else if (2048 > n) {
                        if ((t -= 2) < 0)
                            break;
                        a.push(n >> 6 | 192, 63 & n | 128);
                    }
                    else if (65536 > n) {
                        if ((t -= 3) < 0)
                            break;
                        a.push(n >> 12 | 224, n >> 6 & 63 | 128, 63 & n | 128);
                    }
                    else {
                        if (!(1114112 > n))
                            throw new Error("Invalid code point");
                        if ((t -= 4) < 0)
                            break;
                        a.push(n >> 18 | 240, n >> 12 & 63 | 128, n >> 6 & 63 | 128, 63 & n | 128);
                    }
                } return a; }
                function q(e) { for (var t = [], n = 0; n < e.length; n++)
                    t.push(255 & e.charCodeAt(n)); return t; }
                function H(e, t) { for (var n, r, i, a = [], o = 0; o < e.length && !((t -= 2) < 0); o++)
                    n = e.charCodeAt(o), r = n >> 8, i = n % 256, a.push(i), a.push(r); return a; }
                function Y(e) { return X.toByteArray(K(e)); }
                function G(e, t, n, r) { for (var i = 0; r > i && !(i + n >= t.length || i >= e.length); i++)
                    t[i + n] = e[i]; return i; }
                var X = n(188), z = n(168), $ = n(174);
                t.Buffer = e, t.SlowBuffer = v, t.INSPECT_MAX_BYTES = 50, e.poolSize = 8192;
                var J = {};
                e.TYPED_ARRAY_SUPPORT = void 0 !== r.TYPED_ARRAY_SUPPORT ? r.TYPED_ARRAY_SUPPORT : i(), e.TYPED_ARRAY_SUPPORT ? (e.prototype.__proto__ = Uint8Array.prototype, e.__proto__ = Uint8Array) : (e.prototype.length = void 0, e.prototype.parent = void 0), e.isBuffer = function (e) { return !(null == e || !e._isBuffer); }, e.compare = function (t, n) { if (!e.isBuffer(t) || !e.isBuffer(n))
                    throw new TypeError("Arguments must be Buffers"); if (t === n)
                    return 0; for (var r = t.length, i = n.length, a = 0, o = Math.min(r, i); o > a && t[a] === n[a];)
                    ++a; return a !== o && (r = t[a], i = n[a]), i > r ? -1 : r > i ? 1 : 0; }, e.isEncoding = function (e) { switch (String(e).toLowerCase()) {
                    case "hex":
                    case "utf8":
                    case "utf-8":
                    case "ascii":
                    case "binary":
                    case "base64":
                    case "raw":
                    case "ucs2":
                    case "ucs-2":
                    case "utf16le":
                    case "utf-16le": return !0;
                    default: return !1;
                } }, e.concat = function (t, n) { if (!$(t))
                    throw new TypeError("list argument must be an Array of Buffers."); if (0 === t.length)
                    return new e(0); var r; if (void 0 === n)
                    for (n = 0, r = 0; r < t.length; r++)
                        n += t[r].length; var i = new e(n), a = 0; for (r = 0; r < t.length; r++) {
                    var o = t[r];
                    o.copy(i, a), a += o.length;
                } return i; }, e.byteLength = g, e.prototype.toString = function () { var e = 0 | this.length; return 0 === e ? "" : 0 === arguments.length ? R(this, 0, e) : A.apply(this, arguments); }, e.prototype.equals = function (t) { if (!e.isBuffer(t))
                    throw new TypeError("Argument must be a Buffer"); return this === t ? !0 : 0 === e.compare(this, t); }, e.prototype.inspect = function () { var e = "", n = t.INSPECT_MAX_BYTES; return this.length > 0 && (e = this.toString("hex", 0, n).match(/.{2}/g).join(" "), this.length > n && (e += " ... ")), "<Buffer " + e + ">"; }, e.prototype.compare = function (t) { if (!e.isBuffer(t))
                    throw new TypeError("Argument must be a Buffer"); return this === t ? 0 : e.compare(this, t); }, e.prototype.indexOf = function (t, n) { function r(e, t, n) { for (var r = -1, i = 0; n + i < e.length; i++)
                    if (e[n + i] === t[-1 === r ? 0 : i - r]) {
                        if (-1 === r && (r = i), i - r + 1 === t.length)
                            return n + r;
                    }
                    else
                        r = -1; return -1; } if (n > 2147483647 ? n = 2147483647 : -2147483648 > n && (n = -2147483648), n >>= 0, 0 === this.length)
                    return -1; if (n >= this.length)
                    return -1; if (0 > n && (n = Math.max(this.length + n, 0)), "string" == typeof t)
                    return 0 === t.length ? -1 : String.prototype.indexOf.call(this, t, n); if (e.isBuffer(t))
                    return r(this, t, n); if ("number" == typeof t)
                    return e.TYPED_ARRAY_SUPPORT && "function" === Uint8Array.prototype.indexOf ? Uint8Array.prototype.indexOf.call(this, t, n) : r(this, [t], n); throw new TypeError("val must be string, number or Buffer"); }, e.prototype.get = function (e) { return console.log(".get() is deprecated. Access using array indexes instead."), this.readUInt8(e); }, e.prototype.set = function (e, t) { return console.log(".set() is deprecated. Access using array indexes instead."), this.writeUInt8(e, t); }, e.prototype.write = function (e, t, n, r) { if (void 0 === t)
                    r = "utf8", n = this.length, t = 0;
                else if (void 0 === n && "string" == typeof t)
                    r = t, n = this.length, t = 0;
                else if (isFinite(t))
                    t = 0 | t, isFinite(n) ? (n = 0 | n, void 0 === r && (r = "utf8")) : (r = n, n = void 0);
                else {
                    var i = r;
                    r = t, t = 0 | n, n = i;
                } var a = this.length - t; if ((void 0 === n || n > a) && (n = a), e.length > 0 && (0 > n || 0 > t) || t > this.length)
                    throw new RangeError("attempt to write outside buffer bounds"); r || (r = "utf8"); for (var o = !1;;)
                    switch (r) {
                        case "hex": return T(this, e, t, n);
                        case "utf8":
                        case "utf-8": return E(this, e, t, n);
                        case "ascii": return S(this, e, t, n);
                        case "binary": return N(this, e, t, n);
                        case "base64": return _(this, e, t, n);
                        case "ucs2":
                        case "ucs-2":
                        case "utf16le":
                        case "utf-16le": return b(this, e, t, n);
                        default:
                            if (o)
                                throw new TypeError("Unknown encoding: " + r);
                            r = ("" + r).toLowerCase(), o = !0;
                    } }, e.prototype.toJSON = function () { return { type: "Buffer", data: Array.prototype.slice.call(this._arr || this, 0) }; };
                var Q = 4096;
                e.prototype.slice = function (t, n) { var r = this.length; t = ~~t, n = void 0 === n ? r : ~~n, 0 > t ? (t += r, 0 > t && (t = 0)) : t > r && (t = r), 0 > n ? (n += r, 0 > n && (n = 0)) : n > r && (n = r), t > n && (n = t); var i; if (e.TYPED_ARRAY_SUPPORT)
                    i = e._augment(this.subarray(t, n));
                else {
                    var a = n - t;
                    i = new e(a, void 0);
                    for (var o = 0; a > o; o++)
                        i[o] = this[o + t];
                } return i.length && (i.parent = this.parent || this), i; }, e.prototype.readUIntLE = function (e, t, n) { e = 0 | e, t = 0 | t, n || O(e, t, this.length); for (var r = this[e], i = 1, a = 0; ++a < t && (i *= 256);)
                    r += this[e + a] * i; return r; }, e.prototype.readUIntBE = function (e, t, n) { e = 0 | e, t = 0 | t, n || O(e, t, this.length); for (var r = this[e + --t], i = 1; t > 0 && (i *= 256);)
                    r += this[e + --t] * i; return r; }, e.prototype.readUInt8 = function (e, t) { return t || O(e, 1, this.length), this[e]; }, e.prototype.readUInt16LE = function (e, t) { return t || O(e, 2, this.length), this[e] | this[e + 1] << 8; }, e.prototype.readUInt16BE = function (e, t) { return t || O(e, 2, this.length), this[e] << 8 | this[e + 1]; }, e.prototype.readUInt32LE = function (e, t) { return t || O(e, 4, this.length), (this[e] | this[e + 1] << 8 | this[e + 2] << 16) + 16777216 * this[e + 3]; }, e.prototype.readUInt32BE = function (e, t) { return t || O(e, 4, this.length), 16777216 * this[e] + (this[e + 1] << 16 | this[e + 2] << 8 | this[e + 3]); }, e.prototype.readIntLE = function (e, t, n) { e = 0 | e, t = 0 | t, n || O(e, t, this.length); for (var r = this[e], i = 1, a = 0; ++a < t && (i *= 256);)
                    r += this[e + a] * i; return i *= 128, r >= i && (r -= Math.pow(2, 8 * t)), r; }, e.prototype.readIntBE = function (e, t, n) { e = 0 | e, t = 0 | t, n || O(e, t, this.length); for (var r = t, i = 1, a = this[e + --r]; r > 0 && (i *= 256);)
                    a += this[e + --r] * i; return i *= 128, a >= i && (a -= Math.pow(2, 8 * t)), a; }, e.prototype.readInt8 = function (e, t) { return t || O(e, 1, this.length), 128 & this[e] ? -1 * (255 - this[e] + 1) : this[e]; }, e.prototype.readInt16LE = function (e, t) { t || O(e, 2, this.length); var n = this[e] | this[e + 1] << 8; return 32768 & n ? 4294901760 | n : n; }, e.prototype.readInt16BE = function (e, t) { t || O(e, 2, this.length); var n = this[e + 1] | this[e] << 8; return 32768 & n ? 4294901760 | n : n; }, e.prototype.readInt32LE = function (e, t) { return t || O(e, 4, this.length), this[e] | this[e + 1] << 8 | this[e + 2] << 16 | this[e + 3] << 24; }, e.prototype.readInt32BE = function (e, t) { return t || O(e, 4, this.length), this[e] << 24 | this[e + 1] << 16 | this[e + 2] << 8 | this[e + 3]; }, e.prototype.readFloatLE = function (e, t) { return t || O(e, 4, this.length), z.read(this, e, !0, 23, 4); }, e.prototype.readFloatBE = function (e, t) { return t || O(e, 4, this.length), z.read(this, e, !1, 23, 4); }, e.prototype.readDoubleLE = function (e, t) { return t || O(e, 8, this.length), z.read(this, e, !0, 52, 8); }, e.prototype.readDoubleBE = function (e, t) { return t || O(e, 8, this.length), z.read(this, e, !1, 52, 8); }, e.prototype.writeUIntLE = function (e, t, n, r) { e = +e, t = 0 | t, n = 0 | n, r || D(this, e, t, n, Math.pow(2, 8 * n), 0); var i = 1, a = 0; for (this[t] = 255 & e; ++a < n && (i *= 256);)
                    this[t + a] = e / i & 255; return t + n; }, e.prototype.writeUIntBE = function (e, t, n, r) { e = +e, t = 0 | t, n = 0 | n, r || D(this, e, t, n, Math.pow(2, 8 * n), 0); var i = n - 1, a = 1; for (this[t + i] = 255 & e; --i >= 0 && (a *= 256);)
                    this[t + i] = e / a & 255; return t + n; }, e.prototype.writeUInt8 = function (t, n, r) { return t = +t, n = 0 | n, r || D(this, t, n, 1, 255, 0), e.TYPED_ARRAY_SUPPORT || (t = Math.floor(t)), this[n] = 255 & t, n + 1; }, e.prototype.writeUInt16LE = function (t, n, r) { return t = +t, n = 0 | n, r || D(this, t, n, 2, 65535, 0), e.TYPED_ARRAY_SUPPORT ? (this[n] = 255 & t, this[n + 1] = t >>> 8) : U(this, t, n, !0), n + 2; }, e.prototype.writeUInt16BE = function (t, n, r) { return t = +t, n = 0 | n, r || D(this, t, n, 2, 65535, 0), e.TYPED_ARRAY_SUPPORT ? (this[n] = t >>> 8, this[n + 1] = 255 & t) : U(this, t, n, !1), n + 2; }, e.prototype.writeUInt32LE = function (t, n, r) { return t = +t, n = 0 | n, r || D(this, t, n, 4, 4294967295, 0), e.TYPED_ARRAY_SUPPORT ? (this[n + 3] = t >>> 24, this[n + 2] = t >>> 16, this[n + 1] = t >>> 8, this[n] = 255 & t) : x(this, t, n, !0), n + 4; }, e.prototype.writeUInt32BE = function (t, n, r) { return t = +t, n = 0 | n, r || D(this, t, n, 4, 4294967295, 0), e.TYPED_ARRAY_SUPPORT ? (this[n] = t >>> 24, this[n + 1] = t >>> 16, this[n + 2] = t >>> 8, this[n + 3] = 255 & t) : x(this, t, n, !1), n + 4; }, e.prototype.writeIntLE = function (e, t, n, r) { if (e = +e, t = 0 | t, !r) {
                    var i = Math.pow(2, 8 * n - 1);
                    D(this, e, t, n, i - 1, -i);
                } var a = 0, o = 1, s = 0 > e ? 1 : 0; for (this[t] = 255 & e; ++a < n && (o *= 256);)
                    this[t + a] = (e / o >> 0) - s & 255; return t + n; }, e.prototype.writeIntBE = function (e, t, n, r) { if (e = +e, t = 0 | t, !r) {
                    var i = Math.pow(2, 8 * n - 1);
                    D(this, e, t, n, i - 1, -i);
                } var a = n - 1, o = 1, s = 0 > e ? 1 : 0; for (this[t + a] = 255 & e; --a >= 0 && (o *= 256);)
                    this[t + a] = (e / o >> 0) - s & 255; return t + n; }, e.prototype.writeInt8 = function (t, n, r) { return t = +t, n = 0 | n, r || D(this, t, n, 1, 127, -128), e.TYPED_ARRAY_SUPPORT || (t = Math.floor(t)), 0 > t && (t = 255 + t + 1), this[n] = 255 & t, n + 1; }, e.prototype.writeInt16LE = function (t, n, r) { return t = +t, n = 0 | n, r || D(this, t, n, 2, 32767, -32768), e.TYPED_ARRAY_SUPPORT ? (this[n] = 255 & t, this[n + 1] = t >>> 8) : U(this, t, n, !0), n + 2; }, e.prototype.writeInt16BE = function (t, n, r) { return t = +t, n = 0 | n, r || D(this, t, n, 2, 32767, -32768), e.TYPED_ARRAY_SUPPORT ? (this[n] = t >>> 8, this[n + 1] = 255 & t) : U(this, t, n, !1), n + 2; }, e.prototype.writeInt32LE = function (t, n, r) { return t = +t, n = 0 | n, r || D(this, t, n, 4, 2147483647, -2147483648), e.TYPED_ARRAY_SUPPORT ? (this[n] = 255 & t, this[n + 1] = t >>> 8, this[n + 2] = t >>> 16, this[n + 3] = t >>> 24) : x(this, t, n, !0), n + 4; }, e.prototype.writeInt32BE = function (t, n, r) { return t = +t, n = 0 | n, r || D(this, t, n, 4, 2147483647, -2147483648), 0 > t && (t = 4294967295 + t + 1), e.TYPED_ARRAY_SUPPORT ? (this[n] = t >>> 24, this[n + 1] = t >>> 16, this[n + 2] = t >>> 8, this[n + 3] = 255 & t) : x(this, t, n, !1), n + 4; }, e.prototype.writeFloatLE = function (e, t, n) { return F(this, e, t, !0, n); }, e.prototype.writeFloatBE = function (e, t, n) { return F(this, e, t, !1, n); }, e.prototype.writeDoubleLE = function (e, t, n) { return B(this, e, t, !0, n); }, e.prototype.writeDoubleBE = function (e, t, n) { return B(this, e, t, !1, n); }, e.prototype.copy = function (t, n, r, i) { if (r || (r = 0), i || 0 === i || (i = this.length), n >= t.length && (n = t.length), n || (n = 0), i > 0 && r > i && (i = r), i === r)
                    return 0; if (0 === t.length || 0 === this.length)
                    return 0; if (0 > n)
                    throw new RangeError("targetStart out of bounds"); if (0 > r || r >= this.length)
                    throw new RangeError("sourceStart out of bounds"); if (0 > i)
                    throw new RangeError("sourceEnd out of bounds"); i > this.length && (i = this.length), t.length - n < i - r && (i = t.length - n + r); var a, o = i - r; if (this === t && n > r && i > n)
                    for (a = o - 1; a >= 0; a--)
                        t[a + n] = this[a + r];
                else if (1e3 > o || !e.TYPED_ARRAY_SUPPORT)
                    for (a = 0; o > a; a++)
                        t[a + n] = this[a + r];
                else
                    t._set(this.subarray(r, r + o), n); return o; }, e.prototype.fill = function (e, t, n) { if (e || (e = 0), t || (t = 0), n || (n = this.length), t > n)
                    throw new RangeError("end < start"); if (n !== t && 0 !== this.length) {
                    if (0 > t || t >= this.length)
                        throw new RangeError("start out of bounds");
                    if (0 > n || n > this.length)
                        throw new RangeError("end out of bounds");
                    var r;
                    if ("number" == typeof e)
                        for (r = t; n > r; r++)
                            this[r] = e;
                    else {
                        var i = W(e.toString()), a = i.length;
                        for (r = t; n > r; r++)
                            this[r] = i[r % a];
                    }
                    return this;
                } }, e.prototype.toArrayBuffer = function () { if ("undefined" != typeof Uint8Array) {
                    if (e.TYPED_ARRAY_SUPPORT)
                        return new e(this).buffer;
                    for (var t = new Uint8Array(this.length), n = 0, r = t.length; r > n; n += 1)
                        t[n] = this[n];
                    return t.buffer;
                } throw new TypeError("Buffer.toArrayBuffer not supported in this browser"); };
                var Z = e.prototype;
                e._augment = function (t) { return t.constructor = e, t._isBuffer = !0, t._set = t.set, t.get = Z.get, t.set = Z.set, t.write = Z.write, t.toString = Z.toString, t.toLocaleString = Z.toString, t.toJSON = Z.toJSON, t.equals = Z.equals, t.compare = Z.compare, t.indexOf = Z.indexOf, t.copy = Z.copy, t.slice = Z.slice, t.readUIntLE = Z.readUIntLE, t.readUIntBE = Z.readUIntBE, t.readUInt8 = Z.readUInt8, t.readUInt16LE = Z.readUInt16LE, t.readUInt16BE = Z.readUInt16BE, t.readUInt32LE = Z.readUInt32LE, t.readUInt32BE = Z.readUInt32BE, t.readIntLE = Z.readIntLE, t.readIntBE = Z.readIntBE, t.readInt8 = Z.readInt8, t.readInt16LE = Z.readInt16LE, t.readInt16BE = Z.readInt16BE, t.readInt32LE = Z.readInt32LE, t.readInt32BE = Z.readInt32BE, t.readFloatLE = Z.readFloatLE, t.readFloatBE = Z.readFloatBE, t.readDoubleLE = Z.readDoubleLE, t.readDoubleBE = Z.readDoubleBE, t.writeUInt8 = Z.writeUInt8, t.writeUIntLE = Z.writeUIntLE, t.writeUIntBE = Z.writeUIntBE, t.writeUInt16LE = Z.writeUInt16LE, t.writeUInt16BE = Z.writeUInt16BE, t.writeUInt32LE = Z.writeUInt32LE, t.writeUInt32BE = Z.writeUInt32BE, t.writeIntLE = Z.writeIntLE, t.writeIntBE = Z.writeIntBE, t.writeInt8 = Z.writeInt8, t.writeInt16LE = Z.writeInt16LE, t.writeInt16BE = Z.writeInt16BE, t.writeInt32LE = Z.writeInt32LE, t.writeInt32BE = Z.writeInt32BE, t.writeFloatLE = Z.writeFloatLE, t.writeFloatBE = Z.writeFloatBE, t.writeDoubleLE = Z.writeDoubleLE, t.writeDoubleBE = Z.writeDoubleBE, t.fill = Z.fill, t.inspect = Z.inspect, t.toArrayBuffer = Z.toArrayBuffer, t; };
                var ee = /[^+\/0-9A-Za-z-_]/g;
            }).call(t, n(113).Buffer, function () { return this; }());
        }, function (e, t, n) { t.parse = n(149), t.stringify = n(150); }, function (e, t, n) { "function" == typeof Object.create ? e.exports = function (e, t) { e.super_ = t, e.prototype = Object.create(t.prototype, { constructor: { value: e, enumerable: !1, writable: !0, configurable: !0 } }); } : e.exports = function (e, t) { e.super_ = t; var n = function () { }; n.prototype = t.prototype, e.prototype = new n, e.prototype.constructor = e; }; }, function (e, t, n) {
            "use strict";
            e.exports = n(153);
        }, function (e, t, n) { var r = n(128); e.exports = function (e, t) { return r(e, t, "."); }; }, function (e, t, n) { var r = n(120), i = n(121); e.exports = function (e, t) { if (null == e)
            return ""; for (var n = "", a = 0; a < e.length; a++) {
            var o = e[a], s = r(o, t);
            n += s === o ? i(o, t) : s;
        } return n; }; }, function (e, t, n) { var r = n(128); e.exports = function (e, t) { return r(e, t, "/"); }; }, function (e, t, n) { var r = { tr: { regexp: /[\u0069]/g, map: { i: "İ" } }, az: { regexp: /[\u0069]/g, map: { i: "İ" } }, lt: { regexp: /[\u0069\u006A\u012F]\u0307|\u0069\u0307[\u0300\u0301\u0303]/g, map: { "i̇": "I", "j̇": "J", "į̇": "Į", "i̇̀": "Ì", "i̇́": "Í", "i̇̃": "Ĩ" } } }; e.exports = function (e, t) { var n = r[t]; return e = null == e ? "" : String(e), n && (e = e.replace(n.regexp, function (e) { return n.map[e]; })), e.toUpperCase(); }; }, function (e, t, n) { var r = { tr: { regexp: /\u0130|\u0049|\u0049\u0307/g, map: { "İ": "i", I: "ı", "İ": "i" } }, az: { regexp: /[\u0130]/g, map: { "İ": "i", I: "ı", "İ": "i" } }, lt: { regexp: /[\u0049\u004A\u012E\u00CC\u00CD\u0128]/g, map: { I: "i̇", J: "j̇", "Į": "į̇", "Ì": "i̇̀", "Í": "i̇́", "Ĩ": "i̇̃" } } }; e.exports = function (e, t) { var n = r[t]; return e = null == e ? "" : String(e), n && (e = e.replace(n.regexp, function (e) { return n.map[e]; })), e.toLowerCase(); }; }, function (e, t, n) { var r = n(120), i = n(128); e.exports = function (e, t, n) { var a = i(e, t); return n || (a = a.replace(/(\d) (?=\d)/g, "$1_")), a.replace(/ (.)/g, function (e, n) { return r(n, t); }); }; }, function (e, t, n) { var r = n(128); e.exports = function (e, t) { return r(e, t, "_"); }; }, function (e, t, n) { var r = n(120), i = n(128); e.exports = function (e, t) { return i(e, t).replace(/^.| ./g, function (e) { return r(e, t); }); }; }, function (e, t, n) { var r = n(128); e.exports = function (e, t) { return r(e, t, "-"); }; }, function (e, t, n) { var r = n(122), i = n(131); e.exports = function (e, t) { return i(r(e, t), t); }; }, function (e, t, n) { var r = n(120), i = n(123); e.exports = function (e, t) { return r(i(e, t), t); }; }, function (e, t, n) { var r = n(121), i = n(155), a = n(156), o = n(157); e.exports = function (e, t, n) { function s(e, t, r) { return 0 === t || t === r.length - e.length ? "" : n; } return null == e ? "" : (n = n || " ", e = String(e).replace(a, "$1 $2").replace(o, "$1 $2").replace(i, s), r(e, t)); }; }, function (e, t, n) { var r = n(120); e.exports = function (e, t) { return r(e, t) === e; }; }, function (e, t, n) { var r = n(121); e.exports = function (e, t) { return r(e, t) === e; }; }, function (e, t, n) { var r = n(120); e.exports = function (e, t) { return null == e ? "" : (e = String(e), r(e.charAt(0), t) + e.substr(1)); }; }, function (e, t, n) { var r = n(121); e.exports = function (e, t) { return null == e ? "" : (e = String(e), r(e.charAt(0), t) + e.substr(1)); }; }, function (module, exports, __webpack_require__) { function Context() { } var indexOf = __webpack_require__(189), Object_keys = function (e) { if (Object.keys)
            return Object.keys(e); var t = []; for (var n in e)
            t.push(n); return t; }, forEach = function (e, t) { if (e.forEach)
            return e.forEach(t); for (var n = 0; n < e.length; n++)
            t(e[n], n, e); }, defineProp = function () { try {
            return Object.defineProperty({}, "_", {}), function (e, t, n) { Object.defineProperty(e, t, { writable: !0, enumerable: !1, configurable: !0, value: n }); };
        }
        catch (e) {
            return function (e, t, n) { e[t] = n; };
        } }(), globals = ["Array", "Boolean", "Date", "Error", "EvalError", "Function", "Infinity", "JSON", "Math", "NaN", "Number", "Object", "RangeError", "ReferenceError", "RegExp", "String", "SyntaxError", "TypeError", "URIError", "decodeURI", "decodeURIComponent", "encodeURI", "encodeURIComponent", "escape", "eval", "isFinite", "isNaN", "parseFloat", "parseInt", "undefined", "unescape"]; Context.prototype = {}; var Script = exports.Script = function (e) { return this instanceof Script ? void (this.code = e) : new Script(e); }; Script.prototype.runInContext = function (e) { if (!(e instanceof Context))
            throw new TypeError("needs a 'context' argument."); var t = document.createElement("iframe"); t.style || (t.style = {}), t.style.display = "none", document.body.appendChild(t); var n = t.contentWindow, r = n.eval, i = n.execScript; !r && i && (i.call(n, "null"), r = n.eval), forEach(Object_keys(e), function (t) { n[t] = e[t]; }), forEach(globals, function (t) { e[t] && (n[t] = e[t]); }); var a = Object_keys(n), o = r.call(n, this.code); return forEach(Object_keys(n), function (t) { (t in e || -1 === indexOf(a, t)) && (e[t] = n[t]); }), forEach(globals, function (t) { t in e || defineProp(e, t, n[t]); }), document.body.removeChild(t), o; }, Script.prototype.runInThisContext = function () { return eval(this.code); }, Script.prototype.runInNewContext = function (e) { var t = Script.createContext(e), n = this.runInContext(t); return forEach(Object_keys(t), function (n) { e[n] = t[n]; }), n; }, forEach(Object_keys(Script.prototype), function (e) { exports[e] = Script[e] = function (t) { var n = Script(t); return n[e].apply(n, [].slice.call(arguments, 1)); }; }), exports.createScript = function (e) { return exports.Script(e); }, exports.createContext = Script.createContext = function (e) { var t = new Context; return "object" == typeof e && forEach(Object_keys(e), function (n) { t[n] = e[n]; }), t; }; }, function (e, t, n) { t = e.exports = n(163), t.Stream = t, t.Readable = t, t.Writable = n(164), t.Duplex = n(165), t.Transform = n(166), t.PassThrough = n(167); }, function (e, t, n) {
            "use strict";
            function r(e) { return "undefined" == typeof e || null === e; }
            function i(e) { return "object" == typeof e && null !== e; }
            function a(e) { return Array.isArray(e) ? e : r(e) ? [] : [e]; }
            function o(e, t) { var n, r, i, a; if (t)
                for (a = Object.keys(t), n = 0, r = a.length; r > n; n += 1)
                    i = a[n], e[i] = t[i]; return e; }
            function s(e, t) { var n, r = ""; for (n = 0; t > n; n += 1)
                r += e; return r; }
            function u(e) { return 0 === e && Number.NEGATIVE_INFINITY === 1 / e; }
            Object.defineProperty(t, "__esModule", { value: !0 }), t.isNothing = r, t.isObject = i, t.toArray = a, t.extend = o, t.repeat = s, t.isNegativeZero = u;
        }, function (e, t, n) {
            "use strict";
            var r = n(135), i = function () { function e(e, t, n, r, i) { this.name = e, this.buffer = t, this.position = n, this.line = r, this.column = i; } return e.prototype.getSnippet = function (e, t) { void 0 === e && (e = 0), void 0 === t && (t = 75); var n, i, a, o, s; if (!this.buffer)
                return null; for (e = e || 4, t = t || 75, n = "", i = this.position; i > 0 && -1 === "\x00\r\n\u2028\u2029".indexOf(this.buffer.charAt(i - 1));)
                if (i -= 1, this.position - i > t / 2 - 1) {
                    n = " ... ", i += 5;
                    break;
                } for (a = "", o = this.position; o < this.buffer.length && -1 === "\x00\r\n\u2028\u2029".indexOf(this.buffer.charAt(o));)
                if (o += 1, o - this.position > t / 2 - 1) {
                    a = " ... ", o -= 5;
                    break;
                } return s = this.buffer.slice(i, o), r.repeat(" ", e) + n + s + a + "\n" + r.repeat(" ", e + this.position - i + n.length) + "^"; }, e.prototype.toString = function (e) { void 0 === e && (e = !0); var t, n = ""; return this.name && (n += 'in "' + this.name + '" '), n += "at line " + (this.line + 1) + ", column " + (this.column + 1), e || (t = this.getSnippet(), t && (n += ":\n" + t)), n; }, e; }();
            e.exports = i;
        }, function (e, t, n) {
            "use strict";
            function r(e, t) { if (e.typeKind == a.TypeKind.ARRAY)
                return t ? [] : [r(e.base)[0] + "[]"]; if (e.typeKind == a.TypeKind.BASIC) {
                var n = e, i = n.basicName, o = n.nameSpace && n.nameSpace.trim();
                return null != o && o.length > 0 && "RamlWrapper" != o && (i = o + "." + i), n.typeArguments && 0 != n.typeArguments.length && (i += "<" + n.typeArguments.map(function (e) { return r(e); }).join(", ") + ">"), t ? n.nameSpace && t[n.nameSpace] ? [i] : [] : [i];
            } if (e.typeKind == a.TypeKind.UNION) {
                var s = e, u = [];
                return s.options.forEach(function (e) { return u = u.concat(r(e, t)); }), u;
            } return []; }
            function i(e) { return o.getHelperMethods(e); }
            var a = n(98), o = n(158), s = { RamlWrapper: !0 }, u = function () { function e(e, t, n, r, i) { this.originalName = e, this.wrapperMethodName = t, this.returnType = n, this.args = r, this.meta = i; } return e.prototype.targetWrappers = function () { var e = !0, t = []; return this.args.forEach(function (n) { var i = r(n.type, s); if (0 != i.length)
                return e && 0 == t.length ? void (t = t.concat(i)) : (t = [], void (e = !1)); }), t; }, e.prototype.callArgs = function () { return this.args.map(function (e) { return 0 == r(e.type, s).length ? e : { name: "this", type: null, optional: !1, defaultValue: void 0 }; }); }, e; }();
            t.HelperMethod = u, t.flatten = r, t.getHelperMethods = i;
        }, function (e, t, n) {
            "use strict";
            function r(e) { return A.createSourceFile("sample.ts", e, A.ScriptTarget.ES3, !0); }
            function i(e, n, s) { var u = r(e), l = { classes: [], aliases: [], enumDeclarations: [], imports: {}, name: s }; n[s] = l; var p = null; return t.tsm.Matching.visit(u, function (r) { if (r.kind == A.SyntaxKind.ModuleDeclaration) {
                var u = r;
                p = u.name.text;
            } if (r.kind == A.SyntaxKind.ImportEqualsDeclaration) {
                var c = r, f = c.name.text;
                if ("RamlWrapper" == f)
                    return;
                var m = c.moduleReference, h = m.expression, d = h.text, v = T.resolve(T.dirname(s) + "/", d) + ".ts";
                if (!T.existsSync(v))
                    throw new Error("Path " + d + " resolve to " + v + "do not exists");
                if (!n[v]) {
                    var g = T.readFileSync(v);
                    i(g, n, v);
                }
                l.imports[f] = n[v];
            } if (r.kind == A.SyntaxKind.TypeAliasDeclaration) {
                var E = r;
                if (E.name) {
                    var _ = E.name.text, b = y(E.type, s);
                    l.aliases.push({ name: _, type: b });
                }
            } if (r.kind == A.SyntaxKind.EnumDeclaration) {
                var I = r, R = [];
                I.members && I.members.forEach(function (e) { R.push(e.name.text); }), I.name && l.enumDeclarations.push({ name: I.name.text, members: R });
            } var M = r.kind == A.SyntaxKind.InterfaceDeclaration, w = r.kind == A.SyntaxKind.ClassDeclaration; if (M || w) {
                var C = r;
                if (C) {
                    var L = {}, P = S.classDecl(C.name.text, M);
                    return P.moduleName = p, l.classes.push(P), C.members.forEach(function (t) { if (t.kind == A.SyntaxKind.MethodDeclaration) {
                        var n = t, r = o(n, e, s);
                        P.methods.push(r);
                    } var i = N.doMatch(t); if (i) {
                        var u = a(i, s);
                        if ("$" == u.name)
                            P.annotations = u.annotations;
                        else if ("$" != u.name.charAt(0) || "$ref" == u.name)
                            L[u.name] = u, P.fields.push(u);
                        else {
                            var l = u.name.substr(1), p = L[l];
                            if (p)
                                p.annotations = u.annotations;
                            else if ("$$" != u.name) {
                                var c = P.annotationOverridings[l];
                                c || (c = []), P.annotationOverridings[l] = c.concat(u.annotations);
                            }
                        }
                    } }), C.typeParameters && C.typeParameters.forEach(function (e) { P.typeParameters.push(e.name.text), null == e.constraint ? P.typeParameterConstraint.push(null) : P.typeParameterConstraint.push(e.constraint.typeName.text); }), C.heritageClauses && C.heritageClauses.forEach(function (e) { e.types.forEach(function (t) { if (e.token == A.SyntaxKind.ExtendsKeyword)
                        P["extends"].push(y(t, s));
                    else {
                        if (e.token != A.SyntaxKind.ImplementsKeyword)
                            throw new Error("Unknown token class heritage");
                        P["implements"].push(y(t, s));
                    } }); }), t.tsm.Matching.SKIP;
                }
            } }), l; }
            function a(e, t) { return { name: e.name.text, type: y(e.type, t), annotations: "$" == e.name.text.charAt(0) ? l(e.initializer) : [], valueConstraint: "$" != e.name.text.charAt(0) ? u(e.initializer) : null, optional: null != e.questionToken }; }
            function o(e, t, n) { var r = e.name.text, i = t.substring(e.pos, e.end), a = []; e.parameters.forEach(function (e) { a.push(s(e, t, n)); }); var o = { returnType: y(e.type, n), name: r, start: e.pos, end: e.end, text: i, arguments: a }; return o; }
            function s(e, t, n) { var r = t.substring(e.pos, e.end); return { name: e.name.text, start: e.pos, end: e.end, text: r, type: y(e.type, n) }; }
            function u(e) { return null == e ? null : e.kind == A.SyntaxKind.CallExpression ? { isCallConstraint: !0, value: p(e) } : { isCallConstraint: !1, value: c(e) }; }
            function l(e) { if (null == e)
                return []; if (e.kind == A.SyntaxKind.ArrayLiteralExpression) {
                var t = e, n = [];
                return t.elements.forEach(function (e) { n.push(p(e)); }), n;
            } throw new Error("Only Array Literals supported now"); }
            function p(e) { if (e.kind == A.SyntaxKind.CallExpression) {
                var t = e, n = f(t.expression), r = { name: n, arguments: [] };
                return t.arguments.forEach(function (e) { r.arguments.push(c(e)); }), r;
            } throw new Error("Only call expressions may be annotations"); }
            function c(e) { if (e.kind == A.SyntaxKind.StringLiteral) {
                var t = e;
                return t.text;
            } if (e.kind == A.SyntaxKind.NoSubstitutionTemplateLiteral) {
                var n = e;
                return n.text;
            } if (e.kind == A.SyntaxKind.ArrayLiteralExpression) {
                var r = e, i = [];
                return r.elements.forEach(function (e) { i.push(c(e)); }), i;
            } if (e.kind == A.SyntaxKind.TrueKeyword)
                return !0; if (e.kind == A.SyntaxKind.PropertyAccessExpression) {
                var a = e;
                return c(a.expression) + "." + c(a.name);
            } if (e.kind == A.SyntaxKind.Identifier) {
                var o = e;
                return o.text;
            } if (e.kind == A.SyntaxKind.FalseKeyword)
                return !1; if (e.kind == A.SyntaxKind.NumericLiteral) {
                var s = e;
                return Number(s.text);
            } if (e.kind == A.SyntaxKind.BinaryExpression) {
                var u = e;
                if (u.operatorToken.kind = A.SyntaxKind.PlusToken)
                    return c(u.left) + c(u.right);
            } throw new Error("Unknown value in annotation"); }
            function f(e) { if (e.kind == A.SyntaxKind.Identifier)
                return e.text; if (e.kind == A.SyntaxKind.PropertyAccessExpression) {
                var t = e;
                return f(t.expression) + "." + f(t.name);
            } throw new Error("Only simple identifiers are supported now"); }
            function m(e, t) { var n = e.indexOf("."), r = -1 != n ? e.substring(0, n) : "", i = -1 != n ? e.substring(n + 1) : e; return { typeName: e, nameSpace: r, basicName: i, typeKind: E.TypeKind.BASIC, typeArguments: [], modulePath: t }; }
            function h(e) { return { base: e, typeKind: E.TypeKind.ARRAY }; }
            function d(e) { return { options: e, typeKind: E.TypeKind.UNION }; }
            function y(e, t) { if (null == e)
                return null; if (e.kind == A.SyntaxKind.StringKeyword)
                return m("string", null); if (e.kind == A.SyntaxKind.NumberKeyword)
                return m("number", null); if (e.kind == A.SyntaxKind.BooleanKeyword)
                return m("boolean", null); if (e.kind == A.SyntaxKind.AnyKeyword)
                return m("any", null); if (e.kind == A.SyntaxKind.VoidKeyword)
                return m("void", null); if (e.kind == A.SyntaxKind.TypeReference) {
                var n = e, r = m(g(n.typeName), t);
                return n.typeArguments && n.typeArguments.forEach(function (e) { r.typeArguments.push(y(e, t)); }), r;
            } if (e.kind == A.SyntaxKind.ArrayType) {
                var i = e;
                return h(y(i.elementType, t));
            } if (e.kind == A.SyntaxKind.UnionType) {
                var a = e;
                return d(a.types.map(function (e) { return y(e, t); }));
            } if (e.kind == A.SyntaxKind.ExpressionWithTypeArguments) {
                var o = e, r = m(v(o.expression), t);
                return o.typeArguments && o.typeArguments.forEach(function (e) { r.typeArguments.push(y(e, t)); }), r;
            } throw new Error("Case not supported: " + e.kind); }
            function v(e) { return e.name ? e.name.text : e.text; }
            function g(e) { if (e.kind == A.SyntaxKind.Identifier)
                return e.text; var t = e; return g(t.left) + "." + g(t.right); }
            var A = n(154);
            t.tsm = n(159), t.helperMethodExtractor = n(158);
            var T = n(160), E = n(98), S = n(98), N = t.tsm.Matching.field();
            t.parseStruct = i, t.parseArg = c, t.buildType = y;
        }, function (e, t, n) {
            var r;
            r = function () {
                "use strict";
                var e = n(184), t = {}, r = {}, i = n(185), a = n(186), o = n(187);
                return e.forEach(function (e) { var n, i = parseInt(e.code, 10); i.toString() === e.code && (n = e.phrase.toUpperCase().replace(/[^A-Z]/g, "_"), t[i] = e.phrase, r[n] = e.code); }), { statusCodes: e, statusCodesToPhrases: t, statusPhrasesToCodes: r, methods: i, headers: a, relations: o };
            }.call(t, n, t, e), !(void 0 !== r && (e.exports = r));
        }, function (e, t, n) {
            "use strict";
            var r = n(170), i = new r.Schema({ include: [n(171)], implicit: [n(175), n(176)], explicit: [n(177), n(178), n(179), n(180)] });
            e.exports = i;
        }, function (e, t, n) {
            "use strict";
            var r = n(170), i = new r.Schema({ include: [n(140)], explicit: [n(181), n(182)] });
            r.Schema.DEFAULT = i, e.exports = i;
        }, function (e, t, n) {
            "use strict";
            function r(e) { var t = e.oneMeta(l.Example); if (t)
                return t.example(); if (e.getExtra(f))
                return null; e.putExtra(f, !0); try {
                var n = e.oneMeta(l.Examples);
                if (n) {
                    var i = n.examples();
                    if (i && i.length > 0)
                        return i[0];
                }
                var a = e.oneMeta(l.Default);
                if (a)
                    return a.value();
                if (e.isObject()) {
                    var o = {};
                    return e.meta().forEach(function (e) { if (e instanceof c.PropertyIs) {
                        var t = e, n = r(t.value());
                        o[t.propertyName()] = n;
                    } }), e.superTypes().forEach(function (e) { if (e.oneMeta(l.Example) || e.oneMeta(l.Examples)) {
                        var t = r(e);
                        t && "object" == typeof t && Object.keys(t).forEach(function (e) { o[e] = t[e]; });
                    } }), o;
                }
                if (e.isArray()) {
                    var s = e.oneMeta(p.ComponentShouldBeOfType), u = [];
                    return s && u.push(r(s.value())), u;
                }
                return e.isUnion() ? r(e.typeFamily()[0]) : e.isNumber() ? 1 : e.isBoolean() ? !0 : "some value";
            }
            finally {
                e.putExtra(f, !1);
            } }
            function i(e, t) { var n = e[t]; return null != n && "object" == typeof n ? n.value : n; }
            function a(e) { var t = []; if (!e || "object" != typeof e)
                return t; for (var n = 0, r = Object.keys(e).filter(function (e) { return e.length > 0 && "(" == e.charAt(0) && ")" == e.charAt(e.length - 1); }); n < r.length; n++) {
                var i = r[n], a = i.substring(1, i.length - 1), o = e[i], s = new l.Annotation(a, o);
                t.push(s);
            } return t; }
            function o(e) { var t = [], n = e.oneMeta(l.Examples); if (n) {
                var r = n.value();
                if (r && "object" == typeof r) {
                    var i;
                    Object.keys(r).forEach(function (a) { var o = Array.isArray(r) ? null : a, s = r[a], u = h({ asXMLString: function () { return i || (i = n.asXMLStrings()), i[a]; }, ownerType: function () { return e; } }, s, o); t.push(u); });
                }
            } var a = e.oneMeta(l.Example); if (a) {
                var o = a.example();
                null != o && t.push(h(a, a.value(), void 0, !0));
            } return t; }
            function s(e, t) { var n = e.getAdapter(u.InheritedType); if (n) {
                var r = o(n);
                if (r && r.length > 0)
                    return r;
                if (t && e.isUserDefined() && !e.isGenuineUserDefinedType() && e.genuineUserDefinedTypeInHierarchy()) {
                    var i = e.genuineUserDefinedTypeInHierarchy(), a = i.getAdapter(u.InheritedType);
                    if (a) {
                        var s = o(a);
                        if (s && s.length > 0)
                            return s;
                    }
                }
            } if (n) {
                var l = new m(null, void 0, void 0, void 0, !1, void 0, void 0, !0);
                return l.setOwnerType(n), [l];
            } return []; }
            var u = n(101), l = n(106), p = n(105), c = n(105), f = "exampleCalculation";
            t.example = r;
            var m = function () { function e(e, t, n, r, i, a, o, s) { void 0 === t && (t = void 0), void 0 === n && (n = void 0), void 0 === r && (r = void 0), void 0 === i && (i = !0), void 0 === o && (o = !1), void 0 === s && (s = !1), this._value = e, this._name = t, this._displayName = n, this._description = r, this._strict = i, this._annotations = a, this._isSingle = o, this._empty = s, this.isExpanded = !1, this._scalarsAnnotations = {}, this._annotations ? this._hasAnnotations = !0 : this._annotations = {}; } return e.prototype.isEmpty = function () { return this._empty; }, e.prototype.isJSONString = function () { var e = this.firstCharacter(); return "{" == e || "[" == e; }, e.prototype.isXMLString = function () { var e = this.firstCharacter(); return "<" == e; }, e.prototype.firstCharacter = function () { if (null == this._value)
                return null; if ("string" != typeof this._value)
                return null; var e = this._value.trim(); return 0 == e.length ? null : e.charAt(0); }, e.prototype.asXMLString = function () { return this.isXMLString() ? this._value : this._owner ? this._owner.asXMLString() : null; }, e.prototype.isYAML = function () { return "string" == typeof this._value ? !(this.isJSONString() || this.isXMLString()) : !0; }, e.prototype.asString = function () { return "string" == typeof this._value ? "" + this._value : JSON.stringify(this._value, null, 2); }, e.prototype.asJSON = function () { if (this.isJSONString())
                try {
                    return JSON.parse(this._value);
                }
                catch (e) {
                    return null;
                } return this.isYAML() ? this._value : this.asString(); }, e.prototype.original = function () { return this._value; }, e.prototype.expandAsString = function () { return JSON.stringify(this.expandAsJSON(), null, 2); }, e.prototype.expandAsJSON = function () { return this.isEmpty() ? this.isExpanded ? this._expandedValue : (this._expandedValue = r(this._ownerType), this.isExpanded = !0, this._expandedValue) : this._value; }, e.prototype.isSingle = function () { return this._isSingle; }, e.prototype.strict = function () { return this._strict; }, e.prototype.description = function () { return this._description; }, e.prototype.displayName = function () { return this._displayName; }, e.prototype.annotations = function () { return this._annotations; }, e.prototype.name = function () { return this._name; }, e.prototype.scalarsAnnotations = function () { return this._scalarsAnnotations; }, e.prototype.registerScalarAnnotatoion = function (e, t) { this._hasScalarAnnotations = !0; var n = this._scalarsAnnotations[t]; n || (n = {}, this._scalarsAnnotations[t] = n), n[e.facetName()] = e; }, e.prototype.setOwner = function (e) { this._owner = e; }, e.prototype.owner = function () { return this._owner; }, e.prototype.setOwnerType = function (e) { this._ownerType = e; }, e.prototype.ownerType = function () { return this._ownerType; }, e.prototype.hasAnnotations = function () { return this._hasAnnotations; }, e.prototype.hasScalarAnnotations = function () { return this._hasScalarAnnotations; }, e; }(), h = function (e, t, n, r) { void 0 === n && (n = null), void 0 === r && (r = !1); var o; if (null != t) {
                var s = t.value;
                if (s) {
                    var u = i(t, "displayName"), l = i(t, "description"), p = i(t, "strict"), c = {};
                    a(t).forEach(function (e) { c[e.facetName()] = e; }), o = new m(s, n, u, l, p, c, r);
                    for (var f = 0, h = a(t.displayName); f < h.length; f++) {
                        var d = h[f];
                        o.registerScalarAnnotatoion(d, "displayName");
                    }
                    for (var y = 0, v = a(t.description); y < v.length; y++) {
                        var d = v[y];
                        o.registerScalarAnnotatoion(d, "description");
                    }
                    for (var g = 0, A = a(t.strict); g < A.length; g++) {
                        var d = A[g];
                        o.registerScalarAnnotatoion(d, "strict");
                    }
                }
                else
                    s = t, o = new m(s, n, void 0, void 0, !0, void 0, r);
            } return o && o.setOwner(e), o; };
            t.exampleFromNominal = s;
        }, function (e, t, n) {
            "use strict";
            function r(e) { return a(e, "YYYY-MM-DD"); }
            function i(e) { var t = "11 " + e.trim(), n = "YY HH:mm:ss"; if (!s.isValid(t, n))
                return !1; var r = s.parse(t, n, !1), i = s.format(r, n, !1); return i.trim() == t.trim(); }
            function a(e, t) { var n = /^(\d{4})-\d{2}-\d{2}$/, r = e.match(n); if (!r || 2 != r.length)
                return !1; var i = parseInt(r[1]); return (70 > i || i > 99) && !s.isValid(e, t) ? !1 : !0; }
            var o = this && this.__extends || function (e, t) { function n() { this.constructor = e; } for (var r in t)
                t.hasOwnProperty(r) && (e[r] = t[r]); e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype, new n); }, s = n(203), u = n(101), l = u.messageRegistry, p = function (e) { function t() { e.apply(this, arguments); } return o(t, e), t.prototype.check = function (e) { return "string" == typeof e && r(e) ? u.ok() : u.error(l.INVALID_DATEONLY, this); }, t.prototype.requiredType = function () { return u.STRING; }, t.prototype.value = function () { return !0; }, t.prototype.facetName = function () { return "should be date-only"; }, t; }(u.GenericTypeOf);
            t.DateOnlyR = p;
            var c = function (e) { function t() { e.apply(this, arguments); } return o(t, e), t.prototype.check = function (e) { if ("string" == typeof e) {
                var t = /^([0-9][0-9]:[0-9][0-9]:[0-9][0-9])(.[0-9]+)?$/, n = e.match(t);
                if (!n)
                    return u.error(l.INVALID_TIMEONLY, this);
                var r = n[1];
                return i(r) ? u.ok() : u.error(l.INVALID_TIMEONLY, this);
            } return u.error(l.INVALID_TIMEONLY, this); }, t.prototype.requiredType = function () { return u.STRING; }, t.prototype.value = function () { return !0; }, t.prototype.facetName = function () { return "should be time-only"; }, t; }(u.GenericTypeOf);
            t.TimeOnlyR = c;
            var f = function (e) { function t() { e.apply(this, arguments); } return o(t, e), t.prototype.check = function (e) { if ("string" == typeof e) {
                var t = /^(\d{4}-\d{2}-\d{2})T([0-9][0-9]:[0-9][0-9]:[0-9][0-9])(.[0-9]+)?$/, n = e.match(t);
                if (!n || n.length < 3)
                    return u.error(l.INVALID_DATETIMEONLY, this);
                var a = n[1], o = n[2];
                return r(a) && i(o) ? u.ok() : u.error(l.INVALID_DATETIMEONLY, this);
            } return u.error(l.INVALID_DATETIMEONLY, this); }, t.prototype.requiredType = function () { return u.STRING; }, t.prototype.value = function () { return !0; }, t.prototype.facetName = function () { return "should be datetime-only"; }, t; }(u.GenericTypeOf);
            t.DateTimeOnlyR = f;
            var m = /(Mon|Tue|Wed|Thu|Fri|Sat|Sun)\,[ ]+\d{2}[ ]+(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)[ ]+\d{4}[ ]+\d{2}:\d{2}:\d{2}[ ]+GMT/, h = /(Monday|Tuesday|Wednesday|Thursday|Friday|Saturday|Sunday)\,[ ]+\d{2}-(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)-\d{2}[ ]+\d{2}:\d{2}:\d{2}[ ]+GMT/, d = /(Mon|Tue|Wed|Thu|Fri|Sat|Sun)\,[ ]+(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)[ ]+\d{1,2}[ ]+\d{2}:\d{2}:\d{2}[ ]+GMT/, y = /^(\d{4}-\d{2}-\d{2})T(\d{2}:\d{2}:\d{2})(?:\.\d+)?((?:[\+\-]\d{2}:\d{2})|Z)$/, v = function (e) { function t() { e.apply(this, arguments); } return o(t, e), t.prototype.check = function (e) { var t = u.VALIDATED_TYPE, n = !1; if (t.allFacets().forEach(function (e) { "format" == e.facetName() && "rfc2616" === e.value() && (n = !0); }), "string" == typeof e) {
                if (!n) {
                    var a = e.match(y);
                    if (!a || a.length < 3)
                        return u.error(l.INVALID_RFC3339, this);
                    var o = a[1], s = a[2];
                    return r(o) && i(s) ? u.ok() : u.error(l.INVALID_RFC3339, this);
                }
                return e.match(m) || e.match(h) || e.match(d) ? u.ok() : u.error(l.INVALID_RFC2616, this);
            } return u.error(l.INVALID_DATTIME, this); }, t.prototype.requiredType = function () { return u.STRING; }, t.prototype.value = function () { return !0; }, t.prototype.facetName = function () { return "should be datetime-only"; }, t; }(u.GenericTypeOf);
            t.DateTimeR = v;
        }, function (e, t, n) {
            "use strict";
            function r(e, t, n, r) { void 0 === r && (r = null); try {
                var i = e.trim();
                if (i.length > 0) {
                    var o = "{" == i.charAt(0);
                    if (o || "<" == i.charAt(0) && i.length > 1 && "<" != i.charAt(1)) {
                        var s = n, u = void 0;
                        do
                            u = s, s = u.childWithKey("type");
                        while (s);
                        var l = u && u.contentProvider && u.contentProvider();
                        return new c.ExternalType("", i, o, l, r);
                    }
                    var f = p.parse(e), m = a(f, t);
                    return m;
                }
                return c.derive(e, [c.STRING]);
            }
            catch (h) {
                return c.derive(e, [c.UNKNOWN]);
            } }
            function i(e, t) { for (; e > 0;) {
                var n = c.derive("", [c.ARRAY]);
                n.addMeta(new f.ComponentShouldBeOfType(t)), t = n, e--;
            } return t; }
            function a(e, t) { if ("union" == e.type) {
                var n = e;
                return c.union("", [a(n.first, t), a(n.rest, t)]);
            } if ("parens" == e.type) {
                var r = e, o = a(r.expr, t);
                return i(r.arr, o);
            } var s = e; if ("?" == s.value.charAt(s.value.length - 1)) {
                var u = t.get(s.value.substr(0, s.value.length - 1));
                u || (u = c.derive(s.value, [c.UNKNOWN])), u = c.union(s.value, [u, c.NIL]);
                var l = s.arr;
                return i(l, u);
            } var u = t.get(s.value); u || (u = c.derive(s.value, [c.UNKNOWN])); var l = s.arr; return i(l, u); }
            function o(e) { if (e.isSubTypeOf(c.ARRAY)) {
                var t = e.oneMeta(f.ComponentShouldBeOfType);
                return t ? t.value().isUnion() ? "(" + o(t.value()) + ")[]" : o(t.value()) + "[]" : "array";
            } if (e instanceof c.UnionType) {
                var n = e;
                return n.options().map(function (e) { return o(e); }).join(" | ");
            } return e.isAnonymous() && e.isEmpty() ? e.superTypes().map(function (e) { return o(e); }).join(" , ") : e.name(); }
            function s(e, t) { if (t(e), "union" == e.type) {
                var n = e;
                s(n.first, t), s(n.rest, t);
            }
            else if ("parens" == e.type) {
                var r = e;
                s(r.expr, t);
            } }
            function u(e) { var t, n = 0; if ("name" == e.type) {
                var r = e;
                t = r.value, n = r.arr;
            }
            else if ("union" == e.type) {
                var i = e;
                t = u(i.first) + " | " + u(i.rest);
            }
            else if ("parens" == e.type) {
                var a = e;
                t = "(" + u(a.expr) + ")", n = a.arr;
            } for (; --n >= 0;)
                t += "[]"; return t; }
            function l(e) { return p.parse(e); }
            var p = n(172), c = n(101), f = n(105);
            t.parseToType = r, t.storeToString = o, t.visit = s, t.serializeToString = u, t.parse = l;
        }, function (e, t, n) {
            "use strict";
            function r(e, t, n, r) { void 0 === n && (n = 0), void 0 === r && (r = !0); for (var i = "<" + e, a = 0; n > a; a++)
                i = "    " + i; return t && Object.keys(t).length > 0 && Object.keys(t).forEach(function (e) { "string" == typeof t[e] && (i = i + " " + e + '="' + t[e] + '"'); }), i = i + ">" + (r ? "\n" : ""); }
            function i(e, t) { void 0 === t && (t = 0); for (var n = "</" + e, r = 0; t > r && r > -1; r++)
                n = "    " + n; var n = (t > -1 ? "\n" : "") + n + ">\n"; return n; }
            function a(e, t) { t = m(t); var n = w(t), a = S(t), s = r(n, o(e, a)), u = {}; if (u[n] = e, t.isArray()) {
                t.meta().filter(function (e) { return e instanceof U.ComponentShouldBeOfType; })[0];
                s += p(u, t, 1, !0);
            }
            else
                s += l(e, a, 1); var s = s + i(n); return s; }
            function o(e, t) { var n = {}, r = D.filter(t, function (e) { return C(e.value()).attribute; }); return r.forEach(function (t) { var r = t.propId(), i = M(t); e[r] && (n[i] = e[r].toString()); }), n; }
            function s(e, t, n) { var a = Object.keys(e)[0], p = e[a], c = null; if (t.isScalar()) {
                var f = S(t);
                c = r(a, o(p, f), n, !t.isScalar()) + p.toString();
            }
            else {
                if (t.isUnion())
                    return s(e, u(p, t), n);
                var f = S(t);
                c = r(a, o(p, f), n, !t.isScalar()) + l(p, f, n + 1);
            } return c += i(a, t.isScalar() ? -1 : n); }
            function u(e, t) { var n = t.typeFamily(), r = [], i = null; return n.forEach(function (t) { var n = a(e, t); if (n) {
                var i = c(n, t);
                if (i) {
                    var o = f(i);
                    r.push({ type: t, errors: o && o.length || 0 });
                }
            } }), i = r.length > 0 ? r[0] : { type: n[0] }, r.forEach(function (e) { e.errors < i.errors && (i = e); }), i.type; }
            function l(e, t, n) { var r = D.filter(t, function (e) { return !C(e.value()).attribute; }), i = ""; return r.forEach(function (t) { var r = M(t), a = t.propId(), o = {}; o[r] = e[a], i += t.value().isArray() ? p(o, t.value(), n) : e[a] || "" === e[a] ? s(o, t.value(), n) : ""; }), i; }
            function p(e, t, n, a) { void 0 === a && (a = !1); var o = Object.keys(e)[0], u = e[o], l = C(t), p = a || l.wrapped, c = "", f = R(t), m = f && f.name(), h = n; return p && !a && (c = r(o, null, n), h += 1), u && P(u) && u.forEach(function (e) { var t = {}; t[p ? m : o] = e, c += s(t, f, h); }), p && (c += i(o, n)), c; }
            function c(e, t) { var n = null, r = {}; return r.explicitChildren = !1, r.explicitArray = !1, r.explicitRoot = d(t) || !t.isExternal(), O.parseString(e, r, function (e, t) { if (n = t, e)
                throw new Error; }), n = d(t) ? n : v(n, m(t)); }
            function f(e) { var t = e[F]; return delete e[F], t && 0 !== t.length ? t.map(function (e) { return new k.Status(k.Status.ERROR, "", e, {}); }) : null; }
            function m(e) { return e && h(e) && e.superTypes() && 0 !== e.superTypes().length ? 1 === e.superTypes().length ? e.superTypes()[0] : D.find(e.allSuperTypes(), function (e) { return "object" === e.name(); }) || e : e; }
            function h(e) { return e && D.find(B, function (t) { return e.name() === t; }) ? !0 : !1; }
            function d(e) { return y(e) ? !0 : D.find(e.allSuperTypes(), function (e) { return y(e); }) ? !0 : !1; }
            function y(e) { return e.isExternal() && e._content && "string" == typeof e._content && 0 === e._content.trim().indexOf("<") ? !0 : !1; }
            function v(e, t) { var n = Object.keys(e)[0], r = e[n], i = [], a = w(t); a !== n && i.push('Unexpected root node "' + n + '", "' + a + '" is expected.'); var o; if (t.isArray()) {
                var s = [], u = [], l = t.meta().filter(function (e) { return e instanceof U.ComponentShouldBeOfType; })[0], p = l && l.value().name();
                u.push(p), o = b(r, t, i, !0), E(r, i, s, u);
            }
            else
                o = T(r, t.isUnion() ? A(r, t) : t, i); return o[F] = i, o; }
            function g(e, t) { var n, r = []; n = T(e, t, r); var i = t.validateDirect(n, !0, !1).getErrors(); return r.length + (i && i.length); }
            function A(e, t) { var n = []; if (t.typeFamily().forEach(function (t) { return n.push({ type: t, errors: g(JSON.parse(JSON.stringify(e)), t) }); }), 0 === n.length)
                return t; var r = n[0]; return n.forEach(function (e) { e.errors < r.errors && (r = e); }), r.type; }
            function T(e, t, n) { var r = {}; if (!t)
                return e; if (t.isScalar())
                return L(t, e, n); if (t.isUnion())
                return T(e, A(e, t), n); var i = S(t), a = [], o = []; return N(e, i, a).forEach(function (e) { return r[Object.keys(e)[0]] = e[Object.keys(e)[0]]; }), _(e, i, o, n).forEach(function (e) { return r[Object.keys(e)[0]] = e[Object.keys(e)[0]]; }), E(e, n, a, o), r; }
            function E(e, t, n, r, i) { if (void 0 === i && (i = !1), "object" == typeof e) {
                e.$ || (e.$ = {}), n.forEach(function (t) { delete e.$[t]; }), r.forEach(function (t) { delete e[t]; });
                var a = Object.keys(e.$);
                delete e.$;
                var o = Object.keys(e);
                a.forEach(function (e) { t.push('Unexpected attribute "' + e + '".'); }), o.forEach(function (n) { t.push('Unexpected element "' + n + '".'), i && delete e[n]; });
            } }
            function S(e) { return e.meta().filter(function (e) { return e instanceof U.PropertyIs; }).map(function (e) { return e; }) || []; }
            function N(e, t, n) { var r = e.$; if (!r)
                return []; var i = D.filter(t, function (e) { return C(e.value()).attribute; }); return i.map(function (e) { var t = {}, i = e.propId(), a = M(e); n.push(a); var o = r[a]; return t[i] = L(e.value(), o), null === t[i] ? null : t; }).filter(function (e) { return e; }); }
            function _(e, t, n, r) { var i = D.filter(t, function (e) { return !C(e.value()).attribute; }); return i.map(function (t) { var i = {}, a = (C(t.value()), t.propId()), o = M(t); n.push(o); var s = e[o]; return t.value().isArray() ? i[a] = b(e[o], t.value(), r) : i[a] = s || "" === s ? T(s, t.value(), r) : null, null === i[a] ? null : i; }).filter(function (e) { return e; }); }
            function b(e, t, n, r) { void 0 === r && (r = !1); var i = C(t), a = r || i.wrapped, o = R(t), s = o && o.name(); if (a) {
                var u = e;
                e = e && e[s], E(u, n, [], [s], !0);
            } return e ? (e = I(e), e = P(e) ? e.map(function (e) { return T(e, o, n); }) : "object" == typeof e && e || []) : []; }
            function I(e) { return P(e) ? e : "object" == typeof e ? [e] : []; }
            function R(e) { if (!e || !e.isArray())
                return null; var t = e.meta().filter(function (e) { return e instanceof U.ComponentShouldBeOfType; }); return t && t.length > 0 && t[0].value(); }
            function M(e) { var t = C(e.value()), n = e.propId(), r = t.name || n; return t.namespace && (r = t.namespace + ":" + r), (t.prefix || "") + r; }
            function w(e) { var t = C(e), n = e.name(); "" === n && e.isUnion() && (n = "object"); var r = t.name || n; return (t.prefix || "") + r; }
            function C(e) { var t = e.meta().filter(function (e) { return e instanceof x.XMLInfo; }).map(function (e) { return e; })[0], n = { attribute: !1, wrapped: !1, name: !1, namespace: !1, prefix: !1 }; if (!t)
                return n; var r = t.value(); return r ? (Object.keys(n).forEach(function (e) { n[e] = r[e] || n[e]; }), n) : n; }
            function L(e, t, n) { if (void 0 === n && (n = []), "object" == typeof t) {
                var r = L(e, t._);
                return delete t._, E(t, n, [], [], !0), r;
            } if (!t && "" !== t.trim())
                return null; if (e.isNumber()) {
                var i = parseFloat(t);
                if (!isNaN(i))
                    return i;
            } if (e.isBoolean()) {
                if ("true" === t)
                    return !0;
                if ("false" === t)
                    return !1;
            } return "string" == typeof t ? t : null; }
            function P(e) { return e ? "object" == typeof e && "number" == typeof e.length : !1; }
            var O = n(204), D = n(70), U = n(105), x = n(106), k = n(101), F = "@unexpected_root_attributes_and_elements", B = ["application/x-www-form-urlencoded", "application/json", "application/xml", "multipart/form-data"];
            t.serializeToXML = a, t.readObject = c, t.getXmlErrors = f;
        }, function (e, t, n) {
            "use strict";
            function r(e, t) { return o.find(e, t); }
            function i(e, t) { return o.filter(e, t); }
            function a(e) { return o.unique(e); }
            var o = n(70);
            t.find = r, t.filter = i, t.unique = a;
        }, function (e, t, n) {
            "use strict";
            function r(e, t, n) { return { originalPath: e, virtualIndex: t, patchedContent: n }; }
            function i(e) { if (!e)
                return ""; var t = Object.keys(e)[0], n = e[t]; if ("#text" == t)
                return n; if (!n && "" !== n)
                return ""; var r = "<" + t, a = n.$ || {}; return Object.keys(a).forEach(function (e) { r = r + " " + e + '="' + a[e] + '"'; }), r += ">", "string" == typeof n ? r += n : Object.keys(n).forEach(function (e) { if ("$" !== e)
                if ("object" != typeof n[e] || n[e].length)
                    if ("string" != typeof n[e] && n[e]) {
                        if ("array" == typeof n[e] || n[e].length)
                            for (var t = n[e], a = 0; a < t.length; a++) {
                                var o = t[a], s = {};
                                s[e] = o, r += i(s);
                            }
                    }
                    else {
                        var s = {};
                        s[e] = n[e] || "", r += i(s);
                    }
                else {
                    var s = {};
                    s[e] = n[e], r += i(s);
                } }), r = r + "</" + t + ">"; }
            function a(e) { return new l(e); }
            function o(e) { var t = e && Object.keys(e)[0]; if (t) {
                var n = e[t];
                s(n);
            } return i(e); }
            function s(e) { if (e && "string" != typeof e) {
                var t = [];
                Object.keys(e).forEach(function (n) { if ("$" != n)
                    if (0 === n.indexOf("@")) {
                        var r = { key: n, value: e[n] };
                        t.push(r);
                    }
                    else if (u(e[n])) {
                        var i = e[n];
                        i.forEach(function (e) { return s(e); });
                    }
                    else
                        "string" != typeof e[n] && s(e[n]); }), e.$ || (e.$ = {});
                var n = e.$;
                t.forEach(function (t) { delete e[t.key]; var r = t.key.substring(1); n[r] = t.value; });
            } }
            function u(e) { return e ? "object" == typeof e && "number" == typeof e.length : !1; }
            var l;
            try {
                l = n(161).XMLValidator;
            }
            catch (p) { }
            if (!l) {
                var c = function () { function e(e) { } return e.prototype.validate = function (e, t) { return []; }, e; }();
                l = c;
            }
            t.createXmlSchemaReference = r, t.getValidator = a, t.jsonToXml = o;
        }, function (e, t, n) {
            "use strict";
            function r() { return new i; }
            var i;
            try {
                i = n(162).JSONValidator;
            }
            catch (a) { }
            if (!i) {
                var o = function () { function e() { } return e.prototype.setRemoteReference = function (e, t) { }, e.prototype.validateSchema = function (e) { }, e.prototype.getMissingRemoteReferences = function () { return []; }, e.prototype.isResourceLoaded = function (e) { return !0; }, e.prototype.validate = function (e, t) { }, e.prototype.getLastErrors = function () { return []; }, e; }();
                i = o;
            }
            t.getValidator = r;
        }, function (e, t, n) { var r, i, a, o, s = { '"': '"', "\\": "\\", "/": "/", b: "\b", f: "\f", n: "\n", r: "\r", t: "	" }, u = function (e) { throw { name: "SyntaxError", message: e, at: r, text: a }; }, l = function (e) { return e && e !== i && u("Expected '" + e + "' instead of '" + i + "'"), i = a.charAt(r), r += 1, i; }, p = function () { var e, t = ""; for ("-" === i && (t = "-", l("-")); i >= "0" && "9" >= i;)
            t += i, l(); if ("." === i)
            for (t += "."; l() && i >= "0" && "9" >= i;)
                t += i; if ("e" === i || "E" === i)
            for (t += i, l(), ("-" === i || "+" === i) && (t += i, l()); i >= "0" && "9" >= i;)
                t += i, l(); return e = +t, isFinite(e) ? e : void u("Bad number"); }, c = function () { var e, t, n, r = ""; if ('"' === i)
            for (; l();) {
                if ('"' === i)
                    return l(), r;
                if ("\\" === i)
                    if (l(), "u" === i) {
                        for (n = 0, t = 0; 4 > t && (e = parseInt(l(), 16), isFinite(e)); t += 1)
                            n = 16 * n + e;
                        r += String.fromCharCode(n);
                    }
                    else {
                        if ("string" != typeof s[i])
                            break;
                        r += s[i];
                    }
                else
                    r += i;
            } u("Bad string"); }, f = function () { for (; i && " " >= i;)
            l(); }, m = function () { switch (i) {
            case "t": return l("t"), l("r"), l("u"), l("e"), !0;
            case "f": return l("f"), l("a"), l("l"), l("s"), l("e"), !1;
            case "n": return l("n"), l("u"), l("l"), l("l"), null;
        } u("Unexpected '" + i + "'"); }, h = function () { var e = []; if ("[" === i) {
            if (l("["), f(), "]" === i)
                return l("]"), e;
            for (; i;) {
                if (e.push(o()), f(), "]" === i)
                    return l("]"), e;
                l(","), f();
            }
        } u("Bad array"); }, d = function () { var e, t = {}; if ("{" === i) {
            if (l("{"), f(), "}" === i)
                return l("}"), t;
            for (; i;) {
                if (e = c(), f(), l(":"), Object.hasOwnProperty.call(t, e) && u('Duplicate key "' + e + '"'), t[e] = o(), f(), "}" === i)
                    return l("}"), t;
                l(","), f();
            }
        } u("Bad object"); }; o = function () { switch (f(), i) {
            case "{": return d();
            case "[": return h();
            case '"': return c();
            case "-": return p();
            default: return i >= "0" && "9" >= i ? p() : m();
        } }, e.exports = function (e, t) { var n; return a = e, r = 0, i = " ", n = o(), f(), i && u("Syntax error"), "function" == typeof t ? function s(e, n) { var r, i, a = e[n]; if (a && "object" == typeof a)
            for (r in a)
                Object.prototype.hasOwnProperty.call(a, r) && (i = s(a, r), void 0 !== i ? a[r] = i : delete a[r]); return t.call(e, n, a); }({ "": n }, "") : n; }; }, function (e, t, n) { function r(e) { return u.lastIndex = 0, u.test(e) ? '"' + e.replace(u, function (e) { var t = l[e]; return "string" == typeof t ? t : "\\u" + ("0000" + e.charCodeAt(0).toString(16)).slice(-4); }) + '"' : '"' + e + '"'; } function i(e, t) { var n, u, l, p, c, f = a, m = t[e]; switch (m && "object" == typeof m && "function" == typeof m.toJSON && (m = m.toJSON(e)), "function" == typeof s && (m = s.call(t, e, m)), typeof m) {
            case "string": return r(m);
            case "number": return isFinite(m) ? String(m) : "null";
            case "boolean":
            case "null": return String(m);
            case "object":
                if (!m)
                    return "null";
                if (a += o, c = [], "[object Array]" === Object.prototype.toString.apply(m)) {
                    for (p = m.length, n = 0; p > n; n += 1)
                        c[n] = i(n, m) || "null";
                    return l = 0 === c.length ? "[]" : a ? "[\n" + a + c.join(",\n" + a) + "\n" + f + "]" : "[" + c.join(",") + "]", a = f, l;
                }
                if (s && "object" == typeof s)
                    for (p = s.length, n = 0; p > n; n += 1)
                        u = s[n], "string" == typeof u && (l = i(u, m), l && c.push(r(u) + (a ? ": " : ":") + l));
                else
                    for (u in m)
                        Object.prototype.hasOwnProperty.call(m, u) && (l = i(u, m), l && c.push(r(u) + (a ? ": " : ":") + l));
                return l = 0 === c.length ? "{}" : a ? "{\n" + a + c.join(",\n" + a) + "\n" + f + "}" : "{" + c.join(",") + "}", a = f, l;
        } } var a, o, s, u = /[\\\"\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g, l = { "\b": "\\b", "	": "\\t", "\n": "\\n", "\f": "\\f", "\r": "\\r", '"': '\\"', "\\": "\\\\" }; e.exports = function (e, t, n) { var r; if (a = "", o = "", "number" == typeof n)
            for (r = 0; n > r; r += 1)
                o += " ";
        else
            "string" == typeof n && (o = n); if (s = t, t && "function" != typeof t && ("object" != typeof t || "number" != typeof t.length))
            throw new Error("JSON.stringify"); return i("", { "": e }); }; }, function (e, t, n) { e.exports = function (e) { return e.webpackPolyfill || (e.deprecate = function () { }, e.paths = [], e.children = [], e.webpackPolyfill = 1), e; }; }, function (e, t, n) {
            e.exports = { 12: { code: "12", message: "" }, 24: { code: "24", message: "" }, 25: { code: "25", message: "" }, SCHEMA_AND_TYPE: { code: "SCHEMA_AND_TYPE", message: "'schema' and 'type' are mutually exclusive" }, REQUIRED_OVERRIDE_OPTIONAL: { code: "REQUIRED_OVERRIDE_OPTIONAL", message: "Can not override required property '{{propertyName}}' to be optional" }, CYCLIC_DEPENDENCY: { code: "CYCLIC_DEPENDENCY", message: "'{{typeName}}' has cyclic dependency" }, REDEFINIG_BUILDTIN: { code: "REDEFINIG_BUILDTIN", message: "Redefining a built in type: {{typeName}}" }, RECURRENT_DEFINITION: { code: "RECURRENT_DEFINITION", message: "Recurrent type definition" }, INHERITING_UNKNOWN_TYPE: { code: "INHERITING_UNKNOWN_TYPE", message: "Inheriting from unknown type" }, RECURRENT_UNION_OPTION: { code: "RECURRENT_UNION_OPTION", message: "Recurrent type as an option of union type" }, UNKNOWN_UNION_OPTION: { code: "UNKNOWN_UNION_OPTION", message: "Unknown type as an option of union type" }, RECURRENT_ARRAY_DEFINITION: { code: "RECURRENT_ARRAY_DEFINITION", message: "Recurrent array type definition" }, UNKNOWN_ARRAY_COMPONENT: { code: "UNKNOWN_ARRAY_COMPONENT", message: "Referring to unknown type '{{componentTypeName}}' as an array component type" }, EXTERNALS_MIX: { code: "EXTERNALS_MIX", message: "It is not allowed to mix RAML types with externals" }, EXTERNAL_FACET: { code: "EXTERNAL_FACET", message: "External types can not declare facet '{{name}}'" }, OVERRIDE_FACET: { code: "OVERRIDE_FACET", message: "Facet '{{name}}' can not be overriden" }, OVERRIDE_BUILTIN_FACET: { code: "OVERRIDE_BUILTIN_FACET", message: "Built in facet '{{name}}' can not be overriden" }, FACET_START_BRACKET: { code: "FACET_START_BRACKET", message: "Facet '{{name}}' can not start from '('" }, FACET_PROHIBITED_FOR_EXTERNALS: { code: "FACET_PROHIBITED_FOR_EXTERNALS", message: "'{{facetName}}' facet is prohibited for external types" }, UNKNOWN_FACET: { code: "UNKNOWN_FACET", message: "Specifying unknown facet: '{{facetName}}'" }, MISSING_REQUIRED_FACETS: { code: "MISSING_REQUIRED_FACETS", message: "Missing required facets: {{facetsList}}" }, OBJECT_EXPECTED: { code: "OBJECT_EXPECTED", message: "object is expected" }, NULL_NOT_ALLOWED: { code: "NULL_NOT_ALLOWED", message: "Null or undefined value is not allowed" }, DISCRIMINATOR_NEEDED: { code: "DISCRIMINATOR_NEEDED", message: "Can not discriminate types '{{name1}}' and '{{name2}}' without discriminator" }, SAME_DISCRIMINATOR_VALUE: { code: "SAME_DISCRIMINATOR_VALUE", message: "Types '{{name1}}' and '{{name2}}' have same discriminator value" }, NOTHING: { code: "NOTHING", message: "nothing" }, TYPE_EXPECTED: { code: "TYPE_EXPECTED", message: "{{typeName}} is expected" }, INTEGER_EXPECTED: { code: "INTEGER_EXPECTED", message: "integer is expected" }, NULL_EXPECTED: { code: "NULL_EXPECTED", message: "null is expected" }, SCALAR_EXPECTED: { code: "SCALAR_EXPECTED", message: "scalar is expected" }, INCORRECT_DISCRIMINATOR: { code: "INCORRECT_DISCRIMINATOR", message: "None of the '{{rootType}}' type known subtypes declare '{{value}}' as value of discriminating property '{{propName}}'." }, MISSING_DISCRIMINATOR: { code: "MISSING_DISCRIMINATOR", message: "Instance of '{{rootType}}' subtype misses value of the discriminating property '{{propName}}'." }, INVALID_DATEONLY: { code: "INVALID_DATEONLY", message: "'date-only' instance should match 'yyyy-mm-dd' pattern" }, INVALID_TIMEONLY: { code: "INVALID_TIMEONLY", message: "'time-only' instance should match 'hh:mm:ss[.ff...]' pattern" }, INVALID_DATETIMEONLY: { code: "INVALID_DATETIMEONLY", message: "'datetime-only' instance should match 'yyyy-mm-ddThh:mm:ss[.ff...]' pattern" }, INVALID_RFC3339: { code: "INVALID_RFC3339", message: "Valid rfc3339 formatted string is expected" }, INVALID_RFC2616: { code: "INVALID_RFC2616", message: "Valid rfc2616 formatted string is expected" }, INVALID_DATTIME: { code: "INVALID_DATTIME", message: "Valid datetime formatted string is expected" }, UNKNOWN_ANNOTATION: { code: "UNKNOWN_ANNOTATION", message: "Using unknown annotation type: '{{facetName}}'" }, INVALID_ANNOTATION_VALUE: { code: "INVALID_ANNOTATION_VALUE", message: "Invalid annotation value {{msg}}" }, CAN_NOT_PARSE_JSON: { code: "CAN_NOT_PARSE_JSON", message: "Can not parse JSON example: {{msg}}" }, INVALID_XML: { code: "INVALID_XML", message: "Invalid XML." }, STRICT_BOOLEAN: { code: "STRICT_BOOLEAN", message: "'strict' should be boolean" }, DISPLAY_NAME_STRING: { code: "DISPLAY_NAME_STRING", message: "'displayName' should be string" }, DESCRIPTION_STRING: { code: "DESCRIPTION_STRING", message: "'description' should be string" }, INVALID_EXMAPLE: { code: "INVALID_EXMAPLE", message: "Using invalid 'example': {{msg}}" }, ADDITIONAL_PROPERTIES_BOOLEAN: { code: "REQUIRED_BOOLEAN", message: "Value of 'additionalProperties' facet should be boolean" }, REQUIRED_BOOLEAN: { code: "REQUIRED_BOOLEAN", message: "Value of 'required' facet should be boolean" }, UNIQUE_ITEMS_BOOLEAN: { code: "UNIQUE_ITEMS_BOOLEAN", message: "Value of 'uniqueItems' facet should be boolean" }, EXMAPLES_MAP: { code: "EXMAPLES_MAP", message: "'examples' value should be a map" }, INVALID_DEFAULT_VALUE: { code: "INVALID_DEFAULT_VALUE", message: "Using invalid 'defaultValue': {{msg}}" }, DISCRIMINATOR_FOR_UNION: { code: "DISCRIMINATOR_FOR_UNION", message: "You can not specify 'discriminator' for union types" }, DISCRIMINATOR_FOR_OBJECT: { code: "DISCRIMINATOR_FOR_OBJECT", message: "You only can use 'discriminator' with object types" }, DISCRIMINATOR_FOR_INLINE: { code: "DISCRIMINATOR_FOR_INLINE", message: "You can not specify 'discriminator' for inline type declarations" }, UNKNOWN_FOR_DISCRIMINATOR: { code: "UNKNOWN_FOR_DISCRIMINATOR", message: "Using unknown property '{{value}}' as discriminator" }, SCALAR_FOR_DISCRIMINATOR: { code: "SCALAR_FOR_DISCRIMINATOR", message: "It is only allowed to use scalar properties as discriminators" }, DISCRIMINATOR_VALUE_WITHOUT_DISCRIMINATOR: { code: "DISCRIMINATOR_VALUE_WITHOUT_DISCRIMINATOR", message: "You can not use 'discriminatorValue' without declaring 'discriminator'" }, INVALID_DISCRIMINATOR_VALUE: { code: "INVALID_DISCRIMINATOR_VALUE", message: "Using invalid 'disciminatorValue': {{msg}}" }, PROPERTIES_MAP: { code: "PROPERTIES_MAP", message: "'properties' should be a map" }, FACETS_MAP: { code: "FACETS_MAP", message: "'facets' should be a map" }, VALIDATING_AGAINS_UNKNOWN: { code: "VALIDATING_AGAINS_UNKNOWN", message: "Validating instance against unknown type: '{{typeName}}'" }, EXTERNAL_IN_PROPERTY_DEFINITION: { code: "EXTERNAL_IN_PROPERTY_DEFINITION", message: "It is not allowed to use external types in property definitions" }, EXTERNAL_IN_FACET_DEFINITION: { code: "EXTERNAL_IN_FACET_DEFINITION", message: "It is not allowed to use external types in facet definitions" }, UNKNOWN_IN_PROPERTY_DEFINITION: { code: "UNKNOWN_IN_PROPERTY_DEFINITION", message: "Property '{{propName}}' refers to unknown type '{{typeName}}'" }, UNKNOWN_IN_FACET_DEFINITION: { code: "UNKNOWN_IN_FACET_DEFINITION", message: "Facet '{{facetName}}' refers to unknown type '{{typeName}}'" }, ERROR_IN_RANGE: { code: "ERROR_IN_RANGE", message: "Property '{{propName}}' range type has error: {{msg}}" }, ERROR_IN_FACET_RANGE: { code: "ERROR_IN_FACET_RANGE", message: "Facet '{{facetName}}' range type has error: {{msg}}" }, INCORRECT_SCHEMA: { code: "INCORRECT_SCHEMA", message: "Incorrect schema: {{msg}}" }, UNABLE_TO_VALIDATE_XML: { code: "UNABLE_TO_VALIDATE_XML", message: "Unable to validate example against schema (xmllint)" }, CIRCULAR_REFS_IN_JSON_SCHEMA: { code: "CIRCULAR_REFS_IN_JSON_SCHEMA", message: "JSON schema contains circular references" }, EXAMPLE_SCHEMA_FAILURE: { code: "EXAMPLE_SCHEMA_FAILURE", message: "Example does not conform to schema: {{msg}}" }, JOSN_EXAMPLE_VALIDATION_EXCEPTION: { code: "JOSN_EXAMPLE_VALIDATION_EXCEPTION", message: "Validating example against schema caused an exception: {{msg}}" }, UNKNOWN_PROPERTY: { code: "UNKNOWN_PROPERTY", message: "Unknown property: '{{propName}}'" }, REQUIRED_PROPERTY_MISSING: { code: "REQUIRED_PROPERTY_MISSING", message: "Required property '{{propName}}' is missing" }, INVALID_REGEXP: { code: "INVALID_REGEXP", message: "{{msg}}" }, FACET_USAGE_RESTRICTION: { code: "FACET_USAGE_RESTRICTION", message: "{{facetName}} facet can only be used with {{typeNames}} types" }, FACET_REQUIRE_NUMBER: { code: "FACET_REQUIRE_NUMBER", message: "'{{facetName}}' value should be a number" }, FACET_REQUIRE_INTEGER: { code: "FACET_REQUIRE_INTEGER", message: "'{{facetName}}' value should be an integer" }, MIN_VALUE: { code: "MIN_VALUE", message: "'{{facetName}}' value should be at least {{minValue}}" }, EVEN_RATIO: { code: "EVEN_RATIO", message: "result of division of {{val1}} on {{val2}} should be integer" }, MUST_BE_UNIQUE: { code: "MUST_BE_UNIQUE", message: "items should be unique" }, ARRAY_AGAINST_UNKNOWN: { code: "ARRAY_AGAINST_UNKNOWN", message: "Array instance is validated against unknown type: '{{typeName}}'" }, INVALID_COMPONENT_TYPE: { code: "INVALID_COMPONENT_TYPE", message: "Component type has error: {{msg}}" }, EXTERNAL_AS_COMPONENT: { code: "EXTERNAL_AS_COMPONENT", message: "It is not allowed to use external types in component type definitions" }, UNKNOWN_AS_COMPONENT: { code: "UNKNOWN_AS_COMPONENT", message: "Component refers to unknown type {{typeName}}" }, PATTERN_VIOLATION: { code: "PATTERN_VIOLATION", message: "String should match to '{{value}}'" }, ALLOWED_FORMAT_VALUES: { code: "ALLOWED_FORMAT_VALUES", message: "Following format values are allowed: {{allowedValues}}" }, ENUM_RESTRICTION: { code: "ENUM_RESTRICTION", message: "value should be one of: {{values}}" }, ENUM_OWNER_TYPES: { code: "ENUM_OWNER_TYPES", message: "'enum' facet can only be used with: {{typeNames}}" }, ENUM_ARRAY: { code: "ENUM_ARRAY", message: "'enum' facet value must be defined by array" }, RESTRICTIONS_CONFLICT: { code: "RESTRICTIONS_CONFLICT", message: null }, MINMAX_RESTRICTION_VIOLATION: { code: "MINMAX_RESTRICTION_VIOLATION", message: null }, UNION_TYPE_FAILURE: { code: "UNION_TYPE_FAILURE", message: "Union type options do not pass validation"
                }, UNION_TYPE_FAILURE_DETAILS: { code: "UNION_TYPE_FAILURE_DETAILS", message: "Union type option does not pass validation ({{msg}})" }, INVALID_JSON_SCHEMA_DETAILS: { code: "INVALID_JSON_SCHEMA_DETAILS", message: "Invalid JSON schema: {{msg}}" }, INVALID_JSON_SCHEMA: { code: "INVALID_JSON_SCHEMA", message: "Invalid JSON schema" }, JSON_SCHEMA_VALIDATION_EXCEPTION: { code: "JSON_SCHEMA_VALIDATION_EXCEPTION", message: "Schema validation exception: {{msg}}" }, REFERENCE_NOT_FOUND: { code: "REFERENCE_NOT_FOUND", message: "Reference not found: {{ref}}" }, INVALID_XML_SCHEMA: { code: "INVALID_XML_SCHEMA", message: "Invalid XML schema content" }, INVALID_ANNOTATION_LOCATION: { code: "INVALID_ANNOTATION_LOCATION", message: "Annotation '{{aName}}' can not be placed at this location, allowed targets are: {{aValues}}" }, CONTENT_DOES_NOT_MATCH_THE_SCHEMA: { code: "CONTENT_DOES_NOT_MATCH_THE_SCHEMA", message: "Content is not valid according to schema: {{msg}}" }, EXTERNAL_TYPE_ERROR: { code: "EXTERNAL_TYPE_ERROR", message: "Referenced type '{{typeName}}' does not match '{{objectName}}' root node" }, CAN_NOT_PARSE_SCHEMA: { code: "CAN_NOT_PARSE_SCHEMA", message: "Can not parse schema" }, FILE_TYPES_SHOULD_BE_AN_ARRAY: { code: "FILE_TYPES_SHOULD_BE_AN_ARRAY", message: "'fileTypes' value should be an array of strings" }, FACET_CAN_NOT_BE_FIXED_BY_THE_DECLARING_TYPE: { code: "FACET_CAN_NOT_BE_FIXED_BY_THE_DECLARING_TYPE", message: "A facet  can not be fixed by the declaring type" }, ITEMS_SHOULD_BE_REFERENCE_OR_INLINE_TYPE: { code: "ITEMS_SHOULD_BE_REFERENCE_OR_INLINE_TYPE", message: "The 'items' property value should be either a reference to an existing type or an inline type declaration" }, VALUE_SHOULD_BE_POSITIVE: { code: "VALUE_SHOULD_BE_POSITIVE", message: "Value of the '{{facetName}}' facet should be positive" }, PLUGIN_REPORTS_AN_ERROR: { code: "PLUGIN_REPORTS_AN_ERROR", message: "The {{pluginId}} plugin reports an error" }, MESSAGE_PARAMETER_NO_VALUE: { code: "MESSAGE_PARAMETER_NO_VALUE", message: "Message parameter '{{paramName}}' has no value specified." }, VALIDATE_ONLY_ON_RUNTIME_TYPES_INSTANCES: { code: "VALIDATE_ONLY_ON_RUNTIME_TYPES_INSTANCES", message: "Validate can be used only on runtime types instances" }, SHOULD_BE_ALREADY_OWNED: { code: "SHOULD_BE_ALREADY_OWNED", message: "Should be already owned by this" }, ALREADY_INCLUDED: { code: "ALREADY_INCLUDED", message: "Already included" }, SHOULD_BE_NEVER_CALLED: { code: "SHOULD_BE_NEVER_CALLED", message: "Should be never called" }, VALUE_SHOULD_NOT_BE_MORE: { code: "VALUE_SHOULD_NOT_BE_MORE", message: "value should not be more than" }, VALUE_SHOULD_NOT_BE_LESS: { code: "VALUE_SHOULD_NOT_BE_LESS", message: "value should not be less than" }, ARRAY_ITEMS_COUNT_SHOULD_NOT_BE_MORE: { code: "ARRAY_ITEMS_COUNT_SHOULD_NOT_BE_MORE", message: "array items count should not be more than" }, ARRAY_ITEMS_COUNT_SHOULD_NOT_BE_LESS: { code: "ARRAY_ITEMS_COUNT_SHOULD_NOT_BE_LESS", message: "array items count should not be less than" }, STRING_SHOULD_NOT_BE_MORE: { code: "STRING_SHOULD_NOT_BE_MORE", message: "string length should not be more than" }, STRING_SHOULD_NOT_BE_LESS: { code: "STRING_SHOULD_NOT_BE_LESS", message: "string length should not be less than" }, OBJECT_PROPERTIES_SHOULD_NOT_BE_MORE: { code: "OBJECT_PROPERTIES_SHOULD_NOT_BE_MORE", message: "object properties count should not be more than" }, OBJECT_PROPERTIES_SHOULD_NOT_BE_LESS: { code: "OBJECT_PROPERTIES_SHOULD_NOT_BE_LESS", message: "object properties count should not be less than" }, ITEMS_SHOULD_BE_OF_TYPE: { code: "ITEMS_SHOULD_BE_OF_TYPE", message: "items should be of type {{type}}" }, RESTRICTIONS_CANNT_BE_COMPOSED: { code: "RESTRICTIONS_CANNT_BE_COMPOSED", message: "{{name}} can not be composed at one type" }, SHOULD_PASS_REXEXP: { code: "SHOULD_PASS_REXEXP", message: "should pass reg exp:{{rexexp}}" }, NO_COMMON_FILE_TYPES: { code: "NO_COMMON_FILE_TYPES", message: "no common file types" }, INVALID_FILETYPES_FACET_VALUE: { code: "INVALID_FILETYPES_FACET_VALUE", message: "invalid 'fileTypes' facet value" }, SUPPORTED_FILE_TYPES: { code: "SUPPORTED_FILE_TYPES", message: "supported file types: {{types}}" }, SHOULD_BE_SCALAR: { code: "SHOULD_BE_SCALAR", message: "should be scalar" } };
        }, function (e, t, n) {
            "use strict";
            e.exports = n(190), n(191), n(192), n(193), n(194), n(195);
        }, function (e, t, n) { e.exports = __WEBPACK_EXTERNAL_MODULE_154__; }, function (e, t, n) { e.exports = /[^\u0041-\u005A\u0061-\u007A\u00AA\u00B5\u00BA\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u0527\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u08A0\u08A2-\u08AC\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0977\u0979-\u097F\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C33\u0C35-\u0C39\u0C3D\u0C58\u0C59\u0C60\u0C61\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D60\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F4\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191C\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19C1-\u19C7\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2183\u2184\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005\u3006\u3031-\u3035\u303B\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FCC\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA697\uA6A0-\uA6E5\uA717-\uA71F\uA722-\uA788\uA78B-\uA78E\uA790-\uA793\uA7A0-\uA7AA\uA7F8-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA80-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uABC0-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC\u0030-\u0039\u00B2\u00B3\u00B9\u00BC-\u00BE\u0660-\u0669\u06F0-\u06F9\u07C0-\u07C9\u0966-\u096F\u09E6-\u09EF\u09F4-\u09F9\u0A66-\u0A6F\u0AE6-\u0AEF\u0B66-\u0B6F\u0B72-\u0B77\u0BE6-\u0BF2\u0C66-\u0C6F\u0C78-\u0C7E\u0CE6-\u0CEF\u0D66-\u0D75\u0E50-\u0E59\u0ED0-\u0ED9\u0F20-\u0F33\u1040-\u1049\u1090-\u1099\u1369-\u137C\u16EE-\u16F0\u17E0-\u17E9\u17F0-\u17F9\u1810-\u1819\u1946-\u194F\u19D0-\u19DA\u1A80-\u1A89\u1A90-\u1A99\u1B50-\u1B59\u1BB0-\u1BB9\u1C40-\u1C49\u1C50-\u1C59\u2070\u2074-\u2079\u2080-\u2089\u2150-\u2182\u2185-\u2189\u2460-\u249B\u24EA-\u24FF\u2776-\u2793\u2CFD\u3007\u3021-\u3029\u3038-\u303A\u3192-\u3195\u3220-\u3229\u3248-\u324F\u3251-\u325F\u3280-\u3289\u32B1-\u32BF\uA620-\uA629\uA6E6-\uA6EF\uA830-\uA835\uA8D0-\uA8D9\uA900-\uA909\uA9D0-\uA9D9\uAA50-\uAA59\uABF0-\uABF9\uFF10-\uFF19]+/g; }, function (e, t, n) { e.exports = /([\u0061-\u007A\u00B5\u00DF-\u00F6\u00F8-\u00FF\u0101\u0103\u0105\u0107\u0109\u010B\u010D\u010F\u0111\u0113\u0115\u0117\u0119\u011B\u011D\u011F\u0121\u0123\u0125\u0127\u0129\u012B\u012D\u012F\u0131\u0133\u0135\u0137\u0138\u013A\u013C\u013E\u0140\u0142\u0144\u0146\u0148\u0149\u014B\u014D\u014F\u0151\u0153\u0155\u0157\u0159\u015B\u015D\u015F\u0161\u0163\u0165\u0167\u0169\u016B\u016D\u016F\u0171\u0173\u0175\u0177\u017A\u017C\u017E-\u0180\u0183\u0185\u0188\u018C\u018D\u0192\u0195\u0199-\u019B\u019E\u01A1\u01A3\u01A5\u01A8\u01AA\u01AB\u01AD\u01B0\u01B4\u01B6\u01B9\u01BA\u01BD-\u01BF\u01C6\u01C9\u01CC\u01CE\u01D0\u01D2\u01D4\u01D6\u01D8\u01DA\u01DC\u01DD\u01DF\u01E1\u01E3\u01E5\u01E7\u01E9\u01EB\u01ED\u01EF\u01F0\u01F3\u01F5\u01F9\u01FB\u01FD\u01FF\u0201\u0203\u0205\u0207\u0209\u020B\u020D\u020F\u0211\u0213\u0215\u0217\u0219\u021B\u021D\u021F\u0221\u0223\u0225\u0227\u0229\u022B\u022D\u022F\u0231\u0233-\u0239\u023C\u023F\u0240\u0242\u0247\u0249\u024B\u024D\u024F-\u0293\u0295-\u02AF\u0371\u0373\u0377\u037B-\u037D\u0390\u03AC-\u03CE\u03D0\u03D1\u03D5-\u03D7\u03D9\u03DB\u03DD\u03DF\u03E1\u03E3\u03E5\u03E7\u03E9\u03EB\u03ED\u03EF-\u03F3\u03F5\u03F8\u03FB\u03FC\u0430-\u045F\u0461\u0463\u0465\u0467\u0469\u046B\u046D\u046F\u0471\u0473\u0475\u0477\u0479\u047B\u047D\u047F\u0481\u048B\u048D\u048F\u0491\u0493\u0495\u0497\u0499\u049B\u049D\u049F\u04A1\u04A3\u04A5\u04A7\u04A9\u04AB\u04AD\u04AF\u04B1\u04B3\u04B5\u04B7\u04B9\u04BB\u04BD\u04BF\u04C2\u04C4\u04C6\u04C8\u04CA\u04CC\u04CE\u04CF\u04D1\u04D3\u04D5\u04D7\u04D9\u04DB\u04DD\u04DF\u04E1\u04E3\u04E5\u04E7\u04E9\u04EB\u04ED\u04EF\u04F1\u04F3\u04F5\u04F7\u04F9\u04FB\u04FD\u04FF\u0501\u0503\u0505\u0507\u0509\u050B\u050D\u050F\u0511\u0513\u0515\u0517\u0519\u051B\u051D\u051F\u0521\u0523\u0525\u0527\u0561-\u0587\u1D00-\u1D2B\u1D6B-\u1D77\u1D79-\u1D9A\u1E01\u1E03\u1E05\u1E07\u1E09\u1E0B\u1E0D\u1E0F\u1E11\u1E13\u1E15\u1E17\u1E19\u1E1B\u1E1D\u1E1F\u1E21\u1E23\u1E25\u1E27\u1E29\u1E2B\u1E2D\u1E2F\u1E31\u1E33\u1E35\u1E37\u1E39\u1E3B\u1E3D\u1E3F\u1E41\u1E43\u1E45\u1E47\u1E49\u1E4B\u1E4D\u1E4F\u1E51\u1E53\u1E55\u1E57\u1E59\u1E5B\u1E5D\u1E5F\u1E61\u1E63\u1E65\u1E67\u1E69\u1E6B\u1E6D\u1E6F\u1E71\u1E73\u1E75\u1E77\u1E79\u1E7B\u1E7D\u1E7F\u1E81\u1E83\u1E85\u1E87\u1E89\u1E8B\u1E8D\u1E8F\u1E91\u1E93\u1E95-\u1E9D\u1E9F\u1EA1\u1EA3\u1EA5\u1EA7\u1EA9\u1EAB\u1EAD\u1EAF\u1EB1\u1EB3\u1EB5\u1EB7\u1EB9\u1EBB\u1EBD\u1EBF\u1EC1\u1EC3\u1EC5\u1EC7\u1EC9\u1ECB\u1ECD\u1ECF\u1ED1\u1ED3\u1ED5\u1ED7\u1ED9\u1EDB\u1EDD\u1EDF\u1EE1\u1EE3\u1EE5\u1EE7\u1EE9\u1EEB\u1EED\u1EEF\u1EF1\u1EF3\u1EF5\u1EF7\u1EF9\u1EFB\u1EFD\u1EFF-\u1F07\u1F10-\u1F15\u1F20-\u1F27\u1F30-\u1F37\u1F40-\u1F45\u1F50-\u1F57\u1F60-\u1F67\u1F70-\u1F7D\u1F80-\u1F87\u1F90-\u1F97\u1FA0-\u1FA7\u1FB0-\u1FB4\u1FB6\u1FB7\u1FBE\u1FC2-\u1FC4\u1FC6\u1FC7\u1FD0-\u1FD3\u1FD6\u1FD7\u1FE0-\u1FE7\u1FF2-\u1FF4\u1FF6\u1FF7\u210A\u210E\u210F\u2113\u212F\u2134\u2139\u213C\u213D\u2146-\u2149\u214E\u2184\u2C30-\u2C5E\u2C61\u2C65\u2C66\u2C68\u2C6A\u2C6C\u2C71\u2C73\u2C74\u2C76-\u2C7B\u2C81\u2C83\u2C85\u2C87\u2C89\u2C8B\u2C8D\u2C8F\u2C91\u2C93\u2C95\u2C97\u2C99\u2C9B\u2C9D\u2C9F\u2CA1\u2CA3\u2CA5\u2CA7\u2CA9\u2CAB\u2CAD\u2CAF\u2CB1\u2CB3\u2CB5\u2CB7\u2CB9\u2CBB\u2CBD\u2CBF\u2CC1\u2CC3\u2CC5\u2CC7\u2CC9\u2CCB\u2CCD\u2CCF\u2CD1\u2CD3\u2CD5\u2CD7\u2CD9\u2CDB\u2CDD\u2CDF\u2CE1\u2CE3\u2CE4\u2CEC\u2CEE\u2CF3\u2D00-\u2D25\u2D27\u2D2D\uA641\uA643\uA645\uA647\uA649\uA64B\uA64D\uA64F\uA651\uA653\uA655\uA657\uA659\uA65B\uA65D\uA65F\uA661\uA663\uA665\uA667\uA669\uA66B\uA66D\uA681\uA683\uA685\uA687\uA689\uA68B\uA68D\uA68F\uA691\uA693\uA695\uA697\uA723\uA725\uA727\uA729\uA72B\uA72D\uA72F-\uA731\uA733\uA735\uA737\uA739\uA73B\uA73D\uA73F\uA741\uA743\uA745\uA747\uA749\uA74B\uA74D\uA74F\uA751\uA753\uA755\uA757\uA759\uA75B\uA75D\uA75F\uA761\uA763\uA765\uA767\uA769\uA76B\uA76D\uA76F\uA771-\uA778\uA77A\uA77C\uA77F\uA781\uA783\uA785\uA787\uA78C\uA78E\uA791\uA793\uA7A1\uA7A3\uA7A5\uA7A7\uA7A9\uA7FA\uFB00-\uFB06\uFB13-\uFB17\uFF41-\uFF5A])([\u0041-\u005A\u00C0-\u00D6\u00D8-\u00DE\u0100\u0102\u0104\u0106\u0108\u010A\u010C\u010E\u0110\u0112\u0114\u0116\u0118\u011A\u011C\u011E\u0120\u0122\u0124\u0126\u0128\u012A\u012C\u012E\u0130\u0132\u0134\u0136\u0139\u013B\u013D\u013F\u0141\u0143\u0145\u0147\u014A\u014C\u014E\u0150\u0152\u0154\u0156\u0158\u015A\u015C\u015E\u0160\u0162\u0164\u0166\u0168\u016A\u016C\u016E\u0170\u0172\u0174\u0176\u0178\u0179\u017B\u017D\u0181\u0182\u0184\u0186\u0187\u0189-\u018B\u018E-\u0191\u0193\u0194\u0196-\u0198\u019C\u019D\u019F\u01A0\u01A2\u01A4\u01A6\u01A7\u01A9\u01AC\u01AE\u01AF\u01B1-\u01B3\u01B5\u01B7\u01B8\u01BC\u01C4\u01C7\u01CA\u01CD\u01CF\u01D1\u01D3\u01D5\u01D7\u01D9\u01DB\u01DE\u01E0\u01E2\u01E4\u01E6\u01E8\u01EA\u01EC\u01EE\u01F1\u01F4\u01F6-\u01F8\u01FA\u01FC\u01FE\u0200\u0202\u0204\u0206\u0208\u020A\u020C\u020E\u0210\u0212\u0214\u0216\u0218\u021A\u021C\u021E\u0220\u0222\u0224\u0226\u0228\u022A\u022C\u022E\u0230\u0232\u023A\u023B\u023D\u023E\u0241\u0243-\u0246\u0248\u024A\u024C\u024E\u0370\u0372\u0376\u0386\u0388-\u038A\u038C\u038E\u038F\u0391-\u03A1\u03A3-\u03AB\u03CF\u03D2-\u03D4\u03D8\u03DA\u03DC\u03DE\u03E0\u03E2\u03E4\u03E6\u03E8\u03EA\u03EC\u03EE\u03F4\u03F7\u03F9\u03FA\u03FD-\u042F\u0460\u0462\u0464\u0466\u0468\u046A\u046C\u046E\u0470\u0472\u0474\u0476\u0478\u047A\u047C\u047E\u0480\u048A\u048C\u048E\u0490\u0492\u0494\u0496\u0498\u049A\u049C\u049E\u04A0\u04A2\u04A4\u04A6\u04A8\u04AA\u04AC\u04AE\u04B0\u04B2\u04B4\u04B6\u04B8\u04BA\u04BC\u04BE\u04C0\u04C1\u04C3\u04C5\u04C7\u04C9\u04CB\u04CD\u04D0\u04D2\u04D4\u04D6\u04D8\u04DA\u04DC\u04DE\u04E0\u04E2\u04E4\u04E6\u04E8\u04EA\u04EC\u04EE\u04F0\u04F2\u04F4\u04F6\u04F8\u04FA\u04FC\u04FE\u0500\u0502\u0504\u0506\u0508\u050A\u050C\u050E\u0510\u0512\u0514\u0516\u0518\u051A\u051C\u051E\u0520\u0522\u0524\u0526\u0531-\u0556\u10A0-\u10C5\u10C7\u10CD\u1E00\u1E02\u1E04\u1E06\u1E08\u1E0A\u1E0C\u1E0E\u1E10\u1E12\u1E14\u1E16\u1E18\u1E1A\u1E1C\u1E1E\u1E20\u1E22\u1E24\u1E26\u1E28\u1E2A\u1E2C\u1E2E\u1E30\u1E32\u1E34\u1E36\u1E38\u1E3A\u1E3C\u1E3E\u1E40\u1E42\u1E44\u1E46\u1E48\u1E4A\u1E4C\u1E4E\u1E50\u1E52\u1E54\u1E56\u1E58\u1E5A\u1E5C\u1E5E\u1E60\u1E62\u1E64\u1E66\u1E68\u1E6A\u1E6C\u1E6E\u1E70\u1E72\u1E74\u1E76\u1E78\u1E7A\u1E7C\u1E7E\u1E80\u1E82\u1E84\u1E86\u1E88\u1E8A\u1E8C\u1E8E\u1E90\u1E92\u1E94\u1E9E\u1EA0\u1EA2\u1EA4\u1EA6\u1EA8\u1EAA\u1EAC\u1EAE\u1EB0\u1EB2\u1EB4\u1EB6\u1EB8\u1EBA\u1EBC\u1EBE\u1EC0\u1EC2\u1EC4\u1EC6\u1EC8\u1ECA\u1ECC\u1ECE\u1ED0\u1ED2\u1ED4\u1ED6\u1ED8\u1EDA\u1EDC\u1EDE\u1EE0\u1EE2\u1EE4\u1EE6\u1EE8\u1EEA\u1EEC\u1EEE\u1EF0\u1EF2\u1EF4\u1EF6\u1EF8\u1EFA\u1EFC\u1EFE\u1F08-\u1F0F\u1F18-\u1F1D\u1F28-\u1F2F\u1F38-\u1F3F\u1F48-\u1F4D\u1F59\u1F5B\u1F5D\u1F5F\u1F68-\u1F6F\u1FB8-\u1FBB\u1FC8-\u1FCB\u1FD8-\u1FDB\u1FE8-\u1FEC\u1FF8-\u1FFB\u2102\u2107\u210B-\u210D\u2110-\u2112\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u2130-\u2133\u213E\u213F\u2145\u2183\u2C00-\u2C2E\u2C60\u2C62-\u2C64\u2C67\u2C69\u2C6B\u2C6D-\u2C70\u2C72\u2C75\u2C7E-\u2C80\u2C82\u2C84\u2C86\u2C88\u2C8A\u2C8C\u2C8E\u2C90\u2C92\u2C94\u2C96\u2C98\u2C9A\u2C9C\u2C9E\u2CA0\u2CA2\u2CA4\u2CA6\u2CA8\u2CAA\u2CAC\u2CAE\u2CB0\u2CB2\u2CB4\u2CB6\u2CB8\u2CBA\u2CBC\u2CBE\u2CC0\u2CC2\u2CC4\u2CC6\u2CC8\u2CCA\u2CCC\u2CCE\u2CD0\u2CD2\u2CD4\u2CD6\u2CD8\u2CDA\u2CDC\u2CDE\u2CE0\u2CE2\u2CEB\u2CED\u2CF2\uA640\uA642\uA644\uA646\uA648\uA64A\uA64C\uA64E\uA650\uA652\uA654\uA656\uA658\uA65A\uA65C\uA65E\uA660\uA662\uA664\uA666\uA668\uA66A\uA66C\uA680\uA682\uA684\uA686\uA688\uA68A\uA68C\uA68E\uA690\uA692\uA694\uA696\uA722\uA724\uA726\uA728\uA72A\uA72C\uA72E\uA732\uA734\uA736\uA738\uA73A\uA73C\uA73E\uA740\uA742\uA744\uA746\uA748\uA74A\uA74C\uA74E\uA750\uA752\uA754\uA756\uA758\uA75A\uA75C\uA75E\uA760\uA762\uA764\uA766\uA768\uA76A\uA76C\uA76E\uA779\uA77B\uA77D\uA77E\uA780\uA782\uA784\uA786\uA78B\uA78D\uA790\uA792\uA7A0\uA7A2\uA7A4\uA7A6\uA7A8\uA7AA\uFF21-\uFF3A\u0030-\u0039\u00B2\u00B3\u00B9\u00BC-\u00BE\u0660-\u0669\u06F0-\u06F9\u07C0-\u07C9\u0966-\u096F\u09E6-\u09EF\u09F4-\u09F9\u0A66-\u0A6F\u0AE6-\u0AEF\u0B66-\u0B6F\u0B72-\u0B77\u0BE6-\u0BF2\u0C66-\u0C6F\u0C78-\u0C7E\u0CE6-\u0CEF\u0D66-\u0D75\u0E50-\u0E59\u0ED0-\u0ED9\u0F20-\u0F33\u1040-\u1049\u1090-\u1099\u1369-\u137C\u16EE-\u16F0\u17E0-\u17E9\u17F0-\u17F9\u1810-\u1819\u1946-\u194F\u19D0-\u19DA\u1A80-\u1A89\u1A90-\u1A99\u1B50-\u1B59\u1BB0-\u1BB9\u1C40-\u1C49\u1C50-\u1C59\u2070\u2074-\u2079\u2080-\u2089\u2150-\u2182\u2185-\u2189\u2460-\u249B\u24EA-\u24FF\u2776-\u2793\u2CFD\u3007\u3021-\u3029\u3038-\u303A\u3192-\u3195\u3220-\u3229\u3248-\u324F\u3251-\u325F\u3280-\u3289\u32B1-\u32BF\uA620-\uA629\uA6E6-\uA6EF\uA830-\uA835\uA8D0-\uA8D9\uA900-\uA909\uA9D0-\uA9D9\uAA50-\uAA59\uABF0-\uABF9\uFF10-\uFF19])/g; }, function (e, t, n) { e.exports = /([\u0030-\u0039\u00B2\u00B3\u00B9\u00BC-\u00BE\u0660-\u0669\u06F0-\u06F9\u07C0-\u07C9\u0966-\u096F\u09E6-\u09EF\u09F4-\u09F9\u0A66-\u0A6F\u0AE6-\u0AEF\u0B66-\u0B6F\u0B72-\u0B77\u0BE6-\u0BF2\u0C66-\u0C6F\u0C78-\u0C7E\u0CE6-\u0CEF\u0D66-\u0D75\u0E50-\u0E59\u0ED0-\u0ED9\u0F20-\u0F33\u1040-\u1049\u1090-\u1099\u1369-\u137C\u16EE-\u16F0\u17E0-\u17E9\u17F0-\u17F9\u1810-\u1819\u1946-\u194F\u19D0-\u19DA\u1A80-\u1A89\u1A90-\u1A99\u1B50-\u1B59\u1BB0-\u1BB9\u1C40-\u1C49\u1C50-\u1C59\u2070\u2074-\u2079\u2080-\u2089\u2150-\u2182\u2185-\u2189\u2460-\u249B\u24EA-\u24FF\u2776-\u2793\u2CFD\u3007\u3021-\u3029\u3038-\u303A\u3192-\u3195\u3220-\u3229\u3248-\u324F\u3251-\u325F\u3280-\u3289\u32B1-\u32BF\uA620-\uA629\uA6E6-\uA6EF\uA830-\uA835\uA8D0-\uA8D9\uA900-\uA909\uA9D0-\uA9D9\uAA50-\uAA59\uABF0-\uABF9\uFF10-\uFF19])([^\u0030-\u0039\u00B2\u00B3\u00B9\u00BC-\u00BE\u0660-\u0669\u06F0-\u06F9\u07C0-\u07C9\u0966-\u096F\u09E6-\u09EF\u09F4-\u09F9\u0A66-\u0A6F\u0AE6-\u0AEF\u0B66-\u0B6F\u0B72-\u0B77\u0BE6-\u0BF2\u0C66-\u0C6F\u0C78-\u0C7E\u0CE6-\u0CEF\u0D66-\u0D75\u0E50-\u0E59\u0ED0-\u0ED9\u0F20-\u0F33\u1040-\u1049\u1090-\u1099\u1369-\u137C\u16EE-\u16F0\u17E0-\u17E9\u17F0-\u17F9\u1810-\u1819\u1946-\u194F\u19D0-\u19DA\u1A80-\u1A89\u1A90-\u1A99\u1B50-\u1B59\u1BB0-\u1BB9\u1C40-\u1C49\u1C50-\u1C59\u2070\u2074-\u2079\u2080-\u2089\u2150-\u2182\u2185-\u2189\u2460-\u249B\u24EA-\u24FF\u2776-\u2793\u2CFD\u3007\u3021-\u3029\u3038-\u303A\u3192-\u3195\u3220-\u3229\u3248-\u324F\u3251-\u325F\u3280-\u3289\u32B1-\u32BF\uA620-\uA629\uA6E6-\uA6EF\uA830-\uA835\uA8D0-\uA8D9\uA900-\uA909\uA9D0-\uA9D9\uAA50-\uAA59\uABF0-\uABF9\uFF10-\uFF19])/g; }, function (e, t, n) {
            "use strict";
            function r(e) { var t = [], n = l.readFileSync(u.resolve(e)).toString(), r = o.createSourceFile("sample.ts", n, o.ScriptTarget.ES3, !0); return s.Matching.visit(r, function (r) { var s = r; if (s.kind == o.SyntaxKind.FunctionDeclaration) {
                var u = i(s, n);
                if (!u)
                    return;
                var l = s.name.text, f = l;
                u.name ? f = u.name : u.name = l;
                var f = u.name ? u.name : l, m = s.parameters ? s.parameters.map(function (t) { return a(t, e); }) : [], h = (u.override ? u.override : !1, p.buildType(s.type, e));
                t.push(new c.HelperMethod(l, f, h, m, u));
            } }), t; }
            function i(e, t) { var n = o.getLeadingCommentRanges(t, e.pos); if (!n)
                return null; var r = n.map(function (e) { return t.substring(e.pos, e.end); }).join("\n"), i = r.indexOf("__$helperMethod__"); if (0 > i)
                return null; i += "__$helperMethod__".length; var a = r.indexOf("__$meta__"); if (0 > a)
                return { comment: f(r.substring(i)) }; var s = f(r.substring(i, a)), u = r.indexOf("{", a); if (0 > u)
                return { comment: s }; try {
                var l = JSON.parse(f(r.substring(u)));
                return l.comment = s.trim().length > 0 ? s : null, l.override = l.override || !1, l.primary = l.primary || !1, l.deprecated = l.deprecated || !1, l;
            }
            catch (p) {
                console.log(p);
            } return {}; }
            function a(e, t) { var n, r = e.name.text, i = p.buildType(e.type, t), a = null != e.questionToken; return null != e.initializer && (n = p.parseArg(e.initializer), a = !0), { name: r, type: i, defaultValue: n, optional: a }; }
            var o = n(154), s = n(159), u = n(15), l = n(196), p = n(138), c = n(137);
            t.getHelperMethods = r;
            var f = function (e) { return e.replace(/^\s*\/\*+/g, "").replace(/\*+\/\s*$/g, "").split("\n").map(function (e) { return e.replace(/^\s*\/\//g, "").replace(/^\s*\* {0,1}/g, ""); }).join("\n").trim(); };
        }, function (e, t, n) {
            "use strict";
            var r, i = this && this.__extends || function (e, t) { function n() { this.constructor = e; } for (var r in t)
                t.hasOwnProperty(r) && (e[r] = t[r]); e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype, new n); }, a = n(154);
            !function (e) { function t(n, r) { var i = r(n); if (i)
                return i == e.SKIP ? null : i; var o = a.forEachChild(n, function (e) { var n = t(e, r); return n ? n : void 0; }); return o; } function n(e, t) { void 0 === t && (t = function (e) { return !0; }); for (var n = e.split("."), i = null, a = 0; a < n.length; a++) {
                var s = n[a], u = s.indexOf("(*)"), l = !1;
                -1 != u && (s = s.substr(0, u), l = !0), i = null == i ? "*" == s ? o() : r(s) : new _(i, "*" == s ? o() : r(s), t), l && (i = new E(i, t));
            } return i; } function r(e) { return new A(e); } function o() { return new T; } function s(e, t) { return void 0 === t && (t = function (e) { return !0; }), new E(e, t); } function u(e, t) { return void 0 === t && (t = function (e) { return !0; }), new g(e, t); } function l(e, t, n) { return void 0 === n && (n = function (e) { return !0; }), new y(e, t, n); } function p(e, t, n) { return void 0 === n && (n = function (e) { return !0; }), new v(e, t, n); } function c() { return new d; } function f() { return new h; } var m = function () { function e() { } return e.prototype.match = function (e) { throw new Error; }, e.prototype.nodeType = function () { throw new Error; }, e.prototype.doMatch = function (e) { return e ? this.nodeType() == e.kind ? this.match(e) : void 0 : null; }, e; }(); e.BasicMatcher = m; var h = function (e) { function t() { e.call(this); } return i(t, e), t.prototype.match = function (e) { return e; }, t.prototype.nodeType = function () { return a.SyntaxKind.ClassDeclaration; }, t; }(m); e.ClassDeclarationMatcher = h; var d = function (e) { function t() { e.apply(this, arguments); } return i(t, e), t.prototype.match = function (e) { return e; }, t.prototype.nodeType = function () { return a.SyntaxKind.PropertyDeclaration; }, t; }(m); e.FieldMatcher = d; var y = function (e) { function t(t, n, r) { e.call(this), this.left = t, this.right = n, this.tr = r; } return i(t, e), t.prototype.match = function (e) { return e.operatorToken.kind == a.SyntaxKind.EqualsToken && this.left.doMatch(e.left) && this.right.doMatch(e.right) ? this.tr(e) : null; }, t.prototype.nodeType = function () { return a.SyntaxKind.BinaryExpression; }, t; }(m); e.AssignmentExpressionMatcher = y; var v = function (e) { function t(t, n, r) { e.call(this), this.left = t, this.right = n, this.tr = r; } return i(t, e), t.prototype.match = function (e) { return this.left.doMatch(e.name) && this.right.doMatch(e.initializer) ? this.tr(e) : void 0; }, t.prototype.nodeType = function () { return a.SyntaxKind.VariableDeclaration; }, t; }(m); e.VariableDeclarationMatcher = v; var g = function (e) { function t(t, n) { e.call(this), this.expression = t, this.tr = n; } return i(t, e), t.prototype.match = function (e) { var t = this.expression.doMatch(e.expression); if (t) {
                var n = this.tr(e.expression);
                return 1 == n ? t : n;
            } return null; }, t.prototype.nodeType = function () { return a.SyntaxKind.ExpressionStatement; }, t; }(m), A = function (e) { function t(t) { e.call(this), this.val = t; } return i(t, e), t.prototype.match = function (e) { return e.text == this.val ? !0 : null; }, t.prototype.nodeType = function () { return a.SyntaxKind.Identifier; }, t; }(m), T = function () { function e() { } return e.prototype.doMatch = function (e) { return !0; }, e.prototype.nodeType = function () { return null; }, e; }(), E = function (e) { function t(t, n) { e.call(this), this.calleeMatcher = t, this.tr = n; } return i(t, e), t.prototype.match = function (e) { return this.calleeMatcher.doMatch(e.expression) ? this.tr(e) : null; }, t.prototype.nodeType = function () { return a.SyntaxKind.CallExpression; }, t; }(m); e.SKIP = {}, e.visit = t; var S = function () { function e(e, t) { this._base = t, this.arguments = null, this.name = e; } return e; }(); e.PathNode = S; var N = function () { function e(e, t) { this._baseNode = t, this.path = [], this.base = e; } return e.prototype.start = function () { return this._baseNode.pos; }, e.prototype.startLocation = function () { return this._baseNode.getSourceFile().getLineAndCharacterOfPosition(this.start()); }, e.prototype.endLocation = function () { return this._baseNode.getSourceFile().getLineAndCharacterOfPosition(this.end()); }, e.prototype.end = function () { var e = this.path[this.path.length - 1]._callExpression; return e ? e.end : this.start(); }, e.prototype.toString = function () { return this.path.map(function (e) { return e.name; }).join("."); }, e; }(); e.CallPath = N; var _ = function (e) { function t(t, n, r) { e.call(this), this.objectMatcher = t, this.propertyMatcher = n, this.tr = r; } return i(t, e), t.prototype.match = function (e) { return this.objectMatcher.doMatch(e.expression) && this.propertyMatcher.doMatch(e.name) ? this.tr(e) : null; }, t.prototype.nodeType = function () { return a.SyntaxKind.PropertyAccessExpression; }, t; }(m); e.memberFromExp = n; var b = function () { function e(e) { this.rootMatcher = e; } return e.prototype.doMatch = function (e) { if (e.kind == a.SyntaxKind.CallExpression) {
                var t = e, n = this.doMatch(t.expression);
                if (n)
                    return n.path.length > 0 && null == n.path[n.path.length - 1].arguments ? (n.path[n.path.length - 1].arguments = t.arguments, n.path[n.path.length - 1]._callExpression = t, n) : null;
            }
            else if (e.kind == a.SyntaxKind.PropertyAccessExpression) {
                var r = e, i = this.doMatch(r.expression);
                if (i)
                    return r.name.kind == a.SyntaxKind.Identifier ? (i.path.push(new S(r.name.text, r.name)), i) : null;
            }
            else if (e.kind == a.SyntaxKind.Identifier) {
                var o = e;
                if (this.rootMatcher.doMatch(o))
                    return new N(o.text, o);
            } return null; }, e.prototype.nodeType = function () { return null; }, e; }(); e.CallBaseMatcher = b, e.ident = r, e.anyNode = o, e.call = s, e.exprStmt = u, e.assign = l, e.varDecl = p, e.field = c, e.classDeclaration = f; }(r = t.Matching || (t.Matching = {}));
        }, function (e, t, n) {
            "use strict";
            function r(e, t) { return s.resolve(e, t); }
            function i(e) { return u.readFileSync(e).toString(); }
            function a(e) { return s.dirname(e); }
            function o(e) { return u.existsSync(e); }
            var s = n(15), u = n(196);
            t.resolve = r, t.readFileSync = i, t.dirname = a, t.existsSync = o;
        }, function (e, t, n) { if ("undefined" == typeof __WEBPACK_EXTERNAL_MODULE_161__) {
            var r = new Error('Cannot find module "RAML.XmlValidation"');
            throw r.code = "MODULE_NOT_FOUND", r;
        } e.exports = __WEBPACK_EXTERNAL_MODULE_161__; }, function (e, t, n) { if ("undefined" == typeof __WEBPACK_EXTERNAL_MODULE_162__) {
            var r = new Error('Cannot find module "RAML.JsonValidation"');
            throw r.code = "MODULE_NOT_FOUND", r;
        } e.exports = __WEBPACK_EXTERNAL_MODULE_162__; }, function (e, t, n) {
            (function (t, r) {
                "use strict";
                function i(e) { return k.from(e); }
                function a(e) { return k.isBuffer(e) || e instanceof F; }
                function o(e, t, n) { return "function" == typeof e.prependListener ? e.prependListener(t, n) : void (e._events && e._events[t] ? D(e._events[t]) ? e._events[t].unshift(n) : e._events[t] = [n, e._events[t]] : e.on(t, n)); }
                function s(e, t) { O = O || n(165), e = e || {}, this.objectMode = !!e.objectMode, t instanceof O && (this.objectMode = this.objectMode || !!e.readableObjectMode); var r = e.highWaterMark, i = this.objectMode ? 16 : 16384; this.highWaterMark = r || 0 === r ? r : i, this.highWaterMark = Math.floor(this.highWaterMark), this.buffer = new W, this.length = 0, this.pipes = null, this.pipesCount = 0, this.flowing = null, this.ended = !1, this.endEmitted = !1, this.reading = !1, this.sync = !0, this.needReadable = !1, this.emittedReadable = !1, this.readableListening = !1, this.resumeScheduled = !1, this.destroyed = !1, this.defaultEncoding = e.defaultEncoding || "utf8", this.awaitDrain = 0, this.readingMore = !1, this.decoder = null, this.encoding = null, e.encoding && (j || (j = n(221).StringDecoder), this.decoder = new j(e.encoding), this.encoding = e.encoding); }
                function u(e) { return O = O || n(165), this instanceof u ? (this._readableState = new s(e, this), this.readable = !0, e && ("function" == typeof e.read && (this._read = e.read), "function" == typeof e.destroy && (this._destroy = e.destroy)), void x.call(this)) : new u(e); }
                function l(e, t, n, r, a) { var o = e._readableState; if (null === t)
                    o.reading = !1, d(e, o);
                else {
                    var s;
                    a || (s = c(o, t)), s ? e.emit("error", s) : o.objectMode || t && t.length > 0 ? ("string" == typeof t || o.objectMode || Object.getPrototypeOf(t) === k.prototype || (t = i(t)), r ? o.endEmitted ? e.emit("error", new Error("stream.unshift() after end event")) : p(e, o, t, !0) : o.ended ? e.emit("error", new Error("stream.push() after EOF")) : (o.reading = !1, o.decoder && !n ? (t = o.decoder.write(t), o.objectMode || 0 !== t.length ? p(e, o, t, !1) : g(e, o)) : p(e, o, t, !1))) : r || (o.reading = !1);
                } return f(o); }
                function p(e, t, n, r) { t.flowing && 0 === t.length && !t.sync ? (e.emit("data", n), e.read(0)) : (t.length += t.objectMode ? 1 : n.length, r ? t.buffer.unshift(n) : t.buffer.push(n), t.needReadable && y(e)), g(e, t); }
                function c(e, t) { var n; return a(t) || "string" == typeof t || void 0 === t || e.objectMode || (n = new TypeError("Invalid non-string/buffer chunk")), n; }
                function f(e) { return !e.ended && (e.needReadable || e.length < e.highWaterMark || 0 === e.length); }
                function m(e) { return e >= Y ? e = Y : (e--, e |= e >>> 1, e |= e >>> 2, e |= e >>> 4, e |= e >>> 8, e |= e >>> 16, e++), e; }
                function h(e, t) { return 0 >= e || 0 === t.length && t.ended ? 0 : t.objectMode ? 1 : e !== e ? t.flowing && t.length ? t.buffer.head.data.length : t.length : (e > t.highWaterMark && (t.highWaterMark = m(e)), e <= t.length ? e : t.ended ? t.length : (t.needReadable = !0, 0)); }
                function d(e, t) { if (!t.ended) {
                    if (t.decoder) {
                        var n = t.decoder.end();
                        n && n.length && (t.buffer.push(n), t.length += t.objectMode ? 1 : n.length);
                    }
                    t.ended = !0, y(e);
                } }
                function y(e) { var t = e._readableState; t.needReadable = !1, t.emittedReadable || (V("emitReadable", t.flowing), t.emittedReadable = !0, t.sync ? P(v, e) : v(e)); }
                function v(e) { V("emit readable"), e.emit("readable"), _(e); }
                function g(e, t) { t.readingMore || (t.readingMore = !0, P(A, e, t)); }
                function A(e, t) { for (var n = t.length; !t.reading && !t.flowing && !t.ended && t.length < t.highWaterMark && (V("maybeReadMore read 0"), e.read(0), n !== t.length);)
                    n = t.length; t.readingMore = !1; }
                function T(e) { return function () { var t = e._readableState; V("pipeOnDrain", t.awaitDrain), t.awaitDrain && t.awaitDrain--, 0 === t.awaitDrain && U(e, "data") && (t.flowing = !0, _(e)); }; }
                function E(e) { V("readable nexttick read 0"), e.read(0); }
                function S(e, t) { t.resumeScheduled || (t.resumeScheduled = !0, P(N, e, t)); }
                function N(e, t) { t.reading || (V("resume read 0"), e.read(0)), t.resumeScheduled = !1, t.awaitDrain = 0, e.emit("resume"), _(e), t.flowing && !t.reading && e.read(0); }
                function _(e) { var t = e._readableState; for (V("flow", t.flowing); t.flowing && null !== e.read();)
                    ; }
                function b(e, t) { if (0 === t.length)
                    return null; var n; return t.objectMode ? n = t.buffer.shift() : !e || e >= t.length ? (n = t.decoder ? t.buffer.join("") : 1 === t.buffer.length ? t.buffer.head.data : t.buffer.concat(t.length), t.buffer.clear()) : n = I(e, t.buffer, t.decoder), n; }
                function I(e, t, n) { var r; return e < t.head.data.length ? (r = t.head.data.slice(0, e), t.head.data = t.head.data.slice(e)) : r = e === t.head.data.length ? t.shift() : n ? R(e, t) : M(e, t), r; }
                function R(e, t) { var n = t.head, r = 1, i = n.data; for (e -= i.length; n = n.next;) {
                    var a = n.data, o = e > a.length ? a.length : e;
                    if (i += o === a.length ? a : a.slice(0, e), e -= o, 0 === e) {
                        o === a.length ? (++r, n.next ? t.head = n.next : t.head = t.tail = null) : (t.head = n, n.data = a.slice(o));
                        break;
                    }
                    ++r;
                } return t.length -= r, i; }
                function M(e, t) { var n = k.allocUnsafe(e), r = t.head, i = 1; for (r.data.copy(n), e -= r.data.length; r = r.next;) {
                    var a = r.data, o = e > a.length ? a.length : e;
                    if (a.copy(n, n.length - e, 0, o), e -= o, 0 === e) {
                        o === a.length ? (++i, r.next ? t.head = r.next : t.head = t.tail = null) : (t.head = r, r.data = a.slice(o));
                        break;
                    }
                    ++i;
                } return t.length -= i, n; }
                function w(e) { var t = e._readableState; if (t.length > 0)
                    throw new Error('"endReadable()" called on non-empty stream'); t.endEmitted || (t.ended = !0, P(C, t, e)); }
                function C(e, t) { e.endEmitted || 0 !== e.length || (e.endEmitted = !0, t.readable = !1, t.emit("end")); }
                function L(e, t) { for (var n = 0, r = e.length; r > n; n++)
                    if (e[n] === t)
                        return n; return -1; }
                var P = n(208);
                e.exports = u;
                var O, D = n(209);
                u.ReadableState = s;
                var U = (n(210).EventEmitter, function (e, t) { return e.listeners(t).length; }), x = n(207), k = n(211).Buffer, F = t.Uint8Array || function () { }, B = n(220);
                B.inherits = n(115);
                var K = n(197), V = void 0;
                V = K && K.debuglog ? K.debuglog("stream") : function () { };
                var j, W = n(205), q = n(206);
                B.inherits(u, x);
                var H = ["error", "close", "destroy", "pause", "resume"];
                Object.defineProperty(u.prototype, "destroyed", { get: function () { return void 0 === this._readableState ? !1 : this._readableState.destroyed; }, set: function (e) { this._readableState && (this._readableState.destroyed = e); } }), u.prototype.destroy = q.destroy, u.prototype._undestroy = q.undestroy, u.prototype._destroy = function (e, t) { this.push(null), t(e); }, u.prototype.push = function (e, t) { var n, r = this._readableState; return r.objectMode ? n = !0 : "string" == typeof e && (t = t || r.defaultEncoding, t !== r.encoding && (e = k.from(e, t), t = ""), n = !0), l(this, e, t, !1, n); }, u.prototype.unshift = function (e) { return l(this, e, null, !0, !1); }, u.prototype.isPaused = function () { return this._readableState.flowing === !1; }, u.prototype.setEncoding = function (e) { return j || (j = n(221).StringDecoder), this._readableState.decoder = new j(e), this._readableState.encoding = e, this; };
                var Y = 8388608;
                u.prototype.read = function (e) { V("read", e), e = parseInt(e, 10); var t = this._readableState, n = e; if (0 !== e && (t.emittedReadable = !1), 0 === e && t.needReadable && (t.length >= t.highWaterMark || t.ended))
                    return V("read: emitReadable", t.length, t.ended), 0 === t.length && t.ended ? w(this) : y(this), null; if (e = h(e, t), 0 === e && t.ended)
                    return 0 === t.length && w(this), null; var r = t.needReadable; V("need readable", r), (0 === t.length || t.length - e < t.highWaterMark) && (r = !0, V("length less than watermark", r)), t.ended || t.reading ? (r = !1, V("reading or ended", r)) : r && (V("do read"), t.reading = !0, t.sync = !0, 0 === t.length && (t.needReadable = !0), this._read(t.highWaterMark), t.sync = !1, t.reading || (e = h(n, t))); var i; return i = e > 0 ? b(e, t) : null, null === i ? (t.needReadable = !0, e = 0) : t.length -= e, 0 === t.length && (t.ended || (t.needReadable = !0), n !== e && t.ended && w(this)), null !== i && this.emit("data", i), i; }, u.prototype._read = function (e) { this.emit("error", new Error("_read() is not implemented")); }, u.prototype.pipe = function (e, t) { function n(e, t) { V("onunpipe"), e === f && t && t.hasUnpiped === !1 && (t.hasUnpiped = !0, a()); } function i() { V("onend"), e.end(); } function a() { V("cleanup"), e.removeListener("close", l), e.removeListener("finish", p), e.removeListener("drain", y), e.removeListener("error", u), e.removeListener("unpipe", n), f.removeListener("end", i), f.removeListener("end", c), f.removeListener("data", s), v = !0, !m.awaitDrain || e._writableState && !e._writableState.needDrain || y(); } function s(t) { V("ondata"), g = !1; var n = e.write(t); !1 !== n || g || ((1 === m.pipesCount && m.pipes === e || m.pipesCount > 1 && -1 !== L(m.pipes, e)) && !v && (V("false write response, pause", f._readableState.awaitDrain), f._readableState.awaitDrain++, g = !0), f.pause()); } function u(t) { V("onerror", t), c(), e.removeListener("error", u), 0 === U(e, "error") && e.emit("error", t); } function l() { e.removeListener("finish", p), c(); } function p() { V("onfinish"), e.removeListener("close", l), c(); } function c() { V("unpipe"), f.unpipe(e); } var f = this, m = this._readableState; switch (m.pipesCount) {
                    case 0:
                        m.pipes = e;
                        break;
                    case 1:
                        m.pipes = [m.pipes, e];
                        break;
                    default: m.pipes.push(e);
                } m.pipesCount += 1, V("pipe count=%d opts=%j", m.pipesCount, t); var h = (!t || t.end !== !1) && e !== r.stdout && e !== r.stderr, d = h ? i : c; m.endEmitted ? P(d) : f.once("end", d), e.on("unpipe", n); var y = T(f); e.on("drain", y); var v = !1, g = !1; return f.on("data", s), o(e, "error", u), e.once("close", l), e.once("finish", p), e.emit("pipe", f), m.flowing || (V("pipe resume"), f.resume()), e; }, u.prototype.unpipe = function (e) { var t = this._readableState, n = { hasUnpiped: !1 }; if (0 === t.pipesCount)
                    return this; if (1 === t.pipesCount)
                    return e && e !== t.pipes ? this : (e || (e = t.pipes), t.pipes = null, t.pipesCount = 0, t.flowing = !1, e && e.emit("unpipe", this, n), this); if (!e) {
                    var r = t.pipes, i = t.pipesCount;
                    t.pipes = null, t.pipesCount = 0, t.flowing = !1;
                    for (var a = 0; i > a; a++)
                        r[a].emit("unpipe", this, n);
                    return this;
                } var o = L(t.pipes, e); return -1 === o ? this : (t.pipes.splice(o, 1), t.pipesCount -= 1, 1 === t.pipesCount && (t.pipes = t.pipes[0]), e.emit("unpipe", this, n), this); }, u.prototype.on = function (e, t) { var n = x.prototype.on.call(this, e, t); if ("data" === e)
                    this._readableState.flowing !== !1 && this.resume();
                else if ("readable" === e) {
                    var r = this._readableState;
                    r.endEmitted || r.readableListening || (r.readableListening = r.needReadable = !0, r.emittedReadable = !1, r.reading ? r.length && y(this) : P(E, this));
                } return n; }, u.prototype.addListener = u.prototype.on, u.prototype.resume = function () { var e = this._readableState; return e.flowing || (V("resume"), e.flowing = !0, S(this, e)), this; }, u.prototype.pause = function () { return V("call pause flowing=%j", this._readableState.flowing), !1 !== this._readableState.flowing && (V("pause"), this._readableState.flowing = !1, this.emit("pause")), this; }, u.prototype.wrap = function (e) { var t = this._readableState, n = !1, r = this; e.on("end", function () { if (V("wrapped end"), t.decoder && !t.ended) {
                    var e = t.decoder.end();
                    e && e.length && r.push(e);
                } r.push(null); }), e.on("data", function (i) { if (V("wrapped data"), t.decoder && (i = t.decoder.write(i)), (!t.objectMode || null !== i && void 0 !== i) && (t.objectMode || i && i.length)) {
                    var a = r.push(i);
                    a || (n = !0, e.pause());
                } }); for (var i in e)
                    void 0 === this[i] && "function" == typeof e[i] && (this[i] = function (t) { return function () { return e[t].apply(e, arguments); }; }(i)); for (var a = 0; a < H.length; a++)
                    e.on(H[a], r.emit.bind(r, H[a])); return r._read = function (t) { V("wrapped _read", t), n && (n = !1, e.resume()); }, r; }, u._fromList = b;
            }).call(t, function () { return this; }(), n(64));
        }, function (e, t, n) { (function (t, r) {
            "use strict";
            function i(e) { var t = this; this.next = null, this.entry = null, this.finish = function () { I(t, e); }; }
            function a(e) { return O.from(e); }
            function o(e) { return O.isBuffer(e) || e instanceof D; }
            function s() { }
            function u(e, t) { M = M || n(165), e = e || {}, this.objectMode = !!e.objectMode, t instanceof M && (this.objectMode = this.objectMode || !!e.writableObjectMode); var r = e.highWaterMark, a = this.objectMode ? 16 : 16384; this.highWaterMark = r || 0 === r ? r : a, this.highWaterMark = Math.floor(this.highWaterMark), this.finalCalled = !1, this.needDrain = !1, this.ending = !1, this.ended = !1, this.finished = !1, this.destroyed = !1; var o = e.decodeStrings === !1; this.decodeStrings = !o, this.defaultEncoding = e.defaultEncoding || "utf8", this.length = 0, this.writing = !1, this.corked = 0, this.sync = !0, this.bufferProcessing = !1, this.onwrite = function (e) { v(t, e); }, this.writecb = null, this.writelen = 0, this.bufferedRequest = null, this.lastBufferedRequest = null, this.pendingcb = 0, this.prefinished = !1, this.errorEmitted = !1, this.bufferedRequestCount = 0, this.corkedRequestsFree = new i(this); }
            function l(e) { return M = M || n(165), x.call(l, this) || this instanceof M ? (this._writableState = new u(e, this), this.writable = !0, e && ("function" == typeof e.write && (this._write = e.write), "function" == typeof e.writev && (this._writev = e.writev), "function" == typeof e.destroy && (this._destroy = e.destroy), "function" == typeof e["final"] && (this._final = e["final"])), void P.call(this)) : new l(e); }
            function p(e, t) { var n = new Error("write after end"); e.emit("error", n), R(t, n); }
            function c(e, t, n, r) { var i = !0, a = !1; return null === n ? a = new TypeError("May not write null values to stream") : "string" == typeof n || void 0 === n || t.objectMode || (a = new TypeError("Invalid non-string/buffer chunk")), a && (e.emit("error", a), R(r, a), i = !1), i; }
            function f(e, t, n) { return e.objectMode || e.decodeStrings === !1 || "string" != typeof t || (t = O.from(t, n)), t; }
            function m(e, t, n, r, i, a) { if (!n) {
                var o = f(t, r, i);
                r !== o && (n = !0, i = "buffer", r = o);
            } var s = t.objectMode ? 1 : r.length; t.length += s; var u = t.length < t.highWaterMark; if (u || (t.needDrain = !0), t.writing || t.corked) {
                var l = t.lastBufferedRequest;
                t.lastBufferedRequest = { chunk: r, encoding: i, isBuf: n, callback: a, next: null }, l ? l.next = t.lastBufferedRequest : t.bufferedRequest = t.lastBufferedRequest, t.bufferedRequestCount += 1;
            }
            else
                h(e, t, !1, s, r, i, a); return u; }
            function h(e, t, n, r, i, a, o) { t.writelen = r, t.writecb = o, t.writing = !0, t.sync = !0, n ? e._writev(i, t.onwrite) : e._write(i, a, t.onwrite), t.sync = !1; }
            function d(e, t, n, r, i) { --t.pendingcb, n ? (R(i, r), R(_, e, t), e._writableState.errorEmitted = !0, e.emit("error", r)) : (i(r), e._writableState.errorEmitted = !0, e.emit("error", r), _(e, t)); }
            function y(e) { e.writing = !1, e.writecb = null, e.length -= e.writelen, e.writelen = 0; }
            function v(e, t) { var n = e._writableState, r = n.sync, i = n.writecb; if (y(n), t)
                d(e, n, r, t, i);
            else {
                var a = E(n);
                a || n.corked || n.bufferProcessing || !n.bufferedRequest || T(e, n), r ? w(g, e, n, a, i) : g(e, n, a, i);
            } }
            function g(e, t, n, r) { n || A(e, t), t.pendingcb--, r(), _(e, t); }
            function A(e, t) { 0 === t.length && t.needDrain && (t.needDrain = !1, e.emit("drain")); }
            function T(e, t) { t.bufferProcessing = !0; var n = t.bufferedRequest; if (e._writev && n && n.next) {
                var r = t.bufferedRequestCount, a = new Array(r), o = t.corkedRequestsFree;
                o.entry = n;
                for (var s = 0, u = !0; n;)
                    a[s] = n, n.isBuf || (u = !1), n = n.next, s += 1;
                a.allBuffers = u, h(e, t, !0, t.length, a, "", o.finish), t.pendingcb++, t.lastBufferedRequest = null, o.next ? (t.corkedRequestsFree = o.next, o.next = null) : t.corkedRequestsFree = new i(t);
            }
            else {
                for (; n;) {
                    var l = n.chunk, p = n.encoding, c = n.callback, f = t.objectMode ? 1 : l.length;
                    if (h(e, t, !1, f, l, p, c), n = n.next, t.writing)
                        break;
                }
                null === n && (t.lastBufferedRequest = null);
            } t.bufferedRequestCount = 0, t.bufferedRequest = n, t.bufferProcessing = !1; }
            function E(e) { return e.ending && 0 === e.length && null === e.bufferedRequest && !e.finished && !e.writing; }
            function S(e, t) { e._final(function (n) { t.pendingcb--, n && e.emit("error", n), t.prefinished = !0, e.emit("prefinish"), _(e, t); }); }
            function N(e, t) { t.prefinished || t.finalCalled || ("function" == typeof e._final ? (t.pendingcb++, t.finalCalled = !0, R(S, e, t)) : (t.prefinished = !0, e.emit("prefinish"))); }
            function _(e, t) { var n = E(t); return n && (N(e, t), 0 === t.pendingcb && (t.finished = !0, e.emit("finish"))), n; }
            function b(e, t, n) { t.ending = !0, _(e, t), n && (t.finished ? R(n) : e.once("finish", n)), t.ended = !0, e.writable = !1; }
            function I(e, t, n) { var r = e.entry; for (e.entry = null; r;) {
                var i = r.callback;
                t.pendingcb--, i(n), r = r.next;
            } t.corkedRequestsFree ? t.corkedRequestsFree.next = e : t.corkedRequestsFree = e; }
            var R = n(208);
            e.exports = l;
            var M, w = !t.browser && ["v0.10", "v0.9."].indexOf(t.version.slice(0, 5)) > -1 ? setImmediate : R;
            l.WritableState = u;
            var C = n(220);
            C.inherits = n(115);
            var L = { deprecate: n(212) }, P = n(207), O = n(211).Buffer, D = r.Uint8Array || function () { }, U = n(206);
            C.inherits(l, P), u.prototype.getBuffer = function () { for (var e = this.bufferedRequest, t = []; e;)
                t.push(e), e = e.next; return t; }, function () { try {
                Object.defineProperty(u.prototype, "buffer", { get: L.deprecate(function () { return this.getBuffer(); }, "_writableState.buffer is deprecated. Use _writableState.getBuffer instead.", "DEP0003") });
            }
            catch (e) { } }();
            var x;
            "function" == typeof Symbol && Symbol.hasInstance && "function" == typeof Function.prototype[Symbol.hasInstance] ? (x = Function.prototype[Symbol.hasInstance], Object.defineProperty(l, Symbol.hasInstance, { value: function (e) { return x.call(this, e) ? !0 : e && e._writableState instanceof u; } })) : x = function (e) { return e instanceof this; }, l.prototype.pipe = function () { this.emit("error", new Error("Cannot pipe, not readable")); }, l.prototype.write = function (e, t, n) { var r = this._writableState, i = !1, u = o(e) && !r.objectMode; return u && !O.isBuffer(e) && (e = a(e)), "function" == typeof t && (n = t, t = null), u ? t = "buffer" : t || (t = r.defaultEncoding), "function" != typeof n && (n = s), r.ended ? p(this, n) : (u || c(this, r, e, n)) && (r.pendingcb++, i = m(this, r, u, e, t, n)), i; }, l.prototype.cork = function () { var e = this._writableState; e.corked++; }, l.prototype.uncork = function () { var e = this._writableState; e.corked && (e.corked--, e.writing || e.corked || e.finished || e.bufferProcessing || !e.bufferedRequest || T(this, e)); }, l.prototype.setDefaultEncoding = function (e) { if ("string" == typeof e && (e = e.toLowerCase()), !(["hex", "utf8", "utf-8", "ascii", "binary", "base64", "ucs2", "ucs-2", "utf16le", "utf-16le", "raw"].indexOf((e + "").toLowerCase()) > -1))
                throw new TypeError("Unknown encoding: " + e); return this._writableState.defaultEncoding = e, this; }, l.prototype._write = function (e, t, n) { n(new Error("_write() is not implemented")); }, l.prototype._writev = null, l.prototype.end = function (e, t, n) { var r = this._writableState; "function" == typeof e ? (n = e, e = null, t = null) : "function" == typeof t && (n = t, t = null), null !== e && void 0 !== e && this.write(e, t), r.corked && (r.corked = 1, this.uncork()), r.ending || r.finished || b(this, r, n); }, Object.defineProperty(l.prototype, "destroyed", { get: function () { return void 0 === this._writableState ? !1 : this._writableState.destroyed; }, set: function (e) { this._writableState && (this._writableState.destroyed = e); } }), l.prototype.destroy = U.destroy, l.prototype._undestroy = U.undestroy, l.prototype._destroy = function (e, t) { this.end(), t(e); };
        }).call(t, n(64), function () { return this; }()); }, function (e, t, n) {
            "use strict";
            function r(e) { return this instanceof r ? (l.call(this, e), p.call(this, e), e && e.readable === !1 && (this.readable = !1), e && e.writable === !1 && (this.writable = !1), this.allowHalfOpen = !0, e && e.allowHalfOpen === !1 && (this.allowHalfOpen = !1), void this.once("end", i)) : new r(e); }
            function i() { this.allowHalfOpen || this._writableState.ended || o(a, this); }
            function a(e) { e.end(); }
            var o = n(208), s = Object.keys || function (e) { var t = []; for (var n in e)
                t.push(n); return t; };
            e.exports = r;
            var u = n(220);
            u.inherits = n(115);
            var l = n(163), p = n(164);
            u.inherits(r, l);
            for (var c = s(p.prototype), f = 0; f < c.length; f++) {
                var m = c[f];
                r.prototype[m] || (r.prototype[m] = p.prototype[m]);
            }
            Object.defineProperty(r.prototype, "destroyed", { get: function () { return void 0 === this._readableState || void 0 === this._writableState ? !1 : this._readableState.destroyed && this._writableState.destroyed; }, set: function (e) { void 0 !== this._readableState && void 0 !== this._writableState && (this._readableState.destroyed = e, this._writableState.destroyed = e); } }), r.prototype._destroy = function (e, t) { this.push(null), this.end(), o(t, e); };
        }, function (e, t, n) {
            "use strict";
            function r(e) { this.afterTransform = function (t, n) { return i(e, t, n); }, this.needTransform = !1, this.transforming = !1, this.writecb = null, this.writechunk = null, this.writeencoding = null; }
            function i(e, t, n) { var r = e._transformState; r.transforming = !1; var i = r.writecb; if (!i)
                return e.emit("error", new Error("write callback called multiple times")); r.writechunk = null, r.writecb = null, null !== n && void 0 !== n && e.push(n), i(t); var a = e._readableState; a.reading = !1, (a.needReadable || a.length < a.highWaterMark) && e._read(a.highWaterMark); }
            function a(e) { if (!(this instanceof a))
                return new a(e); s.call(this, e), this._transformState = new r(this); var t = this; this._readableState.needReadable = !0, this._readableState.sync = !1, e && ("function" == typeof e.transform && (this._transform = e.transform), "function" == typeof e.flush && (this._flush = e.flush)), this.once("prefinish", function () { "function" == typeof this._flush ? this._flush(function (e, n) { o(t, e, n); }) : o(t); }); }
            function o(e, t, n) { if (t)
                return e.emit("error", t); null !== n && void 0 !== n && e.push(n); var r = e._writableState, i = e._transformState; if (r.length)
                throw new Error("Calling transform done when ws.length != 0"); if (i.transforming)
                throw new Error("Calling transform done when still transforming"); return e.push(null); }
            e.exports = a;
            var s = n(165), u = n(220);
            u.inherits = n(115), u.inherits(a, s), a.prototype.push = function (e, t) { return this._transformState.needTransform = !1, s.prototype.push.call(this, e, t); }, a.prototype._transform = function (e, t, n) { throw new Error("_transform() is not implemented"); }, a.prototype._write = function (e, t, n) { var r = this._transformState; if (r.writecb = n, r.writechunk = e, r.writeencoding = t, !r.transforming) {
                var i = this._readableState;
                (r.needTransform || i.needReadable || i.length < i.highWaterMark) && this._read(i.highWaterMark);
            } }, a.prototype._read = function (e) { var t = this._transformState; null !== t.writechunk && t.writecb && !t.transforming ? (t.transforming = !0, this._transform(t.writechunk, t.writeencoding, t.afterTransform)) : t.needTransform = !0; }, a.prototype._destroy = function (e, t) { var n = this; s.prototype._destroy.call(this, e, function (e) { t(e), n.emit("close"); }); };
        }, function (e, t, n) {
            "use strict";
            function r(e) { return this instanceof r ? void i.call(this, e) : new r(e); }
            e.exports = r;
            var i = n(166), a = n(220);
            a.inherits = n(115), a.inherits(r, i), r.prototype._transform = function (e, t, n) { n(null, e); };
        }, function (e, t, n) { t.read = function (e, t, n, r, i) { var a, o, s = 8 * i - r - 1, u = (1 << s) - 1, l = u >> 1, p = -7, c = n ? i - 1 : 0, f = n ? -1 : 1, m = e[t + c]; for (c += f, a = m & (1 << -p) - 1, m >>= -p, p += s; p > 0; a = 256 * a + e[t + c], c += f, p -= 8)
            ; for (o = a & (1 << -p) - 1, a >>= -p, p += r; p > 0; o = 256 * o + e[t + c], c += f, p -= 8)
            ; if (0 === a)
            a = 1 - l;
        else {
            if (a === u)
                return o ? NaN : (m ? -1 : 1) * (1 / 0);
            o += Math.pow(2, r), a -= l;
        } return (m ? -1 : 1) * o * Math.pow(2, a - r); }, t.write = function (e, t, n, r, i, a) { var o, s, u, l = 8 * a - i - 1, p = (1 << l) - 1, c = p >> 1, f = 23 === i ? Math.pow(2, -24) - Math.pow(2, -77) : 0, m = r ? 0 : a - 1, h = r ? 1 : -1, d = 0 > t || 0 === t && 0 > 1 / t ? 1 : 0; for (t = Math.abs(t), isNaN(t) || t === 1 / 0 ? (s = isNaN(t) ? 1 : 0, o = p) : (o = Math.floor(Math.log(t) / Math.LN2), t * (u = Math.pow(2, -o)) < 1 && (o--, u *= 2), t += o + c >= 1 ? f / u : f * Math.pow(2, 1 - c), t * u >= 2 && (o++, u /= 2), o + c >= p ? (s = 0, o = p) : o + c >= 1 ? (s = (t * u - 1) * Math.pow(2, i), o += c) : (s = t * Math.pow(2, c - 1) * Math.pow(2, i), o = 0)); i >= 8; e[n + m] = 255 & s, m += h, s /= 256, i -= 8)
            ; for (o = o << i | s, l += i; l > 0; e[n + m] = 255 & o, m += h, o /= 256, l -= 8)
            ; e[n + m - h] |= 128 * d; }; }, function (e, t, n) {
            "use strict";
            var r = n(198), i = n(199), a = n(200);
            e.exports = { formats: a, parse: i, stringify: r };
        }, function (e, t, n) {
            "use strict";
            function r(e, t, n) { var i = []; return e.include.forEach(function (e) { n = r(e, t, n); }), e[t].forEach(function (e) { n.forEach(function (t, n) { t.tag === e.tag && i.push(n); }), n.push(e); }), n.filter(function (e, t) { return -1 === i.indexOf(t); }); }
            function i() { function e(e) { r[e.tag] = e; } var t, n, r = {}; for (t = 0, n = arguments.length; n > t; t += 1)
                arguments[t].forEach(e); return r; }
            Object.defineProperty(t, "__esModule", { value: !0 });
            var a = n(135), o = n(95), s = n(202), u = function () { function e(e) { this.include = e.include || [], this.implicit = e.implicit || [], this.explicit = e.explicit || [], this.implicit.forEach(function (e) { if (e.loadKind && "scalar" !== e.loadKind)
                throw new o("There is a non-scalar type in the implicit list of a schema. Implicit resolving of such types is not supported."); }), this.compiledImplicit = r(this, "implicit", []), this.compiledExplicit = r(this, "explicit", []), this.compiledTypeMap = i(this.compiledImplicit, this.compiledExplicit); } return e.DEFAULT = null, e.create = function () { var t, n; switch (arguments.length) {
                case 1:
                    t = e.DEFAULT, n = arguments[0];
                    break;
                case 2:
                    t = arguments[0], n = arguments[1];
                    break;
                default: throw new o("Wrong number of arguments for Schema.create function");
            } if (t = a.toArray(t), n = a.toArray(n), !t.every(function (t) { return t instanceof e; }))
                throw new o("Specified list of super schemas (or a single Schema object) contains a non-Schema object."); if (!n.every(function (e) { return e instanceof s.Type; }))
                throw new o("Specified list of YAML types (or a single Type object) contains a non-Type object."); return new e({ include: t, explicit: n }); }, e; }();
            t.Schema = u;
        }, function (e, t, n) {
            "use strict";
            var r = n(170);
            e.exports = new r.Schema({ include: [n(201)] });
        }, function (e, t, n) {
            "use strict";
            var r = function () { function e(e, t) { function n() { this.constructor = e; } n.prototype = t.prototype, e.prototype = new n; } function t(e, n, r, i) { this.message = e, this.expected = n, this.found = r, this.location = i, this.name = "SyntaxError", "function" == typeof Error.captureStackTrace && Error.captureStackTrace(this, t); } function n(e) { function n(t) { var n, r, i = G[t]; if (i)
                return i; for (n = t - 1; !G[n];)
                n--; for (i = G[n], i = { line: i.line, column: i.column, seenCR: i.seenCR }; t > n;)
                r = e.charAt(n), "\n" === r ? (i.seenCR || i.line++, i.column = 1, i.seenCR = !1) : "\r" === r || "\u2028" === r || "\u2029" === r ? (i.line++, i.column = 1, i.seenCR = !0) : (i.column++, i.seenCR = !1), n++; return G[t] = i, i; } function r(e, t) { var r = n(e), i = n(t); return { start: { offset: e, line: r.line, column: r.column }, end: { offset: t, line: i.line, column: i.column } }; } function i(e) { X > H || (H > X && (X = H, z = []), z.push(e)); } function a(e, n, r, i) { function a(e) { var t = 1; for (e.sort(function (e, t) { return e.description < t.description ? -1 : e.description > t.description ? 1 : 0; }); t < e.length;)
                e[t - 1] === e[t] ? e.splice(t, 1) : t++; } function o(e, t) { function n(e) { function t(e) { return e.charCodeAt(0).toString(16).toUpperCase(); } return e.replace(/\\/g, "\\\\").replace(/"/g, '\\"').replace(/\x08/g, "\\b").replace(/\t/g, "\\t").replace(/\n/g, "\\n").replace(/\f/g, "\\f").replace(/\r/g, "\\r").replace(/[\x00-\x07\x0B\x0E\x0F]/g, function (e) { return "\\x0" + t(e); }).replace(/[\x10-\x1F\x80-\xFF]/g, function (e) { return "\\x" + t(e); }).replace(/[\u0100-\u0FFF]/g, function (e) { return "\\u0" + t(e); }).replace(/[\u1000-\uFFFF]/g, function (e) { return "\\u" + t(e); }); } var r, i, a, o = new Array(e.length); for (a = 0; a < e.length; a++)
                o[a] = e[a].description; return r = e.length > 1 ? o.slice(0, -1).join(", ") + " or " + o[e.length - 1] : o[0], i = t ? '"' + n(t) + '"' : "end of input", "Expected " + r + " but " + i + " found."; } return null !== n && a(n), new t(null !== e ? e : o(n, r), n, r, i); } function o() { var t, n, r, a, u, p, c, f; return t = H, n = l(), n !== m ? (r = s(), r !== m ? (a = H, u = l(), u !== m ? (124 === e.charCodeAt(H) ? (p = y, H++) : (p = m, 0 === $ && i(v)), p !== m ? (c = l(), c !== m ? (f = o(), f !== m ? (u = [u, p, c, f], a = u) : (H = a, a = m)) : (H = a, a = m)) : (H = a, a = m)) : (H = a, a = m), a === m && (a = null), a !== m ? (Y = t, n = g(r, a), t = n) : (H = t, t = m)) : (H = t, t = m)) : (H = t, t = m), t; } function s() { var t, n, r, a, s, p, c, f, h, d; if (t = H, 40 === e.charCodeAt(H) ? (n = A, H++) : (n = m, 0 === $ && i(T)), n !== m)
                if (r = l(), r !== m)
                    if (a = o(), a !== m)
                        if (s = l(), s !== m)
                            if (41 === e.charCodeAt(H) ? (p = E, H++) : (p = m, 0 === $ && i(S)), p !== m) {
                                for (c = [], f = H, h = l(), h !== m ? (e.substr(H, 2) === N ? (d = N, H += 2) : (d = m, 0 === $ && i(_)), d !== m ? (h = [h, d], f = h) : (H = f, f = m)) : (H = f, f = m); f !== m;)
                                    c.push(f), f = H, h = l(), h !== m ? (e.substr(H, 2) === N ? (d = N, H += 2) : (d = m, 0 === $ && i(_)), d !== m ? (h = [h, d], f = h) : (H = f, f = m)) : (H = f, f = m);
                                c !== m ? (Y = t, n = b(a, c), t = n) : (H = t, t = m);
                            }
                            else
                                H = t, t = m;
                        else
                            H = t, t = m;
                    else
                        H = t, t = m;
                else
                    H = t, t = m;
            else
                H = t, t = m; return t === m && (t = u()), t; } function u() { var t, n, r, a, o, s; if ($++, t = H, n = [], r = p(), r !== m)
                for (; r !== m;)
                    n.push(r), r = p();
            else
                n = m; if (n !== m) {
                for (r = [], a = H, o = l(), o !== m ? (e.substr(H, 2) === N ? (s = N, H += 2) : (s = m, 0 === $ && i(_)), s !== m ? (o = [o, s], a = o) : (H = a, a = m)) : (H = a, a = m); a !== m;)
                    r.push(a), a = H, o = l(), o !== m ? (e.substr(H, 2) === N ? (s = N, H += 2) : (s = m, 0 === $ && i(_)), s !== m ? (o = [o, s], a = o) : (H = a, a = m)) : (H = a, a = m);
                r !== m ? (Y = t, n = R(n, r), t = n) : (H = t, t = m);
            }
            else
                H = t, t = m; return $--, t === m && (n = m, 0 === $ && i(I)), t; } function l() { var t, n; for ($++, t = [], w.test(e.charAt(H)) ? (n = e.charAt(H), H++) : (n = m, 0 === $ && i(C)); n !== m;)
                t.push(n), w.test(e.charAt(H)) ? (n = e.charAt(H), H++) : (n = m, 0 === $ && i(C)); return $--, t === m && (n = m, 0 === $ && i(M)), t; } function p() { var t; return L.test(e.charAt(H)) ? (t = e.charAt(H), H++) : (t = m, 0 === $ && i(P)), t === m && (95 === e.charCodeAt(H) ? (t = O, H++) : (t = m, 0 === $ && i(D)), t === m && (45 === e.charCodeAt(H) ? (t = U, H++) : (t = m, 0 === $ && i(x)), t === m && (46 === e.charCodeAt(H) ? (t = k, H++) : (t = m, 0 === $ && i(F)), t === m && (B.test(e.charAt(H)) ? (t = e.charAt(H), H++) : (t = m, 0 === $ && i(K)), t === m && (V.test(e.charAt(H)) ? (t = e.charAt(H), H++) : (t = m, 0 === $ && i(j)), t === m && (63 === e.charCodeAt(H) ? (t = W, H++) : (t = m, 0 === $ && i(q)))))))), t; } var c, f = arguments.length > 1 ? arguments[1] : {}, m = {}, h = { Term: o }, d = o, y = "|", v = { type: "literal", value: "|", description: '"|"' }, g = function (e, t) { return t ? { type: "union", first: e, rest: t[3] } : e; }, A = "(", T = { type: "literal", value: "(", description: '"("' }, E = ")", S = { type: "literal", value: ")", description: '")"' }, N = "[]", _ = { type: "literal", value: "[]", description: '"[]"' }, b = function (e, t) { return { type: "parens", expr: e, arr: t.length }; }, I = { type: "other", description: "name" }, R = function (e, t) { return { type: "name", value: e.join(""), arr: t.length }; }, M = { type: "other", description: "whitespace" }, w = /^[ \t\n\r]/, C = { type: "class", value: "[ \\t\\n\\r]", description: "[ \\t\\n\\r]" }, L = /^[A-Z]/, P = { type: "class", value: "[A-Z]", description: "[A-Z]" }, O = "_", D = { type: "literal", value: "_", description: '"_"' }, U = "-", x = { type: "literal", value: "-", description: '"-"' }, k = ".", F = { type: "literal", value: ".", description: '"."' }, B = /^[a-z:#\/]/, K = { type: "class", value: "[a-z]", description: "[a-z]" }, V = /^[0-9]/, j = { type: "class", value: "[0-9]", description: "[0-9]" }, W = "?", q = { type: "literal", value: "?", description: '"?"' }, H = 0, Y = 0, G = [{ line: 1, column: 1, seenCR: !1 }], X = 0, z = [], $ = 0; if ("startRule" in f) {
                if (!(f.startRule in h))
                    throw new Error("Can't start parsing from rule \"" + f.startRule + '".');
                d = h[f.startRule];
            } if (c = d(), c !== m && H === e.length)
                return c; throw c !== m && H < e.length && i({ type: "end", description: "end of input" }), a(null, z, X < e.length ? e.charAt(X) : null, X < e.length ? r(X, X + 1) : r(X, X)); } return e(t, Error), { SyntaxError: t, parse: n }; }();
            e.exports = r;
        }, function (e, t, n) { (function () { function t(e, t) { Array.isArray(e) || (e = [e]); for (var n = !!t, r = [], i = 0; i < e.length; i++) {
            var a = e[i];
            "object" == typeof a ? (r.push(a), n = !0) : r.push({ type: a });
        } return n && r; } function n(e) { if (e.type)
            if ("string" != typeof e.type) {
                var r = t(e.type);
                r && (e.anyOf = r, delete e.type);
            }
            else
                "any" == e.type && delete e.type; if (e["extends"]) {
            var i = e["extends"];
            Array.isArray(i) || (i = [i]), e.allOf = i, delete e["extends"];
        } if (e.disallow && ("string" == typeof e.disallow ? e.not = { type: e.disallow } : e.not = { anyOf: t(e.disallow, !0) }, delete e.disallow), e.properties) {
            var a = Array.isArray(e.required) ? e.required : [];
            for (var o in e.properties) {
                var s = e.properties[o];
                s && "boolean" == typeof s.required && (s.required && a.push(o), delete s.required);
            }
            a.length && (e.required = a);
        } if (e.dependencies)
            for (var o in e.dependencies)
                "string" == typeof e.dependencies[o] && (e.dependencies[o] = [e.dependencies[o]]); "boolean" == typeof e.required && delete e.required, "undefined" != typeof e.divisibleBy && (e.multipleOf = e.divisibleBy, delete e.divisibleBy); for (var o in e)
            if ("properties" === o || "patternProperties" === o || "dependencies" === o)
                for (var u in e[o])
                    e[o][u] = n(e[o][u]);
            else if ("enum" !== o)
                if (Array.isArray(e[o]))
                    for (var l = 0; l < e[o].length; l++)
                        e[o][l] = n(e[o][l]);
                else
                    "object" == typeof e[o] && (e[o] = n(e[o])); return e; } var r = { v4: n }; return e.exports = r, r; })(); }, function (e, t, n) { var r = {}.toString; e.exports = Array.isArray || function (e) { return "[object Array]" == r.call(e); }; }, function (e, t, n) {
            "use strict";
            function r(e) { if (null === e)
                return !1; var t; return t = s.exec(e), null === t ? !1 : !0; }
            function i(e) { var t, n, r, i, a, o, u, l, p, c, f = 0, m = null; if (t = s.exec(e), null === t)
                throw new Error("Date resolve error"); if (n = +t[1], r = +t[2] - 1, i = +t[3], !t[4])
                return new Date(Date.UTC(n, r, i)); if (a = +t[4], o = +t[5], u = +t[6], t[7]) {
                for (f = t[7].slice(0, 3); f.length < 3;)
                    f += "0";
                f = +f;
            } return t[9] && (l = +t[10], p = +(t[11] || 0), m = 6e4 * (60 * l + p), "-" === t[9] && (m = -m)), c = new Date(Date.UTC(n, r, i, a, o, u, f)), m && c.setTime(c.getTime() - m), c; }
            function a(e) { return e.toISOString(); }
            var o = n(202), s = new RegExp("^([0-9][0-9][0-9][0-9])-([0-9][0-9]?)-([0-9][0-9]?)(?:(?:[Tt]|[ \\t]+)([0-9][0-9]?):([0-9][0-9]):([0-9][0-9])(?:\\.([0-9]*))?(?:[ \\t]*(Z|([-+])([0-9][0-9]?)(?::([0-9][0-9]))?))?)?$");
            e.exports = new o.Type("tag:yaml.org,2002:timestamp", { kind: "scalar", resolve: r, construct: i, instanceOf: Date, represent: a });
        }, function (e, t, n) {
            "use strict";
            function r(e) { return "<<" === e || null === e; }
            var i = n(202);
            e.exports = new i.Type("tag:yaml.org,2002:merge", { kind: "scalar", resolve: r });
        }, function (e, t, n) {
            "use strict";
            function r(e) { if (null === e)
                return !1; var t, n, r = 0, i = e.length, a = l; for (n = 0; i > n; n++)
                if (t = a.indexOf(e.charAt(n)), !(t > 64)) {
                    if (0 > t)
                        return !1;
                    r += 6;
                } return r % 8 === 0; }
            function i(e) { var t, n, r = e.replace(/[\r\n=]/g, ""), i = r.length, a = l, o = 0, u = []; for (t = 0; i > t; t++)
                t % 4 === 0 && t && (u.push(o >> 16 & 255), u.push(o >> 8 & 255), u.push(255 & o)), o = o << 6 | a.indexOf(r.charAt(t)); return n = i % 4 * 6, 0 === n ? (u.push(o >> 16 & 255), u.push(o >> 8 & 255), u.push(255 & o)) : 18 === n ? (u.push(o >> 10 & 255), u.push(o >> 2 & 255)) : 12 === n && u.push(o >> 4 & 255), s ? new s(u) : u; }
            function a(e) { var t, n, r = "", i = 0, a = e.length, o = l; for (t = 0; a > t; t++)
                t % 3 === 0 && t && (r += o[i >> 18 & 63], r += o[i >> 12 & 63], r += o[i >> 6 & 63], r += o[63 & i]), i = (i << 8) + e[t]; return n = a % 3, 0 === n ? (r += o[i >> 18 & 63], r += o[i >> 12 & 63], r += o[i >> 6 & 63], r += o[63 & i]) : 2 === n ? (r += o[i >> 10 & 63], r += o[i >> 4 & 63], r += o[i << 2 & 63], r += o[64]) : 1 === n && (r += o[i >> 2 & 63], r += o[i << 4 & 63], r += o[64], r += o[64]), r; }
            function o(e) { return s && s.isBuffer(e); }
            var s = n(113).Buffer, u = n(202), l = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\n\r";
            e.exports = new u.Type("tag:yaml.org,2002:binary", { kind: "scalar", resolve: r, construct: i, predicate: o, represent: a });
        }, function (e, t, n) {
            "use strict";
            function r(e) { if (null === e)
                return !0; var t, n, r, i, a, u = [], l = e; for (t = 0, n = l.length; n > t; t += 1) {
                if (r = l[t], a = !1, "[object Object]" !== s.call(r))
                    return !1;
                for (i in r)
                    if (o.call(r, i)) {
                        if (a)
                            return !1;
                        a = !0;
                    }
                if (!a)
                    return !1;
                if (-1 !== u.indexOf(i))
                    return !1;
                u.push(i);
            } return !0; }
            function i(e) { return null !== e ? e : []; }
            var a = n(202), o = Object.prototype.hasOwnProperty, s = Object.prototype.toString;
            e.exports = new a.Type("tag:yaml.org,2002:omap", { kind: "sequence", resolve: r, construct: i });
        }, function (e, t, n) {
            "use strict";
            function r(e) { if (null === e)
                return !0; if (e.kind != o.Kind.SEQ)
                return !1; var t, n, r, i = e.items; for (t = 0, n = i.length; n > t; t += 1) {
                if (r = i[t], "[object Object]" !== s.call(r))
                    return !1;
                if (!Array.isArray(r.mappings))
                    return !1;
                if (1 !== r.mappings.length)
                    return !1;
            } return !0; }
            function i(e) { if (null === e || !Array.isArray(e.items))
                return []; var t, n, r, i = e.items; for (r = o.newItems(), r.parent = e.parent, r.startPosition = e.startPosition, r.endPosition = e.endPosition, t = 0, n = i.length; n > t; t += 1) {
                var a = i[t], s = a.mappings[0], u = o.newItems();
                u.parent = r, u.startPosition = s.key.startPosition, u.endPosition = s.value.startPosition, s.key.parent = u, s.value.parent = u, u.items = [s.key, s.value], r.items.push(u);
            } return r; }
            var a = n(202), o = n(96), s = Object.prototype.toString;
            e.exports = new a.Type("tag:yaml.org,2002:pairs", { kind: "sequence", resolve: r, construct: i });
        }, function (e, t, n) {
            "use strict";
            function r(e) { return null === e ? !0 : e.kind != o.Kind.MAP ? !1 : !0; }
            function i(e) { return null !== e ? e : {}; }
            var a = n(202), o = n(96);
            Object.prototype.hasOwnProperty;
            e.exports = new a.Type("tag:yaml.org,2002:set", { kind: "mapping", resolve: r, construct: i });
        }, function (e, t, n) {
            "use strict";
            function r() { return !0; }
            function i() { return void 0; }
            function a() { return ""; }
            function o(e) { return "undefined" == typeof e; }
            var s = n(202);
            e.exports = new s.Type("tag:yaml.org,2002:js/undefined", { kind: "scalar", resolve: r, construct: i, predicate: o, represent: a });
        }, function (e, t, n) {
            "use strict";
            function r(e) { if (null === e)
                return !1; if (0 === e.length)
                return !1; var t = e, n = /\/([gim]*)$/.exec(e), r = ""; if ("/" === t[0]) {
                if (n && (r = n[1]), r.length > 3)
                    return !1;
                if ("/" !== t[t.length - r.length - 1])
                    return !1;
                t = t.slice(1, t.length - r.length - 1);
            } try {
                new RegExp(t, r);
                return !0;
            }
            catch (i) {
                return !1;
            } }
            function i(e) { var t = e, n = /\/([gim]*)$/.exec(e), r = ""; return "/" === t[0] && (n && (r = n[1]), t = t.slice(1, t.length - r.length - 1)), new RegExp(t, r); }
            function a(e) { var t = "/" + e.source + "/"; return e.global && (t += "g"), e.multiline && (t += "m"), e.ignoreCase && (t += "i"), t; }
            function o(e) { return "[object RegExp]" === Object.prototype.toString.call(e); }
            var s = n(202);
            e.exports = new s.Type("tag:yaml.org,2002:js/regexp", { kind: "scalar", resolve: r, construct: i, predicate: o, represent: a });
        }, function (e, t, n) {
            var r, i, a;
            !function (n, o) { i = [e], r = o, a = "function" == typeof r ? r.apply(t, i) : r, !(void 0 !== a && (e.exports = a)); }(this, function (e) {
                "use strict";
                function t(e, t) { if (!(e instanceof t))
                    throw new TypeError("Cannot call a class as a function"); }
                function n(e, t) { if (!e)
                    throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); return !t || "object" != typeof t && "function" != typeof t ? e : t; }
                function r(e, t) { if ("function" != typeof t && null !== t)
                    throw new TypeError("Super expression must either be null or a function, not " + typeof t); e.prototype = Object.create(t && t.prototype, { constructor: { value: e, enumerable: !1, writable: !0, configurable: !0 } }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t); }
                function i(e, t, n) { var r = e.split(/\n|\r\n?|\f/), i = r[t - 1], a = new Array(n).join(" ") + "^"; return i + "\n" + a; }
                function a(e) { return e >= "1" && "9" >= e; }
                function o(e) { return e >= "0" && "9" >= e; }
                function s(e) { return o(e) || e >= "a" && "f" >= e || e >= "A" && "F" >= e; }
                function u(e) { return "e" === e || "E" === e; }
                function l(e, t, n, r) { var i = e.charAt(t); if ("\r" === i)
                    t++, n++, r = 1, "\n" === e.charAt(t) && t++;
                else if ("\n" === i)
                    t++, n++, r = 1;
                else {
                    if ("	" !== i && " " !== i)
                        return null;
                    t++, r++;
                } return { index: t, line: n, column: r }; }
                function p(e, t, n, r) { var i = e.charAt(t); return i in R ? { type: R[i], line: n, column: r + 1, index: t + 1, value: null } : null; }
                function c(e, t, n, r) { for (var i in M)
                    if (M.hasOwnProperty(i) && e.substr(t, i.length) === i) {
                        var a = M[i], o = a.type, s = a.value;
                        return { type: o, line: n, column: r + i.length, index: t + i.length, value: s };
                    } return null; }
                function f(e, t, n, r) { for (var i = t, a = "", o = w._START_; t < e.length;) {
                    var u = e.charAt(t);
                    switch (o) {
                        case w._START_:
                            if ('"' !== u)
                                return null;
                            o = w.START_QUOTE_OR_CHAR, t++;
                            break;
                        case w.START_QUOTE_OR_CHAR:
                            if ("\\" === u)
                                o = w.ESCAPE, a += u, t++;
                            else {
                                if ('"' === u)
                                    return t++, { type: I.STRING, line: n, column: r + t - i, index: t, value: a };
                                a += u, t++;
                            }
                            break;
                        case w.ESCAPE:
                            if (!(u in C))
                                return null;
                            if (a += u, t++, "u" === u)
                                for (var l = 0; 4 > l; l++) {
                                    var p = e.charAt(t);
                                    if (!p || !s(p))
                                        return null;
                                    a += p, t++;
                                }
                            o = w.START_QUOTE_OR_CHAR;
                    }
                } }
                function m(e, t, n, r) { var i = t, s = t, l = L._START_; e: for (; t < e.length;) {
                    var p = e.charAt(t);
                    switch (l) {
                        case L._START_:
                            if ("-" === p)
                                l = L.MINUS;
                            else if ("0" === p)
                                s = t + 1, l = L.ZERO;
                            else {
                                if (!a(p))
                                    return null;
                                s = t + 1, l = L.DIGIT;
                            }
                            break;
                        case L.MINUS:
                            if ("0" === p)
                                s = t + 1, l = L.ZERO;
                            else {
                                if (!a(p))
                                    return null;
                                s = t + 1, l = L.DIGIT;
                            }
                            break;
                        case L.ZERO:
                            if ("." === p)
                                l = L.POINT;
                            else {
                                if (!u(p))
                                    break e;
                                l = L.EXP;
                            }
                            break;
                        case L.DIGIT:
                            if (o(p))
                                s = t + 1;
                            else if ("." === p)
                                l = L.POINT;
                            else {
                                if (!u(p))
                                    break e;
                                l = L.EXP;
                            }
                            break;
                        case L.POINT:
                            if (!o(p))
                                break e;
                            s = t + 1, l = L.DIGIT_FRACTION;
                            break;
                        case L.DIGIT_FRACTION:
                            if (o(p))
                                s = t + 1;
                            else {
                                if (!u(p))
                                    break e;
                                l = L.EXP;
                            }
                            break;
                        case L.EXP:
                            if ("+" === p || "-" === p)
                                l = L.EXP_DIGIT_OR_SIGN;
                            else {
                                if (!o(p))
                                    break e;
                                s = t + 1, l = L.EXP_DIGIT_OR_SIGN;
                            }
                            break;
                        case L.EXP_DIGIT_OR_SIGN:
                            if (!o(p))
                                break e;
                            s = t + 1;
                    }
                    t++;
                } return s > 0 ? { type: I.NUMBER, line: n, column: r + s - i, index: s, value: parseFloat(e.substring(i, s)) } : null; }
                function h(e, t) {
                    for (var n = 1, r = 1, i = 0, a = []; i < e.length;) {
                        var o = [e, i, n, r], s = l.apply(void 0, o);
                        if (s)
                            i = s.index, n = s.line, r = s.column;
                        else {
                            var u = p.apply(void 0, o) || c.apply(void 0, o) || f.apply(void 0, o) || m.apply(void 0, o);
                            if (u) {
                                var h = { type: u.type, value: u.value, loc: E(n, r, i, u.line, u.column, u.index, t.source) };
                                a.push(h), i = u.index, n = u.line, r = u.column;
                            }
                            else
                                N(b.cannotTokenizeSymbol(e.charAt(i), n, r), e, n, r);
                        }
                    }
                    return a;
                }
                function d(e, t, n, r) { for (var i = void 0, a = { type: "object", children: [] }, o = O._START_; n < t.length;) {
                    var s = t[n];
                    switch (o) {
                        case O._START_:
                            if (s.type !== I.LEFT_BRACE)
                                return null;
                            i = s, o = O.OPEN_OBJECT, n++;
                            break;
                        case O.OPEN_OBJECT:
                            if (s.type === I.RIGHT_BRACE) {
                                if (r.verbose)
                                    return a.loc = E(i.loc.start.line, i.loc.start.column, i.loc.start.offset, s.loc.end.line, s.loc.end.column, s.loc.end.offset, r.source), { value: a, index: n + 1 };
                            }
                            else {
                                var u = y(e, t, n, r);
                                a.children.push(u.value), o = O.PROPERTY, n = u.index;
                            }
                            break;
                        case O.PROPERTY:
                            if (s.type === I.RIGHT_BRACE)
                                return r.verbose && (a.loc = E(i.loc.start.line, i.loc.start.column, i.loc.start.offset, s.loc.end.line, s.loc.end.column, s.loc.end.offset, r.source)), { value: a, index: n + 1 };
                            s.type === I.COMMA ? (o = O.COMMA, n++) : N(_.unexpectedToken(e.substring(s.loc.start.offset, s.loc.end.offset), s.loc.start.line, s.loc.start.column), e, s.loc.start.line, s.loc.start.column);
                            break;
                        case O.COMMA:
                            var l = y(e, t, n, r);
                            l ? (n = l.index, a.children.push(l.value), o = O.PROPERTY) : N(_.unexpectedToken(e.substring(s.loc.start.offset, s.loc.end.offset), s.loc.start.line, s.loc.start.column), e, s.loc.start.line, s.loc.start.column);
                    }
                } N(_.unexpectedEnd()); }
                function y(e, t, n, r) { for (var i = void 0, a = { type: "property", key: null, value: null }, o = O._START_; n < t.length;) {
                    var s = t[n];
                    switch (o) {
                        case D._START_:
                            if (s.type !== I.STRING)
                                return null;
                            var u = { type: "identifier", value: s.value };
                            r.verbose && (u.loc = s.loc), i = s, a.key = u, o = D.KEY, n++;
                            break;
                        case D.KEY:
                            s.type === I.COLON ? (o = D.COLON, n++) : N(_.unexpectedToken(e.substring(s.loc.start.offset, s.loc.end.offset), s.loc.start.line, s.loc.start.column), e, s.loc.start.line, s.loc.start.column);
                            break;
                        case D.COLON:
                            var l = A(e, t, n, r);
                            return a.value = l.value, r.verbose && (a.loc = E(i.loc.start.line, i.loc.start.column, i.loc.start.offset, l.value.loc.end.line, l.value.loc.end.column, l.value.loc.end.offset, r.source)), { value: a, index: l.index };
                    }
                } }
                function v(e, t, n, r) { for (var i = void 0, a = { type: "array", children: [] }, o = U._START_, s = void 0; n < t.length;)
                    switch ((s = t[n], o)) {
                        case U._START_:
                            if (s.type !== I.LEFT_BRACKET)
                                return null;
                            i = s, o = U.OPEN_ARRAY, n++;
                            break;
                        case U.OPEN_ARRAY:
                            if (s.type === I.RIGHT_BRACKET)
                                return r.verbose && (a.loc = E(i.loc.start.line, i.loc.start.column, i.loc.start.offset, s.loc.end.line, s.loc.end.column, s.loc.end.offset, r.source)), { value: a, index: n + 1 };
                            var u = A(e, t, n, r);
                            n = u.index, a.children.push(u.value), o = U.VALUE;
                            break;
                        case U.VALUE:
                            if (s.type === I.RIGHT_BRACKET)
                                return r.verbose && (a.loc = E(i.loc.start.line, i.loc.start.column, i.loc.start.offset, s.loc.end.line, s.loc.end.column, s.loc.end.offset, r.source)), n++, { value: a, index: n };
                            s.type === I.COMMA ? (o = U.COMMA, n++) : N(_.unexpectedToken(e.substring(s.loc.start.offset, s.loc.end.offset), s.loc.start.line, s.loc.start.column), e, s.loc.start.line, s.loc.start.column);
                            break;
                        case U.COMMA:
                            var l = A(e, t, n, r);
                            n = l.index, a.children.push(l.value), o = U.VALUE;
                    } N(_.unexpectedEnd()); }
                function g(e, t, n, r) { var i = t[n], a = -1 !== P.indexOf(i.type); if (a) {
                    var o = { type: "literal", value: i.value, rawValue: e.substring(i.loc.start.offset, i.loc.end.offset) };
                    return r.verbose && (o.loc = i.loc), { value: o, index: n + 1 };
                } return null; }
                function A(e, t, n, r) { var i = t[n], a = g.apply(void 0, arguments) || d.apply(void 0, arguments) || v.apply(void 0, arguments); return a ? a : void N(_.unexpectedToken(e.substring(i.loc.start.offset, i.loc.end.offset), i.loc.start.line, i.loc.start.column), e, i.loc.start.line, i.loc.start.column); }
                var T = Object.assign || function (e) { for (var t = 1; t < arguments.length; t++) {
                    var n = arguments[t];
                    for (var r in n)
                        Object.prototype.hasOwnProperty.call(n, r) && (e[r] = n[r]);
                } return e; }, E = function (e, t, n, r, i, a, o) { return { start: { line: e, column: t, offset: n }, end: { line: r, column: i, offset: a }, source: o || null }; }, S = function (e) { function a(e, r, o, s) { t(this, a); var u = o ? e + "\n" + i(r, o, s) : e, l = n(this, (a.__proto__ || Object.getPrototypeOf(a)).call(this, u)); return l.rawMessage = e, l; } return r(a, e), a; }(SyntaxError), N = function (e, t, n, r) { throw new S(e, t, n, r); }, _ = { unexpectedEnd: function () { return "Unexpected end of JSON input"; }, unexpectedToken: function (e, t, n) { return "Unexpected token <" + e + "> at " + t + ":" + n; } }, b = { cannotTokenizeSymbol: function (e, t, n) { return "Cannot tokenize symbol <" + e + "> at " + t + ":" + n; } }, I = { LEFT_BRACE: 0, RIGHT_BRACE: 1, LEFT_BRACKET: 2, RIGHT_BRACKET: 3, COLON: 4, COMMA: 5, STRING: 6, NUMBER: 7, TRUE: 8, FALSE: 9, NULL: 10 }, R = { "{": I.LEFT_BRACE, "}": I.RIGHT_BRACE, "[": I.LEFT_BRACKET, "]": I.RIGHT_BRACKET, ":": I.COLON, ",": I.COMMA }, M = { "true": { type: I.TRUE, value: !0 }, "false": { type: I.FALSE, value: !1 }, "null": { type: I.NULL, value: null } }, w = { _START_: 0, START_QUOTE_OR_CHAR: 1, ESCAPE: 2 }, C = { '"': 0, "\\": 1, "/": 2, b: 3, f: 4, n: 5, r: 6, t: 7, u: 8 }, L = { _START_: 0, MINUS: 1, ZERO: 2, DIGIT: 3, POINT: 4, DIGIT_FRACTION: 5, EXP: 6, EXP_DIGIT_OR_SIGN: 7 }, P = [I.STRING, I.NUMBER, I.TRUE, I.FALSE, I.NULL], O = { _START_: 0, OPEN_OBJECT: 1, PROPERTY: 2, COMMA: 3 }, D = { _START_: 0, KEY: 1, COLON: 2 }, U = { _START_: 0, OPEN_ARRAY: 1, VALUE: 2, COMMA: 3 }, x = { verbose: !0, source: null }, k = function (e, t) { t = T({}, x, t); var n = h(e, t); 0 === n.length && N(_.unexpectedEnd()); var r = A(e, n, 0, t); if (r.index === n.length)
                    return r.value; var i = n[r.index]; N(_.unexpectedToken(e.substring(i.loc.start.offset, i.loc.end.offset), i.loc.start.line, i.loc.start.column), e, i.loc.start.line, i.loc.start.column); };
                e.exports = k;
            });
        }, function (e, t, n) { e.exports = [{ code: "1xx", phrase: "**Informational**", description: '"indicates an interim response for communicating connection status or request progress prior to completing the requested action and sending a final response." ~ [sure](http://www.urbandictionary.com/define.php?term=sure)', spec_title: "RFC7231#6.2", spec_href: "http://tools.ietf.org/html/rfc7231#section-6.2" }, { code: "100", phrase: "Continue", description: '"indicates that the initial part of a request has been received and has not yet been rejected by the server."', spec_title: "RFC7231#6.2.1", spec_href: "http://tools.ietf.org/html/rfc7231#section-6.2.1" }, { code: "101", phrase: "Switching Protocols", description: '"indicates that the server understands and is willing to comply with the client\'s request, via the Upgrade header field, for a change in the application protocol being used on this connection."', spec_title: "RFC7231#6.2.2", spec_href: "http://tools.ietf.org/html/rfc7231#section-6.2.2" }, { code: "2xx", phrase: "**Successful**", description: '"indicates that the client\'s request was successfully received, understood, and accepted." ~ [cool](https://twitter.com/DanaDanger/status/183316183494311936)', spec_title: "RFC7231#6.3", spec_href: "http://tools.ietf.org/html/rfc7231#section-6.3" }, { code: "200", phrase: "OK", description: '"indicates that the request has succeeded."', spec_title: "RFC7231#6.3.1", spec_href: "http://tools.ietf.org/html/rfc7231#section-6.3.1" }, { code: "201", phrase: "Created", description: '"indicates that the request has been fulfilled and has resulted in one or more new resources being created."', spec_title: "RFC7231#6.3.2", spec_href: "http://tools.ietf.org/html/rfc7231#section-6.3.2" }, { code: "202", phrase: "Accepted", description: '"indicates that the request has been accepted for processing, but the processing has not been completed."', spec_title: "RFC7231#6.3.3", spec_href: "http://tools.ietf.org/html/rfc7231#section-6.3.3" }, { code: "203", phrase: "Non-Authoritative Information", description: '"indicates that the request was successful but the enclosed payload has been modified from that of the origin server\'s 200 (OK) response by a transforming proxy."', spec_title: "RFC7231#6.3.4", spec_href: "http://tools.ietf.org/html/rfc7231#section-6.3.4" }, { code: "204", phrase: "No Content", description: '"indicates that the server has successfully fulfilled the request and that there is no additional content to send in the response payload body."', spec_title: "RFC7231#6.3.5", spec_href: "http://tools.ietf.org/html/rfc7231#section-6.3.5" }, { code: "205", phrase: "Reset Content", description: '"indicates that the server has fulfilled the request and desires that the user agent reset the "document view", which caused the request to be sent, to its original state as received from the origin server."', spec_title: "RFC7231#6.3.6", spec_href: "http://tools.ietf.org/html/rfc7231#section-6.3.6" }, { code: "206", phrase: "Partial Content", description: '"indicates that the server is successfully fulfilling a range request for the target resource by transferring one or more parts of the selected representation that correspond to the satisfiable ranges found in the requests\'s Range header field."', spec_title: "RFC7233#4.1", spec_href: "http://tools.ietf.org/html/rfc7233#section-4.1" }, { code: "3xx", phrase: "**Redirection**", description: '"indicates that further action needs to be taken by the user agent in order to fulfill the request." ~ [ask that dude over there](https://twitter.com/DanaDanger/status/183316183494311936)', spec_title: "RFC7231#6.4", spec_href: "http://tools.ietf.org/html/rfc7231#section-6.4" }, { code: "300", phrase: "Multiple Choices", description: '"indicates that the target resource has more than one representation, each with its own more specific identifier, and information about the alternatives is being provided so that the user (or user agent) can select a preferred representation by redirecting its request to one or more of those identifiers."', spec_title: "RFC7231#6.4.1", spec_href: "http://tools.ietf.org/html/rfc7231#section-6.4.1" }, { code: "301", phrase: "Moved Permanently", description: '"indicates that the target resource has been assigned a new permanent URI and any future references to this resource ought to use one of the enclosed URIs."', spec_title: "RFC7231#6.4.2", spec_href: "http://tools.ietf.org/html/rfc7231#section-6.4.2" }, { code: "302", phrase: "Found", description: '"indicates that the target resource resides temporarily under a different URI."', spec_title: "RFC7231#6.4.3", spec_href: "http://tools.ietf.org/html/rfc7231#section-6.4.3" }, { code: "303", phrase: "See Other", description: '"indicates that the server is redirecting the user agent to a different resource, as indicated by a URI in the Location header field, that is intended to provide an indirect response to the original request."', spec_title: "RFC7231#6.4.4", spec_href: "http://tools.ietf.org/html/rfc7231#section-6.4.4" }, { code: "304", phrase: "Not Modified", description: '"indicates that a conditional GET request has been received and would have resulted in a 200 (OK) response if it were not for the fact that the condition has evaluated to false."', spec_title: "RFC7232#4.1", spec_href: "http://tools.ietf.org/html/rfc7232#section-4.1" }, { code: "305", phrase: "Use Proxy", description: "*deprecated*", spec_title: "RFC7231#6.4.5", spec_href: "http://tools.ietf.org/html/rfc7231#section-6.4.5" }, { code: "307", phrase: "Temporary Redirect", description: '"indicates that the target resource resides temporarily under a different URI and the user agent MUST NOT change the request method if it performs an automatic redirection to that URI."', spec_title: "RFC7231#6.4.7", spec_href: "http://tools.ietf.org/html/rfc7231#section-6.4.7" }, { code: "4xx", phrase: "**Client Error**", description: '"indicates that the client seems to have erred." ~ [*you* fucked up](https://twitter.com/DanaDanger/status/183316183494311936)', spec_title: "RFC7231#6.5", spec_href: "http://tools.ietf.org/html/rfc7231#section-6.5" }, { code: "400", phrase: "Bad Request", description: '"indicates that the server cannot or will not process the request because the received syntax is invalid, nonsensical, or exceeds some limitation on what the server is willing to process."', spec_title: "RFC7231#6.5.1", spec_href: "http://tools.ietf.org/html/rfc7231#section-6.5.1" }, { code: "401", phrase: "Unauthorized", description: '"indicates that the request has not been applied because it lacks valid authentication credentials for the target resource."', spec_title: "RFC7235#6.3.1", spec_href: "http://tools.ietf.org/html/rfc7235#section-3.1" }, { code: "402", phrase: "Payment Required", description: "*reserved*", spec_title: "RFC7231#6.5.2", spec_href: "http://tools.ietf.org/html/rfc7231#section-6.5.2" }, { code: "403", phrase: "Forbidden", description: '"indicates that the server understood the request but refuses to authorize it."', spec_title: "RFC7231#6.5.3", spec_href: "http://tools.ietf.org/html/rfc7231#section-6.5.3" }, { code: "404", phrase: "Not Found", description: '"indicates that the origin server did not find a current representation for the target resource or is not willing to disclose that one exists."', spec_title: "RFC7231#6.5.4", spec_href: "http://tools.ietf.org/html/rfc7231#section-6.5.4" }, { code: "405", phrase: "Method Not Allowed", description: '"indicates that the method specified in the request-line is known by the origin server but not supported by the target resource."', spec_title: "RFC7231#6.5.5", spec_href: "http://tools.ietf.org/html/rfc7231#section-6.5.5" }, { code: "406", phrase: "Not Acceptable", description: '"indicates that the target resource does not have a current representation that would be acceptable to the user agent, according to the proactive negotiation header fields received in the request, and the server is unwilling to supply a default representation."', spec_title: "RFC7231#6.5.6", spec_href: "http://tools.ietf.org/html/rfc7231#section-6.5.6" }, { code: "407", phrase: "Proxy Authentication Required", description: '"is similar to 401 (Unauthorized), but indicates that the client needs to authenticate itself in order to use a proxy."', spec_title: "RFC7231#6.3.2", spec_href: "http://tools.ietf.org/html/rfc7231#section-6.3.2" }, { code: "408", phrase: "Request Timeout", description: '"indicates that the server did not receive a complete request message within the time that it was prepared to wait."', spec_title: "RFC7231#6.5.7", spec_href: "http://tools.ietf.org/html/rfc7231#section-6.5.7" }, { code: "409", phrase: "Conflict", description: '"indicates that the request could not be completed due to a conflict with the current state of the resource."', spec_title: "RFC7231#6.5.8", spec_href: "http://tools.ietf.org/html/rfc7231#section-6.5.8" }, { code: "410", phrase: "Gone", description: '"indicates that access to the target resource is no longer available at the origin server and that this condition is likely to be permanent."', spec_title: "RFC7231#6.5.9", spec_href: "http://tools.ietf.org/html/rfc7231#section-6.5.9" }, { code: "411", phrase: "Length Required", description: '"indicates that the server refuses to accept the request without a defined Content-Length."', spec_title: "RFC7231#6.5.10", spec_href: "http://tools.ietf.org/html/rfc7231#section-6.5.10" }, { code: "412", phrase: "Precondition Failed", description: '"indicates that one or more preconditions given in the request header fields evaluated to false when tested on the server."', spec_title: "RFC7232#4.2", spec_href: "http://tools.ietf.org/html/rfc7232#section-4.2" }, { code: "413", phrase: "Payload Too Large", description: '"indicates that the server is refusing to process a request because the request payload is larger than the server is willing or able to process."', spec_title: "RFC7231#6.5.11", spec_href: "http://tools.ietf.org/html/rfc7231#section-6.5.11" }, { code: "414", phrase: "URI Too Long", description: '"indicates that the server is refusing to service the request because the request-target is longer than the server is willing to interpret."', spec_title: "RFC7231#6.5.12", spec_href: "http://tools.ietf.org/html/rfc7231#section-6.5.12" }, { code: "415", phrase: "Unsupported Media Type", description: '"indicates that the origin server is refusing to service the request because the payload is in a format not supported by the target resource for this method."', spec_title: "RFC7231#6.5.13", spec_href: "http://tools.ietf.org/html/rfc7231#section-6.5.13" }, { code: "416", phrase: "Range Not Satisfiable", description: '"indicates that none of the ranges in the request\'s Range header field overlap the current extent of the selected resource or that the set of ranges requested has been rejected due to invalid ranges or an excessive request of small or overlapping ranges."', spec_title: "RFC7233#4.4", spec_href: "http://tools.ietf.org/html/rfc7233#section-4.4" }, { code: "417", phrase: "Expectation Failed", description: '"indicates that the expectation given in the request\'s Expect header field could not be met by at least one of the inbound servers."', spec_title: "RFC7231#6.5.14", spec_href: "http://tools.ietf.org/html/rfc7231#section-6.5.14" }, { code: "426", phrase: "Upgrade Required", description: '"indicates that the server refuses to perform the request using the current protocol but might be willing to do so after the client upgrades to a different protocol."', spec_title: "RFC7231#6.5.15", spec_href: "http://tools.ietf.org/html/rfc7231#section-6.5.15" }, { code: "5xx", phrase: "**Server Error**", description: '"indicates that the server is aware that it has erred or is incapable of performing the requested method." ~ [*we* fucked up](https://twitter.com/DanaDanger/status/183316183494311936)', spec_title: "RFC7231#6.6", spec_href: "http://tools.ietf.org/html/rfc7231#section-6.6" }, { code: "500", phrase: "Internal Server Error", description: '"indicates that the server encountered an unexpected condition that prevented it from fulfilling the request."', spec_title: "RFC7231#6.6.1", spec_href: "http://tools.ietf.org/html/rfc7231#section-6.6.1" }, { code: "501", phrase: "Not Implemented", description: '"indicates that the server does not support the functionality required to fulfill the request."', spec_title: "RFC7231#6.6.2", spec_href: "http://tools.ietf.org/html/rfc7231#section-6.6.2" }, { code: "502", phrase: "Bad Gateway", description: '"indicates that the server, while acting as a gateway or proxy, received an invalid response from an inbound server it accessed while attempting to fulfill the request."', spec_title: "RFC7231#6.6.3", spec_href: "http://tools.ietf.org/html/rfc7231#section-6.6.3" }, { code: "503", phrase: "Service Unavailable", description: '"indicates that the server is currently unable to handle the request due to a temporary overload or scheduled maintenance, which will likely be alleviated after some delay."', spec_title: "RFC7231#6.6.4", spec_href: "http://tools.ietf.org/html/rfc7231#section-6.6.4" }, { code: "504", phrase: "Gateway Time-out", description: '"indicates that the server, while acting as a gateway or proxy, did not receive a timely response from an upstream server it needed to access in order to complete the request."', spec_title: "RFC7231#6.6.5", spec_href: "http://tools.ietf.org/html/rfc7231#section-6.6.5" }, { code: "505", phrase: "HTTP Version Not Supported", description: '"indicates that the server does not support, or refuses to support, the protocol version that was used in the request message."', spec_title: "RFC7231#6.6.6", spec_href: "http://tools.ietf.org/html/rfc7231#section-6.6.6" }, { code: "102", phrase: "Processing", description: '"is an interim response used to inform the client that the server has accepted the complete request, but has not yet completed it."', spec_title: "RFC5218#10.1", spec_href: "http://tools.ietf.org/html/rfc2518#section-10.1" }, { code: "207", phrase: "Multi-Status", description: '"provides status for multiple independent operations."', spec_title: "RFC5218#10.2", spec_href: "http://tools.ietf.org/html/rfc2518#section-10.2" }, { code: "226", phrase: "IM Used", description: '"The server has fulfilled a GET request for the resource, and the response is a representation of the result of one or more instance-manipulations applied to the current instance."', spec_title: "RFC3229#10.4.1", spec_href: "http://tools.ietf.org/html/rfc3229#section-10.4.1" }, { code: "308", phrase: "Permanent Redirect", description: '"The target resource has been assigned a new permanent URI and any future references to this resource SHOULD use one of the returned URIs. [...] This status code is similar to 301 Moved Permanently (Section 7.3.2 of rfc7231), except that it does not allow rewriting the request method from POST to GET."', spec_title: "RFC7238", spec_href: "http://tools.ietf.org/html/rfc7238" }, { code: "422", phrase: "Unprocessable Entity", description: '"means the server understands the content type of the request entity (hence a 415(Unsupported Media Type) status code is inappropriate), and the syntax of the request entity is correct (thus a 400 (Bad Request) status code is inappropriate) but was unable to process the contained instructions."', spec_title: "RFC5218#10.3", spec_href: "http://tools.ietf.org/html/rfc2518#section-10.3" }, { code: "423", phrase: "Locked", description: '"means the source or destination resource of a method is locked."', spec_title: "RFC5218#10.4", spec_href: "http://tools.ietf.org/html/rfc2518#section-10.4" }, { code: "424", phrase: "Failed Dependency", description: '"means that the method could not be performed on the resource because the requested action depended on another action and that action failed."', spec_title: "RFC5218#10.5", spec_href: "http://tools.ietf.org/html/rfc2518#section-10.5" }, { code: "428", phrase: "Precondition Required", description: '"indicates that the origin server requires the request to be conditional."', spec_title: "RFC6585#3", spec_href: "http://tools.ietf.org/html/rfc6585#section-3" }, { code: "429", phrase: "Too Many Requests", description: '"indicates that the user has sent too many requests in a given amount of time ("rate limiting")."', spec_title: "RFC6585#4", spec_href: "http://tools.ietf.org/html/rfc6585#section-4" }, { code: "431", phrase: "Request Header Fields Too Large", description: '"indicates that the server is unwilling to process the request because its header fields are too large."', spec_title: "RFC6585#5", spec_href: "http://tools.ietf.org/html/rfc6585#section-5" }, { code: "451", phrase: "Unavailable For Legal Reasons", description: '"This status code indicates that the server is denying access to the resource in response to a legal demand."', spec_title: "draft-tbray-http-legally-restricted-status", spec_href: "http://tools.ietf.org/html/draft-tbray-http-legally-restricted-status" }, { code: "506", phrase: "Variant Also Negotiates", description: '"indicates that the server has an internal configuration error: the chosen variant resource is configured to engage in transparent content negotiation itself, and is therefore not a proper end point in the negotiation process."', spec_title: "RFC2295#8.1", spec_href: "http://tools.ietf.org/html/rfc2295#section-8.1" }, { code: "507", phrase: "Insufficient Storage", description: '"means the method could not be performed on the resource because the server is unable to store the representation needed to successfully complete the request."', spec_title: "RFC5218#10.6", spec_href: "http://tools.ietf.org/html/rfc2518#section-10.6" }, { code: "511", phrase: "Network Authentication Required", description: '"indicates that the client needs to authenticate to gain network access."', spec_title: "RFC6585#6", spec_href: "http://tools.ietf.org/html/rfc6585#section-6" }, { code: "7xx", phrase: "**Developer Error**", description: "[err](http://www.urbandictionary.com/define.php?term=err)", spec_title: "7xx-rfc", spec_href: "http://documentup.com/joho/7XX-rfc" }]; }, function (e, t, n) { e.exports = [{ method: "CONNECT", description: '"requests that the recipient establish a tunnel to the destination origin server identified by the request-target and, if successful, thereafter restrict its behavior to blind forwarding of packets, in both directions, until the connection is closed."', safe: !0, idempotent: !0, cacheable: !1, spec_title: "RFC7231#4.3.6", spec_href: "http://tools.ietf.org/html/rfc7231#section-4.3.6" }, { method: "DELETE", description: '"requests that the origin server remove the association between the target resource and its current functionality."', safe: !1, idempotent: !0, cacheable: !1, spec_title: "RFC7231#4.3.5", spec_href: "http://tools.ietf.org/html/rfc7231#section-4.3.5" }, { method: "GET", description: '"requests transfer of a current selected representation for the target resource."', safe: !0, idempotent: !0, cacheable: !0, spec_title: "RFC7231#4.3.1", spec_href: "http://tools.ietf.org/html/rfc7231#section-4.3.1" }, { method: "HEAD", description: '"is identical to GET except that the server MUST NOT send a message body in the response (i.e., the response terminates at the end of the header block)."', safe: !0, idempotent: !0, cacheable: !0, spec_title: "RFC7231#4.3.2", spec_href: "http://tools.ietf.org/html/rfc7231#section-4.3.2" }, { method: "OPTIONS", description: '"requests information about the communication options available on the request/response chain identified by the effective request URI."', safe: !0, idempotent: !0, cacheable: !1, spec_title: "RFC7231#4.3.7", spec_href: "http://tools.ietf.org/html/rfc7231#section-4.3.7" }, { method: "POST", description: '"requests that the target resource process the representation enclosed in the request according to the resource\'s own specific semantics."', safe: !1, idempotent: !1, cacheable: !1, spec_title: "RFC7231#4.3.3", spec_href: "http://tools.ietf.org/html/rfc7231#section-4.3.3" }, { method: "PUT", description: '"requests that the state of the target resource be created or replaced with the state defined by the representation enclosed in the request message payload."', safe: !1, idempotent: !0, cacheable: !1, spec_title: "RFC7231#4.3.4", spec_href: "http://tools.ietf.org/html/rfc7231#section-4.3.4" }, { method: "TRACE", description: '"is used to invoke a remote, application-layer loopback of the request message."', safe: !0, idempotent: !0, cacheable: !1, spec_title: "RFC7231#4.3.8", spec_href: "http://tools.ietf.org/html/rfc7231#section-4.3.8" }, { method: "ACL", description: "", safe: !1, idempotent: !0, cacheable: "", spec_title: "RFC3744#8.1", spec_href: "http://tools.ietf.org/html/rfc3744#section-8.1" }, { method: "BASELINE-CONTROL", description: "", safe: !1, idempotent: !0, cacheable: "", spec_title: "RFC3253#12.6", spec_href: "http://tools.ietf.org/html/rfc3253#section-12.6" }, { method: "BIND", description: "", safe: !1, idempotent: !0, cacheable: "", spec_title: "RFC5842#4", spec_href: "http://tools.ietf.org/html/rfc5842#section-4" }, { method: "CHECKIN", description: "", safe: !1, idempotent: !0, cacheable: "", spec_title: "RFC3253#4.4", spec_href: "http://tools.ietf.org/html/rfc3253#section-4.4" }, { method: "CHECKOUT", description: "", safe: !1, idempotent: !0, cacheable: "", spec_title: "RFC3253#4.3", spec_href: "http://tools.ietf.org/html/rfc3253#section-4.3" }, { method: "COPY", description: "", safe: !1, idempotent: !0, cacheable: "", spec_title: "RFC4918#9.8", spec_href: "http://tools.ietf.org/html/rfc4918#section-9.8" }, { method: "LABEL", description: "", safe: !1, idempotent: !0, cacheable: "", spec_title: "RFC3253#8.2", spec_href: "http://tools.ietf.org/html/rfc3253#section-8.2" }, { method: "LINK", description: "", safe: !1, idempotent: !0, cacheable: "", spec_title: "RFC2068#19.6.1.2", spec_href: "http://tools.ietf.org/html/rfc2068#section-19.6.1.2" }, { method: "LOCK", description: "", safe: !1, idempotent: !1, cacheable: "", spec_title: "RFC4918#9.10", spec_href: "http://tools.ietf.org/html/rfc4918#section-9.10" }, { method: "MERGE", description: "", safe: !1, idempotent: !0, cacheable: "", spec_title: "RFC3253#11.2", spec_href: "http://tools.ietf.org/html/rfc3253#section-11.2" }, { method: "MKACTIVITY", description: "", safe: !1, idempotent: !0, cacheable: "", spec_title: "RFC3253#13.5", spec_href: "http://tools.ietf.org/html/rfc3253#section-13.5" }, { method: "MKCALENDAR", description: "", safe: !1, idempotent: !0, cacheable: "", spec_title: "RFC4791#5.3.1", spec_href: "http://tools.ietf.org/html/rfc4791#section-5.3.1" }, { method: "MKCOL", description: "", safe: !1, idempotent: !0, cacheable: "", spec_title: "RFC4918#9.3", spec_href: "http://tools.ietf.org/html/rfc4918#section-9.3" }, { method: "MKREDIRECTREF", description: "", safe: !1, idempotent: !0, cacheable: "", spec_title: "RFC4437#6", spec_href: "http://tools.ietf.org/html/rfc4437#section-6" }, { method: "MKWORKSPACE", description: "", safe: !1, idempotent: !0, cacheable: "", spec_title: "RFC3253#6.3", spec_href: "http://tools.ietf.org/html/rfc3253#section-6.3" }, { method: "MOVE", description: "", safe: !1, idempotent: !0, cacheable: "", spec_title: "RFC4918#9.9", spec_href: "http://tools.ietf.org/html/rfc4918#section-9.9" }, { method: "ORDERPATCH", description: "", safe: !1, idempotent: !0, cacheable: "", spec_title: "RFC3648#7", spec_href: "http://tools.ietf.org/html/rfc3648#section-7" }, { method: "PATCH", description: '"requests that a set of changes described in the request entity be applied to the resource identified by the Request-URI."', safe: !1, idempotent: !1, cacheable: !1, spec_title: "RFC5789", spec_href: "http://tools.ietf.org/html/rfc5789#section-2" }, { method: "PROPFIND", description: "", safe: !0, idempotent: !0, cacheable: "", spec_title: "RFC4918#9.1", spec_href: "http://tools.ietf.org/html/rfc4918#section-9.1" }, { method: "PROPPATCH", description: "", safe: !1, idempotent: !0, cacheable: "", spec_title: "RFC4918#9.2", spec_href: "http://tools.ietf.org/html/rfc4918#section-9.2" }, { method: "REBIND", description: "", safe: !1, idempotent: !0, cacheable: "", spec_title: "RFC5842#6", spec_href: "http://tools.ietf.org/html/rfc5842#section-6" }, { method: "REPORT", description: "", safe: !0, idempotent: !0, cacheable: "", spec_title: "RFC3253#3.6", spec_href: "http://tools.ietf.org/html/rfc3253#section-3.6" }, { method: "SEARCH", description: "", safe: !0, idempotent: !0, cacheable: "", spec_title: "RFC5323#2", spec_href: "http://tools.ietf.org/html/rfc5323#section-2" }, { method: "UNBIND", description: "", safe: !1, idempotent: !0, cacheable: "", spec_title: "RFC5842#5", spec_href: "http://tools.ietf.org/html/rfc5842#section-5" }, { method: "UNCHECKOUT", description: "", safe: !1, idempotent: !0, cacheable: "", spec_title: "RFC3253#4.5", spec_href: "http://tools.ietf.org/html/rfc3253#section-4.5" }, { method: "UNLINK", description: "", safe: !1, idempotent: !0, cacheable: "", spec_title: "RFC2068#19.6.1.3", spec_href: "http://tools.ietf.org/html/rfc2068#section-19.6.1.3" }, { method: "UNLOCK", description: "", safe: !1, idempotent: !0, cacheable: "", spec_title: "RFC4918#9.11", spec_href: "http://tools.ietf.org/html/rfc4918#section-9.11" }, { method: "UPDATE", description: "", safe: !1, idempotent: !0, cacheable: "", spec_title: "RFC3253#7.1", spec_href: "http://tools.ietf.org/html/rfc3253#section-7.1" }, { method: "UPDATEREDIRECTREF", description: "", safe: !1, idempotent: !0, cacheable: "", spec_title: "RFC4437#7", spec_href: "http://tools.ietf.org/html/rfc4437#section-7" }, { method: "VERSION-CONTROL", description: "", safe: !1, idempotent: !0, cacheable: "", spec_title: "RFC3253#3.5", spec_href: "http://tools.ietf.org/html/rfc3253#section-3.5" }]; }, function (e, t, n) {
            e.exports = [{ header: "Content-Encoding", description: '"indicates what content codings have been applied to the representation, beyond those inherent in the media type, and thus what decoding mechanisms have to be applied in order to obtain data in the media type referenced by the Content-Type header field."', spec_title: "RFC7231#3.1.2.2", spec_href: "http://tools.ietf.org/html/rfc7231#section-3.1.2.2" }, { header: "Content-Language", description: '"describes the natural language(s) of the intended audience for the representation."', spec_title: "RFC7231#3.1.3.2", spec_href: "http://tools.ietf.org/html/rfc7231#section-3.1.3.2" }, { header: "Content-Location", description: '"references a URI that can be used as an identifier for a specific resource corresponding to the representation in this message\'s payload."', spec_title: "RFC7231#3.1.4.2", spec_href: "http://tools.ietf.org/html/rfc7231#section-3.1.4.2" }, { header: "Content-Type", description: '"indicates the media type of the associated representation: either the representation enclosed in the message payload or the selected representation, as determined by the message semantics."', spec_title: "RFC7231#3.1.1.5", spec_href: "http://tools.ietf.org/html/rfc7231#section-3.1.1.5" }, { header: "Content-Length", description: '"can provide the anticipated size, as a decimal number of octets, for a potential payload body."', spec_title: "RFC7230#3.3.2", spec_href: "http://tools.ietf.org/html/rfc7230#section-3.3.2" }, { header: "Content-Range", description: '"is sent in a single part 206 (Partial Content) response to indicate the partial range of the selected representation enclosed as the message payload, sent in each part of a multipart 206 response to indicate the range enclosed within each body part, and sent in 416 (Range Not Satisfiable) responses to provide information about the selected representation."', spec_title: "RFC7233#4.2", spec_href: "http://tools.ietf.org/html/rfc7233#section-4.2" }, { header: "Transfer-Encoding", description: '"lists the transfer coding names corresponding to the sequence of transfer codings that have been (or will be) applied to the payload body in order to form the message body."',
                    spec_title: "RFC7230#3.3.1", spec_href: "http://tools.ietf.org/html/rfc7230#section-3.3.1" }, { header: "Cache-Control", description: '"is used to specify directives for caches along the request/response chain."', spec_title: "RFC7234#7.2", spec_href: "http://tools.ietf.org/html/rfc7234#section-7.2" }, { header: "Expect", description: '"is used to indicate that particular server behaviors are required by the client."', spec_title: "RFC7231#5.1.1", spec_href: "http://tools.ietf.org/html/rfc7231#section-5.1.1" }, { header: "Host", description: '"provides the host and port information from the target URI, enabling the origin server to distinguish among resources while servicing requests for multiple host names on a single IP address."', spec_title: "RFC7230#5.4", spec_href: "http://tools.ietf.org/html/rfc7230#section-5.4" }, { header: "Max-Forwards", description: '"provides a mechanism with the TRACE and OPTIONS methods to limit the number of times that the request is forwarded by proxies."', spec_title: "RFC7231#5.1.2", spec_href: "http://tools.ietf.org/html/rfc7231#section-5.1.2" }, { header: "Pragma", description: '"allows backwards compatibility with HTTP/1.0 caches, so that clients can specify a "no-cache" request that they will understand (as Cache-Control was not defined until HTTP/1.1)."', spec_title: "RFC7234#7.4", spec_href: "http://tools.ietf.org/html/rfc7234#section-7.4" }, { header: "Range", description: '"modifies the method semantics to request transfer of only one or more subranges of the selected representation data, rather than the entire selected representation data."', spec_title: "RFC7233#3.1", spec_href: "http://tools.ietf.org/html/rfc7233#section-3.1" }, { header: "TE", description: '"indicates what transfer codings, besides chunked, the client is willing to accept in response, and whether or not the client is willing to accept trailer fields in a chunked transfer coding."', spec_title: "RFC7230#4.3", spec_href: "http://tools.ietf.org/html/rfc7230#section-4.3" }, { header: "If-Match", description: '"can be used to make a request method conditional on the current existence or value of an entity-tag for one or more representations of the target resource."', spec_title: "RFC7232#3.1", spec_href: "http://tools.ietf.org/html/rfc7232#section-3.1" }, { header: "If-Modified-Since", description: '"can be used with GET or HEAD to make the method conditional by modification date: if the selected representation has not been modified since the time specified in this field, then do not perform the request method; instead, respond as detailed below."', spec_title: "RFC7232#3.3", spec_href: "http://tools.ietf.org/html/rfc7232#section-3.3" }, { header: "If-None-Match", description: '"can be used to make a request method conditional on not matching any of the current entity-tag values for representations of the target resource."', spec_title: "RFC7232#3.2", spec_href: "http://tools.ietf.org/html/rfc7232#section-3.2" }, { header: "If-Range", description: '"Informally, its meaning is: if the representation is unchanged, send me the part(s) that I am requesting in Range; otherwise, send me the entire representation."', spec_title: "RFC7233#3.2", spec_href: "http://tools.ietf.org/html/rfc7233#section-3.2" }, { header: "If-Unmodified-Since", description: '"can be used to make a request method conditional by modification date: if the selected representation has been modified since the time specified in this field, then the server MUST NOT perform the requested operation and MUST instead respond with the 412 (Precondition Failed) status code."', spec_title: "RFC7232#3.4", spec_href: "http://tools.ietf.org/html/rfc7232#section-3.4" }, { header: "Accept", description: '"can be used to specify certain media types which are acceptable for the response."', spec_title: "RFC7231#5.3.2", spec_href: "http://tools.ietf.org/html/rfc7231#section-5.3.2" }, { header: "Accept-Charset", description: '"can be sent by a user agent to indicate what charsets are acceptable in textual response content."', spec_title: "RFC7231#5.3.3", spec_href: "http://tools.ietf.org/html/rfc7231#section-5.3.3" }, { header: "Accept-Encoding", description: '"can be used by user agents to indicate what response content-codings are acceptable in the response."', spec_title: "RFC7231#5.3.4", spec_href: "http://tools.ietf.org/html/rfc7231#section-5.3.4" }, { header: "Accept-Language", description: '"can be used by user agents to indicate the set of natural languages that are preferred in the response."', spec_title: "RFC7231#5.3.5", spec_href: "http://tools.ietf.org/html/rfc7231#section-5.3.5" }, { header: "Authorization", description: '"allows a user agent to authenticate itself with a server -- usually, but not necessarily, after receiving a 401 (Unauthorized) response."', spec_title: "RFC7235#4.1", spec_href: "http://tools.ietf.org/html/rfc7235#section-4.1" }, { header: "Proxy-Authorization", description: '"allows the client to identify itself (or its user) to a proxy that requires authentication."', spec_title: "RFC7235#4.3", spec_href: "http://tools.ietf.org/html/rfc7235#section-4.3" }, { header: "DNT", description: '"defined as the means for expressing a user\'s tracking preference via HTTP."', spec_title: "Tracking Preference Expression (DNT)", spec_href: "http://www.w3.org/TR/tracking-dnt/#dnt-header-field" }, { header: "From", description: '"contains an Internet email address for a human user who controls the requesting user agent."', spec_title: "RFC7231#5.5.1", spec_href: "http://tools.ietf.org/html/rfc7231#section-5.5.1" }, { header: "Referer", description: '"allows the user agent to specify a URI reference for the resource from which the target URI was obtained (i.e., the "referrer", though the field name is misspelled)."', spec_title: "RFC7231#5.5.2", spec_href: "http://tools.ietf.org/html/rfc7231#section-5.5.2" }, { header: "User-Agent", description: '"contains information about the user agent originating the request, which is often used by servers to help identify the scope of reported interoperability problems, to work around or tailor responses to avoid particular user agent limitations, and for analytics regarding browser or operating system use."', spec_title: "RFC7231#5.5.3", spec_href: "http://tools.ietf.org/html/rfc7231#section-5.5.3" }, { header: "Age", description: '"conveys the sender\'s estimate of the amount of time since the response was generated or successfully validated at the origin server."', spec_title: "RFC7234#5.1", spec_href: "http://tools.ietf.org/html/rfc7234#section-5.1" }, { header: "Cache-Control", description: '"is used to specify directives for caches along the request/response chain."', spec_title: "RFC7234#7.2", spec_href: "http://tools.ietf.org/html/rfc7234#section-7.2" }, { header: "Expires", description: '"gives the date/time after which the response is considered stale."', spec_title: "RFC7234#7.3", spec_href: "http://tools.ietf.org/html/rfc7234#section-7.3" }, { header: "Date", description: '"represents the date and time at which the message was originated"', spec_title: "RFC7231#7.1.1.2", spec_href: "http://tools.ietf.org/html/rfc7231#section-7.1.1.2" }, { header: "Location", description: '"is used in some responses to refer to a specific resource in relation to the response."', spec_title: "RFC7231#7.1.2", spec_href: "http://tools.ietf.org/html/rfc7231#section-7.1.2" }, { header: "Retry-After", description: '"indicates how long the user agent ought to wait before making a follow-up request."', spec_title: "RFC7231#7.1.3", spec_href: "http://tools.ietf.org/html/rfc7231#section-7.1.3" }, { header: "Tk", description: '"defined as an OPTIONAL means for indicating the tracking status that applied to the corresponding request and as a REQUIRED means for indicating that a state-changing request has resulted in an interactive change to the tracking status. "', spec_title: "Tracking Preference Expression (DNT)", spec_href: "http://www.w3.org/TR/tracking-dnt/#response-header-field" }, { header: "Vary", description: '"describes what parts of a request message, aside from the method and request target, might influence the origin server\'s process for selecting and representing the response."', spec_title: "RFC7231#7.1.4", spec_href: "http://tools.ietf.org/html/rfc7231#section-7.1.4" }, { header: "Warning", description: '"is used to carry additional information about the status or transformation of a message that might not be reflected in the message."', spec_title: "RFC7234#7.6", spec_href: "http://tools.ietf.org/html/rfc7234#section-7.6" }, { header: "ETag", description: '"provides the current entity-tag for the selected representation, as determined at the conclusion of handling the request."', spec_title: "RFC7232#2.3", spec_href: "http://tools.ietf.org/html/rfc7232#section-2.3" }, { header: "Last-Modified", description: '"provides a timestamp indicating the date and time at which the origin server believes the selected representation was last modified, as determined at the conclusion of handling the request."', spec_title: "RFC7232#2.2", spec_href: "http://tools.ietf.org/html/rfc7232#section-2.2" }, { header: "WWW-Authenticate", description: '"consists of at least one challenge that indicates the authentication scheme(s) and parameters applicable to the effective request URI."', spec_title: "RFC7235#4.4", spec_href: "http://tools.ietf.org/html/rfc7235#section-4.4" }, { header: "Proxy-Authenticate", description: '"consists of at least one challenge that indicates the authentication scheme(s) and parameters applicable to the proxy for this effective request URI."', spec_title: "RFC7235#4.2", spec_href: "http://tools.ietf.org/html/rfc7235#section-4.2" }, { header: "Accept-Ranges", description: '"allows a server to indicate that it supports range requests for the target resource."', spec_title: "RFC7233#2.3", spec_href: "http://tools.ietf.org/html/rfc7233#section-2.3" }, { header: "Allow", description: '"lists the set of methods advertised as supported by the target resource."', spec_title: "RFC7231#7.4.1", spec_href: "http://tools.ietf.org/html/rfc7231#section-7.4.1" }, { header: "Server", description: '"contains information about the software used by the origin server to handle the request, which is often used by clients to help identify the scope of reported interoperability problems, to work around or tailor requests to avoid particular server limitations, and for analytics regarding server or operating system use."', spec_title: "RFC7231#7.4.2", spec_href: "http://tools.ietf.org/html/rfc7231#section-7.4.2" }, { header: "Accept-Patch", description: '"used to specify the patch document formats accepted by the server."', spec_title: "RFC5789#3.1", spec_href: "http://tools.ietf.org/html/rfc5789#section-3.1" }, { header: "Accept-Post", description: '"indicates server support for specific media types for entity bodies in HTTP POST requests."', spec_title: "draft-wilde-accept-post", spec_href: "http://tools.ietf.org/html/draft-wilde-accept-post" }, { header: "Access-Control-Allow-Credentials", description: '"indicates whether the response to request can be exposed when the omit credentials flag is unset"', spec_title: "CORS", spec_href: "http://www.w3.org/TR/cors/#access-control-allow-credentials-response-header" }, { header: "Access-Control-Allow-Headers", description: '"indicates, as part of the response to a preflight request, which header field names can be used during the actual request"', spec_title: "CORS", spec_href: "http://www.w3.org/TR/cors/#access-control-allow-headers-response-header" }, { header: "Access-Control-Allow-Methods", description: '"indicates, as part of the response to a preflight request, which methods can be used during the actual request"', spec_title: "CORS", spec_href: "http://www.w3.org/TR/cors/#access-control-allow-methods-response-header" }, { header: "Access-Control-Allow-Origin", description: '"indicates whether a resource can be shared"', spec_title: "CORS", spec_href: "http://www.w3.org/TR/cors/#access-control-allow-origin-response-header" }, { header: "Access-Control-Expose-Headers", description: '"indicates which headers are safe to expose to the API of a CORS API specification"', spec_title: "CORS", spec_href: "http://www.w3.org/TR/cors/#access-control-expose-headers-response-header" }, { header: "Access-Control-Max-Age", description: '"indicates how long the results of a preflight request can be cached in a preflight result cache"', spec_title: "CORS", spec_href: "http://www.w3.org/TR/cors/#access-control-max-age-response-header" }, { header: "Access-Control-Request-Headers", description: '"indicates which headers will be used in the actual request as part of the preflight request"', spec_title: "CORS", spec_href: "http://www.w3.org/TR/cors/#access-control-request-headers-request-header" }, { header: "Access-Control-Request-Method", description: '"indicates which method will be used in the actual request as part of the preflight request"', spec_title: "CORS", spec_href: "http://www.w3.org/TR/cors/#access-control-request-method-request-header" }, { header: "Content-Disposition", description: '"standard"', spec_title: "RFC6266", spec_href: "http://tools.ietf.org/html/rfc6266" }, { header: "Content-Security-Policy", description: '"is the preferred mechanism for delivering a CSP policy"', spec_title: "CSP", spec_href: "http://www.w3.org/TR/CSP/#content-security-policy-header-field" }, { header: "Content-Security-Policy-Report-Only", description: '"lets servers experiment with policies by monitoring (rather than enforcing) a policy"', spec_title: "CSP", spec_href: "http://www.w3.org/TR/CSP/#content-security-policy-report-only-header-field" }, { header: "Cookie", description: '"standard"', spec_title: "RFC6265", spec_href: "http://tools.ietf.org/html/rfc6265" }, { header: "Forwarded", description: '"standard"', spec_title: "RFC7239", spec_href: "http://tools.ietf.org/html/rfc7239" }, { header: "Link", description: '"provides a means for serialising one or more links in HTTP headers."', spec_title: "RFC5988#5", spec_href: "http://tools.ietf.org/html/rfc5988#section-5" }, { header: "Origin", description: '"standard"', spec_title: "RFC6454", spec_href: "http://tools.ietf.org/html/rfc6454" }, { header: "Prefer", description: '"is used to indicate that particular server behaviors are preferred by the client, but not required for successful completion of the request."', spec_title: "draft-snell-http-prefer#2", spec_href: "http://tools.ietf.org/html/draft-snell-http-prefer#section-2" }, { header: "Preference-Applied", description: '"MAY be included within a response message as an indication as to which Prefer tokens were honored by the server and applied to the processing of a request."', spec_title: "draft-snell-http-prefer#3", spec_href: "http://tools.ietf.org/html/draft-snell-http-prefer#section-3" }, { header: "Set-Cookie", description: '"standard"', spec_title: "RFC6265", spec_href: "http://tools.ietf.org/html/rfc6265" }, { header: "Strict-Transport-Security", description: '"standard"', spec_title: "RFC6797", spec_href: "http://tools.ietf.org/html/rfc6797" }, { header: "Via", description: '""', spec_title: "RFC7230#5.7.1", spec_href: "http://tools.ietf.org/html/rfc7230#section-5.7.1" }, { header: "A-IM", description: '""', spec_title: "RFC3229#10.5.3", spec_href: "http://tools.ietf.org/html/rfc3229#section-10.5.3" }, { header: "Accept-Features", description: '"can be used by a user agent to give information about the presence or absence of certain features in the feature set of the current request."', spec_title: "RFC2295#8.2", spec_href: "http://tools.ietf.org/html/rfc2295#section-8.2" }, { header: "Alt-Svc", description: '"is advertising the availability of alternate services to HTTP/1.1 and HTTP/2.0 clients by adding an Alt-Svc header field to responses."', spec_title: "draft-nottingham-httpbis-alt-svc", spec_href: "http://tools.ietf.org/html/draft-nottingham-httpbis-alt-svc" }, { header: "Alternates", description: '"is used to convey the list of variants bound to a negotiable resource."', spec_title: "RFC2295#8.3", spec_href: "http://tools.ietf.org/html/rfc2295#section-8.3" }, { header: "Apply-To-Redirect-Ref", description: '""', spec_title: "RFC4437", spec_href: "http://tools.ietf.org/html/rfc4437" }, { header: "CH", description: '"describes an example list of client preferences that the server can use to adapt and optimize the resource to satisfy a given request."', spec_title: "draft-grigorik-http-client-hints", spec_href: "http://tools.ietf.org/html/draft-grigorik-http-client-hints" }, { header: "Content-Base", description: '"obsoleted"', spec_title: "RFC2068", spec_href: "http://tools.ietf.org/html/rfc2068" }, { header: "Cookie2", description: '"obsoleted"', spec_title: "RFC2965", spec_href: "http://tools.ietf.org/html/rfc2965" }, { header: "DASL", description: '"standard"', spec_title: "RFC5323", spec_href: "http://tools.ietf.org/html/rfc5323" }, { header: "DAV", description: '"standard"', spec_title: "RFC4918", spec_href: "http://tools.ietf.org/html/rfc4918" }, { header: "Delta-Base", description: '""', spec_title: "RFC3229#10.5.1", spec_href: "http://tools.ietf.org/html/rfc3229#section-10.5.1" }, { header: "Depth", description: '"standard"', spec_title: "RFC4918", spec_href: "http://tools.ietf.org/html/rfc4918" }, { header: "Destination", description: '"standard"', spec_title: "RFC4918", spec_href: "http://tools.ietf.org/html/rfc4918" }, { header: "IM", description: '""', spec_title: "RFC3229#10.5.2", spec_href: "http://tools.ietf.org/html/rfc3229#section-10.5.2" }, { header: "If", description: '"standard"', spec_title: "RFC4918", spec_href: "http://tools.ietf.org/html/rfc4918" }, { header: "If-Schedule-Tag-Match", description: '"standard"', spec_title: "RFC6638", spec_href: "http://tools.ietf.org/html/rfc6638" }, { header: "Last-Event-ID", description: '"The value of the event source\'s last event ID string, encoded as UTF-8."', spec_title: "Server-Sent Events", spec_href: "http://www.w3.org/TR/eventsource/#last-event-id" }, { header: "Link-Template", description: '"provides a means for serialising one or more links into HTTP headers."', spec_title: "draft-nottingham-link-template", spec_href: "http://tools.ietf.org/html/draft-nottingham-link-template" }, { header: "Lock-Token", description: '"standard"', spec_title: "RFC4918", spec_href: "http://tools.ietf.org/html/rfc4918" }, { header: "Negotiate", description: '"can contain directives for any content negotiation process initiated by the request."', spec_title: "RFC2295#8.4", spec_href: "http://tools.ietf.org/html/rfc2295#section-8.4" }, { header: "Nice", description: '"indicates that a request is less important than a request that doesn\'t bear this header."', spec_title: "draft-thomson-http-nice", spec_href: "http://tools.ietf.org/html/draft-thomson-http-nice" }, { header: "Overwrite", description: '"standard"', spec_title: "RFC4918", spec_href: "http://tools.ietf.org/html/rfc4918" }, { header: "Redirect-Ref", description: '""', spec_title: "RFC4437", spec_href: "http://tools.ietf.org/html/rfc4437" }, { header: "Schedule-Reply", description: '"standard"', spec_title: "RFC6638", spec_href: "http://tools.ietf.org/html/rfc6638" }, { header: "Schedule-Tag", description: '"standard"', spec_title: "RFC6638", spec_href: "http://tools.ietf.org/html/rfc6638" }, { header: "Sec-WebSocket-Accept", description: '"standard"', spec_title: "RFC6455", spec_href: "http://tools.ietf.org/html/rfc6455" }, { header: "Sec-WebSocket-Extensions", description: '"standard"', spec_title: "RFC6455", spec_href: "http://tools.ietf.org/html/rfc6455" }, { header: "Sec-WebSocket-Key", description: '"standard"', spec_title: "RFC6455", spec_href: "http://tools.ietf.org/html/rfc6455" }, { header: "Sec-WebSocket-Protocol", description: '"standard"', spec_title: "RFC6455", spec_href: "http://tools.ietf.org/html/rfc6455" }, { header: "Sec-WebSocket-Version", description: '"standard"', spec_title: "RFC6455", spec_href: "http://tools.ietf.org/html/rfc6455" }, { header: "Set-Cookie2", description: '"obsoleted"', spec_title: "RFC2965", spec_href: "http://tools.ietf.org/html/rfc2965" }, { header: "SLUG", description: '"standard"', spec_title: "RFC5023", spec_href: "http://tools.ietf.org/html/rfc5023" }, { header: "TCN", description: '"is used by a server to signal that the resource is transparently negotiated."', spec_title: "RFC2295#8.5", spec_href: "http://tools.ietf.org/html/rfc2295#section-8.5" }, { header: "Timeout", description: '"standard"', spec_title: "RFC4918", spec_href: "http://tools.ietf.org/html/rfc4918" }, { header: "Variant-Vary", description: '"can be used in a choice response to record any vary information which applies to the variant data (the entity body combined with some of the entity headers) contained in the response, rather than to the response as a whole."', spec_title: "RFC2295#8.6", spec_href: "http://tools.ietf.org/html/rfc2295#section-8.6" }, { header: "X-Frame-Options", description: '"indicates a policy that specifies whether the browser should render the transmitted resource within a <frame> or an <iframe>. Servers can declare this policy in the header of their HTTP responses to prevent clickjacking attacks, which ensures that their content is not embedded into other pages or frames."', spec_title: "RFC7034", spec_href: "http://tools.ietf.org/html/rfc7034" }];
        }, function (e, t, n) {
            e.exports = [{ relation: "about", description: '"Refers to a resource that is the subject of the link\'s context."', spec_title: "RFC6903", spec_href: "http://tools.ietf.org/html/rfc6903" }, { relation: "alternate", description: '"Refers to a substitute for this context"', spec_title: "HTML5links", spec_href: "http://www.w3.org/TR/html5/links.html#link-type-alternate" }, { relation: "appendix", description: '"Refers to an appendix."', spec_title: "HTML401", spec_href: "http://www.w3.org/TR/1999/REC-html401-19991224" }, { relation: "archives", description: '"Refers to a collection of records, documents, or other materials of historical interest."', spec_title: "HTML5linksWD", spec_href: "http://www.w3.org/TR/2011/WD-html5-20110113/links.html#rel-archives" }, { relation: "author", description: '"Refers to the context\'s author."', spec_title: "HTML5links", spec_href: "http://www.w3.org/TR/html5/links.html#link-type-author" }, { relation: "bookmark", description: '"Gives a permanent link to use for bookmarking purposes."', spec_title: "HTML5links", spec_href: "http://www.w3.org/TR/html5/links.html#link-type-bookmark" }, { relation: "canonical", description: '"Designates the preferred version of a resource (the IRI and its contents)."', spec_title: "RFC6596", spec_href: "http://tools.ietf.org/html/rfc6596" }, { relation: "chapter", description: '"Refers to a chapter in a collection of resources."', spec_title: "HTML401", spec_href: "http://www.w3.org/TR/1999/REC-html401-19991224" }, { relation: "collection", description: '"The target IRI points to a resource which represents the collection resource for the context IRI."', spec_title: "RFC6573", spec_href: "http://tools.ietf.org/html/rfc6573" }, { relation: "contents", description: '"Refers to a table of contents."', spec_title: "HTML401", spec_href: "http://www.w3.org/TR/1999/REC-html401-19991224" }, { relation: "copyright", description: '"Refers to a copyright statement that applies to the link\'s context."', spec_title: "HTML401", spec_href: "http://www.w3.org/TR/1999/REC-html401-19991224" }, { relation: "create-form", description: '"The target IRI points to a resource where a submission form can be obtained."', spec_title: "RFC6861", spec_href: "http://tools.ietf.org/html/rfc6861" }, { relation: "current", description: '"Refers to a resource containing the most recent item(s) in a collection of resources."', spec_title: "RFC5005", spec_href: "http://tools.ietf.org/html/rfc5005" }, { relation: "describedby", description: '"Refers to a resource providing information about the link\'s context."', spec_title: "POWDER", spec_href: "http://www.w3.org/TR/powder-dr/#assoc-linking" }, { relation: "describes", description: "\"The relationship A 'describes' B asserts that resource A provides a description of resource B. There are no constraints on the format or representation of either A or B, neither are there any further constraints on either resource.\"", spec_title: "RFC6892", spec_href: "http://tools.ietf.org/html/rfc6892" }, { relation: "disclosure", description: '"Refers to a list of patent disclosures made with respect to material for which `disclosure` relation is specified."', spec_title: "RFC6579", spec_href: "http://tools.ietf.org/html/rfc6579" }, { relation: "duplicate", description: '"Refers to a resource whose available representations are byte-for-byte identical with the corresponding representations of the context IRI."', spec_title: "RFC6249", spec_href: "http://tools.ietf.org/html/rfc6249" }, { relation: "edit", description: '"Refers to a resource that can be used to edit the link\'s context."', spec_title: "RFC5023", spec_href: "http://tools.ietf.org/html/rfc5023" }, { relation: "edit-form", description: '"The target IRI points to a resource where a submission form for editing associated resource can be obtained."', spec_title: "RFC6861", spec_href: "http://tools.ietf.org/html/rfc6861" }, { relation: "edit-media", description: '"Refers to a resource that can be used to edit media associated with the link\'s context."', spec_title: "RFC5023", spec_href: "http://tools.ietf.org/html/rfc5023" }, { relation: "enclosure", description: '"Identifies a related resource that is potentially large and might require special handling."', spec_title: "RFC4287", spec_href: "http://tools.ietf.org/html/rfc4287" }, { relation: "first", description: '"An IRI that refers to the furthest preceding resource in a series of resources."', spec_title: "RFC5988", spec_href: "http://tools.ietf.org/html/rfc5988" }, { relation: "glossary", description: '"Refers to a glossary of terms."', spec_title: "HTML401", spec_href: "http://www.w3.org/TR/1999/REC-html401-19991224" }, { relation: "help", description: '"Refers to context-sensitive help."', spec_title: "HTML5links", spec_href: "http://www.w3.org/TR/html5/links.html#link-type-help" }, { relation: "hosts", description: '"Refers to a resource hosted by the server indicated by the link context."', spec_title: "RFC6690", spec_href: "http://tools.ietf.org/html/rfc6690" }, { relation: "hub", description: '"Refers to a hub that enables registration for notification of updates to the context."', spec_title: "pubsubhubbub", spec_href: "http://pubsubhubbub.googlecode.com" }, { relation: "icon", description: '"Refers to an icon representing the link\'s context."', spec_title: "HTML5links", spec_href: "http://www.w3.org/TR/html5/links.html#link-type-icon" }, { relation: "index", description: '"Refers to an index."', spec_title: "HTML401", spec_href: "http://www.w3.org/TR/1999/REC-html401-19991224" }, { relation: "item", description: '"The target IRI points to a resource that is a member of the collection represented by the context IRI."', spec_title: "RFC6573", spec_href: "http://tools.ietf.org/html/rfc6573" }, { relation: "last", description: '"An IRI that refers to the furthest following resource in a series of resources."', spec_title: "RFC5988", spec_href: "http://tools.ietf.org/html/rfc5988" }, { relation: "latest-version", description: '"Points to a resource containing the latest (e.g., current) version of the context."', spec_title: "RFC5829", spec_href: "http://tools.ietf.org/html/rfc5829" }, { relation: "license", description: '"Refers to a license associated with this context."', spec_title: "RFC4946", spec_href: "http://tools.ietf.org/html/rfc4946" }, { relation: "lrdd", description: '"Refers to further information about the link\'s context, expressed as a LRDD (Link-based Resource Descriptor Document) resource. See [RFC6415](http://tools.ietf.org/html/rfc6415) for information about processing this relation type in host-meta documents. When used elsewhere, it refers to additional links and other metadata. Multiple instances indicate additional LRDD resources. LRDD resources MUST have an "application/xrd+xml" representation, and MAY have others."', spec_title: "RFC6415", spec_href: "http://tools.ietf.org/html/rfc6415" }, { relation: "monitor", description: '"Refers to a resource that can be used to monitor changes in an HTTP resource."', spec_title: "RFC5989", spec_href: "http://tools.ietf.org/html/rfc5989" }, { relation: "monitor-group", description: '"Refers to a resource that can be used to monitor changes in a specified group of HTTP resources."', spec_title: "RFC5989", spec_href: "http://tools.ietf.org/html/rfc5989" }, { relation: "next", description: '"Indicates that the link\'s context is a part of a series, and that the next in the series is the link target."', spec_title: "HTML5links", spec_href: "http://www.w3.org/TR/html5/links.html#link-type-next" }, { relation: "next-archive", description: '"Refers to the immediately following archive resource."', spec_title: "RFC5005", spec_href: "http://tools.ietf.org/html/rfc5005" }, { relation: "nofollow", description: '"Indicates that the context’s original author or publisher does not endorse the link target."', spec_title: "HTML5links", spec_href: "http://www.w3.org/TR/html5/links.html#link-type-nofollow" }, { relation: "noreferrer", description: '"Indicates that no referrer information is to be leaked when following the link."', spec_title: "HTML5links", spec_href: "http://www.w3.org/TR/html5/links.html#link-type-noreferrer" }, { relation: "payment", description: '"Indicates a resource where payment is accepted."', spec_title: "RFC5988", spec_href: "http://tools.ietf.org/html/rfc5988" }, { relation: "predecessor-version", description: '"Points to a resource containing the predecessor version in the version history."', spec_title: "RFC5829", spec_href: "http://tools.ietf.org/html/rfc5829" }, { relation: "prefetch", description: '"Indicates that the link target should be preemptively cached."', spec_title: "HTML5links", spec_href: "http://www.w3.org/TR/html5/links.html#link-type-prefetch" }, { relation: "prev", description: '"Indicates that the link\'s context is a part of a series, and that the previous in the series is the link target."', spec_title: "HTML5links", spec_href: "http://www.w3.org/TR/html5/links.html#link-type-prev" }, { relation: "preview", description: '"Refers to a resource that provides a preview of the link\'s context."', spec_title: "RFC6903", spec_href: "http://tools.ietf.org/html/rfc6903" }, { relation: "previous", description: '"Refers to the previous resource in an ordered series of resources. Synonym for `prev`."', spec_title: "HTML401", spec_href: "http://www.w3.org/TR/1999/REC-html401-19991224" }, { relation: "prev-archive", description: '"Refers to the immediately preceding archive resource."', spec_title: "RFC5005", spec_href: "http://tools.ietf.org/html/rfc5005" }, { relation: "privacy-policy", description: '"Refers to a privacy policy associated with the link\'s context."', spec_title: "RFC6903", spec_href: "http://tools.ietf.org/html/rfc6903" }, { relation: "profile", description: "Identifying that a resource representation conforms to a certain profile, without affecting the non-profile semantics of the resource representation", spec_title: "RFC6906", spec_href: "http://tools.ietf.org/html/rfc6906" }, { relation: "related", description: '"Identifies a related resource."', spec_title: "RFC4287", spec_href: "http://tools.ietf.org/html/rfc4287" }, { relation: "replies", description: '"Identifies a resource that is a reply to the context of the link."', spec_title: "RFC4685", spec_href: "http://tools.ietf.org/html/rfc4685" }, { relation: "search", description: '"Refers to a resource that can be used to search through the link\'s context and related resources."', spec_title: "OpenSearch", spec_href: "http://www.opensearch.org/Specifications/OpenSearch/1.1" }, { relation: "section", description: '"Refers to a section in a collection of resources."', spec_title: "HTML401", spec_href: "http://www.w3.org/TR/1999/REC-html401-19991224" }, { relation: "self", description: '"Conveys an identifier for the link\'s context."', spec_title: "RFC4287", spec_href: "http://tools.ietf.org/html/rfc4287" }, { relation: "service", description: '"Indicates a URI that can be used to retrieve a service document."', spec_title: "RFC5023", spec_href: "http://tools.ietf.org/html/rfc5023" }, { relation: "start", description: '"Refers to the first resource in a collection of resources."', spec_title: "HTML401", spec_href: "http://www.w3.org/TR/1999/REC-html401-19991224" }, { relation: "stylesheet", description: '"Refers to a stylesheet."', spec_title: "HTML5links", spec_href: "http://www.w3.org/TR/html5/links.html#link-type-stylesheet" }, { relation: "subsection", description: '"Refers to a resource serving as a subsection in a collection of resources."', spec_title: "HTML401", spec_href: "http://www.w3.org/TR/1999/REC-html401-19991224" }, { relation: "successor-version", description: '"Points to a resource containing the successor version in the version history."', spec_title: "RFC5829", spec_href: "http://tools.ietf.org/html/rfc5829" }, { relation: "tag", description: '"Gives a tag (identified by the given address) that applies to the current document."', spec_title: "HTML5links", spec_href: "http://www.w3.org/TR/html5/links.html#link-type-tag"
                }, { relation: "terms-of-service", description: '"Refers to the terms of service associated with the link\'s context."', spec_title: "RFC6903", spec_href: "http://tools.ietf.org/html/rfc6903" }, { relation: "type", description: '"Refers to a resource identifying the abstract semantic type of which the link\'s context is considered to be an instance."', spec_title: "RFC6903", spec_href: "http://tools.ietf.org/html/rfc6903" }, { relation: "up", description: '"Refers to a parent document in a hierarchy of documents."', spec_title: "RFC5988", spec_href: "http://tools.ietf.org/html/rfc5988" }, { relation: "version-history", description: '"Points to a resource containing the version history for the context."', spec_title: "RFC5829", spec_href: "http://tools.ietf.org/html/rfc5829" }, { relation: "via", description: '"Identifies a resource that is the source of the information in the link\'s context."', spec_title: "RFC4287", spec_href: "http://tools.ietf.org/html/rfc4287" }, { relation: "working-copy", description: '"Points to a working copy for this resource."', spec_title: "RFC5829", spec_href: "http://tools.ietf.org/html/rfc5829" }, { relation: "working-copy-of", description: '"Points to the versioned resource from which this working copy was obtained."', spec_title: "RFC5829", spec_href: "http://tools.ietf.org/html/rfc5829" }];
        }, function (e, t, n) { var r = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"; !function (e) {
            "use strict";
            function t(e) { var t = e.charCodeAt(0); return t === o || t === c ? 62 : t === s || t === f ? 63 : u > t ? -1 : u + 10 > t ? t - u + 26 + 26 : p + 26 > t ? t - p : l + 26 > t ? t - l + 26 : void 0; }
            function n(e) { function n(e) { l[c++] = e; } var r, i, o, s, u, l; if (e.length % 4 > 0)
                throw new Error("Invalid string. Length must be a multiple of 4"); var p = e.length; u = "=" === e.charAt(p - 2) ? 2 : "=" === e.charAt(p - 1) ? 1 : 0, l = new a(3 * e.length / 4 - u), o = u > 0 ? e.length - 4 : e.length; var c = 0; for (r = 0, i = 0; o > r; r += 4, i += 3)
                s = t(e.charAt(r)) << 18 | t(e.charAt(r + 1)) << 12 | t(e.charAt(r + 2)) << 6 | t(e.charAt(r + 3)), n((16711680 & s) >> 16), n((65280 & s) >> 8), n(255 & s); return 2 === u ? (s = t(e.charAt(r)) << 2 | t(e.charAt(r + 1)) >> 4, n(255 & s)) : 1 === u && (s = t(e.charAt(r)) << 10 | t(e.charAt(r + 1)) << 4 | t(e.charAt(r + 2)) >> 2, n(s >> 8 & 255), n(255 & s)), l; }
            function i(e) { function t(e) { return r.charAt(e); } function n(e) { return t(e >> 18 & 63) + t(e >> 12 & 63) + t(e >> 6 & 63) + t(63 & e); } var i, a, o, s = e.length % 3, u = ""; for (i = 0, o = e.length - s; o > i; i += 3)
                a = (e[i] << 16) + (e[i + 1] << 8) + e[i + 2], u += n(a); switch (s) {
                case 1:
                    a = e[e.length - 1], u += t(a >> 2), u += t(a << 4 & 63), u += "==";
                    break;
                case 2: a = (e[e.length - 2] << 8) + e[e.length - 1], u += t(a >> 10), u += t(a >> 4 & 63), u += t(a << 2 & 63), u += "=";
            } return u; }
            var a = "undefined" != typeof Uint8Array ? Uint8Array : Array, o = "+".charCodeAt(0), s = "/".charCodeAt(0), u = "0".charCodeAt(0), l = "a".charCodeAt(0), p = "A".charCodeAt(0), c = "-".charCodeAt(0), f = "_".charCodeAt(0);
            e.toByteArray = n, e.fromByteArray = i;
        }("undefined" == typeof t ? this.base64js = {} : t); }, function (e, t, n) { var r = [].indexOf; e.exports = function (e, t) { if (r)
            return e.indexOf(t); for (var n = 0; n < e.length; ++n)
            if (e[n] === t)
                return n; return -1; }; }, function (e, t, n) {
            "use strict";
            function r() { }
            function i(e) { try {
                return e.then;
            }
            catch (t) {
                return v = t, g;
            } }
            function a(e, t) { try {
                return e(t);
            }
            catch (n) {
                return v = n, g;
            } }
            function o(e, t, n) { try {
                e(t, n);
            }
            catch (r) {
                return v = r, g;
            } }
            function s(e) { if ("object" != typeof this)
                throw new TypeError("Promises must be constructed via new"); if ("function" != typeof e)
                throw new TypeError("Promise constructor's argument is not a function"); this._40 = 0, this._65 = 0, this._55 = null, this._72 = null, e !== r && d(e, this); }
            function u(e, t, n) { return new e.constructor(function (i, a) { var o = new s(r); o.then(i, a), l(e, new h(t, n, o)); }); }
            function l(e, t) { for (; 3 === e._65;)
                e = e._55; return s._37 && s._37(e), 0 === e._65 ? 0 === e._40 ? (e._40 = 1, void (e._72 = t)) : 1 === e._40 ? (e._40 = 2, void (e._72 = [e._72, t])) : void e._72.push(t) : void p(e, t); }
            function p(e, t) { y(function () { var n = 1 === e._65 ? t.onFulfilled : t.onRejected; if (null === n)
                return void (1 === e._65 ? c(t.promise, e._55) : f(t.promise, e._55)); var r = a(n, e._55); r === g ? f(t.promise, v) : c(t.promise, r); }); }
            function c(e, t) { if (t === e)
                return f(e, new TypeError("A promise cannot be resolved with itself.")); if (t && ("object" == typeof t || "function" == typeof t)) {
                var n = i(t);
                if (n === g)
                    return f(e, v);
                if (n === e.then && t instanceof s)
                    return e._65 = 3, e._55 = t, void m(e);
                if ("function" == typeof n)
                    return void d(n.bind(t), e);
            } e._65 = 1, e._55 = t, m(e); }
            function f(e, t) { e._65 = 2, e._55 = t, s._87 && s._87(e, t), m(e); }
            function m(e) { if (1 === e._40 && (l(e, e._72), e._72 = null), 2 === e._40) {
                for (var t = 0; t < e._72.length; t++)
                    l(e, e._72[t]);
                e._72 = null;
            } }
            function h(e, t, n) { this.onFulfilled = "function" == typeof e ? e : null, this.onRejected = "function" == typeof t ? t : null, this.promise = n; }
            function d(e, t) { var n = !1, r = o(e, function (e) { n || (n = !0, c(t, e)); }, function (e) { n || (n = !0, f(t, e)); }); n || r !== g || (n = !0, f(t, v)); }
            var y = n(226), v = null, g = {};
            e.exports = s, s._37 = null, s._87 = null, s._61 = r, s.prototype.then = function (e, t) { if (this.constructor !== s)
                return u(this, e, t); var n = new s(r); return l(this, new h(e, t, n)), n; };
        }, function (e, t, n) {
            "use strict";
            var r = n(190);
            e.exports = r, r.prototype.done = function (e, t) { var n = arguments.length ? this.then.apply(this, arguments) : this; n.then(null, function (e) { setTimeout(function () { throw e; }, 0); }); };
        }, function (e, t, n) {
            "use strict";
            var r = n(190);
            e.exports = r, r.prototype["finally"] = function (e) { return this.then(function (t) { return r.resolve(e()).then(function () { return t; }); }, function (t) { return r.resolve(e()).then(function () { throw t; }); }); };
        }, function (e, t, n) {
            "use strict";
            function r(e) { var t = new i(i._61); return t._65 = 1, t._55 = e, t; }
            var i = n(190);
            e.exports = i;
            var a = r(!0), o = r(!1), s = r(null), u = r(void 0), l = r(0), p = r("");
            i.resolve = function (e) { if (e instanceof i)
                return e; if (null === e)
                return s; if (void 0 === e)
                return u; if (e === !0)
                return a; if (e === !1)
                return o; if (0 === e)
                return l; if ("" === e)
                return p; if ("object" == typeof e || "function" == typeof e)
                try {
                    var t = e.then;
                    if ("function" == typeof t)
                        return new i(t.bind(e));
                }
                catch (n) {
                    return new i(function (e, t) { t(n); });
                } return r(e); }, i.all = function (e) { var t = Array.prototype.slice.call(e); return new i(function (e, n) { function r(o, s) { if (s && ("object" == typeof s || "function" == typeof s)) {
                if (s instanceof i && s.then === i.prototype.then) {
                    for (; 3 === s._65;)
                        s = s._55;
                    return 1 === s._65 ? r(o, s._55) : (2 === s._65 && n(s._55), void s.then(function (e) { r(o, e); }, n));
                }
                var u = s.then;
                if ("function" == typeof u) {
                    var l = new i(u.bind(s));
                    return void l.then(function (e) { r(o, e); }, n);
                }
            } t[o] = s, 0 === --a && e(t); } if (0 === t.length)
                return e([]); for (var a = t.length, o = 0; o < t.length; o++)
                r(o, t[o]); }); }, i.reject = function (e) { return new i(function (t, n) { n(e); }); }, i.race = function (e) { return new i(function (t, n) { e.forEach(function (e) { i.resolve(e).then(t, n); }); }); }, i.prototype["catch"] = function (e) { return this.then(null, e); };
        }, function (e, t, n) {
            "use strict";
            function r(e, t) { for (var n = [], r = 0; t > r; r++)
                n.push("a" + r); var i = ["return function (" + n.join(",") + ") {", "var self = this;", "return new Promise(function (rs, rj) {", "var res = fn.call(", ["self"].concat(n).concat([s]).join(","), ");", "if (res &&", '(typeof res === "object" || typeof res === "function") &&', 'typeof res.then === "function"', ") {rs(res);}", "});", "};"].join(""); return Function(["Promise", "fn"], i)(a, e); }
            function i(e) { for (var t = Math.max(e.length - 1, 3), n = [], r = 0; t > r; r++)
                n.push("a" + r); var i = ["return function (" + n.join(",") + ") {", "var self = this;", "var args;", "var argLength = arguments.length;", "if (arguments.length > " + t + ") {", "args = new Array(arguments.length + 1);", "for (var i = 0; i < arguments.length; i++) {", "args[i] = arguments[i];", "}", "}", "return new Promise(function (rs, rj) {", "var cb = " + s + ";", "var res;", "switch (argLength) {", n.concat(["extra"]).map(function (e, t) { return "case " + t + ":res = fn.call(" + ["self"].concat(n.slice(0, t)).concat("cb").join(",") + ");break;"; }).join(""), "default:", "args[argLength] = cb;", "res = fn.apply(self, args);", "}", "if (res &&", '(typeof res === "object" || typeof res === "function") &&', 'typeof res.then === "function"', ") {rs(res);}", "});", "};"].join(""); return Function(["Promise", "fn"], i)(a, e); }
            var a = n(190), o = n(240);
            e.exports = a, a.denodeify = function (e, t) { return "number" == typeof t && t !== 1 / 0 ? r(e, t) : i(e); };
            var s = "function (err, res) {if (err) { rj(err); } else { rs(res); }}";
            a.nodeify = function (e) { return function () { var t = Array.prototype.slice.call(arguments), n = "function" == typeof t[t.length - 1] ? t.pop() : null, r = this; try {
                return e.apply(this, arguments).nodeify(n, r);
            }
            catch (i) {
                if (null === n || "undefined" == typeof n)
                    return new a(function (e, t) { t(i); });
                o(function () { n.call(r, i); });
            } }; }, a.prototype.nodeify = function (e, t) { return "function" != typeof e ? this : void this.then(function (n) { o(function () { e.call(t, null, n); }); }, function (n) { o(function () { e.call(t, n); }); }); };
        }, function (e, t, n) {
            "use strict";
            var r = n(190);
            e.exports = r, r.enableSynchronous = function () { r.prototype.isPending = function () { return 0 == this.getState(); }, r.prototype.isFulfilled = function () { return 1 == this.getState(); }, r.prototype.isRejected = function () { return 2 == this.getState(); }, r.prototype.getValue = function () { if (3 === this._65)
                return this._55.getValue(); if (!this.isFulfilled())
                throw new Error("Cannot get a value of an unfulfilled promise."); return this._55; }, r.prototype.getReason = function () { if (3 === this._65)
                return this._55.getReason(); if (!this.isRejected())
                throw new Error("Cannot get a rejection reason of a non-rejected promise."); return this._55; }, r.prototype.getState = function () { return 3 === this._65 ? this._55.getState() : -1 === this._65 || -2 === this._65 ? 0 : this._65; }; }, r.disableSynchronous = function () { r.prototype.isPending = void 0, r.prototype.isFulfilled = void 0, r.prototype.isRejected = void 0, r.prototype.getValue = void 0, r.prototype.getReason = void 0, r.prototype.getState = void 0; };
        }, function (e, t, n) { function r(e) { return null; } function i(e, t) { } function a(e) { return !1; } function o(e) { } function s(e) { } function u(e) { return { isDirectory: function () { return !1; }, isSymbolicLink: function () { return !1; }, isFile: function () { return !1; } }; } function l(e) { return this.statSync(e); } function p(e, t) { return []; } function c(e) { } t.readFileSync = r, t.writeFileSync = i, t.existsSync = a, t.mkdirSync = o, t.readdirSync = s, t.statSync = u, t.lstatSync = l, t.list = p, t.onChange = c; }, function (e, t, n) { }, function (e, t, n) {
            "use strict";
            var r = n(213), i = n(200), a = { brackets: function (e) { return e + "[]"; }, indices: function (e, t) { return e + "[" + t + "]"; }, repeat: function (e) { return e; } }, o = Date.prototype.toISOString, s = { delimiter: "&", encode: !0, encoder: r.encode, encodeValuesOnly: !1, serializeDate: function (e) { return o.call(e); }, skipNulls: !1, strictNullHandling: !1 }, u = function l(e, t, n, i, a, o, u, p, c, f, m, h) { var d = e; if ("function" == typeof u)
                d = u(t, d);
            else if (d instanceof Date)
                d = f(d);
            else if (null === d) {
                if (i)
                    return o && !h ? o(t, s.encoder) : t;
                d = "";
            } if ("string" == typeof d || "number" == typeof d || "boolean" == typeof d || r.isBuffer(d)) {
                if (o) {
                    var y = h ? t : o(t, s.encoder);
                    return [m(y) + "=" + m(o(d, s.encoder))];
                }
                return [m(t) + "=" + m(String(d))];
            } var v = []; if ("undefined" == typeof d)
                return v; var g; if (Array.isArray(u))
                g = u;
            else {
                var A = Object.keys(d);
                g = p ? A.sort(p) : A;
            } for (var T = 0; T < g.length; ++T) {
                var E = g[T];
                a && null === d[E] || (v = Array.isArray(d) ? v.concat(l(d[E], n(t, E), n, i, a, o, u, p, c, f, m, h)) : v.concat(l(d[E], t + (c ? "." + E : "[" + E + "]"), n, i, a, o, u, p, c, f, m, h)));
            } return v; };
            e.exports = function (e, t) { var n = e, o = t ? r.assign({}, t) : {}; if (null !== o.encoder && void 0 !== o.encoder && "function" != typeof o.encoder)
                throw new TypeError("Encoder has to be a function."); var l = "undefined" == typeof o.delimiter ? s.delimiter : o.delimiter, p = "boolean" == typeof o.strictNullHandling ? o.strictNullHandling : s.strictNullHandling, c = "boolean" == typeof o.skipNulls ? o.skipNulls : s.skipNulls, f = "boolean" == typeof o.encode ? o.encode : s.encode, m = "function" == typeof o.encoder ? o.encoder : s.encoder, h = "function" == typeof o.sort ? o.sort : null, d = "undefined" == typeof o.allowDots ? !1 : o.allowDots, y = "function" == typeof o.serializeDate ? o.serializeDate : s.serializeDate, v = "boolean" == typeof o.encodeValuesOnly ? o.encodeValuesOnly : s.encodeValuesOnly; if ("undefined" == typeof o.format)
                o.format = i["default"];
            else if (!Object.prototype.hasOwnProperty.call(i.formatters, o.format))
                throw new TypeError("Unknown format option provided."); var g, A, T = i.formatters[o.format]; "function" == typeof o.filter ? (A = o.filter, n = A("", n)) : Array.isArray(o.filter) && (A = o.filter, g = A); var E = []; if ("object" != typeof n || null === n)
                return ""; var S; S = o.arrayFormat in a ? o.arrayFormat : "indices" in o ? o.indices ? "indices" : "repeat" : "indices"; var N = a[S]; g || (g = Object.keys(n)), h && g.sort(h); for (var _ = 0; _ < g.length; ++_) {
                var b = g[_];
                c && null === n[b] || (E = E.concat(u(n[b], b, N, p, c, f ? m : null, A, h, d, y, T, v)));
            } var I = E.join(l), R = o.addQueryPrefix === !0 ? "?" : ""; return I.length > 0 ? R + I : ""; };
        }, function (e, t, n) {
            "use strict";
            var r = n(213), i = Object.prototype.hasOwnProperty, a = { allowDots: !1, allowPrototypes: !1, arrayLimit: 20, decoder: r.decode, delimiter: "&", depth: 5, parameterLimit: 1e3, plainObjects: !1, strictNullHandling: !1 }, o = function (e, t) { for (var n = {}, r = t.ignoreQueryPrefix ? e.replace(/^\?/, "") : e, o = t.parameterLimit === 1 / 0 ? void 0 : t.parameterLimit, s = r.split(t.delimiter, o), u = 0; u < s.length; ++u) {
                var l, p, c = s[u], f = c.indexOf("]="), m = -1 === f ? c.indexOf("=") : f + 1;
                -1 === m ? (l = t.decoder(c, a.decoder), p = t.strictNullHandling ? null : "") : (l = t.decoder(c.slice(0, m), a.decoder), p = t.decoder(c.slice(m + 1), a.decoder)), i.call(n, l) ? n[l] = [].concat(n[l]).concat(p) : n[l] = p;
            } return n; }, s = function (e, t, n) { if (!e.length)
                return t; var r, i = e.shift(); if ("[]" === i)
                r = [], r = r.concat(s(e, t, n));
            else {
                r = n.plainObjects ? Object.create(null) : {};
                var a = "[" === i.charAt(0) && "]" === i.charAt(i.length - 1) ? i.slice(1, -1) : i, o = parseInt(a, 10);
                !isNaN(o) && i !== a && String(o) === a && o >= 0 && n.parseArrays && o <= n.arrayLimit ? (r = [], r[o] = s(e, t, n)) : r[a] = s(e, t, n);
            } return r; }, u = function (e, t, n) { if (e) {
                var r = n.allowDots ? e.replace(/\.([^.[]+)/g, "[$1]") : e, a = /(\[[^[\]]*])/, o = /(\[[^[\]]*])/g, u = a.exec(r), l = u ? r.slice(0, u.index) : r, p = [];
                if (l) {
                    if (!n.plainObjects && i.call(Object.prototype, l) && !n.allowPrototypes)
                        return;
                    p.push(l);
                }
                for (var c = 0; null !== (u = o.exec(r)) && c < n.depth;) {
                    if (c += 1, !n.plainObjects && i.call(Object.prototype, u[1].slice(1, -1)) && !n.allowPrototypes)
                        return;
                    p.push(u[1]);
                }
                return u && p.push("[" + r.slice(u.index) + "]"), s(p, t, n);
            } };
            e.exports = function (e, t) { var n = t ? r.assign({}, t) : {}; if (null !== n.decoder && void 0 !== n.decoder && "function" != typeof n.decoder)
                throw new TypeError("Decoder has to be a function."); if (n.ignoreQueryPrefix = n.ignoreQueryPrefix === !0, n.delimiter = "string" == typeof n.delimiter || r.isRegExp(n.delimiter) ? n.delimiter : a.delimiter, n.depth = "number" == typeof n.depth ? n.depth : a.depth, n.arrayLimit = "number" == typeof n.arrayLimit ? n.arrayLimit : a.arrayLimit, n.parseArrays = n.parseArrays !== !1, n.decoder = "function" == typeof n.decoder ? n.decoder : a.decoder, n.allowDots = "boolean" == typeof n.allowDots ? n.allowDots : a.allowDots, n.plainObjects = "boolean" == typeof n.plainObjects ? n.plainObjects : a.plainObjects, n.allowPrototypes = "boolean" == typeof n.allowPrototypes ? n.allowPrototypes : a.allowPrototypes, n.parameterLimit = "number" == typeof n.parameterLimit ? n.parameterLimit : a.parameterLimit, n.strictNullHandling = "boolean" == typeof n.strictNullHandling ? n.strictNullHandling : a.strictNullHandling, "" === e || null === e || "undefined" == typeof e)
                return n.plainObjects ? Object.create(null) : {}; for (var i = "string" == typeof e ? o(e, n) : e, s = n.plainObjects ? Object.create(null) : {}, l = Object.keys(i), p = 0; p < l.length; ++p) {
                var c = l[p], f = u(c, i[c], n);
                s = r.merge(s, f, n);
            } return r.compact(s); };
        }, function (e, t, n) {
            "use strict";
            var r = String.prototype.replace, i = /%20/g;
            e.exports = { "default": "RFC3986", formatters: { RFC1738: function (e) { return r.call(e, i, "+"); }, RFC3986: function (e) { return e; } }, RFC1738: "RFC1738", RFC3986: "RFC3986" };
        }, function (e, t, n) {
            "use strict";
            var r = n(170);
            e.exports = new r.Schema({ include: [n(214)], implicit: [n(215), n(216), n(217), n(218)] });
        }, function (e, t, n) {
            "use strict";
            function r(e) { var t = {}; return null !== e && Object.keys(e).forEach(function (n) { e[n].forEach(function (e) { t[String(e)] = n; }); }), t; }
            Object.defineProperty(t, "__esModule", { value: !0 });
            var i = n(95), a = ["kind", "resolve", "construct", "instanceOf", "predicate", "represent", "defaultStyle", "styleAliases"], o = ["scalar", "sequence", "mapping"], s = function () { function e(e, t) { if (t = t || {}, Object.keys(t).forEach(function (t) { if (-1 === a.indexOf(t))
                throw new i('Unknown option "' + t + '" is met in definition of "' + e + '" YAML type.'); }), this.tag = e, this.kind = t.kind || null, this.resolve = t.resolve || function () { return !0; }, this.construct = t.construct || function (e) { return e; }, this.instanceOf = t.instanceOf || null, this.predicate = t.predicate || null, this.represent = t.represent || null, this.defaultStyle = t.defaultStyle || null, this.styleAliases = r(t.styleAliases || null), -1 === o.indexOf(this.kind))
                throw new i('Unknown kind "' + this.kind + '" is specified for "' + e + '" YAML type.'); } return e; }();
            t.Type = s;
        }, function (e, t, n) {
            var r, i; /**
                 * @preserve date-and-time.js (c) KNOWLEDGECODE | MIT
                 */
            !function (a) {
                "use strict";
                var o = {}, s = "en", u = { en: { MMMM: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], MMM: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], dddd: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], ddd: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], dd: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"], A: ["a.m.", "p.m."], formats: { YYYY: function (e) { return ("000" + e.getFullYear()).slice(-4); }, YY: function (e) { return ("0" + e.getFullYear()).slice(-2); }, Y: function (e) { return "" + e.getFullYear(); }, MMMM: function (e) { return this.MMMM[e.getMonth()]; }, MMM: function (e) { return this.MMM[e.getMonth()]; }, MM: function (e) { return ("0" + (e.getMonth() + 1)).slice(-2); }, M: function (e) { return "" + (e.getMonth() + 1); }, DD: function (e) { return ("0" + e.getDate()).slice(-2); }, D: function (e) { return "" + e.getDate(); }, HH: function (e) { return ("0" + e.getHours()).slice(-2); }, H: function (e) { return "" + e.getHours(); }, A: function (e) { return this.A[e.getHours() > 11 | 0]; }, hh: function (e) { return ("0" + (e.getHours() % 12 || 12)).slice(-2); }, h: function (e) { return "" + (e.getHours() % 12 || 12); }, mm: function (e) { return ("0" + e.getMinutes()).slice(-2); }, m: function (e) { return "" + e.getMinutes(); }, ss: function (e) { return ("0" + e.getSeconds()).slice(-2); }, s: function (e) { return "" + e.getSeconds(); }, SSS: function (e) { return ("00" + e.getMilliseconds()).slice(-3); }, SS: function (e) { return ("0" + (e.getMilliseconds() / 10 | 0)).slice(-2); }, S: function (e) { return "" + (e.getMilliseconds() / 100 | 0); }, dddd: function (e) { return this.dddd[e.getDay()]; }, ddd: function (e) { return this.ddd[e.getDay()]; }, dd: function (e) { return this.dd[e.getDay()]; }, Z: function (e) { var t = e.utc ? 0 : e.getTimezoneOffset() / .6; return (t > 0 ? "-" : "+") + ("000" + Math.abs(t - t % 100 * .4)).slice(-4); }, post: function (e) { return e; } }, parsers: { h: function (e, t) { return (12 === e ? 0 : e) + 12 * t; }, pre: function (e) { return e; } } } }, l = function () { return "object" == typeof e && "object" == typeof e.exports; }, p = function (e, t) { for (var n = 0, r = e.length; r > n && 0 !== t(e[n], n); n++)
                    ; }, c = function (e, t) { var n, r, i, a = 0, o = t.match(/YYYY|YY|MMM?M?|DD|HH|hh|mm|ss|SSS?|./g), l = { Y: 0, M: 1, D: 1, A: 0, H: 0, h: 0, m: 0, s: 0, S: 0 }; return e = u[s].parsers.pre(e), p(o, function (t) { n = t.charAt(0), r = t.length, i = e.slice(a), /^(MM|DD|HH|hh|mm|ss|SS?S?)$/.test(t) ? l[n] = 0 | i.slice(0, r) : /^(YYYY|YY|M|D|H|h|m|s)$/.test(t) ? (i = (i.match(4 === r ? /^\d{1,4}/ : /^\d\d?/) || [""])[0], r = i.length, l[n] = 0 | i, "Y" === n && l.Y < 70 && (l.Y += 2e3)) : /^(MMMM?|A)$/.test(t) && p(u[s][t], function (e, t) { return i.indexOf(e) ? void 0 : (l[n] = "M" === n ? t + 1 : t, r = e.length, 0); }), a += r; }), l; }, f = function (e, t) { return u[s].parsers.h(e, t); };
                o.format = function (e, t, n) { var r = new Date(e.getTime() + (n ? 6e4 * e.getTimezoneOffset() : 0)), i = u[s], a = i.formats; return r.utc = n, t.replace(/(\[[^\[\]]*]|\[.*\][^\[]*\]|YYYY|YY|MMM?M?|DD|HH|hh|mm|ss|SSS?|ddd?d?|.)/g, function (e) { var t = a[e]; return t ? a.post(t.call(i, r)) : e.replace(/\[(.*)]/, "$1"); }); }, o.parse = function (e, t, n) { var r = c(e, t), i = new Date(r.Y, r.M - 1, r.D, r.H || f(r.h, r.A), r.m, r.s, r.S); return n ? new Date(i.getTime() - 6e4 * i.getTimezoneOffset()) : i; }, o.isValid = function (e, t) { var n = c(e, t), r = n.H || f(n.h, n.A), i = new Date(n.Y, n.M - 1, n.D, r, n.m, n.s, n.S); return n.Y === i.getFullYear() && n.M - 1 === i.getMonth() && n.D === i.getDate() && r === i.getHours() && n.m === i.getMinutes() && n.s === i.getSeconds() && n.S === i.getMilliseconds(); }, o.addYears = function (e, t) { var n = new Date(e.getTime()); return n.setFullYear(n.getFullYear() + t), n; }, o.addMonths = function (e, t) { var n = new Date(e.getTime()); return n.setMonth(n.getMonth() + t), n; }, o.addDays = function (e, t) { return new Date(e.getTime() + 864e5 * t); }, o.addHours = function (e, t) { return new Date(e.getTime() + 36e5 * t); }, o.addMinutes = function (e, t) { return new Date(e.getTime() + 6e4 * t); }, o.addSeconds = function (e, t) { return new Date(e.getTime() + 1e3 * t); }, o.addMilliseconds = function (e, t) { return new Date(e.getTime() + t); }, o.subtract = function (e, t) { var n = e.getTime() - t.getTime(); return { toMilliseconds: function () { return n; }, toSeconds: function () { return n / 1e3 | 0; }, toMinutes: function () { return n / 6e4 | 0; }, toHours: function () { return n / 36e5 | 0; }, toDays: function () { return n / 864e5 | 0; } }; }, o.isLeapYear = function (e) { var t = e.getFullYear(); return !((t % 4 || !(t % 100)) && t % 400); }, o.locale = function (e) { return e && ("en" !== e && l() && n(219)("./" + e), s = e), s; }, o.getLocales = function (e) { return u[e || s]; }, o.setLocales = function (e, t) { var n = function (e, t) { var n, r, i = function () { }; i.prototype = t, n = new i; for (r in e)
                    e.hasOwnProperty(r) && (n[r] = e[r]); return n; }, r = u[e] || u.en, i = n(t, r); t.formats && (i.formats = n(t.formats, r.formats)), t.parsers && (i.parsers = n(t.parsers, r.parsers)), u[e] = i; }, l() ? e.exports = o : (r = [], i = function () { return o; }.apply(t, r), !(void 0 !== i && (e.exports = i)));
            }(this);
        }, function (e, t, n) { (function () {
            "use strict";
            var e, r, i, a, o = function (e, t) { function n() { this.constructor = e; } for (var r in t)
                s.call(t, r) && (e[r] = t[r]); return n.prototype = t.prototype, e.prototype = new n, e.__super__ = t.prototype, e; }, s = {}.hasOwnProperty;
            r = n(222), e = n(223), i = n(224), a = n(225), t.defaults = r.defaults, t.processors = a, t.ValidationError = function (e) { function t(e) { this.message = e; } return o(t, e), t; }(Error), t.Builder = e.Builder, t.Parser = i.Parser, t.parseString = i.parseString;
        }).call(this); }, function (e, t, n) {
            "use strict";
            function r(e, t) { if (!(e instanceof t))
                throw new TypeError("Cannot call a class as a function"); }
            function i(e, t, n) { e.copy(t, n); }
            var a = n(211).Buffer;
            e.exports = function () { function e() { r(this, e), this.head = null, this.tail = null, this.length = 0; } return e.prototype.push = function (e) { var t = { data: e, next: null }; this.length > 0 ? this.tail.next = t : this.head = t, this.tail = t, ++this.length; }, e.prototype.unshift = function (e) { var t = { data: e, next: this.head }; 0 === this.length && (this.tail = t), this.head = t, ++this.length; }, e.prototype.shift = function () { if (0 !== this.length) {
                var e = this.head.data;
                return 1 === this.length ? this.head = this.tail = null : this.head = this.head.next, --this.length, e;
            } }, e.prototype.clear = function () { this.head = this.tail = null, this.length = 0; }, e.prototype.join = function (e) { if (0 === this.length)
                return ""; for (var t = this.head, n = "" + t.data; t = t.next;)
                n += e + t.data; return n; }, e.prototype.concat = function (e) { if (0 === this.length)
                return a.alloc(0); if (1 === this.length)
                return this.head.data; for (var t = a.allocUnsafe(e >>> 0), n = this.head, r = 0; n;)
                i(n.data, t, r), r += n.data.length, n = n.next; return t; }, e; }();
        }, function (e, t, n) {
            "use strict";
            function r(e, t) { var n = this, r = this._readableState && this._readableState.destroyed, i = this._writableState && this._writableState.destroyed; return r || i ? void (t ? t(e) : !e || this._writableState && this._writableState.errorEmitted || o(a, this, e)) : (this._readableState && (this._readableState.destroyed = !0), this._writableState && (this._writableState.destroyed = !0), void this._destroy(e || null, function (e) { !t && e ? (o(a, n, e), n._writableState && (n._writableState.errorEmitted = !0)) : t && t(e); })); }
            function i() { this._readableState && (this._readableState.destroyed = !1, this._readableState.reading = !1, this._readableState.ended = !1, this._readableState.endEmitted = !1), this._writableState && (this._writableState.destroyed = !1, this._writableState.ended = !1, this._writableState.ending = !1, this._writableState.finished = !1, this._writableState.errorEmitted = !1); }
            function a(e, t) { e.emit("error", t); }
            var o = n(208);
            e.exports = { destroy: r, undestroy: i };
        }, function (e, t, n) { e.exports = n(210).EventEmitter; }, function (e, t, n) { (function (t) {
            "use strict";
            function n(e, n, r, i) { if ("function" != typeof e)
                throw new TypeError('"callback" argument must be a function'); var a, o, s = arguments.length; switch (s) {
                case 0:
                case 1: return t.nextTick(e);
                case 2: return t.nextTick(function () { e.call(null, n); });
                case 3: return t.nextTick(function () { e.call(null, n, r); });
                case 4: return t.nextTick(function () { e.call(null, n, r, i); });
                default:
                    for (a = new Array(s - 1), o = 0; o < a.length;)
                        a[o++] = arguments[o];
                    return t.nextTick(function () { e.apply(null, a); });
            } }
            !t.version || 0 === t.version.indexOf("v0.") || 0 === t.version.indexOf("v1.") && 0 !== t.version.indexOf("v1.8.") ? e.exports = n : e.exports = t.nextTick;
        }).call(t, n(64)); }, function (e, t, n) { var r = {}.toString; e.exports = Array.isArray || function (e) { return "[object Array]" == r.call(e); }; }, function (e, t, n) { function r() { this._events = this._events || {}, this._maxListeners = this._maxListeners || void 0; } function i(e) { return "function" == typeof e; } function a(e) { return "number" == typeof e; } function o(e) { return "object" == typeof e && null !== e; } function s(e) { return void 0 === e; } e.exports = r, r.EventEmitter = r, r.prototype._events = void 0, r.prototype._maxListeners = void 0, r.defaultMaxListeners = 10, r.prototype.setMaxListeners = function (e) { if (!a(e) || 0 > e || isNaN(e))
            throw TypeError("n must be a positive number"); return this._maxListeners = e, this; }, r.prototype.emit = function (e) { var t, n, r, a, u, l; if (this._events || (this._events = {}), "error" === e && (!this._events.error || o(this._events.error) && !this._events.error.length)) {
            if (t = arguments[1], t instanceof Error)
                throw t;
            var p = new Error('Uncaught, unspecified "error" event. (' + t + ")");
            throw p.context = t, p;
        } if (n = this._events[e], s(n))
            return !1; if (i(n))
            switch (arguments.length) {
                case 1:
                    n.call(this);
                    break;
                case 2:
                    n.call(this, arguments[1]);
                    break;
                case 3:
                    n.call(this, arguments[1], arguments[2]);
                    break;
                default: a = Array.prototype.slice.call(arguments, 1), n.apply(this, a);
            }
        else if (o(n))
            for (a = Array.prototype.slice.call(arguments, 1), l = n.slice(), r = l.length, u = 0; r > u; u++)
                l[u].apply(this, a); return !0; }, r.prototype.addListener = function (e, t) { var n; if (!i(t))
            throw TypeError("listener must be a function"); return this._events || (this._events = {}), this._events.newListener && this.emit("newListener", e, i(t.listener) ? t.listener : t), this._events[e] ? o(this._events[e]) ? this._events[e].push(t) : this._events[e] = [this._events[e], t] : this._events[e] = t, o(this._events[e]) && !this._events[e].warned && (n = s(this._maxListeners) ? r.defaultMaxListeners : this._maxListeners, n && n > 0 && this._events[e].length > n && (this._events[e].warned = !0, console.error("(node) warning: possible EventEmitter memory leak detected. %d listeners added. Use emitter.setMaxListeners() to increase limit.", this._events[e].length), "function" == typeof console.trace && console.trace())), this; }, r.prototype.on = r.prototype.addListener, r.prototype.once = function (e, t) { function n() { this.removeListener(e, n), r || (r = !0, t.apply(this, arguments)); } if (!i(t))
            throw TypeError("listener must be a function"); var r = !1; return n.listener = t, this.on(e, n), this; }, r.prototype.removeListener = function (e, t) { var n, r, a, s; if (!i(t))
            throw TypeError("listener must be a function"); if (!this._events || !this._events[e])
            return this; if (n = this._events[e], a = n.length, r = -1, n === t || i(n.listener) && n.listener === t)
            delete this._events[e], this._events.removeListener && this.emit("removeListener", e, t);
        else if (o(n)) {
            for (s = a; s-- > 0;)
                if (n[s] === t || n[s].listener && n[s].listener === t) {
                    r = s;
                    break;
                }
            if (0 > r)
                return this;
            1 === n.length ? (n.length = 0, delete this._events[e]) : n.splice(r, 1), this._events.removeListener && this.emit("removeListener", e, t);
        } return this; }, r.prototype.removeAllListeners = function (e) { var t, n; if (!this._events)
            return this; if (!this._events.removeListener)
            return 0 === arguments.length ? this._events = {} : this._events[e] && delete this._events[e], this; if (0 === arguments.length) {
            for (t in this._events)
                "removeListener" !== t && this.removeAllListeners(t);
            return this.removeAllListeners("removeListener"), this._events = {}, this;
        } if (n = this._events[e], i(n))
            this.removeListener(e, n);
        else if (n)
            for (; n.length;)
                this.removeListener(e, n[n.length - 1]); return delete this._events[e], this; }, r.prototype.listeners = function (e) { var t; return t = this._events && this._events[e] ? i(this._events[e]) ? [this._events[e]] : this._events[e].slice() : []; }, r.prototype.listenerCount = function (e) { if (this._events) {
            var t = this._events[e];
            if (i(t))
                return 1;
            if (t)
                return t.length;
        } return 0; }, r.listenerCount = function (e, t) { return e.listenerCount(t); }; }, function (e, t, n) { function r(e, t) { for (var n in e)
            t[n] = e[n]; } function i(e, t, n) { return o(e, t, n); } var a = n(113), o = a.Buffer; o.from && o.alloc && o.allocUnsafe && o.allocUnsafeSlow ? e.exports = a : (r(a, t), t.Buffer = i), r(o, i), i.from = function (e, t, n) { if ("number" == typeof e)
            throw new TypeError("Argument must not be a number"); return o(e, t, n); }, i.alloc = function (e, t, n) { if ("number" != typeof e)
            throw new TypeError("Argument must be a number"); var r = o(e); return void 0 !== t ? "string" == typeof n ? r.fill(t, n) : r.fill(t) : r.fill(0), r; }, i.allocUnsafe = function (e) { if ("number" != typeof e)
            throw new TypeError("Argument must be a number"); return o(e); }, i.allocUnsafeSlow = function (e) { if ("number" != typeof e)
            throw new TypeError("Argument must be a number"); return a.SlowBuffer(e); }; }, function (e, t, n) { (function (t) { function n(e, t) { function n() { if (!i) {
            if (r("throwDeprecation"))
                throw new Error(t);
            r("traceDeprecation") ? console.trace(t) : console.warn(t), i = !0;
        } return e.apply(this, arguments); } if (r("noDeprecation"))
            return e; var i = !1; return n; } function r(e) { try {
            if (!t.localStorage)
                return !1;
        }
        catch (n) {
            return !1;
        } var r = t.localStorage[e]; return null == r ? !1 : "true" === String(r).toLowerCase(); } e.exports = n; }).call(t, function () { return this; }()); }, function (e, t, n) {
            "use strict";
            var r = Object.prototype.hasOwnProperty, i = function () { for (var e = [], t = 0; 256 > t; ++t)
                e.push("%" + ((16 > t ? "0" : "") + t.toString(16)).toUpperCase()); return e; }();
            t.arrayToObject = function (e, t) { for (var n = t && t.plainObjects ? Object.create(null) : {}, r = 0; r < e.length; ++r)
                "undefined" != typeof e[r] && (n[r] = e[r]); return n; }, t.merge = function (e, n, i) { if (!n)
                return e; if ("object" != typeof n) {
                if (Array.isArray(e))
                    e.push(n);
                else {
                    if ("object" != typeof e)
                        return [e, n];
                    (i.plainObjects || i.allowPrototypes || !r.call(Object.prototype, n)) && (e[n] = !0);
                }
                return e;
            } if ("object" != typeof e)
                return [e].concat(n); var a = e; return Array.isArray(e) && !Array.isArray(n) && (a = t.arrayToObject(e, i)), Array.isArray(e) && Array.isArray(n) ? (n.forEach(function (n, a) { r.call(e, a) ? e[a] && "object" == typeof e[a] ? e[a] = t.merge(e[a], n, i) : e.push(n) : e[a] = n; }), e) : Object.keys(n).reduce(function (e, a) { var o = n[a]; return r.call(e, a) ? e[a] = t.merge(e[a], o, i) : e[a] = o, e; }, a); }, t.assign = function (e, t) { return Object.keys(t).reduce(function (e, n) { return e[n] = t[n], e; }, e); }, t.decode = function (e) { try {
                return decodeURIComponent(e.replace(/\+/g, " "));
            }
            catch (t) {
                return e;
            } }, t.encode = function (e) { if (0 === e.length)
                return e; for (var t = "string" == typeof e ? e : String(e), n = "", r = 0; r < t.length; ++r) {
                var a = t.charCodeAt(r);
                45 === a || 46 === a || 95 === a || 126 === a || a >= 48 && 57 >= a || a >= 65 && 90 >= a || a >= 97 && 122 >= a ? n += t.charAt(r) : 128 > a ? n += i[a] : 2048 > a ? n += i[192 | a >> 6] + i[128 | 63 & a] : 55296 > a || a >= 57344 ? n += i[224 | a >> 12] + i[128 | a >> 6 & 63] + i[128 | 63 & a] : (r += 1, a = 65536 + ((1023 & a) << 10 | 1023 & t.charCodeAt(r)), n += i[240 | a >> 18] + i[128 | a >> 12 & 63] + i[128 | a >> 6 & 63] + i[128 | 63 & a]);
            } return n; }, t.compact = function (e, n) { if ("object" != typeof e || null === e)
                return e; var r = n || [], i = r.indexOf(e); if (-1 !== i)
                return r[i]; if (r.push(e), Array.isArray(e)) {
                for (var a = [], o = 0; o < e.length; ++o)
                    e[o] && "object" == typeof e[o] ? a.push(t.compact(e[o], r)) : "undefined" != typeof e[o] && a.push(e[o]);
                return a;
            } var s = Object.keys(e); return s.forEach(function (n) { e[n] = t.compact(e[n], r); }), e; }, t.isRegExp = function (e) { return "[object RegExp]" === Object.prototype.toString.call(e); }, t.isBuffer = function (e) { return null === e || "undefined" == typeof e ? !1 : !!(e.constructor && e.constructor.isBuffer && e.constructor.isBuffer(e)); };
        }, function (e, t, n) {
            "use strict";
            var r = n(170);
            e.exports = new r.Schema({ explicit: [n(241), n(242), n(243)] });
        }, function (e, t, n) {
            "use strict";
            function r(e) { if (null === e)
                return !0; var t = e.length; return 1 === t && "~" === e || 4 === t && ("null" === e || "Null" === e || "NULL" === e); }
            function i() { return null; }
            function a(e) { return null === e; }
            var o = n(202);
            e.exports = new o.Type("tag:yaml.org,2002:null", { kind: "scalar", resolve: r, construct: i, predicate: a, represent: { canonical: function () { return "~"; }, lowercase: function () { return "null"; }, uppercase: function () { return "NULL"; }, camelcase: function () { return "Null"; } }, defaultStyle: "lowercase" });
        }, function (e, t, n) {
            "use strict";
            function r(e) { if (null === e)
                return !1; var t = e.length; return 4 === t && ("true" === e || "True" === e || "TRUE" === e) || 5 === t && ("false" === e || "False" === e || "FALSE" === e); }
            function i(e) { return "true" === e || "True" === e || "TRUE" === e; }
            function a(e) { return "[object Boolean]" === Object.prototype.toString.call(e); }
            var o = n(202);
            e.exports = new o.Type("tag:yaml.org,2002:bool", { kind: "scalar", resolve: r, construct: i, predicate: a, represent: { lowercase: function (e) { return e ? "true" : "false"; }, uppercase: function (e) { return e ? "TRUE" : "FALSE"; }, camelcase: function (e) { return e ? "True" : "False"; } }, defaultStyle: "lowercase" });
        }, function (e, t, n) {
            "use strict";
            function r(e) { return e >= 48 && 57 >= e || e >= 65 && 70 >= e || e >= 97 && 102 >= e; }
            function i(e) { return e >= 48 && 55 >= e; }
            function a(e) { return e >= 48 && 57 >= e; }
            function o(e) { if (null === e)
                return !1; var t, n = e.length, o = 0, s = !1; if (!n)
                return !1; if (t = e[o], ("-" === t || "+" === t) && (t = e[++o]), "0" === t) {
                if (o + 1 === n)
                    return !0;
                if (t = e[++o], "b" === t) {
                    for (o++; n > o; o++)
                        if (t = e[o], "_" !== t) {
                            if ("0" !== t && "1" !== t)
                                return !1;
                            s = !0;
                        }
                    return s;
                }
                if ("x" === t) {
                    for (o++; n > o; o++)
                        if (t = e[o], "_" !== t) {
                            if (!r(e.charCodeAt(o)))
                                return !1;
                            s = !0;
                        }
                    return s;
                }
                for (; n > o; o++)
                    if (t = e[o], "_" !== t) {
                        if (!i(e.charCodeAt(o)))
                            return !1;
                        s = !0;
                    }
                return s;
            } for (; n > o; o++)
                if (t = e[o], "_" !== t) {
                    if (":" === t)
                        break;
                    if (!a(e.charCodeAt(o)))
                        return !1;
                    s = !0;
                } return s ? ":" !== t ? !0 : /^(:[0-5]?[0-9])+$/.test(e.slice(o)) : !1; }
            function s(e) { var t, n, r = e, i = 1, a = []; return -1 !== r.indexOf("_") && (r = r.replace(/_/g, "")), t = r[0], ("-" === t || "+" === t) && ("-" === t && (i = -1), r = r.slice(1), t = r[0]), "0" === r ? 0 : "0" === t ? "b" === r[1] ? i * parseInt(r.slice(2), 2) : "x" === r[1] ? i * parseInt(r, 16) : i * parseInt(r, 8) : -1 !== r.indexOf(":") ? (r.split(":").forEach(function (e) { a.unshift(parseInt(e, 10)); }), r = 0, n = 1, a.forEach(function (e) { r += e * n, n *= 60; }), i * r) : i * parseInt(r, 10); }
            function u(e) { return "[object Number]" === Object.prototype.toString.call(e) && 0 === e % 1 && !l.isNegativeZero(e); }
            var l = n(135), p = n(202);
            e.exports = new p.Type("tag:yaml.org,2002:int", { kind: "scalar", resolve: o, construct: s, predicate: u, represent: { binary: function (e) { return "0b" + e.toString(2); }, octal: function (e) { return "0" + e.toString(8); }, decimal: function (e) { return e.toString(10); }, hexadecimal: function (e) { return "0x" + e.toString(16).toUpperCase(); } }, defaultStyle: "decimal", styleAliases: { binary: [2, "bin"], octal: [8, "oct"], decimal: [10, "dec"], hexadecimal: [16, "hex"] } });
        }, function (e, t, n) {
            "use strict";
            function r(e) { if (null === e)
                return !1; return l.test(e) ? !0 : !1; }
            function i(e) { var t, n, r, i; return t = e.replace(/_/g, "").toLowerCase(), n = "-" === t[0] ? -1 : 1, i = [], 0 <= "+-".indexOf(t[0]) && (t = t.slice(1)), ".inf" === t ? 1 === n ? Number.POSITIVE_INFINITY : Number.NEGATIVE_INFINITY : ".nan" === t ? NaN : 0 <= t.indexOf(":") ? (t.split(":").forEach(function (e) { i.unshift(parseFloat(e, 10)); }), t = 0, r = 1, i.forEach(function (e) { t += e * r, r *= 60; }), n * t) : n * parseFloat(t, 10); }
            function a(e, t) { if (isNaN(e))
                switch (t) {
                    case "lowercase": return ".nan";
                    case "uppercase": return ".NAN";
                    case "camelcase": return ".NaN";
                }
            else if (Number.POSITIVE_INFINITY === e)
                switch (t) {
                    case "lowercase": return ".inf";
                    case "uppercase": return ".INF";
                    case "camelcase": return ".Inf";
                }
            else if (Number.NEGATIVE_INFINITY === e)
                switch (t) {
                    case "lowercase": return "-.inf";
                    case "uppercase": return "-.INF";
                    case "camelcase": return "-.Inf";
                }
            else if (s.isNegativeZero(e))
                return "-0.0"; return e.toString(10); }
            function o(e) { return "[object Number]" === Object.prototype.toString.call(e) && (0 !== e % 1 || s.isNegativeZero(e)); }
            var s = n(135), u = n(202), l = new RegExp("^(?:[-+]?(?:[0-9][0-9_]*)\\.[0-9_]*(?:[eE][-+][0-9]+)?|\\.[0-9_]+(?:[eE][-+][0-9]+)?|[-+]?[0-9][0-9_]*(?::[0-5]?[0-9])+\\.[0-9_]*|[-+]?\\.(?:inf|Inf|INF)|\\.(?:nan|NaN|NAN))$");
            e.exports = new u.Type("tag:yaml.org,2002:float", { kind: "scalar", resolve: r, construct: i, predicate: o, represent: a, defaultStyle: "lowercase" });
        }, function (e, t, n) { function r(e) { return n(i(e)); } function i(e) { return a[e] || function () { throw new Error("Cannot find module '" + e + "'."); }(); } var a = { "./ar": 227, "./ar.js": 227, "./bn": 228, "./bn.js": 228, "./de": 229, "./de.js": 229, "./es": 230, "./es.js": 230, "./fr": 231, "./fr.js": 231, "./hi": 232, "./hi.js": 232, "./it": 233, "./it.js": 233, "./ja": 234, "./ja.js": 234, "./ko": 235, "./ko.js": 235, "./pt": 236, "./pt.js": 236, "./ru": 237, "./ru.js": 237, "./zh-cn": 238, "./zh-cn.js": 238, "./zh-tw": 239, "./zh-tw.js": 239 }; r.id = 219, r.keys = function () { return Object.keys(a); }, r.resolve = i, e.exports = r; }, function (e, t, n) { (function (e) { function n(e) { return Array.isArray ? Array.isArray(e) : "[object Array]" === y(e); } function r(e) { return "boolean" == typeof e; } function i(e) { return null === e; } function a(e) { return null == e; } function o(e) { return "number" == typeof e; } function s(e) { return "string" == typeof e; } function u(e) { return "symbol" == typeof e; } function l(e) { return void 0 === e; } function p(e) { return "[object RegExp]" === y(e); } function c(e) { return "object" == typeof e && null !== e; } function f(e) { return "[object Date]" === y(e); } function m(e) { return "[object Error]" === y(e) || e instanceof Error; } function h(e) { return "function" == typeof e; } function d(e) { return null === e || "boolean" == typeof e || "number" == typeof e || "string" == typeof e || "symbol" == typeof e || "undefined" == typeof e; } function y(e) { return Object.prototype.toString.call(e); } t.isArray = n, t.isBoolean = r, t.isNull = i, t.isNullOrUndefined = a, t.isNumber = o, t.isString = s, t.isSymbol = u, t.isUndefined = l, t.isRegExp = p, t.isObject = c, t.isDate = f, t.isError = m, t.isFunction = h, t.isPrimitive = d, t.isBuffer = e.isBuffer; }).call(t, n(113).Buffer); }, function (e, t, n) {
            "use strict";
            function r(e) { if (!e)
                return "utf8"; for (var t;;)
                switch (e) {
                    case "utf8":
                    case "utf-8": return "utf8";
                    case "ucs2":
                    case "ucs-2":
                    case "utf16le":
                    case "utf-16le": return "utf16le";
                    case "latin1":
                    case "binary": return "latin1";
                    case "base64":
                    case "ascii":
                    case "hex": return e;
                    default:
                        if (t)
                            return;
                        e = ("" + e).toLowerCase(), t = !0;
                } }
            function i(e) { var t = r(e); if ("string" != typeof t && (g.isEncoding === A || !A(e)))
                throw new Error("Unknown encoding: " + e); return t || e; }
            function a(e) { this.encoding = i(e); var t; switch (this.encoding) {
                case "utf16le":
                    this.text = f, this.end = m, t = 4;
                    break;
                case "utf8":
                    this.fillLast = l, t = 4;
                    break;
                case "base64":
                    this.text = h, this.end = d, t = 3;
                    break;
                default: return this.write = y, void (this.end = v);
            } this.lastNeed = 0, this.lastTotal = 0, this.lastChar = g.allocUnsafe(t); }
            function o(e) { return 127 >= e ? 0 : e >> 5 === 6 ? 2 : e >> 4 === 14 ? 3 : e >> 3 === 30 ? 4 : -1; }
            function s(e, t, n) { var r = t.length - 1; if (n > r)
                return 0; var i = o(t[r]); return i >= 0 ? (i > 0 && (e.lastNeed = i - 1), i) : --r < n ? 0 : (i = o(t[r]), i >= 0 ? (i > 0 && (e.lastNeed = i - 2), i) : --r < n ? 0 : (i = o(t[r]), i >= 0 ? (i > 0 && (2 === i ? i = 0 : e.lastNeed = i - 3), i) : 0)); }
            function u(e, t, n) { if (128 !== (192 & t[0]))
                return e.lastNeed = 0, "�".repeat(n); if (e.lastNeed > 1 && t.length > 1) {
                if (128 !== (192 & t[1]))
                    return e.lastNeed = 1, "�".repeat(n + 1);
                if (e.lastNeed > 2 && t.length > 2 && 128 !== (192 & t[2]))
                    return e.lastNeed = 2, "�".repeat(n + 2);
            } }
            function l(e) { var t = this.lastTotal - this.lastNeed, n = u(this, e, t); return void 0 !== n ? n : this.lastNeed <= e.length ? (e.copy(this.lastChar, t, 0, this.lastNeed), this.lastChar.toString(this.encoding, 0, this.lastTotal)) : (e.copy(this.lastChar, t, 0, e.length), void (this.lastNeed -= e.length)); }
            function p(e, t) { var n = s(this, e, t); if (!this.lastNeed)
                return e.toString("utf8", t); this.lastTotal = n; var r = e.length - (n - this.lastNeed); return e.copy(this.lastChar, 0, r), e.toString("utf8", t, r); }
            function c(e) { var t = e && e.length ? this.write(e) : ""; return this.lastNeed ? t + "�".repeat(this.lastTotal - this.lastNeed) : t; }
            function f(e, t) { if ((e.length - t) % 2 === 0) {
                var n = e.toString("utf16le", t);
                if (n) {
                    var r = n.charCodeAt(n.length - 1);
                    if (r >= 55296 && 56319 >= r)
                        return this.lastNeed = 2, this.lastTotal = 4, this.lastChar[0] = e[e.length - 2], this.lastChar[1] = e[e.length - 1], n.slice(0, -1);
                }
                return n;
            } return this.lastNeed = 1, this.lastTotal = 2, this.lastChar[0] = e[e.length - 1], e.toString("utf16le", t, e.length - 1); }
            function m(e) { var t = e && e.length ? this.write(e) : ""; if (this.lastNeed) {
                var n = this.lastTotal - this.lastNeed;
                return t + this.lastChar.toString("utf16le", 0, n);
            } return t; }
            function h(e, t) { var n = (e.length - t) % 3; return 0 === n ? e.toString("base64", t) : (this.lastNeed = 3 - n, this.lastTotal = 3, 1 === n ? this.lastChar[0] = e[e.length - 1] : (this.lastChar[0] = e[e.length - 2], this.lastChar[1] = e[e.length - 1]), e.toString("base64", t, e.length - n)); }
            function d(e) { var t = e && e.length ? this.write(e) : ""; return this.lastNeed ? t + this.lastChar.toString("base64", 0, 3 - this.lastNeed) : t; }
            function y(e) { return e.toString(this.encoding); }
            function v(e) { return e && e.length ? this.write(e) : ""; }
            var g = n(211).Buffer, A = g.isEncoding || function (e) { switch (e = "" + e, e && e.toLowerCase()) {
                case "hex":
                case "utf8":
                case "utf-8":
                case "ascii":
                case "binary":
                case "base64":
                case "ucs2":
                case "ucs-2":
                case "utf16le":
                case "utf-16le":
                case "raw": return !0;
                default: return !1;
            } };
            t.StringDecoder = a, a.prototype.write = function (e) { if (0 === e.length)
                return ""; var t, n; if (this.lastNeed) {
                if (t = this.fillLast(e), void 0 === t)
                    return "";
                n = this.lastNeed, this.lastNeed = 0;
            }
            else
                n = 0; return n < e.length ? t ? t + this.text(e, n) : this.text(e, n) : t || ""; }, a.prototype.end = c, a.prototype.text = p, a.prototype.fillLast = function (e) { return this.lastNeed <= e.length ? (e.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed), this.lastChar.toString(this.encoding, 0, this.lastTotal)) : (e.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, e.length), void (this.lastNeed -= e.length)); };
        }, function (e, t, n) { (function () { t.defaults = { .1: { explicitCharkey: !1, trim: !0, normalize: !0, normalizeTags: !1, attrkey: "@", charkey: "#", explicitArray: !1, ignoreAttrs: !1, mergeAttrs: !1, explicitRoot: !1, validator: null, xmlns: !1, explicitChildren: !1, childkey: "@@", charsAsChildren: !1, includeWhiteChars: !1, async: !1, strict: !0, attrNameProcessors: null, attrValueProcessors: null, tagNameProcessors: null, valueProcessors: null, emptyTag: "" }, .2: { explicitCharkey: !1, trim: !1, normalize: !1, normalizeTags: !1, attrkey: "$", charkey: "_", explicitArray: !0, ignoreAttrs: !1, mergeAttrs: !1, explicitRoot: !0, validator: null, xmlns: !1, explicitChildren: !1, preserveChildrenOrder: !1, childkey: "$$", charsAsChildren: !1, includeWhiteChars: !1, async: !1, strict: !0, attrNameProcessors: null, attrValueProcessors: null, tagNameProcessors: null, valueProcessors: null, rootName: "root", xmldec: { version: "1.0", encoding: "UTF-8", standalone: !0 }, doctype: null, renderOpts: { pretty: !0, indent: "  ", newline: "\n" }, headless: !1, chunkSize: 1e4, emptyTag: "", cdata: !1 } }; }).call(this); }, function (e, t, n) { (function () {
            "use strict";
            var e, r, i, a, o, s = {}.hasOwnProperty;
            e = n(247), r = n(222).defaults, a = function (e) { return "string" == typeof e && (e.indexOf("&") >= 0 || e.indexOf(">") >= 0 || e.indexOf("<") >= 0); }, o = function (e) { return "<![CDATA[" + i(e) + "]]>"; }, i = function (e) { return e.replace("]]>", "]]]]><![CDATA[>"); }, t.Builder = function () { function t(e) { var t, n, i; this.options = {}, n = r[.2]; for (t in n)
                s.call(n, t) && (i = n[t], this.options[t] = i); for (t in e)
                s.call(e, t) && (i = e[t], this.options[t] = i); } return t.prototype.buildObject = function (t) { var n, i, u, l, p; return n = this.options.attrkey, i = this.options.charkey, 1 === Object.keys(t).length && this.options.rootName === r[.2].rootName ? (p = Object.keys(t)[0], t = t[p]) : p = this.options.rootName, u = function (e) { return function (t, r) { var l, p, c, f, m, h; if ("object" != typeof r)
                e.options.cdata && a(r) ? t.raw(o(r)) : t.txt(r);
            else if (Array.isArray(r)) {
                for (f in r)
                    if (s.call(r, f)) {
                        p = r[f];
                        for (m in p)
                            c = p[m], t = u(t.ele(m), c).up();
                    }
            }
            else
                for (m in r)
                    if (s.call(r, m))
                        if (p = r[m], m === n) {
                            if ("object" == typeof p)
                                for (l in p)
                                    h = p[l], t = t.att(l, h);
                        }
                        else if (m === i)
                            t = e.options.cdata && a(p) ? t.raw(o(p)) : t.txt(p);
                        else if (Array.isArray(p))
                            for (f in p)
                                s.call(p, f) && (c = p[f], t = "string" == typeof c ? e.options.cdata && a(c) ? t.ele(m).raw(o(c)).up() : t.ele(m, c).up() : u(t.ele(m), c).up());
                        else
                            "object" == typeof p ? t = u(t.ele(m), p).up() : "string" == typeof p && e.options.cdata && a(p) ? t = t.ele(m).raw(o(p)).up() : (null == p && (p = ""), t = t.ele(m, p.toString()).up()); return t; }; }(this), l = e.create(p, this.options.xmldec, this.options.doctype, { headless: this.options.headless, allowSurrogateChars: this.options.allowSurrogateChars }), u(l, t).end(this.options.renderOpts); }, t; }();
        }).call(this); }, function (e, t, n) {
            (function () {
                "use strict";
                var e, r, i, a, o, s, u, l, p = function (e, t) { return function () { return e.apply(t, arguments); }; }, c = function (e, t) { function n() { this.constructor = e; } for (var r in t)
                    f.call(t, r) && (e[r] = t[r]); return n.prototype = t.prototype, e.prototype = new n, e.__super__ = t.prototype, e; }, f = {}.hasOwnProperty;
                u = n(246), i = n(210), e = n(244), s = n(225), l = n(245).setImmediate, r = n(222).defaults, a = function (e) { return "object" == typeof e && null != e && 0 === Object.keys(e).length; }, o = function (e, t, n) { var r, i, a; for (r = 0, i = e.length; i > r; r++)
                    a = e[r], t = a(t, n); return t; }, t.Parser = function (n) {
                    function i(e) { this.parseString = p(this.parseString, this), this.reset = p(this.reset, this), this.assignOrPush = p(this.assignOrPush, this), this.processAsync = p(this.processAsync, this); var n, i, a; if (!(this instanceof t.Parser))
                        return new t.Parser(e); this.options = {}, i = r[.2]; for (n in i)
                        f.call(i, n) && (a = i[n], this.options[n] = a); for (n in e)
                        f.call(e, n) && (a = e[n], this.options[n] = a); this.options.xmlns && (this.options.xmlnskey = this.options.attrkey + "ns"), this.options.normalizeTags && (this.options.tagNameProcessors || (this.options.tagNameProcessors = []), this.options.tagNameProcessors.unshift(s.normalize)), this.reset(); }
                    return c(i, n), i.prototype.processAsync = function () { var e, t; try {
                        return this.remaining.length <= this.options.chunkSize ? (e = this.remaining, this.remaining = "", this.saxParser = this.saxParser.write(e), this.saxParser.close()) : (e = this.remaining.substr(0, this.options.chunkSize), this.remaining = this.remaining.substr(this.options.chunkSize, this.remaining.length), this.saxParser = this.saxParser.write(e), l(this.processAsync));
                    }
                    catch (n) {
                        if (t = n, !this.saxParser.errThrown)
                            return this.saxParser.errThrown = !0, this.emit(t);
                    } }, i.prototype.assignOrPush = function (e, t, n) { return t in e ? (e[t] instanceof Array || (e[t] = [e[t]]), e[t].push(n)) : this.options.explicitArray ? e[t] = [n] : e[t] = n; }, i.prototype.reset = function () { var e, t, n, r; return this.removeAllListeners(), this.saxParser = u.parser(this.options.strict, { trim: !1, normalize: !1, xmlns: this.options.xmlns }), this.saxParser.errThrown = !1, this.saxParser.onerror = function (e) { return function (t) { return e.saxParser.resume(), e.saxParser.errThrown ? void 0 : (e.saxParser.errThrown = !0, e.emit("error", t)); }; }(this), this.saxParser.onend = function (e) { return function () { return e.saxParser.ended ? void 0 : (e.saxParser.ended = !0, e.emit("end", e.resultObject)); }; }(this), this.saxParser.ended = !1, this.EXPLICIT_CHARKEY = this.options.explicitCharkey, this.resultObject = null, r = [], e = this.options.attrkey, t = this.options.charkey, this.saxParser.onopentag = function (n) { return function (i) { var a, s, u, l, p; if (u = {}, u[t] = "", !n.options.ignoreAttrs) {
                        p = i.attributes;
                        for (a in p)
                            f.call(p, a) && (e in u || n.options.mergeAttrs || (u[e] = {}), s = n.options.attrValueProcessors ? o(n.options.attrValueProcessors, i.attributes[a], a) : i.attributes[a], l = n.options.attrNameProcessors ? o(n.options.attrNameProcessors, a) : a, n.options.mergeAttrs ? n.assignOrPush(u, l, s) : u[e][l] = s);
                    } return u["#name"] = n.options.tagNameProcessors ? o(n.options.tagNameProcessors, i.name) : i.name, n.options.xmlns && (u[n.options.xmlnskey] = { uri: i.uri, local: i.local }), r.push(u); }; }(this), this.saxParser.onclosetag = function (e) { return function () { var n, i, s, u, l, p, c, m, h, d; if (p = r.pop(), l = p["#name"], e.options.explicitChildren && e.options.preserveChildrenOrder || delete p["#name"], p.cdata === !0 && (n = p.cdata, delete p.cdata), h = r[r.length - 1], p[t].match(/^\s*$/) && !n ? (i = p[t], delete p[t]) : (e.options.trim && (p[t] = p[t].trim()), e.options.normalize && (p[t] = p[t].replace(/\s{2,}/g, " ").trim()), p[t] = e.options.valueProcessors ? o(e.options.valueProcessors, p[t], l) : p[t], 1 === Object.keys(p).length && t in p && !e.EXPLICIT_CHARKEY && (p = p[t])), a(p) && (p = "" !== e.options.emptyTag ? e.options.emptyTag : i), null != e.options.validator && (d = "/" + function () { var e, t, n; for (n = [], e = 0, t = r.length; t > e; e++)
                        u = r[e], n.push(u["#name"]); return n; }().concat(l).join("/"), function () { var t; try {
                        return p = e.options.validator(d, h && h[l], p);
                    }
                    catch (n) {
                        return t = n, e.emit("error", t);
                    } }()), e.options.explicitChildren && !e.options.mergeAttrs && "object" == typeof p)
                        if (e.options.preserveChildrenOrder) {
                            if (h) {
                                h[e.options.childkey] = h[e.options.childkey] || [], c = {};
                                for (s in p)
                                    f.call(p, s) && (c[s] = p[s]);
                                h[e.options.childkey].push(c), delete p["#name"], 1 === Object.keys(p).length && t in p && !e.EXPLICIT_CHARKEY && (p = p[t]);
                            }
                        }
                        else
                            u = {}, e.options.attrkey in p && (u[e.options.attrkey] = p[e.options.attrkey], delete p[e.options.attrkey]), !e.options.charsAsChildren && e.options.charkey in p && (u[e.options.charkey] = p[e.options.charkey], delete p[e.options.charkey]), Object.getOwnPropertyNames(p).length > 0 && (u[e.options.childkey] = p), p = u; return r.length > 0 ? e.assignOrPush(h, l, p) : (e.options.explicitRoot && (m = p, p = {}, p[l] = m), e.resultObject = p, e.saxParser.ended = !0, e.emit("end", e.resultObject)); }; }(this), n = function (e) { return function (n) { var i, a; return a = r[r.length - 1], a ? (a[t] += n, e.options.explicitChildren && e.options.preserveChildrenOrder && e.options.charsAsChildren && (e.options.includeWhiteChars || "" !== n.replace(/\\n/g, "").trim()) && (a[e.options.childkey] = a[e.options.childkey] || [], i = { "#name": "__text__" }, i[t] = n, e.options.normalize && (i[t] = i[t].replace(/\s{2,}/g, " ").trim()), a[e.options.childkey].push(i)), a) : void 0; }; }(this), this.saxParser.ontext = n, this.saxParser.oncdata = function (e) { return function (e) { var t; return t = n(e), t ? t.cdata = !0 : void 0; }; }(this); }, i.prototype.parseString = function (t, n) {
                        var r;
                        null != n && "function" == typeof n && (this.on("end", function (e) { return this.reset(), n(null, e); }), this.on("error", function (e) {
                            return this.reset(), n(e);
                        }));
                        try {
                            return t = t.toString(), "" === t.trim() ? void this.emit("error", new Error("Empty string is not valid XML")) : (t = e.stripBOM(t), this.options.async ? (this.remaining = t, l(this.processAsync), this.saxParser) : this.saxParser.write(t).close());
                        }
                        catch (i) {
                            if (r = i, !this.saxParser.errThrown && !this.saxParser.ended)
                                return this.emit("error", r), this.saxParser.errThrown = !0;
                            if (this.saxParser.ended)
                                throw r;
                        }
                    }, i;
                }(i.EventEmitter), t.parseString = function (e, n, r) { var i, a, o; return null != r ? ("function" == typeof r && (i = r), "object" == typeof n && (a = n)) : ("function" == typeof n && (i = n), a = {}), o = new t.Parser(a), o.parseString(e, i); };
            }).call(this);
        }, function (e, t, n) { (function () {
            "use strict";
            var e;
            e = new RegExp(/(?!xmlns)^.*:/), t.normalize = function (e) { return e.toLowerCase(); }, t.firstCharLowerCase = function (e) { return e.charAt(0).toLowerCase() + e.slice(1); }, t.stripPrefix = function (t) { return t.replace(e, ""); }, t.parseNumbers = function (e) { return isNaN(e) || (e = e % 1 === 0 ? parseInt(e, 10) : parseFloat(e)), e; }, t.parseBooleans = function (e) { return /^(?:true|false)$/i.test(e) && (e = "true" === e.toLowerCase()), e; };
        }).call(this); }, function (e, t, n) { (function (t) {
            "use strict";
            function n(e) { s.length || (o(), u = !0), s[s.length] = e; }
            function r() { for (; l < s.length;) {
                var e = l;
                if (l += 1, s[e].call(), l > p) {
                    for (var t = 0, n = s.length - l; n > t; t++)
                        s[t] = s[t + l];
                    s.length -= l, l = 0;
                }
            } s.length = 0, l = 0, u = !1; }
            function i(e) { var t = 1, n = new f(e), r = document.createTextNode(""); return n.observe(r, { characterData: !0 }), function () { t = -t, r.data = t; }; }
            function a(e) { return function () { function t() { clearTimeout(n), clearInterval(r), e(); } var n = setTimeout(t, 0), r = setInterval(t, 50); }; }
            e.exports = n;
            var o, s = [], u = !1, l = 0, p = 1024, c = "undefined" != typeof t ? t : self, f = c.MutationObserver || c.WebKitMutationObserver;
            o = "function" == typeof f ? i(r) : a(r), n.requestFlush = o, n.makeRequestCallFromTimer = a;
        }).call(t, function () { return this; }()); }, function (e, t, n) {
            var r, i, a; /**
                 * @preserve date-and-time.js locale configuration
                 * @preserve Arabic (ar)
                 * @preserve It is using moment.js locale configuration as a reference.
                 */
            !function (o) {
                "use strict";
                var s = function (e) { var t = ["٠", "١", "٢", "٣", "٤", "٥", "٦", "٧", "٨", "٩"], n = { "٠": 0, "١": 1, "٢": 2, "٣": 3, "٤": 4, "٥": 5, "٦": 6, "٧": 7, "٨": 8, "٩": 9 }; e.setLocales("ar", { MMMM: ["كانون الثاني يناير", "شباط فبراير", "آذار مارس", "نيسان أبريل", "أيار مايو", "حزيران يونيو", "تموز يوليو", "آب أغسطس", "أيلول سبتمبر", "تشرين الأول أكتوبر", "تشرين الثاني نوفمبر", "كانون الأول ديسمبر"], MMM: ["كانون الثاني يناير", "شباط فبراير", "آذار مارس", "نيسان أبريل", "أيار مايو", "حزيران يونيو", "تموز يوليو", "آب أغسطس", "أيلول سبتمبر", "تشرين الأول أكتوبر", "تشرين الثاني نوفمبر", "كانون الأول ديسمبر"], dddd: ["الأحد", "الإثنين", "الثلاثاء", "الأربعاء", "الخميس", "الجمعة", "السبت"], ddd: ["أحد", "إثنين", "ثلاثاء", "أربعاء", "خميس", "جمعة", "سبت"], dd: ["ح", "ن", "ث", "ر", "خ", "ج", "س"], A: ["ص", "م"], formats: { post: function (e) { return e.replace(/\d/g, function (e) { return t[0 | e]; }); } }, parsers: { pre: function (e) { return e.replace(/[٠١٢٣٤٥٦٧٨٩]/g, function (e) { return "" + n[e]; }); } } }); };
                "object" == typeof e && "object" == typeof e.exports ? s(n(203)) : (i = [n(203)], r = s, a = "function" == typeof r ? r.apply(t, i) : r, !(void 0 !== a && (e.exports = a)));
            }(this);
        }, function (e, t, n) {
            var r, i, a; /**
                 * @preserve date-and-time.js locale configuration
                 * @preserve Bengali (bn)
                 * @preserve It is using moment.js locale configuration as a reference.
                 */
            !function (o) {
                "use strict";
                var s = function (e) { e.setLocales("bn", { MMMM: ["জানুয়ারী", "ফেবুয়ারী", "মার্চ", "এপ্রিল", "মে", "জুন", "জুলাই", "অগাস্ট", "সেপ্টেম্বর", "অক্টোবর", "নভেম্বর", "ডিসেম্বর"], MMM: ["জানু", "ফেব", "মার্চ", "এপর", "মে", "জুন", "জুল", "অগ", "সেপ্ট", "অক্টো", "নভ", "ডিসেম্"], dddd: ["রবিবার", "সোমবার", "মঙ্গলবার", "বুধবার", "বৃহস্পত্তিবার", "শুক্রবার", "শনিবার"], ddd: ["রবি", "সোম", "মঙ্গল", "বুধ", "বৃহস্পত্তি", "শুক্র", "শনি"], dd: ["রব", "সম", "মঙ্গ", "বু", "ব্রিহ", "শু", "শনি"], A: ["রাত", "সকাল", "দুপুর", "বিকাল"], formats: { A: function (e) { var t = e.getHours(); return 4 > t ? this.A[0] : 10 > t ? this.A[1] : 17 > t ? this.A[2] : 20 > t ? this.A[3] : this.A[0]; } }, parsers: { h: function (e, t) { return 1 > t ? 4 > e || e > 11 ? e : e + 12 : 2 > t ? e : 3 > t && e > 9 ? e : e + 12; } } }); };
                "object" == typeof e && "object" == typeof e.exports ? s(n(203)) : (i = [n(203)], r = s, a = "function" == typeof r ? r.apply(t, i) : r, !(void 0 !== a && (e.exports = a)));
            }(this);
        }, function (e, t, n) {
            var r, i, a; /**
                 * @preserve date-and-time.js locale configuration
                 * @preserve German (de)
                 * @preserve It is using moment.js locale configuration as a reference.
                 */
            !function (o) {
                "use strict";
                var s = function (e) { e.setLocales("de", { MMMM: ["Januar", "Februar", "März", "April", "Mai", "Juni", "Juli", "August", "September", "Oktober", "November", "Dezember"], MMM: ["Jan.", "Febr.", "Mrz.", "Apr.", "Mai", "Jun.", "Jul.", "Aug.", "Sept.", "Okt.", "Nov.", "Dez."], dddd: ["Sonntag", "Montag", "Dienstag", "Mittwoch", "Donnerstag", "Freitag", "Samstag"], ddd: ["So.", "Mo.", "Di.", "Mi.", "Do.", "Fr.", "Sa."], dd: ["So", "Mo", "Di", "Mi", "Do", "Fr", "Sa"], A: ["Uhr nachmittags", "Uhr morgens"] }); };
                "object" == typeof e && "object" == typeof e.exports ? s(n(203)) : (i = [n(203)], r = s, a = "function" == typeof r ? r.apply(t, i) : r, !(void 0 !== a && (e.exports = a)));
            }(this);
        }, function (e, t, n) {
            var r, i, a; /**
                 * @preserve date-and-time.js locale configuration
                 * @preserve Spanish (es)
                 * @preserve It is using moment.js locale configuration as a reference.
                 */
            !function (o) {
                "use strict";
                var s = function (e) { e.setLocales("es", { MMMM: ["enero", "febrero", "marzo", "abril", "mayo", "junio", "julio", "agosto", "septiembre", "octubre", "noviembre", "diciembre"], MMM: ["ene.", "feb.", "mar.", "abr.", "may.", "jun.", "jul.", "ago.", "sep.", "oct.", "nov.", "dic."], dddd: ["domingo", "lunes", "martes", "miércoles", "jueves", "viernes", "sábado"], ddd: ["dom.", "lun.", "mar.", "mié.", "jue.", "vie.", "sáb."], dd: ["do", "lu", "ma", "mi", "ju", "vi", "sá"], A: ["de la mañana", "de la tarde", "de la noche"], formats: { A: function (e) { var t = e.getHours(); return 12 > t ? this.A[0] : 19 > t ? this.A[1] : this.A[2]; } }, parsers: { h: function (e, t) { return 1 > t ? e : e > 11 ? e : e + 12; } } }); };
                "object" == typeof e && "object" == typeof e.exports ? s(n(203)) : (i = [n(203)], r = s, a = "function" == typeof r ? r.apply(t, i) : r, !(void 0 !== a && (e.exports = a)));
            }(this);
        }, function (e, t, n) {
            var r, i, a; /**
                 * @preserve date-and-time.js locale configuration
                 * @preserve French (fr)
                 * @preserve It is using moment.js locale configuration as a reference.
                 */
            !function (o) {
                "use strict";
                var s = function (e) { e.setLocales("fr", { MMMM: ["janvier", "février", "mars", "avril", "mai", "juin", "juillet", "août", "septembre", "octobre", "novembre", "décembre"], MMM: ["janv.", "févr.", "mars", "avr.", "mai", "juin", "juil.", "août", "sept.", "oct.", "nov.", "déc."], dddd: ["dimanche", "lundi", "mardi", "mercredi", "jeudi", "vendredi", "samedi"], ddd: ["dim.", "lun.", "mar.", "mer.", "jeu.", "ven.", "sam."], dd: ["Di", "Lu", "Ma", "Me", "Je", "Ve", "Sa"], A: ["matin", "l'après-midi"] }); };
                "object" == typeof e && "object" == typeof e.exports ? s(n(203)) : (i = [n(203)], r = s, a = "function" == typeof r ? r.apply(t, i) : r, !(void 0 !== a && (e.exports = a)));
            }(this);
        }, function (e, t, n) {
            var r, i, a; /**
                 * @preserve date-and-time.js locale configuration
                 * @preserve Hindi (hi)
                 * @preserve It is using moment.js locale configuration as a reference.
                 */
            !function (o) {
                "use strict";
                var s = function (e) { e.setLocales("hi", { MMMM: ["जनवरी", "फ़रवरी", "मार्च", "अप्रैल", "मई", "जून", "जुलाई", "अगस्त", "सितम्बर", "अक्टूबर", "नवम्बर", "दिसम्बर"], MMM: ["जन.", "फ़र.", "मार्च", "अप्रै.", "मई", "जून", "जुल.", "अग.", "सित.", "अक्टू.", "नव.", "दिस."], dddd: ["रविवार", "सोमवार", "मंगलवार", "बुधवार", "गुरूवार", "शुक्रवार", "शनिवार"], ddd: ["रवि", "सोम", "मंगल", "बुध", "गुरू", "शुक्र", "शनि"], dd: ["र", "सो", "मं", "बु", "गु", "शु", "श"], A: ["रात", "सुबह", "दोपहर", "शाम"], formats: { A: function (e) { var t = e.getHours(); return 4 > t ? this.A[0] : 10 > t ? this.A[1] : 17 > t ? this.A[2] : 20 > t ? this.A[3] : this.A[0]; } }, parsers: { h: function (e, t) { return 1 > t ? 4 > e || e > 11 ? e : e + 12 : 2 > t ? e : 3 > t && e > 9 ? e : e + 12; } } }); };
                "object" == typeof e && "object" == typeof e.exports ? s(n(203)) : (i = [n(203)], r = s, a = "function" == typeof r ? r.apply(t, i) : r, !(void 0 !== a && (e.exports = a)));
            }(this);
        }, function (e, t, n) {
            var r, i, a; /**
                 * @preserve date-and-time.js locale configuration
                 * @preserve Italian (it)
                 * @preserve It is using moment.js locale configuration as a reference.
                 */
            !function (o) {
                "use strict";
                var s = function (e) { e.setLocales("it", { MMMM: ["gennaio", "febbraio", "marzo", "aprile", "maggio", "giugno", "luglio", "agosto", "settembre", "ottobre", "novembre", "dicembre"], MMM: ["gen", "feb", "mar", "apr", "mag", "giu", "lug", "ago", "set", "ott", "nov", "dic"], dddd: ["Domenica", "Lunedì", "Martedì", "Mercoledì", "Giovedì", "Venerdì", "Sabato"], ddd: ["Dom", "Lun", "Mar", "Mer", "Gio", "Ven", "Sab"], dd: ["Do", "Lu", "Ma", "Me", "Gi", "Ve", "Sa"], A: ["di mattina", "di pomerrigio"] }); };
                "object" == typeof e && "object" == typeof e.exports ? s(n(203)) : (i = [n(203)], r = s, a = "function" == typeof r ? r.apply(t, i) : r, !(void 0 !== a && (e.exports = a)));
            }(this);
        }, function (e, t, n) {
            var r, i, a; /**
                 * @preserve date-and-time.js locale configuration
                 * @preserve Japanese (ja)
                 * @preserve It is using moment.js locale configuration as a reference.
                 */
            !function (o) {
                "use strict";
                var s = function (e) { e.setLocales("ja", { MMMM: ["1月", "2月", "3月", "4月", "5月", "6月", "7月", "8月", "9月", "10月", "11月", "12月"], MMM: ["1月", "2月", "3月", "4月", "5月", "6月", "7月", "8月", "9月", "10月", "11月", "12月"], dddd: ["日曜日", "月曜日", "火曜日", "水曜日", "木曜日", "金曜日", "土曜日"], ddd: ["日", "月", "火", "水", "木", "金", "土"], dd: ["日", "月", "火", "水", "木", "金", "土"], A: ["午前", "午後"], formats: { hh: function (e) { return ("0" + e.getHours() % 12).slice(-2); }, h: function (e) { return e.getHours() % 12; } } }); };
                "object" == typeof e && "object" == typeof e.exports ? s(n(203)) : (i = [n(203)], r = s, a = "function" == typeof r ? r.apply(t, i) : r, !(void 0 !== a && (e.exports = a)));
            }(this);
        }, function (e, t, n) {
            var r, i, a; /**
                 * @preserve date-and-time.js locale configuration
                 * @preserve Korean (ko)
                 * @preserve It is using moment.js locale configuration as a reference.
                 */
            !function (o) {
                "use strict";
                var s = function (e) { e.setLocales("ko", { MMMM: ["1월", "2월", "3월", "4월", "5월", "6월", "7월", "8월", "9월", "10월", "11월", "12월"], MMM: ["1월", "2월", "3월", "4월", "5월", "6월", "7월", "8월", "9월", "10월", "11월", "12월"], dddd: ["일요일", "월요일", "화요일", "수요일", "목요일", "금요일", "토요일"], ddd: ["일", "월", "화", "수", "목", "금", "토"], dd: ["일", "월", "화", "수", "목", "금", "토"], A: ["오전", "오후"] }); };
                "object" == typeof e && "object" == typeof e.exports ? s(n(203)) : (i = [n(203)], r = s, a = "function" == typeof r ? r.apply(t, i) : r, !(void 0 !== a && (e.exports = a)));
            }(this);
        }, function (e, t, n) {
            var r, i, a; /**
                 * @preserve date-and-time.js locale configuration
                 * @preserve Portuguese (pt)
                 * @preserve It is using moment.js locale configuration as a reference.
                 */
            !function (o) {
                "use strict";
                var s = function (e) { e.setLocales("pt", { MMMM: ["Janeiro", "Fevereiro", "Março", "Abril", "Maio", "Junho", "Julho", "Agosto", "Setembro", "Outubro", "Novembro", "Dezembro"], MMM: ["Jan", "Fev", "Mar", "Abr", "Mai", "Jun", "Jul", "Ago", "Set", "Out", "Nov", "Dez"], dddd: ["Domingo", "Segunda-Feira", "Terça-Feira", "Quarta-Feira", "Quinta-Feira", "Sexta-Feira", "Sábado"], ddd: ["Dom", "Seg", "Ter", "Qua", "Qui", "Sex", "Sáb"], dd: ["Dom", "2ª", "3ª", "4ª", "5ª", "6ª", "Sáb"], A: ["da madrugada", "da manhã", "da tarde", "da noite"], formats: { A: function (e) { var t = e.getHours(); return 5 > t ? this.A[0] : 12 > t ? this.A[1] : 19 > t ? this.A[2] : this.A[3]; } }, parsers: { h: function (e, t) { return 2 > t ? e : e > 11 ? e : e + 12; } } }); };
                "object" == typeof e && "object" == typeof e.exports ? s(n(203)) : (i = [n(203)], r = s, a = "function" == typeof r ? r.apply(t, i) : r, !(void 0 !== a && (e.exports = a)));
            }(this);
        }, function (e, t, n) {
            var r, i, a; /**
                 * @preserve date-and-time.js locale configuration
                 * @preserve Russian (ru)
                 * @preserve It is using moment.js locale configuration as a reference.
                 */
            !function (o) {
                "use strict";
                var s = function (e) { e.setLocales("ru", { MMMM: ["Января", "Февраля", "Марта", "Апреля", "Мая", "Июня", "Июля", "Августа", "Сентября", "Октября", "Ноября", "Декабря"], MMM: ["янв", "фев", "мар", "апр", "мая", "июня", "июля", "авг", "сен", "окт", "ноя", "дек"], dddd: ["Воскресенье", "Понедельник", "Вторник", "Среду", "Четверг", "Пятницу", "Субботу"], ddd: ["Вс", "Пн", "Вт", "Ср", "Чт", "Пт", "Сб"], dd: ["Вс", "Пн", "Вт", "Ср", "Чт", "Пт", "Сб"], A: ["ночи", "утра", "дня", "вечера"], formats: { A: function (e) { var t = e.getHours(); return 4 > t ? this.A[0] : 12 > t ? this.A[1] : 17 > t ? this.A[2] : this.A[3]; } }, parsers: { h: function (e, t) { return 2 > t ? e : e > 11 ? e : e + 12; } } }); };
                "object" == typeof e && "object" == typeof e.exports ? s(n(203)) : (i = [n(203)], r = s, a = "function" == typeof r ? r.apply(t, i) : r, !(void 0 !== a && (e.exports = a)));
            }(this);
        }, function (e, t, n) {
            var r, i, a; /**
                 * @preserve date-and-time.js locale configuration
                 * @preserve Chinese (zh-cn)
                 * @preserve It is using moment.js locale configuration as a reference.
                 */
            !function (o) {
                "use strict";
                var s = function (e) { e.setLocales("zh-cn", { MMMM: ["一月", "二月", "三月", "四月", "五月", "六月", "七月", "八月", "九月", "十月", "十一月", "十二月"], MMM: ["1月", "2月", "3月", "4月", "5月", "6月", "7月", "8月", "9月", "10月", "11月", "12月"], dddd: ["星期日", "星期一", "星期二", "星期三", "星期四", "星期五", "星期六"], ddd: ["周日", "周一", "周二", "周三", "周四", "周五", "周六"], dd: ["日", "一", "二", "三", "四", "五", "六"], A: ["凌晨", "早上", "上午", "中午", "下午", "晚上"], formats: { A: function (e) { var t = 100 * e.getHours() + e.getMinutes(); return 600 > t ? this.A[0] : 900 > t ? this.A[1] : 1130 > t ? this.A[2] : 1230 > t ? this.A[3] : 1800 > t ? this.A[4] : this.A[5]; } }, parsers: { h: function (e, t) { return 4 > t ? e : e > 11 ? e : e + 12; } } }); };
                "object" == typeof e && "object" == typeof e.exports ? s(n(203)) : (i = [n(203)], r = s, a = "function" == typeof r ? r.apply(t, i) : r, !(void 0 !== a && (e.exports = a)));
            }(this);
        }, function (e, t, n) {
            var r, i, a; /**
                 * @preserve date-and-time.js locale configuration
                 * @preserve Chinese (zh-tw)
                 * @preserve It is using moment.js locale configuration as a reference.
                 */
            !function (o) {
                "use strict";
                var s = function (e) { e.setLocales("zh-tw", { MMMM: ["一月", "二月", "三月", "四月", "五月", "六月", "七月", "八月", "九月", "十月", "十一月", "十二月"], MMM: ["1月", "2月", "3月", "4月", "5月", "6月", "7月", "8月", "9月", "10月", "11月", "12月"], dddd: ["星期日", "星期一", "星期二", "星期三", "星期四", "星期五", "星期六"], ddd: ["周日", "周一", "周二", "周三", "周四", "周五", "周六"], dd: ["日", "一", "二", "三", "四", "五", "六"], A: ["早上", "上午", "中午", "下午", "晚上"], formats: { A: function (e) { var t = 100 * e.getHours() + e.getMinutes(); return 900 > t ? this.A[0] : 1130 > t ? this.A[1] : 1230 > t ? this.A[2] : 1800 > t ? this.A[3] : this.A[4]; } }, parsers: { h: function (e, t) { return 3 > t ? e : e > 11 ? e : e + 12; } } }); };
                "object" == typeof e && "object" == typeof e.exports ? s(n(203)) : (i = [n(203)], r = s, a = "function" == typeof r ? r.apply(t, i) : r, !(void 0 !== a && (e.exports = a)));
            }(this);
        }, function (e, t, n) {
            "use strict";
            function r() { if (u.length)
                throw u.shift(); }
            function i(e) { var t; t = s.length ? s.pop() : new a, t.task = e, o(t); }
            function a() { this.task = null; }
            var o = n(226), s = [], u = [], l = o.makeRequestCallFromTimer(r);
            e.exports = i, a.prototype.call = function () { try {
                this.task.call();
            }
            catch (e) {
                i.onerror ? i.onerror(e) : (u.push(e), l());
            }
            finally {
                this.task = null, s[s.length] = this;
            } };
        }, function (e, t, n) {
            "use strict";
            var r = n(202);
            e.exports = new r.Type("tag:yaml.org,2002:str", { kind: "scalar", construct: function (e) { return null !== e ? e : ""; } });
        }, function (e, t, n) {
            "use strict";
            var r = n(202);
            e.exports = new r.Type("tag:yaml.org,2002:seq", { kind: "sequence", construct: function (e) { return null !== e ? e : []; } });
        }, function (e, t, n) {
            "use strict";
            var r = n(202);
            e.exports = new r.Type("tag:yaml.org,2002:map", { kind: "mapping", construct: function (e) { return null !== e ? e : {}; } });
        }, function (e, t, n) { (function () {
            "use strict";
            t.stripBOM = function (e) { return "\ufeff" === e[0] ? e.substring(1) : e; };
        }).call(this); }, function (e, t, n) { function r(e, t) { this._id = e, this._clearFn = t; } var i = n(255).nextTick, a = Function.prototype.apply, o = Array.prototype.slice, s = {}, u = 0; t.setTimeout = function () { return new r(a.call(setTimeout, window, arguments), clearTimeout); }, t.setInterval = function () { return new r(a.call(setInterval, window, arguments), clearInterval); }, t.clearTimeout = t.clearInterval = function (e) { e.close(); }, r.prototype.unref = r.prototype.ref = function () { }, r.prototype.close = function () { this._clearFn.call(window, this._id); }, t.enroll = function (e, t) { clearTimeout(e._idleTimeoutId), e._idleTimeout = t; }, t.unenroll = function (e) { clearTimeout(e._idleTimeoutId), e._idleTimeout = -1; }, t._unrefActive = t.active = function (e) { clearTimeout(e._idleTimeoutId); var t = e._idleTimeout; t >= 0 && (e._idleTimeoutId = setTimeout(function () { e._onTimeout && e._onTimeout(); }, t)); }, t.setImmediate = "function" == typeof setImmediate ? setImmediate : function (e) { var n = u++, r = arguments.length < 2 ? !1 : o.call(arguments, 1); return s[n] = !0, i(function () { s[n] && (r ? e.apply(null, r) : e.call(null), t.clearImmediate(n)); }), n; }, t.clearImmediate = "function" == typeof clearImmediate ? clearImmediate : function (e) { delete s[e]; }; }, function (e, t, n) {
            (function (e) {
                !function (t) {
                    function r(e, n) { if (!(this instanceof r))
                        return new r(e, n); var i = this; a(i), i.q = i.c = "", i.bufferCheckPosition = t.MAX_BUFFER_LENGTH, i.opt = n || {}, i.opt.lowercase = i.opt.lowercase || i.opt.lowercasetags, i.looseCase = i.opt.lowercase ? "toLowerCase" : "toUpperCase", i.tags = [], i.closed = i.closedRoot = i.sawRoot = !1, i.tag = i.error = null, i.strict = !!e, i.noscript = !(!e && !i.opt.noscript), i.state = W.BEGIN, i.strictEntities = i.opt.strictEntities, i.ENTITIES = i.strictEntities ? Object.create(t.XML_ENTITIES) : Object.create(t.ENTITIES), i.attribList = [], i.opt.xmlns && (i.ns = Object.create(F)), i.trackPosition = i.opt.position !== !1, i.trackPosition && (i.position = i.line = i.column = 0), h(i, "onready"); }
                    function i(e) { for (var n = Math.max(t.MAX_BUFFER_LENGTH, 10), r = 0, i = 0, a = C.length; a > i; i++) {
                        var o = e[C[i]].length;
                        if (o > n)
                            switch (C[i]) {
                                case "textNode":
                                    y(e);
                                    break;
                                case "cdata":
                                    d(e, "oncdata", e.cdata), e.cdata = "";
                                    break;
                                case "script":
                                    d(e, "onscript", e.script), e.script = "";
                                    break;
                                default: g(e, "Max buffer length exceeded: " + C[i]);
                            }
                        r = Math.max(r, o);
                    } var s = t.MAX_BUFFER_LENGTH - r; e.bufferCheckPosition = s + e.position; }
                    function a(e) { for (var t = 0, n = C.length; n > t; t++)
                        e[C[t]] = ""; }
                    function o(e) { y(e), "" !== e.cdata && (d(e, "oncdata", e.cdata), e.cdata = ""), "" !== e.script && (d(e, "onscript", e.script), e.script = ""); }
                    function s(e, t) { return new u(e, t); }
                    function u(e, t) { if (!(this instanceof u))
                        return new u(e, t); L.apply(this), this._parser = new r(e, t), this.writable = !0, this.readable = !0; var n = this; this._parser.onend = function () { n.emit("end"); }, this._parser.onerror = function (e) { n.emit("error", e), n._parser.error = null; }, this._decoder = null, O.forEach(function (e) { Object.defineProperty(n, "on" + e, { get: function () { return n._parser["on" + e]; }, set: function (t) { return t ? void n.on(e, t) : (n.removeAllListeners(e), n._parser["on" + e] = t, t); }, enumerable: !0, configurable: !1 }); }); }
                    function l(e) { return " " === e || "\n" === e || "\r" === e || "	" === e; }
                    function p(e) { return '"' === e || "'" === e; }
                    function c(e) { return ">" === e || l(e); }
                    function f(e, t) { return e.test(t); }
                    function m(e, t) { return !f(e, t); }
                    function h(e, t, n) { e[t] && e[t](n); }
                    function d(e, t, n) { e.textNode && y(e), h(e, t, n); }
                    function y(e) { e.textNode = v(e.opt, e.textNode), e.textNode && h(e, "ontext", e.textNode), e.textNode = ""; }
                    function v(e, t) { return e.trim && (t = t.trim()), e.normalize && (t = t.replace(/\s+/g, " ")), t; }
                    function g(e, t) { return y(e), e.trackPosition && (t += "\nLine: " + e.line + "\nColumn: " + e.column + "\nChar: " + e.c), t = new Error(t), e.error = t, h(e, "onerror", t), e; }
                    function A(e) { return e.sawRoot && !e.closedRoot && T(e, "Unclosed root tag"), e.state !== W.BEGIN && e.state !== W.BEGIN_WHITESPACE && e.state !== W.TEXT && g(e, "Unexpected end"), y(e), e.c = "", e.closed = !0, h(e, "onend"), r.call(e, e.strict, e.opt), e; }
                    function T(e, t) { if ("object" != typeof e || !(e instanceof r))
                        throw new Error("bad call to strictFail"); e.strict && g(e, t); }
                    function E(e) { e.strict || (e.tagName = e.tagName[e.looseCase]()); var t = e.tags[e.tags.length - 1] || e, n = e.tag = { name: e.tagName, attributes: {} }; e.opt.xmlns && (n.ns = t.ns), e.attribList.length = 0, d(e, "onopentagstart", n); }
                    function S(e, t) { var n = e.indexOf(":"), r = 0 > n ? ["", e] : e.split(":"), i = r[0], a = r[1]; return t && "xmlns" === e && (i = "xmlns", a = ""), { prefix: i, local: a }; }
                    function N(e) { if (e.strict || (e.attribName = e.attribName[e.looseCase]()), -1 !== e.attribList.indexOf(e.attribName) || e.tag.attributes.hasOwnProperty(e.attribName))
                        return void (e.attribName = e.attribValue = ""); if (e.opt.xmlns) {
                        var t = S(e.attribName, !0), n = t.prefix, r = t.local;
                        if ("xmlns" === n)
                            if ("xml" === r && e.attribValue !== x)
                                T(e, "xml: prefix must be bound to " + x + "\nActual: " + e.attribValue);
                            else if ("xmlns" === r && e.attribValue !== k)
                                T(e, "xmlns: prefix must be bound to " + k + "\nActual: " + e.attribValue);
                            else {
                                var i = e.tag, a = e.tags[e.tags.length - 1] || e;
                                i.ns === a.ns && (i.ns = Object.create(a.ns)), i.ns[r] = e.attribValue;
                            }
                        e.attribList.push([e.attribName, e.attribValue]);
                    }
                    else
                        e.tag.attributes[e.attribName] = e.attribValue, d(e, "onattribute", { name: e.attribName, value: e.attribValue }); e.attribName = e.attribValue = ""; }
                    function _(e, t) { if (e.opt.xmlns) {
                        var n = e.tag, r = S(e.tagName);
                        n.prefix = r.prefix, n.local = r.local, n.uri = n.ns[r.prefix] || "", n.prefix && !n.uri && (T(e, "Unbound namespace prefix: " + JSON.stringify(e.tagName)), n.uri = r.prefix);
                        var i = e.tags[e.tags.length - 1] || e;
                        n.ns && i.ns !== n.ns && Object.keys(n.ns).forEach(function (t) { d(e, "onopennamespace", { prefix: t, uri: n.ns[t] }); });
                        for (var a = 0, o = e.attribList.length; o > a; a++) {
                            var s = e.attribList[a], u = s[0], l = s[1], p = S(u, !0), c = p.prefix, f = p.local, m = "" === c ? "" : n.ns[c] || "", h = { name: u, value: l, prefix: c, local: f, uri: m };
                            c && "xmlns" !== c && !m && (T(e, "Unbound namespace prefix: " + JSON.stringify(c)), h.uri = c), e.tag.attributes[u] = h, d(e, "onattribute", h);
                        }
                        e.attribList.length = 0;
                    } e.tag.isSelfClosing = !!t, e.sawRoot = !0, e.tags.push(e.tag), d(e, "onopentag", e.tag), t || (e.noscript || "script" !== e.tagName.toLowerCase() ? e.state = W.TEXT : e.state = W.SCRIPT, e.tag = null, e.tagName = ""), e.attribName = e.attribValue = "", e.attribList.length = 0; }
                    function b(e) { if (!e.tagName)
                        return T(e, "Weird empty close tag."), e.textNode += "</>", void (e.state = W.TEXT); if (e.script) {
                        if ("script" !== e.tagName)
                            return e.script += "</" + e.tagName + ">", e.tagName = "", void (e.state = W.SCRIPT);
                        d(e, "onscript", e.script), e.script = "";
                    } var t = e.tags.length, n = e.tagName; e.strict || (n = n[e.looseCase]()); for (var r = n; t--;) {
                        var i = e.tags[t];
                        if (i.name === r)
                            break;
                        T(e, "Unexpected close tag");
                    } if (0 > t)
                        return T(e, "Unmatched closing tag: " + e.tagName), e.textNode += "</" + e.tagName + ">", void (e.state = W.TEXT); e.tagName = n; for (var a = e.tags.length; a-- > t;) {
                        var o = e.tag = e.tags.pop();
                        e.tagName = e.tag.name, d(e, "onclosetag", e.tagName);
                        var s = {};
                        for (var u in o.ns)
                            s[u] = o.ns[u];
                        var l = e.tags[e.tags.length - 1] || e;
                        e.opt.xmlns && o.ns !== l.ns && Object.keys(o.ns).forEach(function (t) { var n = o.ns[t]; d(e, "onclosenamespace", { prefix: t, uri: n }); });
                    } 0 === t && (e.closedRoot = !0), e.tagName = e.attribValue = e.attribName = "", e.attribList.length = 0, e.state = W.TEXT; }
                    function I(e) { var t, n = e.entity, r = n.toLowerCase(), i = ""; return e.ENTITIES[n] ? e.ENTITIES[n] : e.ENTITIES[r] ? e.ENTITIES[r] : (n = r, "#" === n.charAt(0) && ("x" === n.charAt(1) ? (n = n.slice(2), t = parseInt(n, 16), i = t.toString(16)) : (n = n.slice(1), t = parseInt(n, 10), i = t.toString(10))), n = n.replace(/^0+/, ""), isNaN(t) || i.toLowerCase() !== n ? (T(e, "Invalid character entity"), "&" + e.entity + ";") : String.fromCodePoint(t)); }
                    function R(e, t) { "<" === t ? (e.state = W.OPEN_WAKA, e.startTagPosition = e.position) : l(t) || (T(e, "Non-whitespace before first tag."), e.textNode = t, e.state = W.TEXT); }
                    function M(e, t) { var n = ""; return t < e.length && (n = e.charAt(t)), n; }
                    function w(e) { var t = this; if (this.error)
                        throw this.error; if (t.closed)
                        return g(t, "Cannot write after close. Assign an onready handler."); if (null === e)
                        return A(t); "object" == typeof e && (e = e.toString()); for (var n = 0, r = "";;) {
                        if (r = M(e, n++), t.c = r, !r)
                            break;
                        switch ((t.trackPosition && (t.position++, "\n" === r ? (t.line++, t.column = 0) : t.column++), t.state)) {
                            case W.BEGIN:
                                if (t.state = W.BEGIN_WHITESPACE, "\ufeff" === r)
                                    continue;
                                R(t, r);
                                continue;
                            case W.BEGIN_WHITESPACE:
                                R(t, r);
                                continue;
                            case W.TEXT:
                                if (t.sawRoot && !t.closedRoot) {
                                    for (var a = n - 1; r && "<" !== r && "&" !== r;)
                                        r = M(e, n++), r && t.trackPosition && (t.position++, "\n" === r ? (t.line++, t.column = 0) : t.column++);
                                    t.textNode += e.substring(a, n - 1);
                                }
                                "<" !== r || t.sawRoot && t.closedRoot && !t.strict ? (l(r) || t.sawRoot && !t.closedRoot || T(t, "Text data outside of root node."), "&" === r ? t.state = W.TEXT_ENTITY : t.textNode += r) : (t.state = W.OPEN_WAKA, t.startTagPosition = t.position);
                                continue;
                            case W.SCRIPT:
                                "<" === r ? t.state = W.SCRIPT_ENDING : t.script += r;
                                continue;
                            case W.SCRIPT_ENDING:
                                "/" === r ? t.state = W.CLOSE_TAG : (t.script += "<" + r, t.state = W.SCRIPT);
                                continue;
                            case W.OPEN_WAKA:
                                if ("!" === r)
                                    t.state = W.SGML_DECL, t.sgmlDecl = "";
                                else if (l(r))
                                    ;
                                else if (f(B, r))
                                    t.state = W.OPEN_TAG, t.tagName = r;
                                else if ("/" === r)
                                    t.state = W.CLOSE_TAG, t.tagName = "";
                                else if ("?" === r)
                                    t.state = W.PROC_INST, t.procInstName = t.procInstBody = "";
                                else {
                                    if (T(t, "Unencoded <"), t.startTagPosition + 1 < t.position) {
                                        var o = t.position - t.startTagPosition;
                                        r = new Array(o).join(" ") + r;
                                    }
                                    t.textNode += "<" + r, t.state = W.TEXT;
                                }
                                continue;
                            case W.SGML_DECL:
                                (t.sgmlDecl + r).toUpperCase() === D ? (d(t, "onopencdata"), t.state = W.CDATA, t.sgmlDecl = "", t.cdata = "") : t.sgmlDecl + r === "--" ? (t.state = W.COMMENT, t.comment = "", t.sgmlDecl = "") : (t.sgmlDecl + r).toUpperCase() === U ? (t.state = W.DOCTYPE, (t.doctype || t.sawRoot) && T(t, "Inappropriately located doctype declaration"), t.doctype = "", t.sgmlDecl = "") : ">" === r ? (d(t, "onsgmldeclaration", t.sgmlDecl), t.sgmlDecl = "", t.state = W.TEXT) : p(r) ? (t.state = W.SGML_DECL_QUOTED, t.sgmlDecl += r) : t.sgmlDecl += r;
                                continue;
                            case W.SGML_DECL_QUOTED:
                                r === t.q && (t.state = W.SGML_DECL, t.q = ""), t.sgmlDecl += r;
                                continue;
                            case W.DOCTYPE:
                                ">" === r ? (t.state = W.TEXT, d(t, "ondoctype", t.doctype), t.doctype = !0) : (t.doctype += r, "[" === r ? t.state = W.DOCTYPE_DTD : p(r) && (t.state = W.DOCTYPE_QUOTED, t.q = r));
                                continue;
                            case W.DOCTYPE_QUOTED:
                                t.doctype += r, r === t.q && (t.q = "", t.state = W.DOCTYPE);
                                continue;
                            case W.DOCTYPE_DTD:
                                t.doctype += r, "]" === r ? t.state = W.DOCTYPE : p(r) && (t.state = W.DOCTYPE_DTD_QUOTED, t.q = r);
                                continue;
                            case W.DOCTYPE_DTD_QUOTED:
                                t.doctype += r, r === t.q && (t.state = W.DOCTYPE_DTD, t.q = "");
                                continue;
                            case W.COMMENT:
                                "-" === r ? t.state = W.COMMENT_ENDING : t.comment += r;
                                continue;
                            case W.COMMENT_ENDING:
                                "-" === r ? (t.state = W.COMMENT_ENDED, t.comment = v(t.opt, t.comment), t.comment && d(t, "oncomment", t.comment), t.comment = "") : (t.comment += "-" + r, t.state = W.COMMENT);
                                continue;
                            case W.COMMENT_ENDED:
                                ">" !== r ? (T(t, "Malformed comment"), t.comment += "--" + r, t.state = W.COMMENT) : t.state = W.TEXT;
                                continue;
                            case W.CDATA:
                                "]" === r ? t.state = W.CDATA_ENDING : t.cdata += r;
                                continue;
                            case W.CDATA_ENDING:
                                "]" === r ? t.state = W.CDATA_ENDING_2 : (t.cdata += "]" + r, t.state = W.CDATA);
                                continue;
                            case W.CDATA_ENDING_2:
                                ">" === r ? (t.cdata && d(t, "oncdata", t.cdata), d(t, "onclosecdata"), t.cdata = "", t.state = W.TEXT) : "]" === r ? t.cdata += "]" : (t.cdata += "]]" + r, t.state = W.CDATA);
                                continue;
                            case W.PROC_INST:
                                "?" === r ? t.state = W.PROC_INST_ENDING : l(r) ? t.state = W.PROC_INST_BODY : t.procInstName += r;
                                continue;
                            case W.PROC_INST_BODY:
                                if (!t.procInstBody && l(r))
                                    continue;
                                "?" === r ? t.state = W.PROC_INST_ENDING : t.procInstBody += r;
                                continue;
                            case W.PROC_INST_ENDING:
                                ">" === r ? (d(t, "onprocessinginstruction", { name: t.procInstName, body: t.procInstBody }), t.procInstName = t.procInstBody = "", t.state = W.TEXT) : (t.procInstBody += "?" + r, t.state = W.PROC_INST_BODY);
                                continue;
                            case W.OPEN_TAG:
                                f(K, r) ? t.tagName += r : (E(t), ">" === r ? _(t) : "/" === r ? t.state = W.OPEN_TAG_SLASH : (l(r) || T(t, "Invalid character in tag name"), t.state = W.ATTRIB));
                                continue;
                            case W.OPEN_TAG_SLASH:
                                ">" === r ? (_(t, !0), b(t)) : (T(t, "Forward-slash in opening tag not followed by >"), t.state = W.ATTRIB);
                                continue;
                            case W.ATTRIB:
                                if (l(r))
                                    continue;
                                ">" === r ? _(t) : "/" === r ? t.state = W.OPEN_TAG_SLASH : f(B, r) ? (t.attribName = r, t.attribValue = "", t.state = W.ATTRIB_NAME) : T(t, "Invalid attribute name");
                                continue;
                            case W.ATTRIB_NAME:
                                "=" === r ? t.state = W.ATTRIB_VALUE : ">" === r ? (T(t, "Attribute without value"), t.attribValue = t.attribName, N(t), _(t)) : l(r) ? t.state = W.ATTRIB_NAME_SAW_WHITE : f(K, r) ? t.attribName += r : T(t, "Invalid attribute name");
                                continue;
                            case W.ATTRIB_NAME_SAW_WHITE:
                                if ("=" === r)
                                    t.state = W.ATTRIB_VALUE;
                                else {
                                    if (l(r))
                                        continue;
                                    T(t, "Attribute without value"), t.tag.attributes[t.attribName] = "", t.attribValue = "", d(t, "onattribute", { name: t.attribName, value: "" }), t.attribName = "", ">" === r ? _(t) : f(B, r) ? (t.attribName = r, t.state = W.ATTRIB_NAME) : (T(t, "Invalid attribute name"), t.state = W.ATTRIB);
                                }
                                continue;
                            case W.ATTRIB_VALUE:
                                if (l(r))
                                    continue;
                                p(r) ? (t.q = r, t.state = W.ATTRIB_VALUE_QUOTED) : (T(t, "Unquoted attribute value"), t.state = W.ATTRIB_VALUE_UNQUOTED, t.attribValue = r);
                                continue;
                            case W.ATTRIB_VALUE_QUOTED:
                                if (r !== t.q) {
                                    "&" === r ? t.state = W.ATTRIB_VALUE_ENTITY_Q : t.attribValue += r;
                                    continue;
                                }
                                N(t), t.q = "", t.state = W.ATTRIB_VALUE_CLOSED;
                                continue;
                            case W.ATTRIB_VALUE_CLOSED:
                                l(r) ? t.state = W.ATTRIB : ">" === r ? _(t) : "/" === r ? t.state = W.OPEN_TAG_SLASH : f(B, r) ? (T(t, "No whitespace between attributes"), t.attribName = r, t.attribValue = "", t.state = W.ATTRIB_NAME) : T(t, "Invalid attribute name");
                                continue;
                            case W.ATTRIB_VALUE_UNQUOTED:
                                if (!c(r)) {
                                    "&" === r ? t.state = W.ATTRIB_VALUE_ENTITY_U : t.attribValue += r;
                                    continue;
                                }
                                N(t), ">" === r ? _(t) : t.state = W.ATTRIB;
                                continue;
                            case W.CLOSE_TAG:
                                if (t.tagName)
                                    ">" === r ? b(t) : f(K, r) ? t.tagName += r : t.script ? (t.script += "</" + t.tagName, t.tagName = "", t.state = W.SCRIPT) : (l(r) || T(t, "Invalid tagname in closing tag"), t.state = W.CLOSE_TAG_SAW_WHITE);
                                else {
                                    if (l(r))
                                        continue;
                                    m(B, r) ? t.script ? (t.script += "</" + r, t.state = W.SCRIPT) : T(t, "Invalid tagname in closing tag.") : t.tagName = r;
                                }
                                continue;
                            case W.CLOSE_TAG_SAW_WHITE:
                                if (l(r))
                                    continue;
                                ">" === r ? b(t) : T(t, "Invalid characters in closing tag");
                                continue;
                            case W.TEXT_ENTITY:
                            case W.ATTRIB_VALUE_ENTITY_Q:
                            case W.ATTRIB_VALUE_ENTITY_U:
                                var s, u;
                                switch (t.state) {
                                    case W.TEXT_ENTITY:
                                        s = W.TEXT, u = "textNode";
                                        break;
                                    case W.ATTRIB_VALUE_ENTITY_Q:
                                        s = W.ATTRIB_VALUE_QUOTED, u = "attribValue";
                                        break;
                                    case W.ATTRIB_VALUE_ENTITY_U: s = W.ATTRIB_VALUE_UNQUOTED, u = "attribValue";
                                }
                                ";" === r ? (t[u] += I(t), t.entity = "", t.state = s) : f(t.entity.length ? j : V, r) ? t.entity += r : (T(t, "Invalid character in entity name"), t[u] += "&" + t.entity + r, t.entity = "", t.state = s);
                                continue;
                            default: throw new Error(t, "Unknown state: " + t.state);
                        }
                    } return t.position >= t.bufferCheckPosition && i(t), t; }
                    t.parser = function (e, t) { return new r(e, t); }, t.SAXParser = r, t.SAXStream = u, t.createStream = s, t.MAX_BUFFER_LENGTH = 65536;
                    var C = ["comment", "sgmlDecl", "textNode", "tagName", "doctype", "procInstName", "procInstBody", "entity", "attribName", "attribValue", "cdata", "script"];
                    t.EVENTS = ["text", "processinginstruction", "sgmldeclaration", "doctype", "comment", "opentagstart", "attribute", "opentag", "closetag", "opencdata", "cdata", "closecdata", "error", "end", "ready", "script", "opennamespace", "closenamespace"], Object.create || (Object.create = function (e) { function t() { } t.prototype = e; var n = new t; return n; }), Object.keys || (Object.keys = function (e) { var t = []; for (var n in e)
                        e.hasOwnProperty(n) && t.push(n); return t; }), r.prototype = { end: function () { A(this); }, write: w, resume: function () { return this.error = null, this; }, close: function () { return this.write(null); }, flush: function () { o(this); } };
                    var L;
                    try {
                        L = n(254).Stream;
                    }
                    catch (P) {
                        L = function () { };
                    }
                    var O = t.EVENTS.filter(function (e) { return "error" !== e && "end" !== e; });
                    u.prototype = Object.create(L.prototype, { constructor: { value: u } }), u.prototype.write = function (t) { if ("function" == typeof e && "function" == typeof e.isBuffer && e.isBuffer(t)) {
                        if (!this._decoder) {
                            var r = n(248).StringDecoder;
                            this._decoder = new r("utf8");
                        }
                        t = this._decoder.write(t);
                    } return this._parser.write(t.toString()), this.emit("data", t), !0; }, u.prototype.end = function (e) { return e && e.length && this.write(e), this._parser.end(), !0; }, u.prototype.on = function (e, t) { var n = this; return n._parser["on" + e] || -1 === O.indexOf(e) || (n._parser["on" + e] = function () { var t = 1 === arguments.length ? [arguments[0]] : Array.apply(null, arguments); t.splice(0, 0, e), n.emit.apply(n, t); }), L.prototype.on.call(n, e, t); };
                    var D = "[CDATA[", U = "DOCTYPE", x = "http://www.w3.org/XML/1998/namespace", k = "http://www.w3.org/2000/xmlns/", F = { xml: x, xmlns: k }, B = /[:_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD]/, K = /[:_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\u00B7\u0300-\u036F\u203F-\u2040.\d-]/, V = /[#:_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD]/, j = /[#:_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\u00B7\u0300-\u036F\u203F-\u2040.\d-]/, W = 0;
                    t.STATE = { BEGIN: W++, BEGIN_WHITESPACE: W++, TEXT: W++, TEXT_ENTITY: W++, OPEN_WAKA: W++, SGML_DECL: W++, SGML_DECL_QUOTED: W++, DOCTYPE: W++, DOCTYPE_QUOTED: W++, DOCTYPE_DTD: W++, DOCTYPE_DTD_QUOTED: W++, COMMENT_STARTING: W++, COMMENT: W++, COMMENT_ENDING: W++, COMMENT_ENDED: W++, CDATA: W++, CDATA_ENDING: W++, CDATA_ENDING_2: W++, PROC_INST: W++, PROC_INST_BODY: W++, PROC_INST_ENDING: W++, OPEN_TAG: W++, OPEN_TAG_SLASH: W++, ATTRIB: W++, ATTRIB_NAME: W++, ATTRIB_NAME_SAW_WHITE: W++, ATTRIB_VALUE: W++, ATTRIB_VALUE_QUOTED: W++, ATTRIB_VALUE_CLOSED: W++, ATTRIB_VALUE_UNQUOTED: W++, ATTRIB_VALUE_ENTITY_Q: W++, ATTRIB_VALUE_ENTITY_U: W++, CLOSE_TAG: W++, CLOSE_TAG_SAW_WHITE: W++, SCRIPT: W++, SCRIPT_ENDING: W++ }, t.XML_ENTITIES = { amp: "&", gt: ">", lt: "<", quot: '"', apos: "'" }, t.ENTITIES = { amp: "&", gt: ">", lt: "<", quot: '"', apos: "'", AElig: 198, Aacute: 193, Acirc: 194, Agrave: 192, Aring: 197, Atilde: 195, Auml: 196, Ccedil: 199, ETH: 208, Eacute: 201, Ecirc: 202, Egrave: 200, Euml: 203, Iacute: 205, Icirc: 206, Igrave: 204, Iuml: 207, Ntilde: 209, Oacute: 211, Ocirc: 212, Ograve: 210, Oslash: 216, Otilde: 213, Ouml: 214, THORN: 222, Uacute: 218, Ucirc: 219, Ugrave: 217, Uuml: 220, Yacute: 221, aacute: 225, acirc: 226, aelig: 230, agrave: 224, aring: 229, atilde: 227, auml: 228, ccedil: 231, eacute: 233, ecirc: 234, egrave: 232, eth: 240, euml: 235, iacute: 237, icirc: 238, igrave: 236, iuml: 239, ntilde: 241, oacute: 243, ocirc: 244, ograve: 242, oslash: 248, otilde: 245, ouml: 246, szlig: 223, thorn: 254, uacute: 250, ucirc: 251, ugrave: 249, uuml: 252, yacute: 253, yuml: 255, copy: 169, reg: 174, nbsp: 160, iexcl: 161, cent: 162, pound: 163, curren: 164, yen: 165, brvbar: 166, sect: 167, uml: 168, ordf: 170, laquo: 171, not: 172, shy: 173, macr: 175, deg: 176, plusmn: 177, sup1: 185, sup2: 178, sup3: 179, acute: 180, micro: 181, para: 182, middot: 183, cedil: 184, ordm: 186, raquo: 187, frac14: 188, frac12: 189, frac34: 190, iquest: 191, times: 215, divide: 247, OElig: 338, oelig: 339, Scaron: 352, scaron: 353, Yuml: 376, fnof: 402, circ: 710, tilde: 732, Alpha: 913, Beta: 914, Gamma: 915, Delta: 916, Epsilon: 917, Zeta: 918, Eta: 919, Theta: 920, Iota: 921, Kappa: 922, Lambda: 923, Mu: 924, Nu: 925, Xi: 926, Omicron: 927, Pi: 928, Rho: 929, Sigma: 931, Tau: 932, Upsilon: 933, Phi: 934, Chi: 935, Psi: 936, Omega: 937, alpha: 945, beta: 946, gamma: 947, delta: 948, epsilon: 949, zeta: 950, eta: 951, theta: 952, iota: 953, kappa: 954, lambda: 955, mu: 956, nu: 957, xi: 958, omicron: 959, pi: 960, rho: 961, sigmaf: 962, sigma: 963, tau: 964, upsilon: 965, phi: 966, chi: 967, psi: 968, omega: 969, thetasym: 977, upsih: 978, piv: 982, ensp: 8194, emsp: 8195, thinsp: 8201, zwnj: 8204, zwj: 8205, lrm: 8206, rlm: 8207, ndash: 8211, mdash: 8212, lsquo: 8216, rsquo: 8217, sbquo: 8218, ldquo: 8220, rdquo: 8221, bdquo: 8222, dagger: 8224, Dagger: 8225, bull: 8226, hellip: 8230, permil: 8240, prime: 8242, Prime: 8243, lsaquo: 8249, rsaquo: 8250, oline: 8254, frasl: 8260, euro: 8364, image: 8465, weierp: 8472, real: 8476, trade: 8482, alefsym: 8501, larr: 8592, uarr: 8593, rarr: 8594, darr: 8595, harr: 8596, crarr: 8629, lArr: 8656, uArr: 8657, rArr: 8658, dArr: 8659, hArr: 8660, forall: 8704, part: 8706, exist: 8707, empty: 8709, nabla: 8711, isin: 8712, notin: 8713, ni: 8715, prod: 8719, sum: 8721, minus: 8722, lowast: 8727, radic: 8730, prop: 8733, infin: 8734, ang: 8736, and: 8743, or: 8744, cap: 8745, cup: 8746, "int": 8747, there4: 8756, sim: 8764, cong: 8773, asymp: 8776, ne: 8800, equiv: 8801, le: 8804, ge: 8805, sub: 8834, sup: 8835, nsub: 8836, sube: 8838, supe: 8839, oplus: 8853, otimes: 8855, perp: 8869, sdot: 8901, lceil: 8968, rceil: 8969, lfloor: 8970, rfloor: 8971, lang: 9001, rang: 9002, loz: 9674, spades: 9824, clubs: 9827, hearts: 9829, diams: 9830 }, Object.keys(t.ENTITIES).forEach(function (e) { var n = t.ENTITIES[e], r = "number" == typeof n ? String.fromCharCode(n) : n; t.ENTITIES[e] = r; });
                    for (var q in t.STATE)
                        t.STATE[t.STATE[q]] = q;
                    W = t.STATE,
                        String.fromCodePoint || !function () { var e = String.fromCharCode, t = Math.floor, n = function () { var n, r, i = 16384, a = [], o = -1, s = arguments.length; if (!s)
                            return ""; for (var u = ""; ++o < s;) {
                            var l = Number(arguments[o]);
                            if (!isFinite(l) || 0 > l || l > 1114111 || t(l) !== l)
                                throw RangeError("Invalid code point: " + l);
                            65535 >= l ? a.push(l) : (l -= 65536, n = (l >> 10) + 55296, r = l % 1024 + 56320, a.push(n, r)), (o + 1 === s || a.length > i) && (u += e.apply(null, a), a.length = 0);
                        } return u; }; Object.defineProperty ? Object.defineProperty(String, "fromCodePoint", { value: n, configurable: !0, writable: !0 }) : String.fromCodePoint = n; }();
                }("undefined" == typeof t ? this.sax = {} : t);
            }).call(t, n(113).Buffer);
        }, function (e, t, n) { (function () { var t, r, i, a, o, s, u; u = n(249), o = u.assign, s = u.isFunction, t = n(250), r = n(251), a = n(252), i = n(253), e.exports.create = function (e, n, r, i) { var a, s; if (null == e)
            throw new Error("Root element needs a name"); return i = o({}, n, r, i), a = new t(i), s = a.element(e), i.headless || (a.declaration(i), (null != i.pubID || null != i.sysID) && a.doctype(i)), s; }, e.exports.begin = function (e, n, i) { var a; return s(e) && (a = [e, n], n = a[0], i = a[1], e = {}), n ? new r(e, n, i) : new t(e); }, e.exports.stringWriter = function (e) { return new a(e); }, e.exports.streamWriter = function (e, t) { return new i(e, t); }; }).call(this); }, function (e, t, n) { function r(e) { if (e && !u(e))
            throw new Error("Unknown encoding: " + e); } function i(e) { return e.toString(this.encoding); } function a(e) { this.charReceived = e.length % 2, this.charLength = this.charReceived ? 2 : 0; } function o(e) { this.charReceived = e.length % 3, this.charLength = this.charReceived ? 3 : 0; } var s = n(113).Buffer, u = s.isEncoding || function (e) { switch (e && e.toLowerCase()) {
            case "hex":
            case "utf8":
            case "utf-8":
            case "ascii":
            case "binary":
            case "base64":
            case "ucs2":
            case "ucs-2":
            case "utf16le":
            case "utf-16le":
            case "raw": return !0;
            default: return !1;
        } }, l = t.StringDecoder = function (e) { switch (this.encoding = (e || "utf8").toLowerCase().replace(/[-_]/, ""), r(e), this.encoding) {
            case "utf8":
                this.surrogateSize = 3;
                break;
            case "ucs2":
            case "utf16le":
                this.surrogateSize = 2, this.detectIncompleteChar = a;
                break;
            case "base64":
                this.surrogateSize = 3, this.detectIncompleteChar = o;
                break;
            default: return void (this.write = i);
        } this.charBuffer = new s(6), this.charReceived = 0, this.charLength = 0; }; l.prototype.write = function (e) { for (var t = ""; this.charLength;) {
            var n = e.length >= this.charLength - this.charReceived ? this.charLength - this.charReceived : e.length;
            if (e.copy(this.charBuffer, this.charReceived, 0, n), this.charReceived += n, this.charReceived < this.charLength)
                return "";
            e = e.slice(n, e.length), t = this.charBuffer.slice(0, this.charLength).toString(this.encoding);
            var r = t.charCodeAt(t.length - 1);
            if (!(r >= 55296 && 56319 >= r)) {
                if (this.charReceived = this.charLength = 0, 0 === e.length)
                    return t;
                break;
            }
            this.charLength += this.surrogateSize, t = "";
        } this.detectIncompleteChar(e); var i = e.length; this.charLength && (e.copy(this.charBuffer, 0, e.length - this.charReceived, i), i -= this.charReceived), t += e.toString(this.encoding, 0, i); var i = t.length - 1, r = t.charCodeAt(i); if (r >= 55296 && 56319 >= r) {
            var a = this.surrogateSize;
            return this.charLength += a, this.charReceived += a, this.charBuffer.copy(this.charBuffer, a, 0, a), e.copy(this.charBuffer, 0, 0, a), t.substring(0, i);
        } return t; }, l.prototype.detectIncompleteChar = function (e) { for (var t = e.length >= 3 ? 3 : e.length; t > 0; t--) {
            var n = e[e.length - t];
            if (1 == t && n >> 5 == 6) {
                this.charLength = 2;
                break;
            }
            if (2 >= t && n >> 4 == 14) {
                this.charLength = 3;
                break;
            }
            if (3 >= t && n >> 3 == 30) {
                this.charLength = 4;
                break;
            }
        } this.charReceived = t; }, l.prototype.end = function (e) { var t = ""; if (e && e.length && (t = this.write(e)), this.charReceived) {
            var n = this.charReceived, r = this.charBuffer, i = this.encoding;
            t += r.slice(0, n).toString(i);
        } return t; }; }, function (e, t, n) { (function () { var t, n, r, i, a, o, s = [].slice, u = {}.hasOwnProperty; t = function () { var e, t, n, r, a, o; if (o = arguments[0], a = 2 <= arguments.length ? s.call(arguments, 1) : [], i(Object.assign))
            Object.assign.apply(null, arguments);
        else
            for (e = 0, n = a.length; n > e; e++)
                if (r = a[e], null != r)
                    for (t in r)
                        u.call(r, t) && (o[t] = r[t]); return o; }, i = function (e) { return !!e && "[object Function]" === Object.prototype.toString.call(e); }, a = function (e) { var t; return !!e && ("function" == (t = typeof e) || "object" === t); }, n = function (e) { return i(Array.isArray) ? Array.isArray(e) : "[object Array]" === Object.prototype.toString.call(e); }, r = function (e) { var t; if (n(e))
            return !e.length; for (t in e)
            if (u.call(e, t))
                return !1; return !0; }, o = function (e) { var t, n; return a(e) && (n = Object.getPrototypeOf(e)) && (t = n.constructor) && "function" == typeof t && t instanceof t && Function.prototype.toString.call(t) === Function.prototype.toString.call(Object); }, e.exports.assign = t, e.exports.isFunction = i, e.exports.isObject = a, e.exports.isArray = n, e.exports.isEmpty = r, e.exports.isPlainObject = o; }).call(this); }, function (e, t, n) { (function () { var t, r, i, a, o, s = function (e, t) { function n() { this.constructor = e; } for (var r in t)
            u.call(t, r) && (e[r] = t[r]); return n.prototype = t.prototype, e.prototype = new n, e.__super__ = t.prototype, e; }, u = {}.hasOwnProperty; o = n(249).isPlainObject, r = n(271), a = n(269), i = n(252), e.exports = t = function (e) { function t(e) { t.__super__.constructor.call(this, null), e || (e = {}), e.writer || (e.writer = new i), this.options = e, this.stringify = new a(e), this.isDocument = !0; } return s(t, e), t.prototype.end = function (e) { var t; return e ? o(e) && (t = e, e = this.options.writer.set(t)) : e = this.options.writer, e.document(this); }, t.prototype.toString = function (e) { return this.options.writer.set(e).document(this); }, t; }(r); }).call(this); }, function (e, t, n) { (function () { var t, r, i, a, o, s, u, l, p, c, f, m, h, d, y, v, g, A, T, E, S = {}.hasOwnProperty; E = n(249), A = E.isObject, g = E.isFunction, T = E.isPlainObject, f = n(256), r = n(257), i = n(258), h = n(259), v = n(260), m = n(261), l = n(262), p = n(263), a = n(264), s = n(265), o = n(266), u = n(267), t = n(268), y = n(269), d = n(252), e.exports = c = function () { function e(e, t, n) { var r; e || (e = {}), e.writer ? T(e.writer) && (r = e.writer, e.writer = new d(r)) : e.writer = new d(e), this.options = e, this.writer = e.writer, this.stringify = new y(e), this.onDataCallback = t || function () { }, this.onEndCallback = n || function () { }, this.currentNode = null, this.currentLevel = -1, this.openTags = {}, this.documentStarted = !1, this.documentCompleted = !1, this.root = null; } return e.prototype.node = function (e, t, n) { var r; if (null == e)
            throw new Error("Missing node name"); if (this.root && -1 === this.currentLevel)
            throw new Error("Document can only have one root node"); return this.openCurrent(), e = e.valueOf(), null == t && (t = {}), t = t.valueOf(), A(t) || (r = [t, n], n = r[0], t = r[1]), this.currentNode = new f(this, e, t), this.currentNode.children = !1, this.currentLevel++, this.openTags[this.currentLevel] = this.currentNode, null != n && this.text(n), this; }, e.prototype.element = function (e, t, n) { return this.currentNode && this.currentNode instanceof p ? this.dtdElement.apply(this, arguments) : this.node(e, t, n); }, e.prototype.attribute = function (e, n) { var r, i; if (!this.currentNode || this.currentNode.children)
            throw new Error("att() can only be used immediately after an ele() call in callback mode"); if (null != e && (e = e.valueOf()), A(e))
            for (r in e)
                S.call(e, r) && (i = e[r], this.attribute(r, i));
        else
            g(n) && (n = n.apply()), this.options.skipNullAttributes && null == n || (this.currentNode.attributes[e] = new t(this, e, n)); return this; }, e.prototype.text = function (e) { var t; return this.openCurrent(), t = new v(this, e), this.onData(this.writer.text(t, this.currentLevel + 1)), this; }, e.prototype.cdata = function (e) { var t; return this.openCurrent(), t = new r(this, e), this.onData(this.writer.cdata(t, this.currentLevel + 1)), this; }, e.prototype.comment = function (e) { var t; return this.openCurrent(), t = new i(this, e), this.onData(this.writer.comment(t, this.currentLevel + 1)), this; }, e.prototype.raw = function (e) { var t; return this.openCurrent(), t = new h(this, e), this.onData(this.writer.raw(t, this.currentLevel + 1)), this; }, e.prototype.instruction = function (e, t) { var n, r, i, a, o; if (this.openCurrent(), null != e && (e = e.valueOf()), null != t && (t = t.valueOf()), Array.isArray(e))
            for (n = 0, a = e.length; a > n; n++)
                r = e[n], this.instruction(r);
        else if (A(e))
            for (r in e)
                S.call(e, r) && (i = e[r], this.instruction(r, i));
        else
            g(t) && (t = t.apply()), o = new m(this, e, t), this.onData(this.writer.processingInstruction(o, this.currentLevel + 1)); return this; }, e.prototype.declaration = function (e, t, n) { var r; if (this.openCurrent(), this.documentStarted)
            throw new Error("declaration() must be the first node"); return r = new l(this, e, t, n), this.onData(this.writer.declaration(r, this.currentLevel + 1)), this; }, e.prototype.doctype = function (e, t, n) { if (this.openCurrent(), null == e)
            throw new Error("Missing root node name"); if (this.root)
            throw new Error("dtd() must come before the root node"); return this.currentNode = new p(this, t, n), this.currentNode.rootNodeName = e, this.currentNode.children = !1, this.currentLevel++, this.openTags[this.currentLevel] = this.currentNode, this; }, e.prototype.dtdElement = function (e, t) { var n; return this.openCurrent(), n = new o(this, e, t), this.onData(this.writer.dtdElement(n, this.currentLevel + 1)), this; }, e.prototype.attList = function (e, t, n, r, i) { var o; return this.openCurrent(), o = new a(this, e, t, n, r, i), this.onData(this.writer.dtdAttList(o, this.currentLevel + 1)), this; }, e.prototype.entity = function (e, t) { var n; return this.openCurrent(), n = new s(this, !1, e, t), this.onData(this.writer.dtdEntity(n, this.currentLevel + 1)), this; }, e.prototype.pEntity = function (e, t) { var n; return this.openCurrent(), n = new s(this, !0, e, t), this.onData(this.writer.dtdEntity(n, this.currentLevel + 1)), this; }, e.prototype.notation = function (e, t) { var n; return this.openCurrent(), n = new u(this, e, t), this.onData(this.writer.dtdNotation(n, this.currentLevel + 1)), this; }, e.prototype.up = function () { if (this.currentLevel < 0)
            throw new Error("The document node has no parent"); return this.currentNode ? (this.currentNode.children ? this.closeNode(this.currentNode) : this.openNode(this.currentNode), this.currentNode = null) : this.closeNode(this.openTags[this.currentLevel]), delete this.openTags[this.currentLevel], this.currentLevel--, this; }, e.prototype.end = function () { for (; this.currentLevel >= 0;)
            this.up(); return this.onEnd(); }, e.prototype.openCurrent = function () { return this.currentNode ? (this.currentNode.children = !0, this.openNode(this.currentNode)) : void 0; }, e.prototype.openNode = function (e) { return e.isOpen ? void 0 : (!this.root && 0 === this.currentLevel && e instanceof f && (this.root = e), this.onData(this.writer.openNode(e, this.currentLevel)), e.isOpen = !0); }, e.prototype.closeNode = function (e) { return e.isClosed ? void 0 : (this.onData(this.writer.closeNode(e, this.currentLevel)), e.isClosed = !0); }, e.prototype.onData = function (e) { return this.documentStarted = !0, this.onDataCallback(e); }, e.prototype.onEnd = function () { return this.documentCompleted = !0, this.onEndCallback(); }, e.prototype.ele = function () { return this.element.apply(this, arguments); }, e.prototype.nod = function (e, t, n) { return this.node(e, t, n); }, e.prototype.txt = function (e) { return this.text(e); }, e.prototype.dat = function (e) { return this.cdata(e); }, e.prototype.com = function (e) { return this.comment(e); }, e.prototype.ins = function (e, t) { return this.instruction(e, t); }, e.prototype.dec = function (e, t, n) { return this.declaration(e, t, n); }, e.prototype.dtd = function (e, t, n) { return this.doctype(e, t, n); }, e.prototype.e = function (e, t, n) { return this.element(e, t, n); }, e.prototype.n = function (e, t, n) { return this.node(e, t, n); }, e.prototype.t = function (e) { return this.text(e); }, e.prototype.d = function (e) { return this.cdata(e); }, e.prototype.c = function (e) { return this.comment(e); }, e.prototype.r = function (e) { return this.raw(e); }, e.prototype.i = function (e, t) { return this.instruction(e, t); }, e.prototype.att = function () { return this.currentNode && this.currentNode instanceof p ? this.attList.apply(this, arguments) : this.attribute.apply(this, arguments); }, e.prototype.a = function () { return this.currentNode && this.currentNode instanceof p ? this.attList.apply(this, arguments) : this.attribute.apply(this, arguments); }, e.prototype.ent = function (e, t) { return this.entity(e, t); }, e.prototype.pent = function (e, t) { return this.pEntity(e, t); }, e.prototype.not = function (e, t) { return this.notation(e, t); }, e; }(); }).call(this); }, function (e, t, n) { (function () { var t, r, i, a, o, s, u, l, p, c, f, m, h, d, y = function (e, t) { function n() { this.constructor = e; } for (var r in t)
            v.call(t, r) && (e[r] = t[r]); return n.prototype = t.prototype, e.prototype = new n, e.__super__ = t.prototype, e; }, v = {}.hasOwnProperty; u = n(262), l = n(263), t = n(257), r = n(258), p = n(256), f = n(259), h = n(260), c = n(261), i = n(264), a = n(266), o = n(265), s = n(267), d = n(270), e.exports = m = function (e) { function n(e) { n.__super__.constructor.call(this, e); } return y(n, e), n.prototype.document = function (e) { var t, n, i, a, o; for (this.textispresent = !1, a = "", o = e.children, n = 0, i = o.length; i > n; n++)
            t = o[n], a += function () { switch (!1) {
                case !(t instanceof u): return this.declaration(t);
                case !(t instanceof l): return this.docType(t);
                case !(t instanceof r): return this.comment(t);
                case !(t instanceof c): return this.processingInstruction(t);
                default: return this.element(t, 0);
            } }.call(this); return this.pretty && a.slice(-this.newline.length) === this.newline && (a = a.slice(0, -this.newline.length)), a; }, n.prototype.attribute = function (e) { return " " + e.name + '="' + e.value + '"'; }, n.prototype.cdata = function (e, t) { return this.space(t) + "<![CDATA[" + e.text + "]]>" + this.newline; }, n.prototype.comment = function (e, t) { return this.space(t) + "<!-- " + e.text + " -->" + this.newline; }, n.prototype.declaration = function (e, t) { var n; return n = this.space(t), n += '<?xml version="' + e.version + '"', null != e.encoding && (n += ' encoding="' + e.encoding + '"'), null != e.standalone && (n += ' standalone="' + e.standalone + '"'), n += "?>", n += this.newline; }, n.prototype.docType = function (e, n) { var u, l, p, f, m; if (n || (n = 0), f = this.space(n), f += "<!DOCTYPE " + e.root().name, e.pubID && e.sysID ? f += ' PUBLIC "' + e.pubID + '" "' + e.sysID + '"' : e.sysID && (f += ' SYSTEM "' + e.sysID + '"'), e.children.length > 0) {
            for (f += " [", f += this.newline, m = e.children, l = 0, p = m.length; p > l; l++)
                u = m[l], f += function () { switch (!1) {
                    case !(u instanceof i): return this.dtdAttList(u, n + 1);
                    case !(u instanceof a): return this.dtdElement(u, n + 1);
                    case !(u instanceof o): return this.dtdEntity(u, n + 1);
                    case !(u instanceof s): return this.dtdNotation(u, n + 1);
                    case !(u instanceof t): return this.cdata(u, n + 1);
                    case !(u instanceof r): return this.comment(u, n + 1);
                    case !(u instanceof c): return this.processingInstruction(u, n + 1);
                    default: throw new Error("Unknown DTD node type: " + u.constructor.name);
                } }.call(this);
            f += "]";
        } return f += ">", f += this.newline; }, n.prototype.element = function (e, n) { var i, a, o, s, u, l, m, d, y, g, A, T, E; n || (n = 0), E = !1, this.textispresent ? (this.newline = "", this.pretty = !1) : (this.newline = this.newlinedefault, this.pretty = this.prettydefault), T = this.space(n), d = "", d += T + "<" + e.name, y = e.attributes; for (m in y)
            v.call(y, m) && (i = y[m], d += this.attribute(i)); if (0 === e.children.length || e.children.every(function (e) { return "" === e.value; }))
            d += this.allowEmpty ? "></" + e.name + ">" + this.newline : "/>" + this.newline;
        else if (this.pretty && 1 === e.children.length && null != e.children[0].value)
            d += ">", d += e.children[0].value, d += "</" + e.name + ">" + this.newline;
        else {
            if (this.dontprettytextnodes)
                for (g = e.children, o = 0, u = g.length; u > o; o++)
                    if (a = g[o], null != a.value) {
                        this.textispresent++, E = !0;
                        break;
                    }
            for (this.textispresent && (this.newline = "", this.pretty = !1, T = this.space(n)), d += ">" + this.newline, A = e.children, s = 0, l = A.length; l > s; s++)
                a = A[s], d += function () { switch (!1) {
                    case !(a instanceof t): return this.cdata(a, n + 1);
                    case !(a instanceof r): return this.comment(a, n + 1);
                    case !(a instanceof p): return this.element(a, n + 1);
                    case !(a instanceof f): return this.raw(a, n + 1);
                    case !(a instanceof h): return this.text(a, n + 1);
                    case !(a instanceof c): return this.processingInstruction(a, n + 1);
                    default: throw new Error("Unknown XML node type: " + a.constructor.name);
                } }.call(this);
            E && this.textispresent--, this.textispresent || (this.newline = this.newlinedefault, this.pretty = this.prettydefault), d += T + "</" + e.name + ">" + this.newline;
        } return d; }, n.prototype.processingInstruction = function (e, t) { var n; return n = this.space(t) + "<?" + e.target, e.value && (n += " " + e.value), n += "?>" + this.newline; }, n.prototype.raw = function (e, t) { return this.space(t) + e.value + this.newline; }, n.prototype.text = function (e, t) { return this.space(t) + e.value + this.newline; }, n.prototype.dtdAttList = function (e, t) { var n; return n = this.space(t) + "<!ATTLIST " + e.elementName + " " + e.attributeName + " " + e.attributeType, "#DEFAULT" !== e.defaultValueType && (n += " " + e.defaultValueType), e.defaultValue && (n += ' "' + e.defaultValue + '"'), n += ">" + this.newline; }, n.prototype.dtdElement = function (e, t) { return this.space(t) + "<!ELEMENT " + e.name + " " + e.value + ">" + this.newline; }, n.prototype.dtdEntity = function (e, t) { var n; return n = this.space(t) + "<!ENTITY", e.pe && (n += " %"), n += " " + e.name, e.value ? n += ' "' + e.value + '"' : (e.pubID && e.sysID ? n += ' PUBLIC "' + e.pubID + '" "' + e.sysID + '"' : e.sysID && (n += ' SYSTEM "' + e.sysID + '"'), e.nData && (n += " NDATA " + e.nData)), n += ">" + this.newline; }, n.prototype.dtdNotation = function (e, t) { var n; return n = this.space(t) + "<!NOTATION " + e.name, e.pubID && e.sysID ? n += ' PUBLIC "' + e.pubID + '" "' + e.sysID + '"' : e.pubID ? n += ' PUBLIC "' + e.pubID + '"' : e.sysID && (n += ' SYSTEM "' + e.sysID + '"'), n += ">" + this.newline; }, n.prototype.openNode = function (e, t) { var n, r, i, a; if (t || (t = 0), e instanceof p) {
            i = this.space(t) + "<" + e.name, a = e.attributes;
            for (r in a)
                v.call(a, r) && (n = a[r], i += this.attribute(n));
            return i += (e.children ? ">" : "/>") + this.newline;
        } return i = this.space(t) + "<!DOCTYPE " + e.rootNodeName, e.pubID && e.sysID ? i += ' PUBLIC "' + e.pubID + '" "' + e.sysID + '"' : e.sysID && (i += ' SYSTEM "' + e.sysID + '"'), i += (e.children ? " [" : ">") + this.newline; }, n.prototype.closeNode = function (e, t) { switch (t || (t = 0), !1) {
            case !(e instanceof p): return this.space(t) + "</" + e.name + ">" + this.newline;
            case !(e instanceof l): return this.space(t) + "]>" + this.newline;
        } }, n; }(d); }).call(this); }, function (e, t, n) { (function () { var t, r, i, a, o, s, u, l, p, c, f, m, h, d, y = function (e, t) { function n() { this.constructor = e; } for (var r in t)
            v.call(t, r) && (e[r] = t[r]); return n.prototype = t.prototype, e.prototype = new n, e.__super__ = t.prototype, e; }, v = {}.hasOwnProperty; u = n(262), l = n(263), t = n(257), r = n(258), p = n(256), f = n(259), h = n(260), c = n(261), i = n(264), a = n(266), o = n(265), s = n(267), d = n(270), e.exports = m = function (e) { function n(e, t) { this.stream = e, n.__super__.constructor.call(this, t); } return y(n, e), n.prototype.document = function (e) { var t, n, i, a, o, s, p, f; for (s = e.children, n = 0, a = s.length; a > n; n++)
            t = s[n], t.isLastRootNode = !1; for (e.children[e.children.length - 1].isLastRootNode = !0, p = e.children, f = [], i = 0, o = p.length; o > i; i++)
            switch (t = p[i], !1) {
                case !(t instanceof u):
                    f.push(this.declaration(t));
                    break;
                case !(t instanceof l):
                    f.push(this.docType(t));
                    break;
                case !(t instanceof r):
                    f.push(this.comment(t));
                    break;
                case !(t instanceof c):
                    f.push(this.processingInstruction(t));
                    break;
                default: f.push(this.element(t));
            } return f; }, n.prototype.attribute = function (e) { return this.stream.write(" " + e.name + '="' + e.value + '"'); }, n.prototype.cdata = function (e, t) { return this.stream.write(this.space(t) + "<![CDATA[" + e.text + "]]>" + this.endline(e)); }, n.prototype.comment = function (e, t) { return this.stream.write(this.space(t) + "<!-- " + e.text + " -->" + this.endline(e)); }, n.prototype.declaration = function (e, t) { return this.stream.write(this.space(t)), this.stream.write('<?xml version="' + e.version + '"'), null != e.encoding && this.stream.write(' encoding="' + e.encoding + '"'), null != e.standalone && this.stream.write(' standalone="' + e.standalone + '"'), this.stream.write("?>"), this.stream.write(this.endline(e)); }, n.prototype.docType = function (e, n) { var u, l, p, f; if (n || (n = 0), this.stream.write(this.space(n)), this.stream.write("<!DOCTYPE " + e.root().name), e.pubID && e.sysID ? this.stream.write(' PUBLIC "' + e.pubID + '" "' + e.sysID + '"') : e.sysID && this.stream.write(' SYSTEM "' + e.sysID + '"'), e.children.length > 0) {
            for (this.stream.write(" ["), this.stream.write(this.endline(e)), f = e.children, l = 0, p = f.length; p > l; l++)
                switch (u = f[l], !1) {
                    case !(u instanceof i):
                        this.dtdAttList(u, n + 1);
                        break;
                    case !(u instanceof a):
                        this.dtdElement(u, n + 1);
                        break;
                    case !(u instanceof o):
                        this.dtdEntity(u, n + 1);
                        break;
                    case !(u instanceof s):
                        this.dtdNotation(u, n + 1);
                        break;
                    case !(u instanceof t):
                        this.cdata(u, n + 1);
                        break;
                    case !(u instanceof r):
                        this.comment(u, n + 1);
                        break;
                    case !(u instanceof c):
                        this.processingInstruction(u, n + 1);
                        break;
                    default: throw new Error("Unknown DTD node type: " + u.constructor.name);
                }
            this.stream.write("]");
        } return this.stream.write(">"), this.stream.write(this.endline(e)); }, n.prototype.element = function (e, n) { var i, a, o, s, u, l, m, d; n || (n = 0), d = this.space(n), this.stream.write(d + "<" + e.name), l = e.attributes; for (u in l)
            v.call(l, u) && (i = l[u], this.attribute(i)); if (0 === e.children.length || e.children.every(function (e) { return "" === e.value; }))
            this.allowEmpty ? this.stream.write("></" + e.name + ">") : this.stream.write("/>");
        else if (this.pretty && 1 === e.children.length && null != e.children[0].value)
            this.stream.write(">"), this.stream.write(e.children[0].value), this.stream.write("</" + e.name + ">");
        else {
            for (this.stream.write(">" + this.newline), m = e.children, o = 0, s = m.length; s > o; o++)
                switch (a = m[o], !1) {
                    case !(a instanceof t):
                        this.cdata(a, n + 1);
                        break;
                    case !(a instanceof r):
                        this.comment(a, n + 1);
                        break;
                    case !(a instanceof p):
                        this.element(a, n + 1);
                        break;
                    case !(a instanceof f):
                        this.raw(a, n + 1);
                        break;
                    case !(a instanceof h):
                        this.text(a, n + 1);
                        break;
                    case !(a instanceof c):
                        this.processingInstruction(a, n + 1);
                        break;
                    default: throw new Error("Unknown XML node type: " + a.constructor.name);
                }
            this.stream.write(d + "</" + e.name + ">");
        } return this.stream.write(this.endline(e)); }, n.prototype.processingInstruction = function (e, t) { return this.stream.write(this.space(t) + "<?" + e.target), e.value && this.stream.write(" " + e.value), this.stream.write("?>" + this.endline(e)); }, n.prototype.raw = function (e, t) { return this.stream.write(this.space(t) + e.value + this.endline(e)); }, n.prototype.text = function (e, t) { return this.stream.write(this.space(t) + e.value + this.endline(e)); }, n.prototype.dtdAttList = function (e, t) { return this.stream.write(this.space(t) + "<!ATTLIST " + e.elementName + " " + e.attributeName + " " + e.attributeType), "#DEFAULT" !== e.defaultValueType && this.stream.write(" " + e.defaultValueType), e.defaultValue && this.stream.write(' "' + e.defaultValue + '"'), this.stream.write(">" + this.endline(e)); }, n.prototype.dtdElement = function (e, t) { return this.stream.write(this.space(t) + "<!ELEMENT " + e.name + " " + e.value + ">" + this.endline(e)); }, n.prototype.dtdEntity = function (e, t) { return this.stream.write(this.space(t) + "<!ENTITY"), e.pe && this.stream.write(" %"), this.stream.write(" " + e.name), e.value ? this.stream.write(' "' + e.value + '"') : (e.pubID && e.sysID ? this.stream.write(' PUBLIC "' + e.pubID + '" "' + e.sysID + '"') : e.sysID && this.stream.write(' SYSTEM "' + e.sysID + '"'), e.nData && this.stream.write(" NDATA " + e.nData)), this.stream.write(">" + this.endline(e)); }, n.prototype.dtdNotation = function (e, t) { return this.stream.write(this.space(t) + "<!NOTATION " + e.name), e.pubID && e.sysID ? this.stream.write(' PUBLIC "' + e.pubID + '" "' + e.sysID + '"') : e.pubID ? this.stream.write(' PUBLIC "' + e.pubID + '"') : e.sysID && this.stream.write(' SYSTEM "' + e.sysID + '"'), this.stream.write(">" + this.endline(e)); }, n.prototype.endline = function (e) { return e.isLastRootNode ? "" : this.newline; }, n; }(d); }).call(this); }, function (e, t, n) { function r() { i.call(this); } e.exports = r; var i = n(210).EventEmitter, a = n(115); a(r, i), r.Readable = n(272), r.Writable = n(273), r.Duplex = n(274), r.Transform = n(275), r.PassThrough = n(276), r.Stream = r, r.prototype.pipe = function (e, t) { function n(t) { e.writable && !1 === e.write(t) && l.pause && l.pause(); } function r() { l.readable && l.resume && l.resume(); } function a() { p || (p = !0, e.end()); } function o() { p || (p = !0, "function" == typeof e.destroy && e.destroy()); } function s(e) { if (u(), 0 === i.listenerCount(this, "error"))
            throw e; } function u() { l.removeListener("data", n), e.removeListener("drain", r), l.removeListener("end", a), l.removeListener("close", o), l.removeListener("error", s), e.removeListener("error", s), l.removeListener("end", u), l.removeListener("close", u), e.removeListener("close", u); } var l = this; l.on("data", n), e.on("drain", r), e._isStdio || t && t.end === !1 || (l.on("end", a), l.on("close", o)); var p = !1; return l.on("error", s), e.on("error", s), l.on("end", u), l.on("close", u), e.on("close", u), e.emit("pipe", l), e; }; }, function (e, t, n) { function r() { throw new Error("setTimeout has not been defined"); } function i() { throw new Error("clearTimeout has not been defined"); } function a(e) { if (c === setTimeout)
            return setTimeout(e, 0); if ((c === r || !c) && setTimeout)
            return c = setTimeout, setTimeout(e, 0); try {
            return c(e, 0);
        }
        catch (t) {
            try {
                return c.call(null, e, 0);
            }
            catch (t) {
                return c.call(this, e, 0);
            }
        } } function o(e) { if (f === clearTimeout)
            return clearTimeout(e); if ((f === i || !f) && clearTimeout)
            return f = clearTimeout, clearTimeout(e); try {
            return f(e);
        }
        catch (t) {
            try {
                return f.call(null, e);
            }
            catch (t) {
                return f.call(this, e);
            }
        } } function s() { y && h && (y = !1, h.length ? d = h.concat(d) : v = -1, d.length && u()); } function u() { if (!y) {
            var e = a(s);
            y = !0;
            for (var t = d.length; t;) {
                for (h = d, d = []; ++v < t;)
                    h && h[v].run();
                v = -1, t = d.length;
            }
            h = null, y = !1, o(e);
        } } function l(e, t) { this.fun = e, this.array = t; } function p() { } var c, f, m = e.exports = {}; !function () { try {
            c = "function" == typeof setTimeout ? setTimeout : r;
        }
        catch (e) {
            c = r;
        } try {
            f = "function" == typeof clearTimeout ? clearTimeout : i;
        }
        catch (e) {
            f = i;
        } }(); var h, d = [], y = !1, v = -1; m.nextTick = function (e) { var t = new Array(arguments.length - 1); if (arguments.length > 1)
            for (var n = 1; n < arguments.length; n++)
                t[n - 1] = arguments[n]; d.push(new l(e, t)), 1 !== d.length || y || a(u); }, l.prototype.run = function () { this.fun.apply(null, this.array); }, m.title = "browser", m.browser = !0, m.env = {}, m.argv = [], m.version = "", m.versions = {}, m.on = p, m.addListener = p, m.once = p, m.off = p, m.removeListener = p, m.removeAllListeners = p, m.emit = p, m.prependListener = p, m.prependOnceListener = p, m.listeners = function (e) { return []; }, m.binding = function (e) { throw new Error("process.binding is not supported"); }, m.cwd = function () { return "/"; }, m.chdir = function (e) { throw new Error("process.chdir is not supported"); }, m.umask = function () { return 0; }; }, function (e, t, n) { (function () { var t, r, i, a, o, s, u = function (e, t) { function n() { this.constructor = e; } for (var r in t)
            l.call(t, r) && (e[r] = t[r]); return n.prototype = t.prototype, e.prototype = new n, e.__super__ = t.prototype, e; }, l = {}.hasOwnProperty; s = n(249), o = s.isObject, a = s.isFunction, i = n(271), t = n(268), e.exports = r = function (e) { function n(e, t, r) { if (n.__super__.constructor.call(this, e), null == t)
            throw new Error("Missing element name"); this.name = this.stringify.eleName(t), this.attributes = {}, null != r && this.attribute(r), e.isDocument && (this.isRoot = !0, this.documentObject = e, e.rootObject = this); } return u(n, e), n.prototype.clone = function () { var e, t, n, r; n = Object.create(this), n.isRoot && (n.documentObject = null), n.attributes = {}, r = this.attributes; for (t in r)
            l.call(r, t) && (e = r[t], n.attributes[t] = e.clone()); return n.children = [], this.children.forEach(function (e) { var t; return t = e.clone(), t.parent = n, n.children.push(t); }), n; }, n.prototype.attribute = function (e, n) { var r, i; if (null != e && (e = e.valueOf()), o(e))
            for (r in e)
                l.call(e, r) && (i = e[r], this.attribute(r, i));
        else
            a(n) && (n = n.apply()), this.options.skipNullAttributes && null == n || (this.attributes[e] = new t(this, e, n)); return this; }, n.prototype.removeAttribute = function (e) { var t, n, r; if (null == e)
            throw new Error("Missing attribute name"); if (e = e.valueOf(), Array.isArray(e))
            for (n = 0, r = e.length; r > n; n++)
                t = e[n], delete this.attributes[t];
        else
            delete this.attributes[e]; return this; }, n.prototype.toString = function (e) { return this.options.writer.set(e).element(this); }, n.prototype.att = function (e, t) { return this.attribute(e, t); }, n.prototype.a = function (e, t) { return this.attribute(e, t); }, n; }(i); }).call(this); }, function (e, t, n) { (function () { var t, r, i = function (e, t) { function n() { this.constructor = e; } for (var r in t)
            a.call(t, r) && (e[r] = t[r]); return n.prototype = t.prototype, e.prototype = new n, e.__super__ = t.prototype, e; }, a = {}.hasOwnProperty; r = n(271), e.exports = t = function (e) { function t(e, n) { if (t.__super__.constructor.call(this, e), null == n)
            throw new Error("Missing CDATA text"); this.text = this.stringify.cdata(n); } return i(t, e), t.prototype.clone = function () { return Object.create(this); }, t.prototype.toString = function (e) { return this.options.writer.set(e).cdata(this); }, t; }(r); }).call(this); }, function (e, t, n) { (function () { var t, r, i = function (e, t) { function n() { this.constructor = e; } for (var r in t)
            a.call(t, r) && (e[r] = t[r]); return n.prototype = t.prototype, e.prototype = new n, e.__super__ = t.prototype, e; }, a = {}.hasOwnProperty; r = n(271), e.exports = t = function (e) { function t(e, n) { if (t.__super__.constructor.call(this, e), null == n)
            throw new Error("Missing comment text"); this.text = this.stringify.comment(n); } return i(t, e), t.prototype.clone = function () { return Object.create(this); }, t.prototype.toString = function (e) { return this.options.writer.set(e).comment(this); }, t; }(r); }).call(this); }, function (e, t, n) { (function () { var t, r, i = function (e, t) { function n() { this.constructor = e; } for (var r in t)
            a.call(t, r) && (e[r] = t[r]); return n.prototype = t.prototype, e.prototype = new n, e.__super__ = t.prototype, e; }, a = {}.hasOwnProperty; t = n(271), e.exports = r = function (e) { function t(e, n) { if (t.__super__.constructor.call(this, e), null == n)
            throw new Error("Missing raw text"); this.value = this.stringify.raw(n); } return i(t, e), t.prototype.clone = function () { return Object.create(this); }, t.prototype.toString = function (e) { return this.options.writer.set(e).raw(this); }, t; }(t); }).call(this); }, function (e, t, n) { (function () { var t, r, i = function (e, t) { function n() { this.constructor = e; } for (var r in t)
            a.call(t, r) && (e[r] = t[r]); return n.prototype = t.prototype, e.prototype = new n, e.__super__ = t.prototype, e; }, a = {}.hasOwnProperty; t = n(271), e.exports = r = function (e) { function t(e, n) { if (t.__super__.constructor.call(this, e), null == n)
            throw new Error("Missing element text"); this.value = this.stringify.eleText(n); } return i(t, e), t.prototype.clone = function () { return Object.create(this); }, t.prototype.toString = function (e) { return this.options.writer.set(e).text(this); }, t; }(t); }).call(this); }, function (e, t, n) { (function () { var t, r, i = function (e, t) { function n() { this.constructor = e; } for (var r in t)
            a.call(t, r) && (e[r] = t[r]); return n.prototype = t.prototype, e.prototype = new n, e.__super__ = t.prototype, e; }, a = {}.hasOwnProperty; t = n(271), e.exports = r = function (e) { function t(e, n, r) { if (t.__super__.constructor.call(this, e), null == n)
            throw new Error("Missing instruction target"); this.target = this.stringify.insTarget(n), r && (this.value = this.stringify.insValue(r)); } return i(t, e), t.prototype.clone = function () { return Object.create(this); }, t.prototype.toString = function (e) { return this.options.writer.set(e).processingInstruction(this); }, t; }(t); }).call(this); }, function (e, t, n) { (function () { var t, r, i, a = function (e, t) { function n() { this.constructor = e; } for (var r in t)
            o.call(t, r) && (e[r] = t[r]); return n.prototype = t.prototype, e.prototype = new n, e.__super__ = t.prototype, e; }, o = {}.hasOwnProperty; i = n(249).isObject, r = n(271), e.exports = t = function (e) { function t(e, n, r, a) { var o; t.__super__.constructor.call(this, e), i(n) && (o = n, n = o.version, r = o.encoding, a = o.standalone), n || (n = "1.0"), this.version = this.stringify.xmlVersion(n), null != r && (this.encoding = this.stringify.xmlEncoding(r)), null != a && (this.standalone = this.stringify.xmlStandalone(a)); } return a(t, e), t.prototype.toString = function (e) { return this.options.writer.set(e).declaration(this); }, t; }(r); }).call(this); }, function (e, t, n) { (function () { var t, r, i, a, o, s, u, l = function (e, t) { function n() { this.constructor = e; } for (var r in t)
            p.call(t, r) && (e[r] = t[r]); return n.prototype = t.prototype, e.prototype = new n, e.__super__ = t.prototype, e; }, p = {}.hasOwnProperty; u = n(249).isObject, s = n(271), t = n(264), i = n(265), r = n(266), a = n(267), e.exports = o = function (e) { function n(e, t, r) { var i, a; n.__super__.constructor.call(this, e), this.documentObject = e, u(t) && (i = t, t = i.pubID, r = i.sysID), null == r && (a = [t, r], r = a[0], t = a[1]), null != t && (this.pubID = this.stringify.dtdPubID(t)), null != r && (this.sysID = this.stringify.dtdSysID(r)); } return l(n, e), n.prototype.element = function (e, t) { var n; return n = new r(this, e, t), this.children.push(n), this; }, n.prototype.attList = function (e, n, r, i, a) { var o; return o = new t(this, e, n, r, i, a), this.children.push(o), this; }, n.prototype.entity = function (e, t) { var n; return n = new i(this, !1, e, t), this.children.push(n), this; }, n.prototype.pEntity = function (e, t) { var n; return n = new i(this, !0, e, t), this.children.push(n), this; }, n.prototype.notation = function (e, t) { var n; return n = new a(this, e, t), this.children.push(n), this; }, n.prototype.toString = function (e) { return this.options.writer.set(e).docType(this); }, n.prototype.ele = function (e, t) { return this.element(e, t); }, n.prototype.att = function (e, t, n, r, i) { return this.attList(e, t, n, r, i); }, n.prototype.ent = function (e, t) { return this.entity(e, t); }, n.prototype.pent = function (e, t) { return this.pEntity(e, t); }, n.prototype.not = function (e, t) { return this.notation(e, t); }, n.prototype.up = function () { return this.root() || this.documentObject; }, n; }(s); }).call(this); }, function (e, t, n) {
            (function () {
                var t, r, i = function (e, t) { function n() { this.constructor = e; } for (var r in t)
                    a.call(t, r) && (e[r] = t[r]); return n.prototype = t.prototype, e.prototype = new n, e.__super__ = t.prototype, e; }, a = {}.hasOwnProperty;
                r = n(271), e.exports = t = function (e) {
                    function t(e, n, r, i, a, o) {
                        if (t.__super__.constructor.call(this, e), null == n)
                            throw new Error("Missing DTD element name");
                        if (null == r)
                            throw new Error("Missing DTD attribute name");
                        if (!i)
                            throw new Error("Missing DTD attribute type");
                        if (!a)
                            throw new Error("Missing DTD attribute default");
                        if (0 !== a.indexOf("#") && (a = "#" + a), !a.match(/^(#REQUIRED|#IMPLIED|#FIXED|#DEFAULT)$/))
                            throw new Error("Invalid default value type; expected: #REQUIRED, #IMPLIED, #FIXED or #DEFAULT");
                        if (o && !a.match(/^(#FIXED|#DEFAULT)$/))
                            throw new Error("Default value only applies to #FIXED or #DEFAULT");
                        this.elementName = this.stringify.eleName(n), this.attributeName = this.stringify.attName(r), this.attributeType = this.stringify.dtdAttType(i), this.defaultValue = this.stringify.dtdAttDefault(o), this.defaultValueType = a;
                    }
                    return i(t, e), t.prototype.toString = function (e) { return this.options.writer.set(e).dtdAttList(this); }, t;
                }(r);
            }).call(this);
        }, function (e, t, n) { (function () { var t, r, i, a = function (e, t) { function n() { this.constructor = e; } for (var r in t)
            o.call(t, r) && (e[r] = t[r]); return n.prototype = t.prototype, e.prototype = new n, e.__super__ = t.prototype, e; }, o = {}.hasOwnProperty; i = n(249).isObject, r = n(271), e.exports = t = function (e) { function t(e, n, r, a) { if (t.__super__.constructor.call(this, e), null == r)
            throw new Error("Missing entity name"); if (null == a)
            throw new Error("Missing entity value"); if (this.pe = !!n, this.name = this.stringify.eleName(r), i(a)) {
            if (!a.pubID && !a.sysID)
                throw new Error("Public and/or system identifiers are required for an external entity");
            if (a.pubID && !a.sysID)
                throw new Error("System identifier is required for a public external entity");
            if (null != a.pubID && (this.pubID = this.stringify.dtdPubID(a.pubID)), null != a.sysID && (this.sysID = this.stringify.dtdSysID(a.sysID)), null != a.nData && (this.nData = this.stringify.dtdNData(a.nData)), this.pe && this.nData)
                throw new Error("Notation declaration is not allowed in a parameter entity");
        }
        else
            this.value = this.stringify.dtdEntityValue(a); } return a(t, e), t.prototype.toString = function (e) { return this.options.writer.set(e).dtdEntity(this); }, t; }(r); }).call(this); }, function (e, t, n) { (function () { var t, r, i = function (e, t) { function n() { this.constructor = e; } for (var r in t)
            a.call(t, r) && (e[r] = t[r]); return n.prototype = t.prototype, e.prototype = new n, e.__super__ = t.prototype, e; }, a = {}.hasOwnProperty; r = n(271), e.exports = t = function (e) { function t(e, n, r) { if (t.__super__.constructor.call(this, e), null == n)
            throw new Error("Missing DTD element name"); r || (r = "(#PCDATA)"), Array.isArray(r) && (r = "(" + r.join(",") + ")"), this.name = this.stringify.eleName(n), this.value = this.stringify.dtdElementValue(r); } return i(t, e), t.prototype.toString = function (e) { return this.options.writer.set(e).dtdElement(this); }, t; }(r); }).call(this); }, function (e, t, n) { (function () { var t, r, i = function (e, t) { function n() { this.constructor = e; } for (var r in t)
            a.call(t, r) && (e[r] = t[r]); return n.prototype = t.prototype, e.prototype = new n, e.__super__ = t.prototype, e; }, a = {}.hasOwnProperty; r = n(271), e.exports = t = function (e) { function t(e, n, r) { if (t.__super__.constructor.call(this, e), null == n)
            throw new Error("Missing notation name"); if (!r.pubID && !r.sysID)
            throw new Error("Public or system identifiers are required for an external entity"); this.name = this.stringify.eleName(n), null != r.pubID && (this.pubID = this.stringify.dtdPubID(r.pubID)), null != r.sysID && (this.sysID = this.stringify.dtdSysID(r.sysID)); } return i(t, e), t.prototype.toString = function (e) { return this.options.writer.set(e).dtdNotation(this); }, t; }(r); }).call(this); }, function (e, t, n) { (function () { var t; e.exports = t = function () { function e(e, t, n) { if (this.options = e.options, this.stringify = e.stringify, null == t)
            throw new Error("Missing attribute name of element " + e.name); if (null == n)
            throw new Error("Missing attribute value for attribute " + t + " of element " + e.name); this.name = this.stringify.attName(t), this.value = this.stringify.attValue(n); } return e.prototype.clone = function () { return Object.create(this); }, e.prototype.toString = function (e) { return this.options.writer.set(e).attribute(this); }, e; }(); }).call(this); }, function (e, t, n) { (function () { var t, n = function (e, t) { return function () { return e.apply(t, arguments); }; }, r = {}.hasOwnProperty; e.exports = t = function () { function e(e) { this.assertLegalChar = n(this.assertLegalChar, this); var t, i, a; e || (e = {}), this.noDoubleEncoding = e.noDoubleEncoding, i = e.stringify || {}; for (t in i)
            r.call(i, t) && (a = i[t], this[t] = a); } return e.prototype.eleName = function (e) { return e = "" + e || "", this.assertLegalChar(e); }, e.prototype.eleText = function (e) { return e = "" + e || "", this.assertLegalChar(this.elEscape(e)); }, e.prototype.cdata = function (e) { return e = "" + e || "", e = e.replace("]]>", "]]]]><![CDATA[>"), this.assertLegalChar(e); }, e.prototype.comment = function (e) { if (e = "" + e || "", e.match(/--/))
            throw new Error("Comment text cannot contain double-hypen: " + e); return this.assertLegalChar(e); }, e.prototype.raw = function (e) { return "" + e || ""; }, e.prototype.attName = function (e) { return e = "" + e || ""; }, e.prototype.attValue = function (e) { return e = "" + e || "", this.attEscape(e); }, e.prototype.insTarget = function (e) { return "" + e || ""; }, e.prototype.insValue = function (e) { if (e = "" + e || "", e.match(/\?>/))
            throw new Error("Invalid processing instruction value: " + e); return e; }, e.prototype.xmlVersion = function (e) { if (e = "" + e || "", !e.match(/1\.[0-9]+/))
            throw new Error("Invalid version number: " + e); return e; }, e.prototype.xmlEncoding = function (e) { if (e = "" + e || "", !e.match(/^[A-Za-z](?:[A-Za-z0-9._-]|-)*$/))
            throw new Error("Invalid encoding: " + e); return e; }, e.prototype.xmlStandalone = function (e) { return e ? "yes" : "no"; }, e.prototype.dtdPubID = function (e) { return "" + e || ""; }, e.prototype.dtdSysID = function (e) { return "" + e || ""; }, e.prototype.dtdElementValue = function (e) { return "" + e || ""; }, e.prototype.dtdAttType = function (e) { return "" + e || ""; }, e.prototype.dtdAttDefault = function (e) { return null != e ? "" + e || "" : e; }, e.prototype.dtdEntityValue = function (e) { return "" + e || ""; }, e.prototype.dtdNData = function (e) { return "" + e || ""; }, e.prototype.convertAttKey = "@", e.prototype.convertPIKey = "?", e.prototype.convertTextKey = "#text", e.prototype.convertCDataKey = "#cdata", e.prototype.convertCommentKey = "#comment", e.prototype.convertRawKey = "#raw", e.prototype.assertLegalChar = function (e) { var t; if (t = e.match(/[\0\uFFFE\uFFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]/))
            throw new Error("Invalid character in string: " + e + " at index " + t.index); return e; }, e.prototype.elEscape = function (e) { var t; return t = this.noDoubleEncoding ? /(?!&\S+;)&/g : /&/g, e.replace(t, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/\r/g, "&#xD;"); }, e.prototype.attEscape = function (e) { var t; return t = this.noDoubleEncoding ? /(?!&\S+;)&/g : /&/g, e.replace(t, "&amp;").replace(/</g, "&lt;").replace(/"/g, "&quot;").replace(/\t/g, "&#x9;").replace(/\n/g, "&#xA;").replace(/\r/g, "&#xD;"); }, e; }(); }).call(this); }, function (e, t, n) { (function () { var t, n = {}.hasOwnProperty; e.exports = t = function () { function e(e) { var t, r, i, a, o, s, u, l; e || (e = {}), this.pretty = e.pretty || !1, this.allowEmpty = null != (r = e.allowEmpty) ? r : !1, this.pretty ? (this.indent = null != (i = e.indent) ? i : "  ", this.newline = null != (a = e.newline) ? a : "\n", this.offset = null != (o = e.offset) ? o : 0, this.dontprettytextnodes = null != (s = e.dontprettytextnodes) ? s : 0) : (this.indent = "", this.newline = "", this.offset = 0, this.dontprettytextnodes = 0), this.newlinedefault = this.newline, this.prettydefault = this.pretty, u = e.writer || {}; for (t in u)
            n.call(u, t) && (l = u[t], this[t] = l); } return e.prototype.set = function (e) { var t, r, i; e || (e = {}), "pretty" in e && (this.pretty = e.pretty), "allowEmpty" in e && (this.allowEmpty = e.allowEmpty), this.pretty ? (this.indent = "indent" in e ? e.indent : "  ", this.newline = "newline" in e ? e.newline : "\n", this.offset = "offset" in e ? e.offset : 0, this.dontprettytextnodes = "dontprettytextnodes" in e ? e.dontprettytextnodes : 0) : (this.indent = "", this.newline = "", this.offset = 0, this.dontprettytextnodes = 0), this.newlinedefault = this.newline, this.prettydefault = this.pretty, r = e.writer || {}; for (t in r)
            n.call(r, t) && (i = r[t], this[t] = i); return this; }, e.prototype.space = function (e) { var t; return this.pretty ? (t = (e || 0) + this.offset + 1, t > 0 ? new Array(t).join(this.indent) : "") : ""; }, e; }(); }).call(this); }, function (e, t, n) { (function () { var t, r, i, a, o, s, u, l, p, c, f, m, h, d = {}.hasOwnProperty; h = n(249), m = h.isObject, f = h.isFunction, c = h.isEmpty, o = null, t = null, r = null, i = null, a = null, l = null, p = null, u = null, e.exports = s = function () { function e(e) { this.parent = e, this.parent && (this.options = this.parent.options, this.stringify = this.parent.stringify), this.children = [], o || (o = n(256), t = n(257), r = n(258), i = n(262), a = n(263), l = n(259), p = n(260), u = n(261)); } return e.prototype.element = function (e, t, n) { var r, i, a, o, s, u, l, p, h, y; if (u = null, null == t && (t = {}), t = t.valueOf(), m(t) || (h = [t, n], n = h[0], t = h[1]), null != e && (e = e.valueOf()), Array.isArray(e))
            for (a = 0, l = e.length; l > a; a++)
                i = e[a], u = this.element(i);
        else if (f(e))
            u = this.element(e.apply());
        else if (m(e)) {
            for (s in e)
                if (d.call(e, s))
                    if (y = e[s], f(y) && (y = y.apply()), m(y) && c(y) && (y = null), !this.options.ignoreDecorators && this.stringify.convertAttKey && 0 === s.indexOf(this.stringify.convertAttKey))
                        u = this.attribute(s.substr(this.stringify.convertAttKey.length), y);
                    else if (!this.options.separateArrayItems && Array.isArray(y))
                        for (o = 0, p = y.length; p > o; o++)
                            i = y[o], r = {}, r[s] = i, u = this.element(r);
                    else
                        m(y) ? (u = this.element(s), u.element(y)) : u = this.element(s, y);
        }
        else
            u = !this.options.ignoreDecorators && this.stringify.convertTextKey && 0 === e.indexOf(this.stringify.convertTextKey) ? this.text(n) : !this.options.ignoreDecorators && this.stringify.convertCDataKey && 0 === e.indexOf(this.stringify.convertCDataKey) ? this.cdata(n) : !this.options.ignoreDecorators && this.stringify.convertCommentKey && 0 === e.indexOf(this.stringify.convertCommentKey) ? this.comment(n) : !this.options.ignoreDecorators && this.stringify.convertRawKey && 0 === e.indexOf(this.stringify.convertRawKey) ? this.raw(n) : !this.options.ignoreDecorators && this.stringify.convertPIKey && 0 === e.indexOf(this.stringify.convertPIKey) ? this.instruction(e.substr(this.stringify.convertPIKey.length), n) : this.node(e, t, n); if (null == u)
            throw new Error("Could not create any elements with: " + e); return u; }, e.prototype.insertBefore = function (e, t, n) { var r, i, a; if (this.isRoot)
            throw new Error("Cannot insert elements at root level"); return i = this.parent.children.indexOf(this), a = this.parent.children.splice(i), r = this.parent.element(e, t, n), Array.prototype.push.apply(this.parent.children, a), r; }, e.prototype.insertAfter = function (e, t, n) { var r, i, a; if (this.isRoot)
            throw new Error("Cannot insert elements at root level"); return i = this.parent.children.indexOf(this), a = this.parent.children.splice(i + 1), r = this.parent.element(e, t, n), Array.prototype.push.apply(this.parent.children, a), r; }, e.prototype.remove = function () { var e, t; if (this.isRoot)
            throw new Error("Cannot remove the root element"); return e = this.parent.children.indexOf(this), [].splice.apply(this.parent.children, [e, e - e + 1].concat(t = [])), t, this.parent; }, e.prototype.node = function (e, t, n) { var r, i; return null != e && (e = e.valueOf()), t || (t = {}), t = t.valueOf(), m(t) || (i = [t, n], n = i[0], t = i[1]), r = new o(this, e, t), null != n && r.text(n), this.children.push(r), r; }, e.prototype.text = function (e) { var t; return t = new p(this, e), this.children.push(t), this; }, e.prototype.cdata = function (e) { var n; return n = new t(this, e), this.children.push(n), this; }, e.prototype.comment = function (e) { var t; return t = new r(this, e), this.children.push(t), this; }, e.prototype.commentBefore = function (e) { var t, n, r; return n = this.parent.children.indexOf(this), r = this.parent.children.splice(n), t = this.parent.comment(e), Array.prototype.push.apply(this.parent.children, r), this; }, e.prototype.commentAfter = function (e) { var t, n, r; return n = this.parent.children.indexOf(this), r = this.parent.children.splice(n + 1), t = this.parent.comment(e), Array.prototype.push.apply(this.parent.children, r), this; }, e.prototype.raw = function (e) { var t; return t = new l(this, e), this.children.push(t), this; }, e.prototype.instruction = function (e, t) { var n, r, i, a, o; if (null != e && (e = e.valueOf()), null != t && (t = t.valueOf()), Array.isArray(e))
            for (a = 0, o = e.length; o > a; a++)
                n = e[a], this.instruction(n);
        else if (m(e))
            for (n in e)
                d.call(e, n) && (r = e[n], this.instruction(n, r));
        else
            f(t) && (t = t.apply()), i = new u(this, e, t), this.children.push(i); return this; }, e.prototype.instructionBefore = function (e, t) { var n, r, i; return r = this.parent.children.indexOf(this), i = this.parent.children.splice(r), n = this.parent.instruction(e, t), Array.prototype.push.apply(this.parent.children, i), this; }, e.prototype.instructionAfter = function (e, t) { var n, r, i; return r = this.parent.children.indexOf(this), i = this.parent.children.splice(r + 1), n = this.parent.instruction(e, t), Array.prototype.push.apply(this.parent.children, i), this; }, e.prototype.declaration = function (e, t, n) { var r, a; return r = this.document(), a = new i(r, e, t, n), r.children[0] instanceof i ? r.children[0] = a : r.children.unshift(a), r.root() || r; }, e.prototype.doctype = function (e, t) { var n, r, i, o, s, u, l, p, c, f; for (r = this.document(), i = new a(r, e, t), c = r.children, o = s = 0, l = c.length; l > s; o = ++s)
            if (n = c[o], n instanceof a)
                return r.children[o] = i, i; for (f = r.children, o = u = 0, p = f.length; p > u; o = ++u)
            if (n = f[o], n.isRoot)
                return r.children.splice(o, 0, i), i; return r.children.push(i), i; }, e.prototype.up = function () { if (this.isRoot)
            throw new Error("The root node has no parent. Use doc() if you need to get the document object."); return this.parent; }, e.prototype.root = function () { var e; for (e = this; e;) {
            if (e.isDocument)
                return e.rootObject;
            if (e.isRoot)
                return e;
            e = e.parent;
        } }, e.prototype.document = function () { var e; for (e = this; e;) {
            if (e.isDocument)
                return e;
            e = e.parent;
        } }, e.prototype.end = function (e) { return this.document().end(e); }, e.prototype.prev = function () { var e; if (e = this.parent.children.indexOf(this), 1 > e)
            throw new Error("Already at the first node"); return this.parent.children[e - 1]; }, e.prototype.next = function () { var e; if (e = this.parent.children.indexOf(this), -1 === e || e === this.parent.children.length - 1)
            throw new Error("Already at the last node"); return this.parent.children[e + 1]; }, e.prototype.importDocument = function (e) { var t; return t = e.root().clone(), t.parent = this, t.isRoot = !1, this.children.push(t), this; }, e.prototype.ele = function (e, t, n) { return this.element(e, t, n); }, e.prototype.nod = function (e, t, n) { return this.node(e, t, n); }, e.prototype.txt = function (e) { return this.text(e); }, e.prototype.dat = function (e) { return this.cdata(e); }, e.prototype.com = function (e) { return this.comment(e); }, e.prototype.ins = function (e, t) { return this.instruction(e, t); }, e.prototype.doc = function () { return this.document(); }, e.prototype.dec = function (e, t, n) { return this.declaration(e, t, n); }, e.prototype.dtd = function (e, t) { return this.doctype(e, t); }, e.prototype.e = function (e, t, n) { return this.element(e, t, n); }, e.prototype.n = function (e, t, n) { return this.node(e, t, n); }, e.prototype.t = function (e) { return this.text(e); }, e.prototype.d = function (e) { return this.cdata(e); }, e.prototype.c = function (e) { return this.comment(e); }, e.prototype.r = function (e) { return this.raw(e); }, e.prototype.i = function (e, t) { return this.instruction(e, t); }, e.prototype.u = function () { return this.up(); }, e.prototype.importXMLBuilder = function (e) { return this.importDocument(e); }, e; }(); }).call(this); }, function (e, t, n) { (function (r) { t = e.exports = n(278), t.Stream = n(254), t.Readable = t, t.Writable = n(277), t.Duplex = n(279), t.Transform = n(280), t.PassThrough = n(281), r.browser || "disable" !== r.env.READABLE_STREAM || (e.exports = n(254)); }).call(t, n(64)); }, function (e, t, n) { e.exports = n(277); }, function (e, t, n) { e.exports = n(279); }, function (e, t, n) { e.exports = n(280); }, function (e, t, n) { e.exports = n(281); }, function (e, t, n) { (function (t) { function r(e, t, n) { this.chunk = e, this.encoding = t, this.callback = n; } function i(e, t) { var r = n(279); e = e || {}; var i = e.highWaterMark, a = e.objectMode ? 16 : 16384; this.highWaterMark = i || 0 === i ? i : a, this.objectMode = !!e.objectMode, t instanceof r && (this.objectMode = this.objectMode || !!e.writableObjectMode), this.highWaterMark = ~~this.highWaterMark, this.needDrain = !1, this.ending = !1, this.ended = !1, this.finished = !1; var o = e.decodeStrings === !1; this.decodeStrings = !o, this.defaultEncoding = e.defaultEncoding || "utf8", this.length = 0, this.writing = !1, this.corked = 0, this.sync = !0, this.bufferProcessing = !1, this.onwrite = function (e) { m(t, e); }, this.writecb = null, this.writelen = 0, this.buffer = [], this.pendingcb = 0, this.prefinished = !1, this.errorEmitted = !1; } function a(e) { var t = n(279); return this instanceof a || this instanceof t ? (this._writableState = new i(e, this), this.writable = !0, void N.call(this)) : new a(e); } function o(e, n, r) { var i = new Error("write after end"); e.emit("error", i), t.nextTick(function () { r(i); }); } function s(e, n, r, i) { var a = !0; if (!(S.isBuffer(r) || S.isString(r) || S.isNullOrUndefined(r) || n.objectMode)) {
            var o = new TypeError("Invalid non-string/buffer chunk");
            e.emit("error", o), t.nextTick(function () { i(o); }), a = !1;
        } return a; } function u(e, t, n) { return !e.objectMode && e.decodeStrings !== !1 && S.isString(t) && (t = new E(t, n)), t; } function l(e, t, n, i, a) { n = u(t, n, i), S.isBuffer(n) && (i = "buffer"); var o = t.objectMode ? 1 : n.length; t.length += o; var s = t.length < t.highWaterMark; return s || (t.needDrain = !0), t.writing || t.corked ? t.buffer.push(new r(n, i, a)) : p(e, t, !1, o, n, i, a), s; } function p(e, t, n, r, i, a, o) { t.writelen = r, t.writecb = o, t.writing = !0, t.sync = !0, n ? e._writev(i, t.onwrite) : e._write(i, a, t.onwrite), t.sync = !1; } function c(e, n, r, i, a) { r ? t.nextTick(function () { n.pendingcb--, a(i); }) : (n.pendingcb--, a(i)), e._writableState.errorEmitted = !0, e.emit("error", i); } function f(e) { e.writing = !1, e.writecb = null, e.length -= e.writelen, e.writelen = 0; } function m(e, n) { var r = e._writableState, i = r.sync, a = r.writecb; if (f(r), n)
            c(e, r, i, n, a);
        else {
            var o = v(e, r);
            o || r.corked || r.bufferProcessing || !r.buffer.length || y(e, r), i ? t.nextTick(function () { h(e, r, o, a); }) : h(e, r, o, a);
        } } function h(e, t, n, r) { n || d(e, t), t.pendingcb--, r(), A(e, t); } function d(e, t) { 0 === t.length && t.needDrain && (t.needDrain = !1, e.emit("drain")); } function y(e, t) { if (t.bufferProcessing = !0, e._writev && t.buffer.length > 1) {
            for (var n = [], r = 0; r < t.buffer.length; r++)
                n.push(t.buffer[r].callback);
            t.pendingcb++, p(e, t, !0, t.length, t.buffer, "", function (e) { for (var r = 0; r < n.length; r++)
                t.pendingcb--, n[r](e); }), t.buffer = [];
        }
        else {
            for (var r = 0; r < t.buffer.length; r++) {
                var i = t.buffer[r], a = i.chunk, o = i.encoding, s = i.callback, u = t.objectMode ? 1 : a.length;
                if (p(e, t, !1, u, a, o, s), t.writing) {
                    r++;
                    break;
                }
            }
            r < t.buffer.length ? t.buffer = t.buffer.slice(r) : t.buffer.length = 0;
        } t.bufferProcessing = !1; } function v(e, t) { return t.ending && 0 === t.length && !t.finished && !t.writing; } function g(e, t) { t.prefinished || (t.prefinished = !0, e.emit("prefinish")); } function A(e, t) { var n = v(e, t); return n && (0 === t.pendingcb ? (g(e, t), t.finished = !0, e.emit("finish")) : g(e, t)), n; } function T(e, n, r) { n.ending = !0, A(e, n), r && (n.finished ? t.nextTick(r) : e.once("finish", r)), n.ended = !0; } e.exports = a; var E = n(113).Buffer; a.WritableState = i; var S = n(220); S.inherits = n(115); var N = n(254); S.inherits(a, N), a.prototype.pipe = function () { this.emit("error", new Error("Cannot pipe. Not readable.")); }, a.prototype.write = function (e, t, n) { var r = this._writableState, i = !1; return S.isFunction(t) && (n = t, t = null), S.isBuffer(e) ? t = "buffer" : t || (t = r.defaultEncoding), S.isFunction(n) || (n = function () { }), r.ended ? o(this, r, n) : s(this, r, e, n) && (r.pendingcb++, i = l(this, r, e, t, n)), i; }, a.prototype.cork = function () { var e = this._writableState; e.corked++; }, a.prototype.uncork = function () { var e = this._writableState; e.corked && (e.corked--, e.writing || e.corked || e.finished || e.bufferProcessing || !e.buffer.length || y(this, e)); }, a.prototype._write = function (e, t, n) { n(new Error("not implemented")); }, a.prototype._writev = null, a.prototype.end = function (e, t, n) { var r = this._writableState; S.isFunction(e) ? (n = e, e = null, t = null) : S.isFunction(t) && (n = t, t = null), S.isNullOrUndefined(e) || this.write(e, t), r.corked && (r.corked = 1, this.uncork()), r.ending || r.finished || T(this, r, n); }; }).call(t, n(64)); }, function (e, t, n) { (function (t) { function r(e, t) { var r = n(279); e = e || {}; var i = e.highWaterMark, a = e.objectMode ? 16 : 16384; this.highWaterMark = i || 0 === i ? i : a, this.highWaterMark = ~~this.highWaterMark, this.buffer = [], this.length = 0, this.pipes = null, this.pipesCount = 0, this.flowing = null, this.ended = !1, this.endEmitted = !1, this.reading = !1, this.sync = !0, this.needReadable = !1, this.emittedReadable = !1, this.readableListening = !1, this.objectMode = !!e.objectMode, t instanceof r && (this.objectMode = this.objectMode || !!e.readableObjectMode), this.defaultEncoding = e.defaultEncoding || "utf8", this.ranOut = !1, this.awaitDrain = 0, this.readingMore = !1, this.decoder = null, this.encoding = null, e.encoding && (M || (M = n(248).StringDecoder), this.decoder = new M(e.encoding), this.encoding = e.encoding); } function i(e) { n(279); return this instanceof i ? (this._readableState = new r(e, this), this.readable = !0, void I.call(this)) : new i(e); } function a(e, t, n, r, i) { var a = l(t, n); if (a)
            e.emit("error", a);
        else if (R.isNullOrUndefined(n))
            t.reading = !1, t.ended || p(e, t);
        else if (t.objectMode || n && n.length > 0)
            if (t.ended && !i) {
                var s = new Error("stream.push() after EOF");
                e.emit("error", s);
            }
            else if (t.endEmitted && i) {
                var s = new Error("stream.unshift() after end event");
                e.emit("error", s);
            }
            else
                !t.decoder || i || r || (n = t.decoder.write(n)), i || (t.reading = !1), t.flowing && 0 === t.length && !t.sync ? (e.emit("data", n), e.read(0)) : (t.length += t.objectMode ? 1 : n.length, i ? t.buffer.unshift(n) : t.buffer.push(n), t.needReadable && c(e)), m(e, t);
        else
            i || (t.reading = !1); return o(t); } function o(e) { return !e.ended && (e.needReadable || e.length < e.highWaterMark || 0 === e.length); } function s(e) { if (e >= C)
            e = C;
        else {
            e--;
            for (var t = 1; 32 > t; t <<= 1)
                e |= e >> t;
            e++;
        } return e; } function u(e, t) { return 0 === t.length && t.ended ? 0 : t.objectMode ? 0 === e ? 0 : 1 : isNaN(e) || R.isNull(e) ? t.flowing && t.buffer.length ? t.buffer[0].length : t.length : 0 >= e ? 0 : (e > t.highWaterMark && (t.highWaterMark = s(e)), e > t.length ? t.ended ? t.length : (t.needReadable = !0, 0) : e); } function l(e, t) { var n = null; return R.isBuffer(t) || R.isString(t) || R.isNullOrUndefined(t) || e.objectMode || (n = new TypeError("Invalid non-string/buffer chunk")), n; } function p(e, t) { if (t.decoder && !t.ended) {
            var n = t.decoder.end();
            n && n.length && (t.buffer.push(n), t.length += t.objectMode ? 1 : n.length);
        } t.ended = !0, c(e); } function c(e) { var n = e._readableState; n.needReadable = !1, n.emittedReadable || (w("emitReadable", n.flowing), n.emittedReadable = !0, n.sync ? t.nextTick(function () { f(e); }) : f(e)); } function f(e) { w("emit readable"), e.emit("readable"), g(e); } function m(e, n) { n.readingMore || (n.readingMore = !0, t.nextTick(function () { h(e, n); })); } function h(e, t) { for (var n = t.length; !t.reading && !t.flowing && !t.ended && t.length < t.highWaterMark && (w("maybeReadMore read 0"), e.read(0), n !== t.length);)
            n = t.length; t.readingMore = !1; } function d(e) { return function () { var t = e._readableState; w("pipeOnDrain", t.awaitDrain), t.awaitDrain && t.awaitDrain--, 0 === t.awaitDrain && b.listenerCount(e, "data") && (t.flowing = !0, g(e)); }; } function y(e, n) { n.resumeScheduled || (n.resumeScheduled = !0, t.nextTick(function () { v(e, n); })); } function v(e, t) { t.resumeScheduled = !1, e.emit("resume"), g(e), t.flowing && !t.reading && e.read(0); } function g(e) { var t = e._readableState; if (w("flow", t.flowing), t.flowing)
            do
                var n = e.read();
            while (null !== n && t.flowing); } function A(e, t) { var n, r = t.buffer, i = t.length, a = !!t.decoder, o = !!t.objectMode; if (0 === r.length)
            return null; if (0 === i)
            n = null;
        else if (o)
            n = r.shift();
        else if (!e || e >= i)
            n = a ? r.join("") : _.concat(r, i), r.length = 0;
        else if (e < r[0].length) {
            var s = r[0];
            n = s.slice(0, e), r[0] = s.slice(e);
        }
        else if (e === r[0].length)
            n = r.shift();
        else {
            n = a ? "" : new _(e);
            for (var u = 0, l = 0, p = r.length; p > l && e > u; l++) {
                var s = r[0], c = Math.min(e - u, s.length);
                a ? n += s.slice(0, c) : s.copy(n, u, 0, c), c < s.length ? r[0] = s.slice(c) : r.shift(), u += c;
            }
        } return n; } function T(e) { var n = e._readableState; if (n.length > 0)
            throw new Error("endReadable called on non-empty stream"); n.endEmitted || (n.ended = !0, t.nextTick(function () { n.endEmitted || 0 !== n.length || (n.endEmitted = !0, e.readable = !1, e.emit("end")); })); } function E(e, t) { for (var n = 0, r = e.length; r > n; n++)
            t(e[n], n); } function S(e, t) { for (var n = 0, r = e.length; r > n; n++)
            if (e[n] === t)
                return n; return -1; } e.exports = i; var N = n(283), _ = n(113).Buffer; i.ReadableState = r; var b = n(210).EventEmitter; b.listenerCount || (b.listenerCount = function (e, t) { return e.listeners(t).length; }); var I = n(254), R = n(220); R.inherits = n(115); var M, w = n(282); w = w && w.debuglog ? w.debuglog("stream") : function () { }, R.inherits(i, I), i.prototype.push = function (e, t) { var n = this._readableState; return R.isString(e) && !n.objectMode && (t = t || n.defaultEncoding, t !== n.encoding && (e = new _(e, t), t = "")), a(this, n, e, t, !1); }, i.prototype.unshift = function (e) { var t = this._readableState; return a(this, t, e, "", !0); }, i.prototype.setEncoding = function (e) { return M || (M = n(248).StringDecoder), this._readableState.decoder = new M(e), this._readableState.encoding = e, this; }; var C = 8388608; i.prototype.read = function (e) { w("read", e); var t = this._readableState, n = e; if ((!R.isNumber(e) || e > 0) && (t.emittedReadable = !1), 0 === e && t.needReadable && (t.length >= t.highWaterMark || t.ended))
            return w("read: emitReadable", t.length, t.ended), 0 === t.length && t.ended ? T(this) : c(this), null; if (e = u(e, t), 0 === e && t.ended)
            return 0 === t.length && T(this), null; var r = t.needReadable; w("need readable", r), (0 === t.length || t.length - e < t.highWaterMark) && (r = !0, w("length less than watermark", r)), (t.ended || t.reading) && (r = !1, w("reading or ended", r)), r && (w("do read"), t.reading = !0, t.sync = !0, 0 === t.length && (t.needReadable = !0), this._read(t.highWaterMark), t.sync = !1), r && !t.reading && (e = u(n, t)); var i; return i = e > 0 ? A(e, t) : null, R.isNull(i) && (t.needReadable = !0, e = 0), t.length -= e, 0 !== t.length || t.ended || (t.needReadable = !0), n !== e && t.ended && 0 === t.length && T(this), R.isNull(i) || this.emit("data", i), i; }, i.prototype._read = function (e) { this.emit("error", new Error("not implemented")); }, i.prototype.pipe = function (e, n) { function r(e) { w("onunpipe"), e === c && a(); } function i() { w("onend"), e.end(); } function a() { w("cleanup"), e.removeListener("close", u), e.removeListener("finish", l), e.removeListener("drain", y), e.removeListener("error", s), e.removeListener("unpipe", r), c.removeListener("end", i), c.removeListener("end", a), c.removeListener("data", o), !f.awaitDrain || e._writableState && !e._writableState.needDrain || y(); } function o(t) { w("ondata"); var n = e.write(t); !1 === n && (w("false write response, pause", c._readableState.awaitDrain), c._readableState.awaitDrain++, c.pause()); } function s(t) { w("onerror", t), p(), e.removeListener("error", s), 0 === b.listenerCount(e, "error") && e.emit("error", t); } function u() { e.removeListener("finish", l), p(); } function l() { w("onfinish"), e.removeListener("close", u), p(); } function p() { w("unpipe"), c.unpipe(e); } var c = this, f = this._readableState; switch (f.pipesCount) {
            case 0:
                f.pipes = e;
                break;
            case 1:
                f.pipes = [f.pipes, e];
                break;
            default: f.pipes.push(e);
        } f.pipesCount += 1, w("pipe count=%d opts=%j", f.pipesCount, n); var m = (!n || n.end !== !1) && e !== t.stdout && e !== t.stderr, h = m ? i : a; f.endEmitted ? t.nextTick(h) : c.once("end", h), e.on("unpipe", r); var y = d(c); return e.on("drain", y), c.on("data", o), e._events && e._events.error ? N(e._events.error) ? e._events.error.unshift(s) : e._events.error = [s, e._events.error] : e.on("error", s), e.once("close", u), e.once("finish", l), e.emit("pipe", c), f.flowing || (w("pipe resume"), c.resume()), e; }, i.prototype.unpipe = function (e) { var t = this._readableState; if (0 === t.pipesCount)
            return this; if (1 === t.pipesCount)
            return e && e !== t.pipes ? this : (e || (e = t.pipes), t.pipes = null, t.pipesCount = 0, t.flowing = !1, e && e.emit("unpipe", this), this); if (!e) {
            var n = t.pipes, r = t.pipesCount;
            t.pipes = null, t.pipesCount = 0, t.flowing = !1;
            for (var i = 0; r > i; i++)
                n[i].emit("unpipe", this);
            return this;
        } var i = S(t.pipes, e); return -1 === i ? this : (t.pipes.splice(i, 1), t.pipesCount -= 1, 1 === t.pipesCount && (t.pipes = t.pipes[0]), e.emit("unpipe", this), this); }, i.prototype.on = function (e, n) { var r = I.prototype.on.call(this, e, n); if ("data" === e && !1 !== this._readableState.flowing && this.resume(), "readable" === e && this.readable) {
            var i = this._readableState;
            if (!i.readableListening)
                if (i.readableListening = !0, i.emittedReadable = !1, i.needReadable = !0, i.reading)
                    i.length && c(this, i);
                else {
                    var a = this;
                    t.nextTick(function () { w("readable nexttick read 0"), a.read(0); });
                }
        } return r; }, i.prototype.addListener = i.prototype.on, i.prototype.resume = function () { var e = this._readableState; return e.flowing || (w("resume"), e.flowing = !0, e.reading || (w("resume read 0"), this.read(0)), y(this, e)), this; }, i.prototype.pause = function () { return w("call pause flowing=%j", this._readableState.flowing), !1 !== this._readableState.flowing && (w("pause"), this._readableState.flowing = !1, this.emit("pause")), this; }, i.prototype.wrap = function (e) { var t = this._readableState, n = !1, r = this; e.on("end", function () { if (w("wrapped end"), t.decoder && !t.ended) {
            var e = t.decoder.end();
            e && e.length && r.push(e);
        } r.push(null); }), e.on("data", function (i) { if (w("wrapped data"), t.decoder && (i = t.decoder.write(i)), i && (t.objectMode || i.length)) {
            var a = r.push(i);
            a || (n = !0, e.pause());
        } }); for (var i in e)
            R.isFunction(e[i]) && R.isUndefined(this[i]) && (this[i] = function (t) { return function () { return e[t].apply(e, arguments); }; }(i)); var a = ["error", "close", "destroy", "pause", "resume"]; return E(a, function (t) { e.on(t, r.emit.bind(r, t)); }), r._read = function (t) { w("wrapped _read", t), n && (n = !1, e.resume()); }, r; }, i._fromList = A; }).call(t, n(64)); }, function (e, t, n) { (function (t) { function r(e) { return this instanceof r ? (u.call(this, e), l.call(this, e), e && e.readable === !1 && (this.readable = !1), e && e.writable === !1 && (this.writable = !1), this.allowHalfOpen = !0, e && e.allowHalfOpen === !1 && (this.allowHalfOpen = !1), void this.once("end", i)) : new r(e); } function i() { this.allowHalfOpen || this._writableState.ended || t.nextTick(this.end.bind(this)); } function a(e, t) { for (var n = 0, r = e.length; r > n; n++)
            t(e[n], n); } e.exports = r; var o = Object.keys || function (e) { var t = []; for (var n in e)
            t.push(n); return t; }, s = n(220); s.inherits = n(115); var u = n(278), l = n(277); s.inherits(r, u), a(o(l.prototype), function (e) { r.prototype[e] || (r.prototype[e] = l.prototype[e]); }); }).call(t, n(64)); }, function (e, t, n) { function r(e, t) { this.afterTransform = function (e, n) { return i(t, e, n); }, this.needTransform = !1, this.transforming = !1, this.writecb = null, this.writechunk = null; } function i(e, t, n) { var r = e._transformState; r.transforming = !1; var i = r.writecb; if (!i)
            return e.emit("error", new Error("no writecb in Transform class")); r.writechunk = null, r.writecb = null, u.isNullOrUndefined(n) || e.push(n), i && i(t); var a = e._readableState; a.reading = !1, (a.needReadable || a.length < a.highWaterMark) && e._read(a.highWaterMark); } function a(e) { if (!(this instanceof a))
            return new a(e); s.call(this, e), this._transformState = new r(e, this); var t = this; this._readableState.needReadable = !0, this._readableState.sync = !1, this.once("prefinish", function () { u.isFunction(this._flush) ? this._flush(function (e) { o(t, e); }) : o(t); }); } function o(e, t) { if (t)
            return e.emit("error", t); var n = e._writableState, r = e._transformState; if (n.length)
            throw new Error("calling transform done when ws.length != 0"); if (r.transforming)
            throw new Error("calling transform done when still transforming"); return e.push(null); } e.exports = a; var s = n(279), u = n(220); u.inherits = n(115), u.inherits(a, s), a.prototype.push = function (e, t) { return this._transformState.needTransform = !1, s.prototype.push.call(this, e, t); }, a.prototype._transform = function (e, t, n) { throw new Error("not implemented"); }, a.prototype._write = function (e, t, n) { var r = this._transformState; if (r.writecb = n, r.writechunk = e, r.writeencoding = t, !r.transforming) {
            var i = this._readableState;
            (r.needTransform || i.needReadable || i.length < i.highWaterMark) && this._read(i.highWaterMark);
        } }, a.prototype._read = function (e) { var t = this._transformState; u.isNull(t.writechunk) || !t.writecb || t.transforming ? t.needTransform = !0 : (t.transforming = !0, this._transform(t.writechunk, t.writeencoding, t.afterTransform)); }; }, function (e, t, n) { function r(e) { return this instanceof r ? void i.call(this, e) : new r(e); } e.exports = r; var i = n(280), a = n(220); a.inherits = n(115), a.inherits(r, i), r.prototype._transform = function (e, t, n) { n(null, e); }; }, function (e, t, n) { }, function (e, t, n) { e.exports = Array.isArray || function (e) { return "[object Array]" == Object.prototype.toString.call(e); }; }]);
});
//# sourceMappingURL=raml-1-parser.js.map